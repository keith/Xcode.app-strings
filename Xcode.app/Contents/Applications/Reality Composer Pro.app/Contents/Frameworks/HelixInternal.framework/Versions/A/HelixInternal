@(#)PROGRAM:HelixInternal  PROJECT:RealityTools-448.0.0.500.6
33s@=
0@ffffff
"@333333
ffffff
= @&
fff?
?fff
N5helix10ResultTestINS_10SparseGridINS_9SimdTypesIfLm2EEEEEEE
N5helix11RaycastTestINS_9SimdTypesIfLm2EEEEE
N5helix11TestClosestINS_10SparseGridINS_9SimdTypesIfLm2EEEEEEE
N5helix11ClosestTestINS_9SimdTypesIfLm2EEEEE
N5helix10ResultTestINS_10SparseGridINS_9SimdTypesIdLm2EEEEEEE
N5helix11RaycastTestINS_9SimdTypesIdLm2EEEEE
N5helix11TestClosestINS_10SparseGridINS_9SimdTypesIdLm2EEEEEEE
N5helix11ClosestTestINS_9SimdTypesIdLm2EEEEE
MbP?
@nV}
kC#B
ffffff
|?5^
;N5helix6OctreeINS_9SimdTypesIfLm3EEENS_13OctreeStruct3IS2_EEE19OctreeQueryUserDataE
N5helix9DeletableE
N5helix10ResultTestINS_7Octree3INS_9SimdTypesIfLm3EEEEEEE
N5helix11RaycastTestINS_9SimdTypesIfLm3EEEEE
N5helix11TestClosestINS_7Octree3INS_9SimdTypesIfLm3EEEEEEE
N5helix11ClosestTestINS_9SimdTypesIfLm3EEEEE
N5helix6OctreeINS_9SimdTypesIdLm3EEENS_13OctreeStruct3IS2_EEE19OctreeQueryUserDataE
N5helix10ResultTestINS_7Octree3INS_9SimdTypesIdLm3EEEEEEE
N5helix11RaycastTestINS_9SimdTypesIdLm3EEEEE
N5helix11TestClosestINS_7Octree3INS_9SimdTypesIdLm3EEEEEEE
N5helix11ClosestTestINS_9SimdTypesIdLm3EEEEE
N5helix6OctreeINS_9SimdTypesIfLm2EEENS_12OctreeStructIS2_EEE19OctreeQueryUserDataE
N5helix10ResultTestINS_6OctreeINS_9SimdTypesIfLm2EEENS_12OctreeStructIS3_EEEEEE
N5helix11TestClosestINS_6OctreeINS_9SimdTypesIfLm2EEENS_12OctreeStructIS3_EEEEEE
N5helix6OctreeINS_9SimdTypesIdLm2EEENS_12OctreeStructIS2_EEE19OctreeQueryUserDataE
N5helix10ResultTestINS_6OctreeINS_9SimdTypesIdLm2EEENS_12OctreeStructIS3_EEEEEE
N5helix11TestClosestINS_6OctreeINS_9SimdTypesIdLm2EEENS_12OctreeStructIS3_EEEEEE
21RaycastTestObjCBridge
21ClosestTestObjCBridge
22RaycastTestObjCBridge2
22ClosestTestObjCBridge2
vector
basic_string
WARNING: OctreeStruct max supported depth is 
AddOctreeObjects
 Octree inconsistency for cell 
: refers to unused object 
 and object 
 Octree inconsistency for object 
: refers to unused cell 
 and cell 
 Object depth per depth count inconsistency for object 
 (UNUSED)
: infinite bounding volume
: min=
 max=
 radius=
 dirty=
 depthSize=
 maxCellDepth=
 octBBox=
{min=
xyz=<
The generated mesh contains 
 vertices, 
 edges, and 
 triangles.
Only has 
 input points, not enough to be triangulated!
 Quitting!
Start computing Delaunay triangulation ... 
Finish computing Delaunay triangulation ... 
Start computing constrained Delaunay triangulation ... 
Finish computing constrained Delaunay triangulation ... 
Failed computing constrained Delaunay triangulation ... 
ClearSpaceByConstraints failed: cannot locate current edge!
ClearSpaceByConstraints failed: cannot locate previous edge!
T{?=},R
.cxx_construct
.cxx_destruct
Tc,R,N
Tf,R,N
Tq,N
Tq,R,N
autoCellSizeEnabled
autoCellSizeMultiplier
cellSize
compareAndUpdateForObject:maximumDistance:
compareAndUpdateForObject:maximumScaledSquaredDistance:
enableAutomaticCellSizeWithMultiplier:
getBoundingBoxOfObject:
getBoundingCircleOfObject:
getBoundingSphereOfObject:
getClosestFromPosition:transformScaling:maximumUnscaledDistance:workingData:result:
getObjectsContainingPoint:result:
getObjectsInBox:result:
getObjectsInBox:transformedBy:result:
getObjectsInCircle:result:
getObjectsInCircle:transformedBy:result:
getObjectsInConeAt:direction:length:radius:result:
getObjectsInFrustumWithLocalNear:localFar:localNearWidth:localNearHeight:transformedBy:result:
getObjectsInSphere:result:
getObjectsInSphere:transformedBy:result:
getObjectsIntersectingLineOfType:startPoint:endPoint:result:
hasIndex:
init
initWithCellSize:
initWithMaximumDepth:
isObjectValid:
m_dataStruct
m_octStruct
m_sparseGridStruct
maximumDepth
objectAtIndexedSubscript:
objectIndexRange
octreeBoundingBox
prepareForQueries:
quadtreeBoundingBox
raycastWithStart:unitDirection:doubleSided:maximumDistance:workingData:result:
removeObject:
resetToPosition:transformScaling:hasScaling:
resetToRayStart:rayUnitDirection:doubleSided:
resultCount
setCellSize:
setMaximumDepth:
setObject:withBoundingBox:
setObject:withBoundingCircle:
setObject:withBoundingSphere:
setObject:withPoint:
setObjectIndexRange:
sortResultIndices
sparseGridBoundingBox
updateGrid
updateUpTo:
HXQueryWorkingData
HXOctreeF
HXQuadtreeF
HXSparseGrid3F
HXSparseGrid2F
@16@0:8
q16@0:8
q24@0:8q16
c24@0:8q16
v16@0:8
{DefaultQueryWorkingData="workingData"{QueryWorkingData="m_visitedItems"{IndexSet<unsigned int, helix::DefaultAllocator>="m_memberBits"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_indices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_tempBits"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_heap"{QueryHeap="m_heapItems"{DynamicArray<helix::QueryWorkingData::QueryHeap::QueryHeapItem, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{QueryHeapItem}}}"m_userData"^{Deletable}"m_deleteUserData"B}}
@24@0:8q16
v24@0:8q16
{?=}16@0:8
v56@0:8q16{?=}24
v56@0:8q16{?=f}24
{?=}24@0:8q16
{?=f}24@0:8q16
v40@0:816@32
v56@0:8{?=}16@48
v120@0:8{?=}16{?=[4]}48@112
v56@0:8{?=f}16@48
v120@0:8{?=f}16{?=[4]}48@112
v64@0:81632f48f52@56
v104@0:8f16f20f24f28{?=[4]}32@96
v64@0:8q162440@56
v72@0:81632c48f52@56@64
v68@0:81632f48@52@60
{DefaultAccessorOctree="octree"{Octree3<helix::SimdTypes<float, 3>>="m_data"{OctreeStruct3<helix::SimdTypes<float, 3>>="m_initialized"B"m_keepSubCellObjectList"B"m_maxDepth"C"m_smallestWorldCellSize"f"m_actualMaxDepth"C"m_objectCount"I"m_bbox"{Box<helix::SimdTypes<float, 3>>="m_min""m_max"}"m_gridBbox"{Box<helix::SimdTypes<float, 3>>="m_min""m_max"}"m_worldToGridScale""m_gridToWorldScale""m_rootCellIndex"I"m_infiniteBVolObjectsCellIndex"I"m_packedMemberLists"{OctreeArrays="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}}"m_packedCellData"{SimpleAllocator<helix::OctreeStruct<helix::SimdTypes<float, 3>>::OctCellData, helix::DefaultAllocator>="m_storage"{DynamicArray<helix::OctreeStruct<helix::SimdTypes<float, 3>>::OctCellData, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{OctCellData}}"m_freeIndices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_objectData"{DynamicArray<helix::OctreeStruct<helix::SimdTypes<float, 3>>::OctObjectData, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{OctObjectData}}"m_dirtyObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_dirtyCellsPerDepth"[15{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}]"m_deletedDirtyCellsCount"I"m_debugValidateCount"I"m_tempIndexSet"{IndexSet<unsigned int, helix::DefaultAllocator>="m_memberBits"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_indices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_tempByteData"{DynamicArray<unsigned char, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"*}}}}
v40@0:8q16{?=}24
v40@0:8q16{?=f}24
v32@0:816@24
v40@0:8{?=}16@32
v88@0:8{?=}16{?=[3]}32@80
v40@0:8{?=f}16@32
v88@0:8{?=f}16{?=[3]}32@80
v48@0:8q162432@40
v56@0:81624c32f36@40@48
v52@0:81624f32@36@44
{DefaultAccessorQuadtree="quadtree"{Octree<helix::SimdTypes<float, 2>, helix::OctreeStruct<helix::SimdTypes<float, 2>>>="m_data"{OctreeStruct<helix::SimdTypes<float, 2>>="m_initialized"B"m_keepSubCellObjectList"B"m_maxDepth"C"m_smallestWorldCellSize"f"m_actualMaxDepth"C"m_objectCount"I"m_bbox"{Box<helix::SimdTypes<float, 2>>="m_min""m_max"}"m_gridBbox"{Box<helix::SimdTypes<float, 2>>="m_min""m_max"}"m_worldToGridScale""m_gridToWorldScale""m_rootCellIndex"I"m_infiniteBVolObjectsCellIndex"I"m_packedMemberLists"{OctreeArrays="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}}"m_packedCellData"{SimpleAllocator<helix::OctreeStruct<helix::SimdTypes<float, 2>>::OctCellData, helix::DefaultAllocator>="m_storage"{DynamicArray<helix::OctreeStruct<helix::SimdTypes<float, 2>>::OctCellData, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{OctCellData}}"m_freeIndices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_objectData"{DynamicArray<helix::OctreeStruct<helix::SimdTypes<float, 2>>::OctObjectData, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{OctObjectData}}"m_dirtyObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_dirtyCellsPerDepth"[15{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}]"m_deletedDirtyCellsCount"I"m_debugValidateCount"I"m_tempIndexSet"{IndexSet<unsigned int, helix::DefaultAllocator>="m_memberBits"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_indices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_tempByteData"{DynamicArray<unsigned char, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"*}}}}
@20@0:8f16
f16@0:8
v20@0:8f16
c16@0:8
v40@0:8q1624
{DefaultAccessorSparseGrid="sparseGrid"{SparseGrid<helix::SimdTypes<float, 3>>="m_data"{SparseGridStruct<helix::SimdTypes<float, 3>>="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}"m_hashToData"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_veryLargeObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_objects"{DynamicArray<helix::SparseGridStruct<helix::SimdTypes<float, 3>>::SparseGridObject, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{SparseGridObject}}"m_objectCount"Q"m_hashDivisor"I"m_cellSize"f"m_cellSizeVec""m_invCellSize"f"m_gridOrigin""m_initialized"B"m_veryLargeListDirty"B"m_initialObjectCount"Q"m_initialBBox"{Box<helix::SimdTypes<float, 3>>="m_min""m_max"}"m_currentBBox"{Box<helix::SimdTypes<float, 3>>="m_min""m_max"}"m_autoCellSize"B"m_cellSizeHint"f"m_autoCellSizeMultiplierHint"f"m_volumeObjectSizeSum"d"m_volumeObjectCount"Q"m_initialVolumePerObject"f}}}
v32@0:8q1624
{DefaultAccessorSparseGrid2="sparseGrid"{SparseGrid<helix::SimdTypes<float, 2>>="m_data"{SparseGridStruct<helix::SimdTypes<float, 2>>="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}"m_hashToData"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_veryLargeObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_objects"{DynamicArray<helix::SparseGridStruct<helix::SimdTypes<float, 2>>::SparseGridObject, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{SparseGridObject}}"m_objectCount"Q"m_hashDivisor"I"m_cellSize"f"m_cellSizeVec""m_invCellSize"f"m_gridOrigin""m_initialized"B"m_veryLargeListDirty"B"m_initialObjectCount"Q"m_initialBBox"{Box<helix::SimdTypes<float, 2>>="m_min""m_max"}"m_currentBBox"{Box<helix::SimdTypes<float, 2>>="m_min""m_max"}"m_autoCellSize"B"m_cellSizeHint"f"m_autoCellSizeMultiplierHint"f"m_volumeObjectSizeSum"d"m_volumeObjectCount"Q"m_initialVolumePerObject"f}}}
@(#)PROGRAM:HelixInternal  PROJECT:RealityTools-448.0.0.500.6
ffffff
333333
ffffff
= @&
A33s@=
.fff?
5fff
N5helix10ResultTestINS_10SparseGridINS_9SimdTypesIfLm2EEEEEEE
N5helix11TestClosestINS_10SparseGridINS_9SimdTypesIfLm2EEEEEEE
N5helix11ClosestTestINS_9SimdTypesIfLm2EEEEE
N5helix10ResultTestINS_10SparseGridINS_9SimdTypesIdLm2EEEEEEE
N5helix11TestClosestINS_10SparseGridINS_9SimdTypesIdLm2EEEEEEE
MbP?ff
=(@nV}
kC#B
?ffffff
|?5^
N5helix6OctreeINS_9SimdTypesIfLm3EEENS_13OctreeStruct3IS2_EEE19OctreeQueryUserDataE
N5helix9DeletableE
N5helix10ResultTestINS_7Octree3INS_9SimdTypesIfLm3EEEEEEE
N5helix11RaycastTestINS_9SimdTypesIfLm3EEEEE
N5helix11TestClosestINS_7Octree3INS_9SimdTypesIfLm3EEEEEEE
N5helix11ClosestTestINS_9SimdTypesIfLm3EEEEE
N5helix6OctreeINS_9SimdTypesIdLm3EEENS_13OctreeStruct3IS2_EEE19OctreeQueryUserDataE
N5helix10ResultTestINS_7Octree3INS_9SimdTypesIdLm3EEEEEEE
N5helix11RaycastTestINS_9SimdTypesIdLm3EEEEE
N5helix11TestClosestINS_7Octree3INS_9SimdTypesIdLm3EEEEEEE
N5helix11ClosestTestINS_9SimdTypesIdLm3EEEEE
N5helix6OctreeINS_9SimdTypesIfLm2EEENS_12OctreeStructIS2_EEE19OctreeQueryUserDataE
N5helix10ResultTestINS_6OctreeINS_9SimdTypesIfLm2EEENS_12OctreeStructIS3_EEEEEE
N5helix11RaycastTestINS_9SimdTypesIfLm2EEEEE
N5helix11TestClosestINS_6OctreeINS_9SimdTypesIfLm2EEENS_12OctreeStructIS3_EEEEEE
N5helix6OctreeINS_9SimdTypesIdLm2EEENS_12OctreeStructIS2_EEE19OctreeQueryUserDataE
N5helix10ResultTestINS_6OctreeINS_9SimdTypesIdLm2EEENS_12OctreeStructIS3_EEEEEE
N5helix11RaycastTestINS_9SimdTypesIdLm2EEEEE
N5helix11TestClosestINS_6OctreeINS_9SimdTypesIdLm2EEENS_12OctreeStructIS3_EEEEEE
N5helix11ClosestTestINS_9SimdTypesIdLm2EEEEE
TZaqq
$7XX
21RaycastTestObjCBridge
21ClosestTestObjCBridge
22RaycastTestObjCBridge2
22ClosestTestObjCBridge2
vector
basic_string
WARNING: OctreeStruct max supported depth is 
AddOctreeObjects
 Octree inconsistency for cell 
: refers to unused object 
 and object 
 Octree inconsistency for object 
: refers to unused cell 
 and cell 
 Object depth per depth count inconsistency for object 
 (UNUSED)
: infinite bounding volume
: min=
 max=
 radius=
 dirty=
 depthSize=
 maxCellDepth=
 octBBox=
{min=
xyz=<
The generated mesh contains 
 vertices, 
 edges, and 
 triangles.
Only has 
 input points, not enough to be triangulated!
 Quitting!
Start computing Delaunay triangulation ... 
Finish computing Delaunay triangulation ... 
Start computing constrained Delaunay triangulation ... 
Finish computing constrained Delaunay triangulation ... 
Failed computing constrained Delaunay triangulation ... 
ClearSpaceByConstraints failed: cannot locate current edge!
ClearSpaceByConstraints failed: cannot locate previous edge!
T{?=},R
.cxx_construct
.cxx_destruct
TB,R,N
Tf,R,N
Tq,N
Tq,R,N
autoCellSizeEnabled
autoCellSizeMultiplier
cellSize
compareAndUpdateForObject:maximumDistance:
compareAndUpdateForObject:maximumScaledSquaredDistance:
enableAutomaticCellSizeWithMultiplier:
getBoundingBoxOfObject:
getBoundingCircleOfObject:
getBoundingSphereOfObject:
getClosestFromPosition:transformScaling:maximumUnscaledDistance:workingData:result:
getObjectsContainingPoint:result:
getObjectsInBox:result:
getObjectsInBox:transformedBy:result:
getObjectsInCircle:result:
getObjectsInCircle:transformedBy:result:
getObjectsInConeAt:direction:length:radius:result:
getObjectsInFrustumWithLocalNear:localFar:localNearWidth:localNearHeight:transformedBy:result:
getObjectsInSphere:result:
getObjectsInSphere:transformedBy:result:
getObjectsIntersectingLineOfType:startPoint:endPoint:result:
hasIndex:
init
initWithCellSize:
initWithMaximumDepth:
isObjectValid:
m_dataStruct
m_octStruct
m_sparseGridStruct
maximumDepth
objectAtIndexedSubscript:
objectIndexRange
octreeBoundingBox
prepareForQueries:
quadtreeBoundingBox
raycastWithStart:unitDirection:doubleSided:maximumDistance:workingData:result:
removeObject:
resetToPosition:transformScaling:hasScaling:
resetToRayStart:rayUnitDirection:doubleSided:
resultCount
setCellSize:
setMaximumDepth:
setObject:withBoundingBox:
setObject:withBoundingCircle:
setObject:withBoundingSphere:
setObject:withPoint:
setObjectIndexRange:
sortResultIndices
sparseGridBoundingBox
updateGrid
updateUpTo:
HXQueryWorkingData
HXOctreeF
HXQuadtreeF
HXSparseGrid3F
HXSparseGrid2F
@16@0:8
q16@0:8
q24@0:8q16
B24@0:8q16
v16@0:8
{DefaultQueryWorkingData="workingData"{QueryWorkingData="m_visitedItems"{IndexSet<unsigned int, helix::DefaultAllocator>="m_memberBits"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_indices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_tempBits"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_heap"{QueryHeap="m_heapItems"{DynamicArray<helix::QueryWorkingData::QueryHeap::QueryHeapItem, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{QueryHeapItem}}}"m_userData"^{Deletable}"m_deleteUserData"B}}
@24@0:8q16
v24@0:8q16
{?=}16@0:8
v56@0:8q16{?=}24
v56@0:8q16{?=f}24
{?=}24@0:8q16
{?=f}24@0:8q16
v40@0:816@32
v56@0:8{?=}16@48
v120@0:8{?=}16{?=[4]}48@112
v56@0:8{?=f}16@48
v120@0:8{?=f}16{?=[4]}48@112
v64@0:81632f48f52@56
v104@0:8f16f20f24f28{?=[4]}32@96
v64@0:8q162440@56
v72@0:81632B48f52@56@64
v68@0:81632f48@52@60
{DefaultAccessorOctree="octree"{Octree3<helix::SimdTypes<float, 3>>="m_data"{OctreeStruct3<helix::SimdTypes<float, 3>>="m_initialized"B"m_keepSubCellObjectList"B"m_maxDepth"C"m_smallestWorldCellSize"f"m_actualMaxDepth"C"m_objectCount"I"m_bbox"{Box<helix::SimdTypes<float, 3>>="m_min""m_max"}"m_gridBbox"{Box<helix::SimdTypes<float, 3>>="m_min""m_max"}"m_worldToGridScale""m_gridToWorldScale""m_rootCellIndex"I"m_infiniteBVolObjectsCellIndex"I"m_packedMemberLists"{OctreeArrays="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}}"m_packedCellData"{SimpleAllocator<helix::OctreeStruct<helix::SimdTypes<float, 3>>::OctCellData, helix::DefaultAllocator>="m_storage"{DynamicArray<helix::OctreeStruct<helix::SimdTypes<float, 3>>::OctCellData, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{OctCellData}}"m_freeIndices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_objectData"{DynamicArray<helix::OctreeStruct<helix::SimdTypes<float, 3>>::OctObjectData, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{OctObjectData}}"m_dirtyObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_dirtyCellsPerDepth"[15{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}]"m_deletedDirtyCellsCount"I"m_debugValidateCount"I"m_tempIndexSet"{IndexSet<unsigned int, helix::DefaultAllocator>="m_memberBits"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_indices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_tempByteData"{DynamicArray<unsigned char, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"*}}}}
v40@0:8q16{?=}24
v40@0:8q16{?=f}24
v32@0:816@24
v40@0:8{?=}16@32
v88@0:8{?=}16{?=[3]}32@80
v40@0:8{?=f}16@32
v88@0:8{?=f}16{?=[3]}32@80
v48@0:8q162432@40
v56@0:81624B32f36@40@48
v52@0:81624f32@36@44
{DefaultAccessorQuadtree="quadtree"{Octree<helix::SimdTypes<float, 2>, helix::OctreeStruct<helix::SimdTypes<float, 2>>>="m_data"{OctreeStruct<helix::SimdTypes<float, 2>>="m_initialized"B"m_keepSubCellObjectList"B"m_maxDepth"C"m_smallestWorldCellSize"f"m_actualMaxDepth"C"m_objectCount"I"m_bbox"{Box<helix::SimdTypes<float, 2>>="m_min""m_max"}"m_gridBbox"{Box<helix::SimdTypes<float, 2>>="m_min""m_max"}"m_worldToGridScale""m_gridToWorldScale""m_rootCellIndex"I"m_infiniteBVolObjectsCellIndex"I"m_packedMemberLists"{OctreeArrays="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}}"m_packedCellData"{SimpleAllocator<helix::OctreeStruct<helix::SimdTypes<float, 2>>::OctCellData, helix::DefaultAllocator>="m_storage"{DynamicArray<helix::OctreeStruct<helix::SimdTypes<float, 2>>::OctCellData, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{OctCellData}}"m_freeIndices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_objectData"{DynamicArray<helix::OctreeStruct<helix::SimdTypes<float, 2>>::OctObjectData, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{OctObjectData}}"m_dirtyObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_dirtyCellsPerDepth"[15{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}]"m_deletedDirtyCellsCount"I"m_debugValidateCount"I"m_tempIndexSet"{IndexSet<unsigned int, helix::DefaultAllocator>="m_memberBits"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_indices"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}}"m_tempByteData"{DynamicArray<unsigned char, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"*}}}}
@20@0:8f16
f16@0:8
v20@0:8f16
B16@0:8
v40@0:8q1624
{DefaultAccessorSparseGrid="sparseGrid"{SparseGrid<helix::SimdTypes<float, 3>>="m_data"{SparseGridStruct<helix::SimdTypes<float, 3>>="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}"m_hashToData"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_veryLargeObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_objects"{DynamicArray<helix::SparseGridStruct<helix::SimdTypes<float, 3>>::SparseGridObject, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{SparseGridObject}}"m_objectCount"Q"m_hashDivisor"I"m_cellSize"f"m_cellSizeVec""m_invCellSize"f"m_gridOrigin""m_initialized"B"m_veryLargeListDirty"B"m_initialObjectCount"Q"m_initialBBox"{Box<helix::SimdTypes<float, 3>>="m_min""m_max"}"m_currentBBox"{Box<helix::SimdTypes<float, 3>>="m_min""m_max"}"m_autoCellSize"B"m_cellSizeHint"f"m_autoCellSizeMultiplierHint"f"m_volumeObjectSizeSum"d"m_volumeObjectCount"Q"m_initialVolumePerObject"f}}}
v32@0:8q1624
{DefaultAccessorSparseGrid2="sparseGrid"{SparseGrid<helix::SimdTypes<float, 2>>="m_data"{SparseGridStruct<helix::SimdTypes<float, 2>>="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}"m_hashToData"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_veryLargeObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_objects"{DynamicArray<helix::SparseGridStruct<helix::SimdTypes<float, 2>>::SparseGridObject, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{SparseGridObject}}"m_objectCount"Q"m_hashDivisor"I"m_cellSize"f"m_cellSizeVec""m_invCellSize"f"m_gridOrigin""m_initialized"B"m_veryLargeListDirty"B"m_initialObjectCount"Q"m_initialBBox"{Box<helix::SimdTypes<float, 2>>="m_min""m_max"}"m_currentBBox"{Box<helix::SimdTypes<float, 2>>="m_min""m_max"}"m_autoCellSize"B"m_cellSizeHint"f"m_autoCellSizeMultiplierHint"f"m_volumeObjectSizeSum"d"m_volumeObjectCount"Q"m_initialVolumePerObject"f}}}
