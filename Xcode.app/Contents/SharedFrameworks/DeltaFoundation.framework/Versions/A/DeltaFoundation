@(#)PROGRAM:DeltaFoundation  PROJECT:IDEPlugIns-1
T@"DEDataSource",&,V_dataSource
T#,R
Tc,N,V_shouldGenerateDiffString
T@"<DEDataSourceDelegate>",W,N,V_delegate
Tq,V_deltaLines
T@"<DESessionTextEditBuffer>",&,V_mergeTextStorage
_coalescedRange
T@"DEContext",&,N,V_cachedModifiedDiffContext
_contentFileURL
T@"DEContext",&,V_diffContext
_pruneStorageForObjectIfNeeded:
T@"DEContext",&,V_unstagedDiffContext
accumulateOffsetFromDescriptor:
T@"DEContextSharedState",&,V_sharedState
containsObject:
T@"DEDataSource",&,N,V_ancestorDataSource
contentFilePath
T@"DEDataSource",&,N,V_modifiedDataSource
diffCachingMode
T@"DEDataSource",&,N,V_unsafeModifiedDataSource
diffStringForDescriptorInRange:
T@"DEDataSource",&,V_modifiedDataSource
initWithLength:
T@"DEDataSource",&,V_stagedDataSource
isProxy
T@"DEDataSource",R,V_intermediateDataSource
mergeDescriptor
T@"DEDataSource",R,V_originalDataSource
modifiedFNVHash
T@"DEDescriptor",&,V_mergeDescriptor
numberWithBool:
T@"DEDescriptor",R
options
T@"NSArray",&,V_mergeDescriptors
pointerAtIndex:
T@"NSData",&,V_mergeTextDigest
release
T@"NSDate",&,V_dataSourceCopyDate
setBool:forKey:
T@"NSDictionary",R,D
setHiddenDiffDescriptorIndexes:
T@"NSIndexSet",&,V_modifiedDescriptorIndexes
setInMergeEdit:
T@"NSIndexSet",&,V_originalTokenizedRanges
setMaxConcurrentOperationCount:
T@"NSIndexSet",R,N,V_toggledDiffDescriptorIndexes
setSelectedDiffDescriptorIndex:
T@"NSMutableArray",&,N,V_mutableDiffDescriptors
setUndoManager:
T@"NSMutableArray",&,V_lastToggledDiffDescriptors
shiftIndexesStartingAtIndex:by:
T@"NSOperationQueue",&,V_diffQueue
valueWithRange:
.cxx_destruct
T@"NSArray",&,V_diffDescriptors
T@"<DEContextDelegate>",W,V_delegate
Tc,V_isBinaryConflictResolution
T@"<DEDescriptorDelegate>",W,N,V_delegate
_binaryConflict
T@"DEContext",&,N,V_cachedIntermediateDiffContext
_collectResults
T@"DEContext",&,N,V_cachedOriginalDiffContext
_intermediateModifiedTokenRange
T@"DEContext",&,V_stagedDiffContext
_shouldCommence
T@"DEContextSharedState",&,N,V_sharedState
arrangedContent
T@"DEDataSource",&
content
T@"DEDataSource",&,N,V_intermediateDataSource
dealloc
T@"DEDataSource",&,N,V_originalDataSource
diffDescriptors
T@"DEDataSource",&,N,V_unsafeOriginalDataSource
ignoresLineEnds
T@"DEDataSource",&,V_originalDataSource
isMultiDiffSelectionMergeState:
T@"DEDataSource",R,V_ancestorDataSource
lastNumberOfModifiedDescriptors
T@"DEDataSource",R,V_modifiedDataSource
mergeTextDigest
T@"DEDataSource",R,V_stagedDataSource
T@"DEDescriptor",&,V_parentDiffDescriptor
objectForIndex:
T@"DEFNVHashCache",&,V_hashCache
originalFNVHash
T@"NSArray",&,V_synchronouslyAdjustedDescriptors
refresh
T@"NSDate",&,N,V_timestamp
removeObserver:
T@"NSDictionary",&,V_subdescriptorResults
setDiffContext:
T@"NSIndexSet",&,V_hiddenDiffDescriptorIndexes
setIgnoresCase:
T@"NSIndexSet",&,V_modifiedTokenizedRanges
setIsDirectory:
T@"NSIndexSet",R
setNeedsUpdate:
T@"NSMapTable",&,V_descriptorMap
setSharedState:
T@"NSMutableArray",&,N,V_tmpDiffDescriptors
setWithObjects:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
stageDescriptor
T@"NSPointerArray",&,V_observers
T@"NSString",&,V_diffString
T@"NSString",&,V_label
T@"NSString",?,R,C
T@"NSString",C,V_diffString
T@"NSString",C,V_replacementString
T@"NSString",R,C
T@"NSTimer",&,N,V_timer
T@"NSURL",C,N,V_contentFileURL
T@"NSUndoManager",&,V_undoManager
T@,&,V_content
T@,&,V_managedModifiedTokenRange
T@?,C,N,V_completion
T@?,C,N,V_shouldCommence
TAi,V_needsUpdate
THREAD_arrangedContent
THREAD_content
TQ,N,V_detailedStagingComparisonMode
TQ,N,V_diffCachingMode
TQ,N,V_modifiedTokenHash
TQ,N,V_originalTokenHash
TQ,R
TQ,V_conflictCount
TQ,V_diffCachingMode
TQ,V_diffHash
TQ,V_lastNumberOfModifiedDescriptors
TQ,V_selectedDiffDescriptorIndex
Tc,D
Tc,GisMergeDescriptor,V_mergeDescriptor
Tc,N,GisStageDescriptor,V_stageDescriptor
Tc,N,V_ignoresCase
Tc,N,V_ignoresLineEnds
Tc,N,V_ignoresWhitespace
Tc,N,V_isDirectory
Tc,N,V_shouldGenerateSubdiffDescriptors
Tc,N,V_skipTokenizingNewlines
Tc,R
Tc,V_binaryConflict
Tc,V_coalesceFineGrainEvents
Tc,V_diffMergeDirectionLocked
Tc,V_enableDiffToggles
Tc,V_hasStagedChanges
Tc,V_hasUnstagedChanges
Tc,V_inMergeEdit
Tc,V_isCalculatingInitialDiffs
Tc,V_isRestoringState
Tc,V_preventAsynchronicity
Tc,V_shouldGenerateDiffString
Tc,V_skipTokenizingNewlines
Tc,V_synchronouslyAdjustDescriptorTokenRanges
Tq,D
Tq,N,V_defaultDiffMergeDirection
Tq,N,V_diffDescriptorType
Tq,V_direction
T{_DEContextFlags=b1b1b1b1b1b1b1b1b24},V_options
T{_NSRange=QQ},N,V_ancestorTokenRange
T{_NSRange=QQ},N,V_coalescedRange
T{_NSRange=QQ},N,V_intermediateTokenRange
T{_NSRange=QQ},N,V_lineRange
T{_NSRange=QQ},N,V_modifiedContentRange
T{_NSRange=QQ},N,V_modifiedTokenRange
T{_NSRange=QQ},N,V_originalContentRange
T{_NSRange=QQ},N,V_originalTokenRange
T{_NSRange=QQ},N,V_stagedTokenRange
T{_NSRange=QQ},R
T{_NSRange=QQ},V_intermediateModifiedTokenRange
T{_NSRange=QQ},V_replacementRange
UTF8String
_accumulatedLineCountOffsetMap
_accumulatedOffset
_addIndex:toSetForObject:
_addIndexSet:toSetForObject:
_adjustDescriptorsBasedOnFineGrainDataSource:
_ancestorDataSource
_ancestorTokenRange
_arrangedContent
_buildDiffDescriptors
_buildDiffString
_buildMergeStringAndDescriptors:withMergeTextDigest:
_buildSubdescriptors
_cachedIntermediateDiffContext
_cachedModifiedDiffContext
_cachedOriginalDiffContext
_cachedTokenStorage
_cachedTokenStorageStringHash
_childDescriptors
_coalesceFineGrainEvents
_collectAndCoalesceResults
_collectResultsAsStageChanges
_completion
_conflictCount
_content
_dataSource
_dataSourceCopyDate
_defaultDiffMergeDirection
_delegate
_deltaLines
_descriptorMap
_detailedStagingComparisonMode
_diffCachingMode
_diffContext
_diffContextForComparing:with:
_diffDescriptor:didAddChildDiffDescriptor:
_diffDescriptor:willRemoveChildDiffDescriptor:
_diffDescriptorType
_diffDescriptors
_diffDescriptorsByAddingUnmodified:
_diffHash
_diffMergeDirection
_diffMergeDirectionLocked
_diffOperationClass
_diffQueue
_diffString
_direction
_doModifiedRangesOverlapInModifiedDescriptors:
_dumpDataSources
_editorDataSourceStringReplaceWorkaroundFlag
_enableDiffToggles
_enqueueDiffOperationWithLineRange:shouldCommence:
_fineGrainObservationGroup
_fixToggledDiffDescriptorIndexes
_hasStagedChanges
_hasUnstagedChanges
_hashCache
_hiddenDiffDescriptorIndexes
_ignoresCase
_ignoresLineEnds
_ignoresWhitespace
_inMergeEdit
_intermediateDataSource
_intermediateTokenRange
_isBinaryConflictResolution
_isCalculatingInitialDiffs
_isDirectory
_isPerformingAsyncDiff
_isRestoringState
_label
_lastNumberOfModifiedDescriptors
_lastToggledDiffDescriptors
_lineRange
_loadDataSourcesWithOriginalDataSource:intermediateDataSource:modifiedDataSource:ancestorDataSource:stagedDataSource:restoringState:enableCaching:
_loadPreviousMergeSession:
_managedModifiedTokenRange
_mergeDescriptor
_mergeDescriptors
_mergeTextDigest
_mergeTextStorage
_modifiedContentRange
_modifiedDataSource
_modifiedDescriptorIndexes
_modifiedFNVHash
_modifiedFNVHashLength
_modifiedRangeStartLines
_modifiedTokenHash
_modifiedTokenRange
_modifiedTokenizedRanges
_mutableDiffDescriptors
_needsUpdate
_notifySessionDidScrape
_notifySessionWillScrape
_observeDataSource:
_observers
_options
_originalContentRange
_originalDataSource
_originalFNVHash
_originalFNVHashLength
_originalTokenHash
_originalTokenRange
_originalTokenizedRanges
_parentDiffDescriptor
_preventAsynchronicity
_queue
_rawTokenStorage
_removeIndex:fromSetForObject:
_removeIndexSet:fromSetForObject:
_replacementRange
_replacementString
_resolved
_scrapeResults
_selectedDiffDescriptorIndex
_setAncestorDataSource:
_setContent:
_setIntermediateDataSource:
_setModifiedDataSource:
_setOriginalDataSource:
_setTokenStorage:
_setupBinaryMergeSession
_setupHash
_sharedState
_sharedStateClass
_shouldGenerateDiffString
_shouldGenerateSubdiffDescriptors
_skipTokenizingNewlines
_stageDescriptor
_stagedDataSource
_stagedDiffContext
_stagedTokenRange
_storage
_storeManagedRangesForDescriptors:usingDataSource:timestamp:
_storeObject:forIndex:
_subdescriptorResults
_synchronouslyAdjustDescriptorTokenRanges
_synchronouslyAdjustedDescriptors
_synchronouslyBuildDiffDescriptors
_synchronouslyBuildDiffDescriptorsForLineRange:
_timer
_timestamp
_tmpDiffDescriptors
_toggledDiffDescriptorIndexes
_tokenCount
_tokenStorage
_tokenStorageForDescriptor:
_tokenStorageLock
_undoManager
_unsafeModifiedDataSource
_unsafeOriginalDataSource
_unstagedDiffContext
_updateConflictCount
_updateLastToggledDiffDescriptorIndexes
_updateMergeDocumentForChangedDescriptor:
_updatingChangedDescriptor
_validateRestoredState:
addChildDiffDescriptor:
addFineGrainDiffObserver:
addIndex:
addIndexes:
addIndexesInRange:
addObject:
addObserver:
addOperation:
addOperationWithBlock:
addPointer:
addToggledDiffDescriptorIndex:
adjustedRangeForManagedRange:tokenRange:
allIndexes
allObjects
allocWithZone:
allowsKeyedCoding
allowsThreeWayResolution
ancestorDataSource
ancestorTokenRange
appendFormat:
appendLabelToString:prefix:
appendString:
appendTokenStringToString:prefix:tokenRange:
appendTokenStringToString:tokenRange:
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObject:
autorelease
beginEditTransaction
beginEditing
binaryConflict
binaryConflictDetectionForOriginalDataSource:modifiedDataSource:ancestorDataSource:
binaryConflictMergeDirection:
boolValue
bytes
cachedIntermediateDiffContext
cachedModifiedDiffContext
cachedOriginalDiffContext
cancel
cancelAllDiffOperations
cancelAllOperations
characterIsMember:
childDiffDescriptors
class
coalesceFineGrainEvents
coalesceOriginalDescriptors:unstagedDescriptors:stagedDescriptors:
coalescedRange
commonDescriptorIndexes
commonDescriptorIndexesForDiffDescriptors:
compare:
compareDiffDescriptors:rightDescriptor:
completion
configureSynchronously:
conflictCount
conformsToProtocol:
containsIndex:
contentFileURL
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentHandler
currentTokenRange
dataSource
dataSourceContentsDidChange:
dataSourceCopyDate
dataWithBytes:length:
dataWithContentsOfFile:options:error:
date
de_characterRangeForLineRange:
de_diffHashForDataSource:
debugDescription
debugName
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectForKey:
defaultCenter
defaultDiffMergeDirection
delegate
deltaLines
description
descriptorDidUpdateMergeDirection:
descriptorDidUpdateResolvedState:
descriptorMap
detailedStagingComparisonMode
dictionaryWithObject:forKey:
didChange
didChangeValueForKey:
diffContext
diffContextDidUpdateDescriptors:
diffContextDidUpdateDescriptorsSynchronously:diffDescriptors:
diffDataSourceWithContent:
diffDescriptor:didAddChildDiffDescriptor:
diffDescriptor:willRemoveChildDiffDescriptor:
diffDescriptorIndexesForModifiedTokenRange:
diffDescriptorIndexesForOriginalTokenRange:
diffDescriptorType
diffHash
diffMergeDirection
diffMergeDirectionLocked
diffQueue
diffSessionTextEditBuffer
diffString
diffStringForDescriptorInRange:options:
diffStringForDescriptors:options:
diffTokenAtIndex:
diffTokenHashInDiffDescriptor:range:
diffTokenHashWithRange:
diffTokenInDiffDescriptor:atIndex:
direction
dispatchLockWithDebugName:
doubleValue
enableDiffToggles
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endEditTransactionWithModifiedRange:
endEditing
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsing:
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
enumerateRangesAndObjectsUsingBlock:
enumerateRangesForcingBreaksAtIndexesIn:usingBlock:
enumerateRangesInRange:options:usingBlock:
enumerateRangesUsingBlock:
exceptionWithName:reason:userInfo:
extendedEffectiveRangeForObject:
firstIndex
firstObjectInRange:effectiveRange:effectiveRangeIndex:
getCharacters:range:
getDiffTokens:inDiffDescriptor:inRange:
getLineStart:end:contentsEnd:forRange:
getResourceValue:forKey:error:
getValue:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasStagedChanges
hasToggledDiffDescriptorsInMergeState:
hasUnstagedChanges
hash
hashCache
hiddenDiffDescriptorIndexes
ignoresCase
ignoresWhitespace
inMergeEdit
indexGreaterThanIndex:
indexLessThanIndex:
indexObjectMap
indexOfObject:
indexOfObjectIdenticalTo:
indexOfObjectPassingTest:
indexSet
indexSetWithIndex:
indexSetWithIndexesInRange:
indexesOfObjectsPassingTest:
indexesPassingTest:
init
initWithArray:
initWithArray:copyItems:
initWithBinaryConflictResolutionMergeState:
initWithCapacity:
initWithCoder:
initWithContent:
initWithContent:arrangedContent:tokenStorage:
initWithContentFileURL:
initWithContext:lineRange:shouldCommence:completion:
initWithDataSource:diffHash:
initWithDebugName:
initWithDescriptor:direction:replacementRange:replacementString:deltaLines:
initWithInteger:
initWithObjects:forKeys:count:
initWithOriginalBinaryDataSource:modifiedBinaryDataSource:ancestorBinaryDataSource:stagedBinaryDataSource:
initWithOriginalDataSource:intermediateDataSource:modifiedDataSource:ancestorDataSource:stagedDataSource:undoManager:mergeTextStorage:mergeState:cachingModifiedDataSource:updatesDescriptorsImmediately:options:
initWithOriginalDataSource:intermediateModifiedDataSource:modifiedDataSource:ancestorDataSource:cachingMode:
initWithOriginalDataSource:modifiedDataSource:
initWithOriginalDataSource:modifiedDataSource:ancestorDataSource:cachingMode:
initWithOriginalDataSource:modifiedDataSource:updatesDescriptorsImmediately:cachingMode:
initWithOriginalDataSource:modifiedDataSource:updatesDescriptorsImmediately:cachingMode:diffQueue:
initWithSession:
initWithString:attributes:
initialize
insertChildDiffDescriptor:atIndex:
insertObject:atIndex:
insertObject:inChildDiffDescriptorsAtIndex:
integerValue
intermediateDataSource
intermediateModifiedTokenRange
intermediateTokenRange
intersectsIndexesInRange:
invalidate
isBinaryConflictResolution
isBinaryConflictResolutionMergeState:
isCalculatingInitialDiffs
isCancelled
isCoalescing
isDirectory
isEqual:
isEqualToData:
isEqualToDiffDataSource:
isEqualToIndexSet:
isEqualToString:
isInsertionOrDeletion
isKindOfClass:
isMainThread
isMemberOfClass:
isMergeDescriptor
isRestoringState
isStageDescriptor
isThreeWayDiff
keyPathsForValuesAffectingIsThreeWayDiff
keyPathsForValuesAffectingSelectedMergeDescriptor
keyPathsForValuesAffectingVisibleModifiedDescriptorIndexes
label
lastIndex
lastObject
lastToggledDiffDescriptors
length
lengthOfBytesUsingEncoding:
lineCountOffsetForLine:
lineRange
localizedDescription
longLongValue
main
managedModifiedTokenRange
managedRangeForTokenRange:at:
mergeDescriptors
mergeForDescriptor:direction:
mergeIsDirty
mergeTextStorage
mergedTokenRange
modifiedContentRange
modifiedDataSource
modifiedDataSourceWillChange
modifiedDescriptorIndexes
modifiedDescriptorIndexesForDiffDescriptors:
modifiedDiffDescriptors
modifiedFNVHashLength
modifiedSubdescriptorIndexes
modifiedSubdescriptors
modifiedTokenHash
modifiedTokenRange
modifiedTokenizedRanges
mutableBytes
mutableCopy
mutableDiffDescriptors
mutateDescriptorsUnderneathMergeDescriptors:
mutateMergeDocument:
mutateMergeDocumentWithMerge:
needsUpdate
newlineCharacterSet
nextObject
numberOfCommonDescriptors
numberOfDiffDescriptors
numberOfDiffTokens
numberOfDiffTokensInDiffDescriptor:
numberOfModifiedDescriptors
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
objectAtIndex:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectIndexSetMap
objectsAtIndexes:
observers
offsetRange:usingAccumulatedOffsetUpToLocation:
offsetRangeUsingAccumulatedOffset:
originalContentRange
originalDataSource
originalFNVHashLength
originalTokenHash
originalTokenRange
originalTokenizedRanges
parentDiffDescriptor
path
performDiffAsynchronously
performDiffSynchronously
performLockedBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSelectorOnMainThread:withObject:waitUntilDone:
postNotificationName:object:userInfo:
preventAsynchronicity
produceRevisionContentByApplyingDescriptor:completionHandler:
produceRevisionContentByApplyingDescriptorIndex:completionHandler:
produceRevisionContentByReplacingLineRange:ofDataSource:withLineRange:ofDataSource:completionHandler:
produceRevisionContentByStaging:completionHandler:
produceRevisionContentByUnstaging:completionHandler:
queue
rangeValue
rangesForObject:
removeAllChildDiffDescriptors
removeAllIndexes
removeAllObjects
removeChildDiffDescriptor:
removeChildDiffDescriptorAtIndex:
removeFineGrainDiffObserver:
removeIndex:
removeIndexes:
removeIndexesInRange:
removeObject:
removeObjectAtIndex:
removeObjectForIndex:
removeObjectForKey:
removeObjectFromChildDiffDescriptorsAtIndex:
removePointerAtIndex:
removeToggledDiffDescriptorIndex:
replaceCharactersInRange:withString:
replaceCharactersInRange:withString:withUndoManager:
replaceObjectsInRange:withObjectsFromArray:range:
replacementRange
replacementString
reset
resolved
respondsToSelector:
restoredState
retain
retainCount
revertDiffDescriptor:line:withPrimaryTextStorage:undoManager:
revertDiffDescriptor:withPrimaryTextStorage:undoManager:
revertDiffDescriptorIndex:line:withPrimaryTextStorage:undoManager:
revertDiffDescriptorIndex:withPrimaryTextStorage:undoManager:
revertDiffDescriptorIndex:withSourceEditorView:undoManager:
scheduledTimerWithTimeInterval:repeats:block:
selectedDiffDescriptorIndex
selectedMergeDescriptor
self
sessionDidScrapeDiffResults:
sessionWillScrapeDiffResults:
setAncestorDataSource:
setAncestorTokenRange:
setAttributedString:
setBinaryConflict:
setCachedIntermediateDiffContext:
setCachedModifiedDiffContext:
setCachedOriginalDiffContext:
setCoalesceFineGrainEvents:
setCoalescedRange:
setCompletion:
setConflictCount:
setContent:
setContentFileURL:
setDataSource:
setDataSourceCopyDate:
setDefaultDiffMergeDirection:
setDelegate:
setDeltaLines:
setDescriptorMap:
setDetailedStagingComparisonMode:
setDiffCachingMode:
setDiffDescriptorType:
setDiffDescriptors:
setDiffHash:
setDiffMergeDirection:
setDiffMergeDirectionLocked:
setDiffQueue:
setDiffString:
setDirection:
setEnableDiffToggles:
setHasStagedChanges:
setHasUnstagedChanges:
setHashCache:
setIgnoresLineEnds:
setIgnoresWhitespace:
setIntermediateDataSource:
setIntermediateModifiedTokenRange:
setIntermediateTokenRange:
setIsBinaryConflictResolution:
setIsCalculatingInitialDiffs:
setIsRestoringState:
setLabel:
setLastNumberOfModifiedDescriptors:
setLastToggledDiffDescriptors:
setLineRange:
setManagedModifiedTokenRange:
setMergeDescriptor:
setMergeDescriptors:
setMergeTextDigest:
setMergeTextStorage:
setModifiedContentRange:
setModifiedDataSource:
setModifiedDescriptorIndexes:
setModifiedFNVHash:
setModifiedFNVHashLength:
setModifiedTokenHash:
setModifiedTokenRange:
setModifiedTokenizedRanges:
setMutableDiffDescriptors:
setName:
setNeedsScrapeResultsAfterSynchronousUpdate
setNeedsUpdateDiffDescriptors:
setObject:forIndex:
setObject:forIndexSet:
setObject:forKey:
setObject:forRange:
setObservers:
setOptions:
setOriginalContentRange:
setOriginalDataSource:
setOriginalFNVHash:
setOriginalFNVHashLength:
setOriginalTokenHash:
setOriginalTokenRange:
setOriginalTokenizedRanges:
setParentDiffDescriptor:
setPreventAsynchronicity:
setQualityOfService:
setQueue:
setReplacementRange:
setReplacementString:
setResolved:
setShouldCommence:
setShouldGenerateDiffString:
setShouldGenerateSubdiffDescriptors:
setSkipTokenizingNewlines:
setStageDescriptor:
setStagedDataSource:
setStagedDiffContext:
setStagedTokenRange:
setSubdescriptorResults:
setSynchronouslyAdjustDescriptorTokenRanges:
setSynchronouslyAdjustedDescriptors:
setTimer:
setTimestamp:
setTmpDiffDescriptors:
setToggledDiffDescriptorIndexes:
setUnsafeModifiedDataSource:
setUnsafeOriginalDataSource:
setUnstagedDiffContext:
setUpdatingChangedDescriptor:
setVersion:
setWithObject:
sharedState
shouldCommence
shouldGenerateDiffString
shouldGenerateSubdiffDescriptors
shouldSynchronouslyAdjustDescriptorTokenRanges
skipTokenizingNewlines
sortUsingComparator:
stagedDataSource
stagedDiffContext
stagedTokenRange
standardUserDefaults
start
string
stringByReplacingCharactersInRange:withString:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subdescriptorResults
subdescriptors
substringWithRange:
superclass
synchronouslyAdjustDescriptorTokenRanges
synchronouslyAdjustedDescriptors
throttleTextEventWithLineRange:unthrottledHandler:
timeIntervalSinceDate:
timer
timestamp
tmpDiffDescriptors
toggledDiffDescriptorIndexes
tokenRangeForCharacterRange:
tokenStringWithPrefix:tokenRange:
tokenStringWithTokenRange:
undoManager
unsafeModifiedDataSource
unsafeOriginalDataSource
unsignedIntegerValue
unstagedDiffContext
updatingChangedDescriptor
userFixedPitchFontOfSize:
validIndexes
valueWithBytes:objCType:
visibleModifiedDescriptorIndexes
weakObjectsPointerArray
weakToWeakObjectsMapTable
whitespaceCharacterSet
willChangeValueForKey:
writeToFile:atomically:encoding:error:
zeroLengthIndexSetMap
zone
v32@?0@8Q16*24
v16@?0@"NSTimer"8
v8@?0
DeltaFoundationDiffCoalescingThreshold
v32@?0@"NSArray"8@"DEDescriptor"16*24
q24@?0@"DEDescriptor"8@"DEDescriptor"16
v32@?0@"DEDescriptor"8Q16*24
%ld;%ld%@
v32@?0@8@16*24
DEDescriptorDiffDescriptors
DEDescriptorModifiedDiffDescriptorIndexes
DEDescriptorCommonDiffDescriptorIndexes
<1-2>
<2-1>
DEDescriptor.m
keyed unarchiver required
originalTokenRange
modifiedTokenRange
ancestorTokenRange
stagedTokenRange
intermediateTokenRange
intermediateModifiedTokenRange
originalContentRange
modifiedContentRange
diffDescriptorType
diffMergeDirection
originalTokenHash
modifiedTokenHash
subdescriptorResults
originalTokenizedRanges
modifiedTokenizedRanges
resolved
stageDescriptor
binaryConflict
diffMergeDirectionLocked
keyed archiver required
%@ %p <type = %@, %@ %@ %@, (%lu, %lu), subdescriptorResults = %@>
Invalid merge direction
Unknown merge direction
Merge direction locked
Invalid parameter not satisfying: %@
descriptor != nil
childDescriptor != nil
common
modified
changed-in-originalDataSource
changed-in-modifiedDataSource
same-change-on-both-sides
conflict-change-on-both-sides
changed-in-modifiedDataSource-intermediate
NSMutableArray *_DEDescriptorGetMutableChildDiffDescriptors(DEDescriptor *__strong)
<%@: %p>[count = %lu]
DEDataSource.m
dataSource is nil or the wrong type
method %@ is a subclass responsibility of %@
-[DEDataSource diffTokenInDiffDescriptor:atIndex:]
-[DEDataSource getDiffTokens:inDiffDescriptor:inRange:]
-[DEDataSource numberOfDiffTokensInDiffDescriptor:]
result is nil
void _DEContextThreeWayUpdateDiffDescriptors(DEContextThreeWayOperation *__strong, NSRange)
DEContextThreeWayOperation.m
original and modified diff descriptor arrays disagree on length of ancestor
didn't have diff descriptors to end of ancestor
unexpected diff descriptor type when comparing conflict region
{?={_NSRange=QQ}QQ}
DELineDataSource.m
%@ should not be nil.
tokenStorage
v32@?0@"NSValue"8Q16*24
descriptor is nil
index out of bounds
range is invalid
com.apple.dt.token-storage-lock-queue
%@ %@ %d: Range or index out of bounds
NSMutableArray *_DELineDataSourceGetTokenStorage(DELineDataSource *__strong, DEDescriptor *__strong, __strong id)
%@ should be a string
arrangedContent
%@ should be nil
descriptor
DEBinaryDataSource.m
Hash is null
Descriptor was nil
Index is invalid
Range is invalid
self.content
Unable to hash "%@". Error: %@
DEBarrierLock.m
_queue is NULL, self has already been deallocated
Diff queue for DEContext <%p>
<%@: %p>[originalDataSource = <%@: %p>, modifiedDataSource = <%@: %p>, sub]
v16@?0@"DEContextOperation"8
c16@?0@"DEContextOperation"8
/tmp/DEcontext-%lu-<%p>-original-input.log
/tmp/DEcontext-%lu-<%p>-modified-input.log
NSIndexSet *_diffDescriptorIndexesForTokenRange(NSArray *__strong, NSRange, NSRange (*)(DEDescriptor *__strong))
DEContext.m
descriptors != nil
tokenRangeCallback != NULL
DEToken DEMakeDiffTokenWithString(NSString * _Nonnull __strong, NSRange, BOOL, BOOL)
DEToken.m
string != nil
%@ length > length of string: %@ (%li) 
(ignoresWhitespace == YES) || (ignoresWhitespace == NO)
(ignoresCase == YES) || (ignoresCase == NO)
{range = {%lu, %lu}, hash = %lx, type = %ld}
DEContextNumberOfContextTokensOptionKey
DEContextOperation.m
%@ should be a string, but it is nil
originalContent
modifiedContent
+++ UnknownFile
--- UnknownFile
NSMaxRange(range) <= [self numberOfDiffDescriptors]
--- 
+++ 
v16@?0Q8
DEPatienceTuple *patienceSequenceMatcher(int64_t *, NSInteger, int64_t *, NSInteger, NSInteger *)
Patience Diff binary search failed
int64_t *UniquelineTuples(int64_t *, NSInteger, int64_t *, NSInteger)
fileALength is negative
fileBLength is negative
NSInteger _DEContextGetNumberOfContextTokensWithOptions(DEContextOperation *__strong, NSDictionary *__strong)
Context cannot be nil!
void _DEContextAppendDiffStringInRangeWithContextTokens(DEContextOperation *__strong, NSMutableString *__strong, NSRange, NSInteger, DEDataSource *__strong, DEDataSource *__strong)
context != nil
(range.location != NSNotFound) && (range.length > 0) && (NSMaxRange(range) <= [context numberOfDiffDescriptors])
numContextTokens >= 0
origDataSource != nil
modDataSource != nil
%ld,%ld
void _DEContextAppendDiffStringInRange(DEContextOperation *__strong, NSMutableString *__strong, NSRange, DEDataSource *__strong, DEDataSource *__strong)
DESessionIsBinaryConflictResolution
DESessionDiffDescriptors
DESessionMergeDescriptors
DESessionModifiedDescriptorIndexes
DESessionDiffString
DESessionMergeTextDigest
DESessionEnableDiffToggles
DESessionToggledDiffDescriptorIndexes
DESessionIgnoresWhitespaceKey
DESession.m
a datasource is nil
v16@?0@"DEContext"8
ancestorDataSource
isThreeWayDiff
mergeDescriptors
selectedDiffDescriptorIndex
hiddenDiffDescriptorIndexes
modifiedDescriptorIndexes
[restoredState objectForKey:DESessionIsBinaryConflictResolution]
[restoredState objectForKey:DESessionDiffDescriptors]
[restoredState objectForKey:DESessionModifiedDescriptorIndexes]
[restoredState objectForKey:DESessionDiffString]
[restoredState objectForKey:DESessionMergeDescriptors]
[restoredState objectForKey:DESessionMergeTextDigest]
%@ should be an array, but it is nil
%@ should be an array
c32@?0@"DEDescriptor"8Q16*24
code should be running on main thread
c24@?0Q8*16
modifiedString
originalString
code which should be unreachable has been reached
Diff descriptor %lu is greater than number of diffs (%lu)
ancestorString
intermediateString
toggledDiffDescriptorIndexes
v24@?0Q8*16
Asked to stage diff descriptor, but diff session's staging mode doesn't support unstaged descriptors!
Asked to unstage diff descriptor, but diff session's staging mode doesn't support staged descriptors!
contentToBeReplacedString
v32@?0{_NSRange=QQ}8*24
v40@?0{_NSRange=QQ}8@24*32
v32@?0@"NSObject"8@"NSMutableIndexSet"16*24
v32@?0@"NSArray"8@16*24
 ancestorDataSource = <%@: %p>
DEWeakCollection
DEContextCoalescing
DEDescriptorCoalescing
DERangeCollectionOffset
DEContextThreeWaySharedState
DEHashing
_DEHashingDictionaryDiffHashContext
DEDescriptor
NSCoding
NSCopying
DESessionMerge
DEDataSource
DEContextThreeWayOperation
DEWordDataSource
_DELineDataSourceConsistentCopy
DELineDataSource
DEBinaryDataSource
DEBarrierLock
DEContextSharedState
DEFineGrainDiffDataSource
NSObject
DEContext
DEFineGrainDiffObserver
DEDataSourceDelegate
DEContextOperation
DESession
DEContextDelegate
DEDescriptorDelegate
DEIndexSetMap
Helpers
DEFNVHashCache
DEContextThreeWay
@16@0:8
v24@0:8@16
v24@0:8@?16
v16@0:8
@"NSPointerArray"
c40@0:8{_NSRange=QQ}16@?32
c16@0:8
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSTimer"
@"NSDate"
{_NSRange="location"Q"length"Q}
@24@0:8@16
@40@0:8@16@24@32
@"DEDataSource"
{_NSRange=QQ}40@0:8{_NSRange=QQ}16Q32
q24@0:8Q16
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@"NSMutableDictionary"
@"NSMutableIndexSet"
@"DEContext"
Q24@0:8@16
Q24@0:8@"DEDataSource"16
@32@0:8@16Q24
Q16@0:8
v24@0:8Q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
c24@0:8@16
v24@0:8q16
q16@0:8
v20@0:8c16
v32@0:8@16@24
v32@0:8@16q24
@"DEDescriptor"
@"NSMutableArray"
@"NSDictionary"
@"NSIndexSet"
@"<DEDescriptorDelegate>"
@64@0:8@16q24{_NSRange=QQ}32@48q56
@"NSString"
{?={_NSRange=QQ}QQ}32@0:8@16q24
v48@0:8^{?={_NSRange=QQ}QQ}16@24{_NSRange=QQ}32
{?={_NSRange=QQ}QQ}24@0:8q16
q24@0:8@16
Q40@0:8@16{_NSRange=QQ}24
Q32@0:8{_NSRange=QQ}16
v48@0:8@16@24{_NSRange=QQ}32
v40@0:8@16{_NSRange=QQ}24
@40@0:8@16{_NSRange=QQ}24
@32@0:8{_NSRange=QQ}16
{_DEContextFlags=b1b1b1b1b1b1b1b1b24}16@0:8
v20@0:8{_DEContextFlags=b1b1b1b1b1b1b1b1b24}16
{_DEContextFlags="ignoresCase"b1"ignoresWhitespace"b1"ignoresLineEnds"b1"ignoresCommon"b1"synchronouslyAdjustDescriptorTokenRanges"b1"skipTokenizingNewlines"b1"shouldGenerateDiffString"b1"coalesceFineGrainEvents"b1"RESERVED"b24}
@"<DEDataSourceDelegate>"
@56@0:8@16{_NSRange=QQ}24@?40@?48
@32@0:8@16@24
@"NSArray"
@"NSData"
^{?={_NSRange=QQ}QQ}
@"DEBarrierLock"
v24@0:8[5{?={_NSRange=QQ}QQ}]16
[5{?="range"{_NSRange="location"Q"length"Q}"hash"Q"type"Q}]
@"NSURL"
@"NSObject<OS_dispatch_queue>"
@"DEFNVHashCache"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8{_NSRange=QQ}16@32
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
@40@0:8{_NSRange=QQ}16@"NSDate"32
v24@0:8@"<DEFineGrainDiffObserver>"16
v24@0:8@"DEDataSource"16
@52@0:8@16@24c32Q36@44
@44@0:8@16@24c32Q36
v40@0:8{_NSRange=QQ}16@?32
v40@0:8@16@24@32
i16@0:8
v20@0:8i16
@"<DEContextDelegate>"
@"DEContextSharedState"
@"NSOperationQueue"
@?16@0:8
v24@0:8@"DEContext"16
v32@0:8@"DEContext"16@"NSArray"24
v24@0:8@"DEDescriptor"16
@48@0:8@16@24@32@40
@92@0:8@16@24@32@40@48@56@64@72c80c84{_DEContextFlags=b1b1b1b1b1b1b1b1b24}88
@32@0:8^@16^@24
@32@0:8@16q24
v40@0:8Q16@24@32
v48@0:8Q16q24@32@40
v48@0:8@16q24@32@40
q32@0:8@16@24
v64@0:8@16@24@32@40@48c56c60
v32@0:8Q16@?24
v32@0:8@16@?24
v72@0:8{_NSRange=QQ}16@32{_NSRange=QQ}40@56@?64
@"NSObject<OS_dispatch_group>"
@"NSUndoManager"
@"<DESessionTextEditBuffer>"
@"NSMapTable"
v32@0:8@16Q24
@24@0:8Q16
@48@0:8{_NSRange=QQ}16^{_NSRange=QQ}32^Q40
{_NSRange=QQ}24@0:8@16
v32@0:8Q16@24
@"DEIndexSetMap"
^q16@0:8
v24@0:8^q16
@48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
@(#)PROGRAM:DeltaFoundation  PROJECT:IDEPlugIns-1
!1Ae
T@"DEDataSource",&,V_dataSource
T#,R
TB,N,V_shouldGenerateDiffString
T@"<DEDataSourceDelegate>",W,N,V_delegate
Tq,V_deltaLines
T@"<DESessionTextEditBuffer>",&,V_mergeTextStorage
_coalescedRange
T@"DEContext",&,N,V_cachedModifiedDiffContext
_contentFileURL
T@"DEContext",&,V_diffContext
_pruneStorageForObjectIfNeeded:
T@"DEContext",&,V_unstagedDiffContext
accumulateOffsetFromDescriptor:
T@"DEContextSharedState",&,V_sharedState
containsObject:
T@"DEDataSource",&,N,V_ancestorDataSource
contentFilePath
T@"DEDataSource",&,N,V_modifiedDataSource
diffCachingMode
T@"DEDataSource",&,N,V_unsafeModifiedDataSource
diffStringForDescriptorInRange:
T@"DEDataSource",&,V_modifiedDataSource
initWithLength:
T@"DEDataSource",&,V_stagedDataSource
isProxy
T@"DEDataSource",R,V_intermediateDataSource
mergeDescriptor
T@"DEDataSource",R,V_originalDataSource
modifiedFNVHash
T@"DEDescriptor",&,V_mergeDescriptor
numberWithBool:
T@"DEDescriptor",R
options
T@"NSArray",&,V_mergeDescriptors
pointerAtIndex:
T@"NSData",&,V_mergeTextDigest
release
T@"NSDate",&,V_dataSourceCopyDate
setBool:forKey:
T@"NSDictionary",R,D
setHiddenDiffDescriptorIndexes:
T@"NSIndexSet",&,V_modifiedDescriptorIndexes
setInMergeEdit:
T@"NSIndexSet",&,V_originalTokenizedRanges
setMaxConcurrentOperationCount:
T@"NSIndexSet",R,N,V_toggledDiffDescriptorIndexes
setSelectedDiffDescriptorIndex:
T@"NSMutableArray",&,N,V_mutableDiffDescriptors
setUndoManager:
T@"NSMutableArray",&,V_lastToggledDiffDescriptors
shiftIndexesStartingAtIndex:by:
T@"NSOperationQueue",&,V_diffQueue
valueWithRange:
.cxx_destruct
T@"NSArray",&,V_diffDescriptors
T@"<DEContextDelegate>",W,V_delegate
TB,V_isBinaryConflictResolution
T@"<DEDescriptorDelegate>",W,N,V_delegate
_binaryConflict
T@"DEContext",&,N,V_cachedIntermediateDiffContext
_collectResults
T@"DEContext",&,N,V_cachedOriginalDiffContext
_intermediateModifiedTokenRange
T@"DEContext",&,V_stagedDiffContext
_shouldCommence
T@"DEContextSharedState",&,N,V_sharedState
arrangedContent
T@"DEDataSource",&
content
T@"DEDataSource",&,N,V_intermediateDataSource
dealloc
T@"DEDataSource",&,N,V_originalDataSource
diffDescriptors
T@"DEDataSource",&,N,V_unsafeOriginalDataSource
ignoresLineEnds
T@"DEDataSource",&,V_originalDataSource
isMultiDiffSelectionMergeState:
T@"DEDataSource",R,V_ancestorDataSource
lastNumberOfModifiedDescriptors
T@"DEDataSource",R,V_modifiedDataSource
mergeTextDigest
T@"DEDataSource",R,V_stagedDataSource
T@"DEDescriptor",&,V_parentDiffDescriptor
objectForIndex:
T@"DEFNVHashCache",&,V_hashCache
originalFNVHash
T@"NSArray",&,V_synchronouslyAdjustedDescriptors
refresh
T@"NSDate",&,N,V_timestamp
removeObserver:
T@"NSDictionary",&,V_subdescriptorResults
setDiffContext:
T@"NSIndexSet",&,V_hiddenDiffDescriptorIndexes
setIgnoresCase:
T@"NSIndexSet",&,V_modifiedTokenizedRanges
setIsDirectory:
T@"NSIndexSet",R
setNeedsUpdate:
T@"NSMapTable",&,V_descriptorMap
setSharedState:
T@"NSMutableArray",&,N,V_tmpDiffDescriptors
setWithObjects:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
stageDescriptor
T@"NSPointerArray",&,V_observers
T@"NSString",&,V_diffString
T@"NSString",&,V_label
T@"NSString",?,R,C
T@"NSString",C,V_diffString
T@"NSString",C,V_replacementString
T@"NSString",R,C
T@"NSTimer",&,N,V_timer
T@"NSURL",C,N,V_contentFileURL
T@"NSUndoManager",&,V_undoManager
T@,&,V_content
T@,&,V_managedModifiedTokenRange
T@?,C,N,V_completion
T@?,C,N,V_shouldCommence
TAi,V_needsUpdate
TB,D
TB,GisMergeDescriptor,V_mergeDescriptor
TB,N,GisStageDescriptor,V_stageDescriptor
TB,N,V_ignoresCase
TB,N,V_ignoresLineEnds
TB,N,V_ignoresWhitespace
TB,N,V_isDirectory
TB,N,V_shouldGenerateSubdiffDescriptors
TB,N,V_skipTokenizingNewlines
TB,R
TB,V_binaryConflict
TB,V_coalesceFineGrainEvents
TB,V_diffMergeDirectionLocked
TB,V_enableDiffToggles
TB,V_hasStagedChanges
TB,V_hasUnstagedChanges
TB,V_inMergeEdit
TB,V_isCalculatingInitialDiffs
TB,V_isRestoringState
TB,V_preventAsynchronicity
TB,V_shouldGenerateDiffString
TB,V_skipTokenizingNewlines
TB,V_synchronouslyAdjustDescriptorTokenRanges
THREAD_arrangedContent
THREAD_content
TQ,N,V_detailedStagingComparisonMode
TQ,N,V_diffCachingMode
TQ,N,V_modifiedTokenHash
TQ,N,V_originalTokenHash
TQ,R
TQ,V_conflictCount
TQ,V_diffCachingMode
TQ,V_diffHash
TQ,V_lastNumberOfModifiedDescriptors
TQ,V_selectedDiffDescriptorIndex
Tq,D
Tq,N,V_defaultDiffMergeDirection
Tq,N,V_diffDescriptorType
Tq,V_direction
T{_DEContextFlags=b1b1b1b1b1b1b1b1b24},V_options
T{_NSRange=QQ},N,V_ancestorTokenRange
T{_NSRange=QQ},N,V_coalescedRange
T{_NSRange=QQ},N,V_intermediateTokenRange
T{_NSRange=QQ},N,V_lineRange
T{_NSRange=QQ},N,V_modifiedContentRange
T{_NSRange=QQ},N,V_modifiedTokenRange
T{_NSRange=QQ},N,V_originalContentRange
T{_NSRange=QQ},N,V_originalTokenRange
T{_NSRange=QQ},N,V_stagedTokenRange
T{_NSRange=QQ},R
T{_NSRange=QQ},V_intermediateModifiedTokenRange
T{_NSRange=QQ},V_replacementRange
UTF8String
_accumulatedLineCountOffsetMap
_accumulatedOffset
_addIndex:toSetForObject:
_addIndexSet:toSetForObject:
_adjustDescriptorsBasedOnFineGrainDataSource:
_ancestorDataSource
_ancestorTokenRange
_arrangedContent
_buildDiffDescriptors
_buildDiffString
_buildMergeStringAndDescriptors:withMergeTextDigest:
_buildSubdescriptors
_cachedIntermediateDiffContext
_cachedModifiedDiffContext
_cachedOriginalDiffContext
_cachedTokenStorage
_cachedTokenStorageStringHash
_childDescriptors
_coalesceFineGrainEvents
_collectAndCoalesceResults
_collectResultsAsStageChanges
_completion
_conflictCount
_content
_dataSource
_dataSourceCopyDate
_defaultDiffMergeDirection
_delegate
_deltaLines
_descriptorMap
_detailedStagingComparisonMode
_diffCachingMode
_diffContext
_diffContextForComparing:with:
_diffDescriptor:didAddChildDiffDescriptor:
_diffDescriptor:willRemoveChildDiffDescriptor:
_diffDescriptorType
_diffDescriptors
_diffDescriptorsByAddingUnmodified:
_diffHash
_diffMergeDirection
_diffMergeDirectionLocked
_diffOperationClass
_diffQueue
_diffString
_direction
_doModifiedRangesOverlapInModifiedDescriptors:
_dumpDataSources
_editorDataSourceStringReplaceWorkaroundFlag
_enableDiffToggles
_enqueueDiffOperationWithLineRange:shouldCommence:
_fineGrainObservationGroup
_fixToggledDiffDescriptorIndexes
_hasStagedChanges
_hasUnstagedChanges
_hashCache
_hiddenDiffDescriptorIndexes
_ignoresCase
_ignoresLineEnds
_ignoresWhitespace
_inMergeEdit
_intermediateDataSource
_intermediateTokenRange
_isBinaryConflictResolution
_isCalculatingInitialDiffs
_isDirectory
_isPerformingAsyncDiff
_isRestoringState
_label
_lastNumberOfModifiedDescriptors
_lastToggledDiffDescriptors
_lineRange
_loadDataSourcesWithOriginalDataSource:intermediateDataSource:modifiedDataSource:ancestorDataSource:stagedDataSource:restoringState:enableCaching:
_loadPreviousMergeSession:
_managedModifiedTokenRange
_mergeDescriptor
_mergeDescriptors
_mergeTextDigest
_mergeTextStorage
_modifiedContentRange
_modifiedDataSource
_modifiedDescriptorIndexes
_modifiedFNVHash
_modifiedFNVHashLength
_modifiedRangeStartLines
_modifiedTokenHash
_modifiedTokenRange
_modifiedTokenizedRanges
_mutableDiffDescriptors
_needsUpdate
_notifySessionDidScrape
_notifySessionWillScrape
_observeDataSource:
_observers
_options
_originalContentRange
_originalDataSource
_originalFNVHash
_originalFNVHashLength
_originalTokenHash
_originalTokenRange
_originalTokenizedRanges
_parentDiffDescriptor
_preventAsynchronicity
_queue
_rawTokenStorage
_removeIndex:fromSetForObject:
_removeIndexSet:fromSetForObject:
_replacementRange
_replacementString
_resolved
_scrapeResults
_selectedDiffDescriptorIndex
_setAncestorDataSource:
_setContent:
_setIntermediateDataSource:
_setModifiedDataSource:
_setOriginalDataSource:
_setTokenStorage:
_setupBinaryMergeSession
_setupHash
_sharedState
_sharedStateClass
_shouldGenerateDiffString
_shouldGenerateSubdiffDescriptors
_skipTokenizingNewlines
_stageDescriptor
_stagedDataSource
_stagedDiffContext
_stagedTokenRange
_storage
_storeManagedRangesForDescriptors:usingDataSource:timestamp:
_storeObject:forIndex:
_subdescriptorResults
_synchronouslyAdjustDescriptorTokenRanges
_synchronouslyAdjustedDescriptors
_synchronouslyBuildDiffDescriptors
_synchronouslyBuildDiffDescriptorsForLineRange:
_timer
_timestamp
_tmpDiffDescriptors
_toggledDiffDescriptorIndexes
_tokenCount
_tokenStorage
_tokenStorageForDescriptor:
_tokenStorageLock
_undoManager
_unsafeModifiedDataSource
_unsafeOriginalDataSource
_unstagedDiffContext
_updateConflictCount
_updateLastToggledDiffDescriptorIndexes
_updateMergeDocumentForChangedDescriptor:
_updatingChangedDescriptor
_validateRestoredState:
addChildDiffDescriptor:
addFineGrainDiffObserver:
addIndex:
addIndexes:
addIndexesInRange:
addObject:
addObserver:
addOperation:
addOperationWithBlock:
addPointer:
addToggledDiffDescriptorIndex:
adjustedRangeForManagedRange:tokenRange:
allIndexes
allObjects
allocWithZone:
allowsKeyedCoding
allowsThreeWayResolution
ancestorDataSource
ancestorTokenRange
appendFormat:
appendLabelToString:prefix:
appendString:
appendTokenStringToString:prefix:tokenRange:
appendTokenStringToString:tokenRange:
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObject:
autorelease
beginEditTransaction
beginEditing
binaryConflict
binaryConflictDetectionForOriginalDataSource:modifiedDataSource:ancestorDataSource:
binaryConflictMergeDirection:
boolValue
bytes
cachedIntermediateDiffContext
cachedModifiedDiffContext
cachedOriginalDiffContext
cancel
cancelAllDiffOperations
cancelAllOperations
characterIsMember:
childDiffDescriptors
class
coalesceFineGrainEvents
coalesceOriginalDescriptors:unstagedDescriptors:stagedDescriptors:
coalescedRange
commonDescriptorIndexes
commonDescriptorIndexesForDiffDescriptors:
compare:
compareDiffDescriptors:rightDescriptor:
completion
configureSynchronously:
conflictCount
conformsToProtocol:
containsIndex:
contentFileURL
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentHandler
currentTokenRange
dataSource
dataSourceContentsDidChange:
dataSourceCopyDate
dataWithBytes:length:
dataWithContentsOfFile:options:error:
date
de_characterRangeForLineRange:
de_diffHashForDataSource:
debugDescription
debugName
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectForKey:
defaultCenter
defaultDiffMergeDirection
delegate
deltaLines
description
descriptorDidUpdateMergeDirection:
descriptorDidUpdateResolvedState:
descriptorMap
detailedStagingComparisonMode
dictionaryWithObject:forKey:
didChange
didChangeValueForKey:
diffContext
diffContextDidUpdateDescriptors:
diffContextDidUpdateDescriptorsSynchronously:diffDescriptors:
diffDataSourceWithContent:
diffDescriptor:didAddChildDiffDescriptor:
diffDescriptor:willRemoveChildDiffDescriptor:
diffDescriptorIndexesForModifiedTokenRange:
diffDescriptorIndexesForOriginalTokenRange:
diffDescriptorType
diffHash
diffMergeDirection
diffMergeDirectionLocked
diffQueue
diffSessionTextEditBuffer
diffString
diffStringForDescriptorInRange:options:
diffStringForDescriptors:options:
diffTokenAtIndex:
diffTokenHashInDiffDescriptor:range:
diffTokenHashWithRange:
diffTokenInDiffDescriptor:atIndex:
direction
dispatchLockWithDebugName:
doubleValue
enableDiffToggles
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endEditTransactionWithModifiedRange:
endEditing
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsing:
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
enumerateRangesAndObjectsUsingBlock:
enumerateRangesForcingBreaksAtIndexesIn:usingBlock:
enumerateRangesInRange:options:usingBlock:
enumerateRangesUsingBlock:
exceptionWithName:reason:userInfo:
extendedEffectiveRangeForObject:
firstIndex
firstObjectInRange:effectiveRange:effectiveRangeIndex:
getCharacters:range:
getDiffTokens:inDiffDescriptor:inRange:
getLineStart:end:contentsEnd:forRange:
getResourceValue:forKey:error:
getValue:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasStagedChanges
hasToggledDiffDescriptorsInMergeState:
hasUnstagedChanges
hash
hashCache
hiddenDiffDescriptorIndexes
ignoresCase
ignoresWhitespace
inMergeEdit
indexGreaterThanIndex:
indexLessThanIndex:
indexObjectMap
indexOfObject:
indexOfObjectIdenticalTo:
indexOfObjectPassingTest:
indexSet
indexSetWithIndex:
indexSetWithIndexesInRange:
indexesOfObjectsPassingTest:
indexesPassingTest:
init
initWithArray:
initWithArray:copyItems:
initWithBinaryConflictResolutionMergeState:
initWithCapacity:
initWithCoder:
initWithContent:
initWithContent:arrangedContent:tokenStorage:
initWithContentFileURL:
initWithContext:lineRange:shouldCommence:completion:
initWithDataSource:diffHash:
initWithDebugName:
initWithDescriptor:direction:replacementRange:replacementString:deltaLines:
initWithInteger:
initWithObjects:forKeys:count:
initWithOriginalBinaryDataSource:modifiedBinaryDataSource:ancestorBinaryDataSource:stagedBinaryDataSource:
initWithOriginalDataSource:intermediateDataSource:modifiedDataSource:ancestorDataSource:stagedDataSource:undoManager:mergeTextStorage:mergeState:cachingModifiedDataSource:updatesDescriptorsImmediately:options:
initWithOriginalDataSource:intermediateModifiedDataSource:modifiedDataSource:ancestorDataSource:cachingMode:
initWithOriginalDataSource:modifiedDataSource:
initWithOriginalDataSource:modifiedDataSource:ancestorDataSource:cachingMode:
initWithOriginalDataSource:modifiedDataSource:updatesDescriptorsImmediately:cachingMode:
initWithOriginalDataSource:modifiedDataSource:updatesDescriptorsImmediately:cachingMode:diffQueue:
initWithSession:
initWithString:attributes:
initialize
insertChildDiffDescriptor:atIndex:
insertObject:atIndex:
insertObject:inChildDiffDescriptorsAtIndex:
integerValue
intermediateDataSource
intermediateModifiedTokenRange
intermediateTokenRange
intersectsIndexesInRange:
invalidate
isBinaryConflictResolution
isBinaryConflictResolutionMergeState:
isCalculatingInitialDiffs
isCancelled
isCoalescing
isDirectory
isEqual:
isEqualToData:
isEqualToDiffDataSource:
isEqualToIndexSet:
isEqualToString:
isInsertionOrDeletion
isKindOfClass:
isMainThread
isMemberOfClass:
isMergeDescriptor
isRestoringState
isStageDescriptor
isThreeWayDiff
keyPathsForValuesAffectingIsThreeWayDiff
keyPathsForValuesAffectingSelectedMergeDescriptor
keyPathsForValuesAffectingVisibleModifiedDescriptorIndexes
label
lastIndex
lastObject
lastToggledDiffDescriptors
length
lengthOfBytesUsingEncoding:
lineCountOffsetForLine:
lineRange
localizedDescription
longLongValue
main
managedModifiedTokenRange
managedRangeForTokenRange:at:
mergeDescriptors
mergeForDescriptor:direction:
mergeIsDirty
mergeTextStorage
mergedTokenRange
modifiedContentRange
modifiedDataSource
modifiedDataSourceWillChange
modifiedDescriptorIndexes
modifiedDescriptorIndexesForDiffDescriptors:
modifiedDiffDescriptors
modifiedFNVHashLength
modifiedSubdescriptorIndexes
modifiedSubdescriptors
modifiedTokenHash
modifiedTokenRange
modifiedTokenizedRanges
mutableBytes
mutableCopy
mutableDiffDescriptors
mutateDescriptorsUnderneathMergeDescriptors:
mutateMergeDocument:
mutateMergeDocumentWithMerge:
needsUpdate
newlineCharacterSet
nextObject
numberOfCommonDescriptors
numberOfDiffDescriptors
numberOfDiffTokens
numberOfDiffTokensInDiffDescriptor:
numberOfModifiedDescriptors
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
objectAtIndex:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectIndexSetMap
objectsAtIndexes:
observers
offsetRange:usingAccumulatedOffsetUpToLocation:
offsetRangeUsingAccumulatedOffset:
originalContentRange
originalDataSource
originalFNVHashLength
originalTokenHash
originalTokenRange
originalTokenizedRanges
parentDiffDescriptor
path
performDiffAsynchronously
performDiffSynchronously
performLockedBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSelectorOnMainThread:withObject:waitUntilDone:
postNotificationName:object:userInfo:
preventAsynchronicity
produceRevisionContentByApplyingDescriptor:completionHandler:
produceRevisionContentByApplyingDescriptorIndex:completionHandler:
produceRevisionContentByReplacingLineRange:ofDataSource:withLineRange:ofDataSource:completionHandler:
produceRevisionContentByStaging:completionHandler:
produceRevisionContentByUnstaging:completionHandler:
queue
rangeValue
rangesForObject:
removeAllChildDiffDescriptors
removeAllIndexes
removeAllObjects
removeChildDiffDescriptor:
removeChildDiffDescriptorAtIndex:
removeFineGrainDiffObserver:
removeIndex:
removeIndexes:
removeIndexesInRange:
removeObject:
removeObjectAtIndex:
removeObjectForIndex:
removeObjectForKey:
removeObjectFromChildDiffDescriptorsAtIndex:
removePointerAtIndex:
removeToggledDiffDescriptorIndex:
replaceCharactersInRange:withString:
replaceCharactersInRange:withString:withUndoManager:
replaceObjectsInRange:withObjectsFromArray:range:
replacementRange
replacementString
reset
resolved
respondsToSelector:
restoredState
retain
retainCount
revertDiffDescriptor:line:withPrimaryTextStorage:undoManager:
revertDiffDescriptor:withPrimaryTextStorage:undoManager:
revertDiffDescriptorIndex:line:withPrimaryTextStorage:undoManager:
revertDiffDescriptorIndex:withPrimaryTextStorage:undoManager:
revertDiffDescriptorIndex:withSourceEditorView:undoManager:
scheduledTimerWithTimeInterval:repeats:block:
selectedDiffDescriptorIndex
selectedMergeDescriptor
self
sessionDidScrapeDiffResults:
sessionWillScrapeDiffResults:
setAncestorDataSource:
setAncestorTokenRange:
setAttributedString:
setBinaryConflict:
setCachedIntermediateDiffContext:
setCachedModifiedDiffContext:
setCachedOriginalDiffContext:
setCoalesceFineGrainEvents:
setCoalescedRange:
setCompletion:
setConflictCount:
setContent:
setContentFileURL:
setDataSource:
setDataSourceCopyDate:
setDefaultDiffMergeDirection:
setDelegate:
setDeltaLines:
setDescriptorMap:
setDetailedStagingComparisonMode:
setDiffCachingMode:
setDiffDescriptorType:
setDiffDescriptors:
setDiffHash:
setDiffMergeDirection:
setDiffMergeDirectionLocked:
setDiffQueue:
setDiffString:
setDirection:
setEnableDiffToggles:
setHasStagedChanges:
setHasUnstagedChanges:
setHashCache:
setIgnoresLineEnds:
setIgnoresWhitespace:
setIntermediateDataSource:
setIntermediateModifiedTokenRange:
setIntermediateTokenRange:
setIsBinaryConflictResolution:
setIsCalculatingInitialDiffs:
setIsRestoringState:
setLabel:
setLastNumberOfModifiedDescriptors:
setLastToggledDiffDescriptors:
setLineRange:
setManagedModifiedTokenRange:
setMergeDescriptor:
setMergeDescriptors:
setMergeTextDigest:
setMergeTextStorage:
setModifiedContentRange:
setModifiedDataSource:
setModifiedDescriptorIndexes:
setModifiedFNVHash:
setModifiedFNVHashLength:
setModifiedTokenHash:
setModifiedTokenRange:
setModifiedTokenizedRanges:
setMutableDiffDescriptors:
setName:
setNeedsScrapeResultsAfterSynchronousUpdate
setNeedsUpdateDiffDescriptors:
setObject:forIndex:
setObject:forIndexSet:
setObject:forKey:
setObject:forRange:
setObservers:
setOptions:
setOriginalContentRange:
setOriginalDataSource:
setOriginalFNVHash:
setOriginalFNVHashLength:
setOriginalTokenHash:
setOriginalTokenRange:
setOriginalTokenizedRanges:
setParentDiffDescriptor:
setPreventAsynchronicity:
setQualityOfService:
setQueue:
setReplacementRange:
setReplacementString:
setResolved:
setShouldCommence:
setShouldGenerateDiffString:
setShouldGenerateSubdiffDescriptors:
setSkipTokenizingNewlines:
setStageDescriptor:
setStagedDataSource:
setStagedDiffContext:
setStagedTokenRange:
setSubdescriptorResults:
setSynchronouslyAdjustDescriptorTokenRanges:
setSynchronouslyAdjustedDescriptors:
setTimer:
setTimestamp:
setTmpDiffDescriptors:
setToggledDiffDescriptorIndexes:
setUnsafeModifiedDataSource:
setUnsafeOriginalDataSource:
setUnstagedDiffContext:
setUpdatingChangedDescriptor:
setVersion:
setWithObject:
sharedState
shouldCommence
shouldGenerateDiffString
shouldGenerateSubdiffDescriptors
shouldSynchronouslyAdjustDescriptorTokenRanges
skipTokenizingNewlines
sortUsingComparator:
stagedDataSource
stagedDiffContext
stagedTokenRange
standardUserDefaults
start
string
stringByReplacingCharactersInRange:withString:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subdescriptorResults
subdescriptors
substringWithRange:
superclass
synchronouslyAdjustDescriptorTokenRanges
synchronouslyAdjustedDescriptors
throttleTextEventWithLineRange:unthrottledHandler:
timeIntervalSinceDate:
timer
timestamp
tmpDiffDescriptors
toggledDiffDescriptorIndexes
tokenRangeForCharacterRange:
tokenStringWithPrefix:tokenRange:
tokenStringWithTokenRange:
undoManager
unsafeModifiedDataSource
unsafeOriginalDataSource
unsignedIntegerValue
unstagedDiffContext
updatingChangedDescriptor
userFixedPitchFontOfSize:
validIndexes
valueWithBytes:objCType:
visibleModifiedDescriptorIndexes
weakObjectsPointerArray
weakToWeakObjectsMapTable
whitespaceCharacterSet
willChangeValueForKey:
writeToFile:atomically:encoding:error:
zeroLengthIndexSetMap
zone
v32@?0@8Q16^B24
v16@?0@"NSTimer"8
v8@?0
DeltaFoundationDiffCoalescingThreshold
v32@?0@"NSArray"8@"DEDescriptor"16^B24
q24@?0@"DEDescriptor"8@"DEDescriptor"16
v32@?0@"DEDescriptor"8Q16^B24
%ld;%ld%@
v32@?0@8@16^B24
DEDescriptorDiffDescriptors
DEDescriptorModifiedDiffDescriptorIndexes
DEDescriptorCommonDiffDescriptorIndexes
<1-2>
<2-1>
DEDescriptor.m
keyed unarchiver required
originalTokenRange
modifiedTokenRange
ancestorTokenRange
stagedTokenRange
intermediateTokenRange
intermediateModifiedTokenRange
originalContentRange
modifiedContentRange
diffDescriptorType
diffMergeDirection
originalTokenHash
modifiedTokenHash
subdescriptorResults
originalTokenizedRanges
modifiedTokenizedRanges
resolved
stageDescriptor
binaryConflict
diffMergeDirectionLocked
keyed archiver required
%@ %p <type = %@, %@ %@ %@, (%lu, %lu), subdescriptorResults = %@>
Invalid merge direction
Unknown merge direction
Merge direction locked
Invalid parameter not satisfying: %@
descriptor != nil
childDescriptor != nil
common
modified
changed-in-originalDataSource
changed-in-modifiedDataSource
same-change-on-both-sides
conflict-change-on-both-sides
changed-in-modifiedDataSource-intermediate
NSMutableArray *_DEDescriptorGetMutableChildDiffDescriptors(DEDescriptor *__strong)
<%@: %p>[count = %lu]
DEDataSource.m
dataSource is nil or the wrong type
method %@ is a subclass responsibility of %@
-[DEDataSource diffTokenInDiffDescriptor:atIndex:]
-[DEDataSource getDiffTokens:inDiffDescriptor:inRange:]
-[DEDataSource numberOfDiffTokensInDiffDescriptor:]
result is nil
void _DEContextThreeWayUpdateDiffDescriptors(DEContextThreeWayOperation *__strong, NSRange)
DEContextThreeWayOperation.m
original and modified diff descriptor arrays disagree on length of ancestor
didn't have diff descriptors to end of ancestor
unexpected diff descriptor type when comparing conflict region
{?={_NSRange=QQ}QQ}
DELineDataSource.m
%@ should not be nil.
tokenStorage
v32@?0@"NSValue"8Q16^B24
descriptor is nil
index out of bounds
range is invalid
com.apple.dt.token-storage-lock-queue
%@ %@ %d: Range or index out of bounds
NSMutableArray *_DELineDataSourceGetTokenStorage(DELineDataSource *__strong, DEDescriptor *__strong, __strong id)
%@ should be a string
arrangedContent
%@ should be nil
descriptor
DEBinaryDataSource.m
Hash is null
Descriptor was nil
Index is invalid
Range is invalid
self.content
Unable to hash "%@". Error: %@
DEBarrierLock.m
_queue is NULL, self has already been deallocated
Diff queue for DEContext <%p>
<%@: %p>[originalDataSource = <%@: %p>, modifiedDataSource = <%@: %p>, sub]
v16@?0@"DEContextOperation"8
B16@?0@"DEContextOperation"8
/tmp/DEcontext-%lu-<%p>-original-input.log
/tmp/DEcontext-%lu-<%p>-modified-input.log
NSIndexSet *_diffDescriptorIndexesForTokenRange(NSArray *__strong, NSRange, NSRange (*)(DEDescriptor *__strong))
DEContext.m
descriptors != nil
tokenRangeCallback != NULL
DEToken DEMakeDiffTokenWithString(NSString * _Nonnull __strong, NSRange, BOOL, BOOL)
DEToken.m
string != nil
%@ length > length of string: %@ (%li) 
{range = {%lu, %lu}, hash = %lx, type = %ld}
DEContextNumberOfContextTokensOptionKey
DEContextOperation.m
%@ should be a string, but it is nil
originalContent
modifiedContent
+++ UnknownFile
--- UnknownFile
NSMaxRange(range) <= [self numberOfDiffDescriptors]
--- 
+++ 
v16@?0Q8
DEPatienceTuple *patienceSequenceMatcher(int64_t *, NSInteger, int64_t *, NSInteger, NSInteger *)
Patience Diff binary search failed
int64_t *UniquelineTuples(int64_t *, NSInteger, int64_t *, NSInteger)
fileALength is negative
fileBLength is negative
NSInteger _DEContextGetNumberOfContextTokensWithOptions(DEContextOperation *__strong, NSDictionary *__strong)
Context cannot be nil!
void _DEContextAppendDiffStringInRangeWithContextTokens(DEContextOperation *__strong, NSMutableString *__strong, NSRange, NSInteger, DEDataSource *__strong, DEDataSource *__strong)
context != nil
(range.location != NSNotFound) && (range.length > 0) && (NSMaxRange(range) <= [context numberOfDiffDescriptors])
numContextTokens >= 0
origDataSource != nil
modDataSource != nil
%ld,%ld
void _DEContextAppendDiffStringInRange(DEContextOperation *__strong, NSMutableString *__strong, NSRange, DEDataSource *__strong, DEDataSource *__strong)
DESessionIsBinaryConflictResolution
DESessionDiffDescriptors
DESessionMergeDescriptors
DESessionModifiedDescriptorIndexes
DESessionDiffString
DESessionMergeTextDigest
DESessionEnableDiffToggles
DESessionToggledDiffDescriptorIndexes
DESessionIgnoresWhitespaceKey
DESession.m
a datasource is nil
v16@?0@"DEContext"8
ancestorDataSource
isThreeWayDiff
mergeDescriptors
selectedDiffDescriptorIndex
hiddenDiffDescriptorIndexes
modifiedDescriptorIndexes
[restoredState objectForKey:DESessionIsBinaryConflictResolution]
[restoredState objectForKey:DESessionDiffDescriptors]
[restoredState objectForKey:DESessionModifiedDescriptorIndexes]
[restoredState objectForKey:DESessionDiffString]
[restoredState objectForKey:DESessionMergeDescriptors]
[restoredState objectForKey:DESessionMergeTextDigest]
%@ should be an array, but it is nil
%@ should be an array
B32@?0@"DEDescriptor"8Q16^B24
code should be running on main thread
B24@?0Q8^B16
modifiedString
originalString
code which should be unreachable has been reached
Diff descriptor %lu is greater than number of diffs (%lu)
ancestorString
intermediateString
toggledDiffDescriptorIndexes
v24@?0Q8^B16
Asked to stage diff descriptor, but diff session's staging mode doesn't support unstaged descriptors!
Asked to unstage diff descriptor, but diff session's staging mode doesn't support staged descriptors!
contentToBeReplacedString
v32@?0{_NSRange=QQ}8^B24
v40@?0{_NSRange=QQ}8@24^B32
v32@?0@"NSObject"8@"NSMutableIndexSet"16^B24
v32@?0@"NSArray"8@16^B24
 ancestorDataSource = <%@: %p>
DEWeakCollection
DEContextCoalescing
DEDescriptorCoalescing
DERangeCollectionOffset
DEContextThreeWaySharedState
DEHashing
_DEHashingDictionaryDiffHashContext
DEDescriptor
NSCoding
NSCopying
DESessionMerge
DEDataSource
DEContextThreeWayOperation
DEWordDataSource
_DELineDataSourceConsistentCopy
DELineDataSource
DEBinaryDataSource
DEBarrierLock
DEContextSharedState
DEFineGrainDiffDataSource
NSObject
DEContext
DEFineGrainDiffObserver
DEDataSourceDelegate
DEContextOperation
DESession
DEContextDelegate
DEDescriptorDelegate
DEIndexSetMap
Helpers
DEFNVHashCache
DEContextThreeWay
@16@0:8
v24@0:8@16
v24@0:8@?16
v16@0:8
@"NSPointerArray"
B40@0:8{_NSRange=QQ}16@?32
B16@0:8
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSTimer"
@"NSDate"
{_NSRange="location"Q"length"Q}
@24@0:8@16
@40@0:8@16@24@32
@"DEDataSource"
{_NSRange=QQ}40@0:8{_NSRange=QQ}16Q32
q24@0:8Q16
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
@"NSMutableDictionary"
@"NSMutableIndexSet"
@"DEContext"
Q24@0:8@16
Q24@0:8@"DEDataSource"16
@32@0:8@16Q24
Q16@0:8
v24@0:8Q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
B24@0:8@16
v24@0:8q16
q16@0:8
v20@0:8B16
v32@0:8@16@24
v32@0:8@16q24
@"DEDescriptor"
@"NSMutableArray"
@"NSDictionary"
@"NSIndexSet"
@"<DEDescriptorDelegate>"
@64@0:8@16q24{_NSRange=QQ}32@48q56
@"NSString"
{?={_NSRange=QQ}QQ}32@0:8@16q24
v48@0:8^{?={_NSRange=QQ}QQ}16@24{_NSRange=QQ}32
{?={_NSRange=QQ}QQ}24@0:8q16
q24@0:8@16
Q40@0:8@16{_NSRange=QQ}24
Q32@0:8{_NSRange=QQ}16
v48@0:8@16@24{_NSRange=QQ}32
v40@0:8@16{_NSRange=QQ}24
@40@0:8@16{_NSRange=QQ}24
@32@0:8{_NSRange=QQ}16
{_DEContextFlags=b1b1b1b1b1b1b1b1b24}16@0:8
v20@0:8{_DEContextFlags=b1b1b1b1b1b1b1b1b24}16
{_DEContextFlags="ignoresCase"b1"ignoresWhitespace"b1"ignoresLineEnds"b1"ignoresCommon"b1"synchronouslyAdjustDescriptorTokenRanges"b1"skipTokenizingNewlines"b1"shouldGenerateDiffString"b1"coalesceFineGrainEvents"b1"RESERVED"b24}
@"<DEDataSourceDelegate>"
@56@0:8@16{_NSRange=QQ}24@?40@?48
@32@0:8@16@24
@"NSArray"
@"NSData"
^{?={_NSRange=QQ}QQ}
@"DEBarrierLock"
v24@0:8[5{?={_NSRange=QQ}QQ}]16
[5{?="range"{_NSRange="location"Q"length"Q}"hash"Q"type"Q}]
@"NSURL"
@"NSObject<OS_dispatch_queue>"
@"DEFNVHashCache"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8{_NSRange=QQ}16@32
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
@40@0:8{_NSRange=QQ}16@"NSDate"32
v24@0:8@"<DEFineGrainDiffObserver>"16
v24@0:8@"DEDataSource"16
@52@0:8@16@24B32Q36@44
@44@0:8@16@24B32Q36
v40@0:8{_NSRange=QQ}16@?32
v40@0:8@16@24@32
i16@0:8
v20@0:8i16
@"<DEContextDelegate>"
@"DEContextSharedState"
@"NSOperationQueue"
@?16@0:8
v24@0:8@"DEContext"16
v32@0:8@"DEContext"16@"NSArray"24
v24@0:8@"DEDescriptor"16
@48@0:8@16@24@32@40
@92@0:8@16@24@32@40@48@56@64@72B80B84{_DEContextFlags=b1b1b1b1b1b1b1b1b24}88
@32@0:8^@16^@24
@32@0:8@16q24
v40@0:8Q16@24@32
v48@0:8Q16q24@32@40
v48@0:8@16q24@32@40
q32@0:8@16@24
v64@0:8@16@24@32@40@48B56B60
v32@0:8Q16@?24
v32@0:8@16@?24
v72@0:8{_NSRange=QQ}16@32{_NSRange=QQ}40@56@?64
@"NSObject<OS_dispatch_group>"
@"NSUndoManager"
@"<DESessionTextEditBuffer>"
@"NSMapTable"
v32@0:8@16Q24
@24@0:8Q16
@48@0:8{_NSRange=QQ}16^{_NSRange=QQ}32^Q40
{_NSRange=QQ}24@0:8@16
v32@0:8Q16@24
@"DEIndexSetMap"
^q16@0:8
v24@0:8^q16
@48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
