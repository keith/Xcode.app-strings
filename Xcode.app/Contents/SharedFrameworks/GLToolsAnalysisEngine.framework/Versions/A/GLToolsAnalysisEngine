St20bad_array_new_length
St9bad_alloc
St9exception
CSt12length_error
St11logic_error
NSt3__117bad_function_callE
v8@?0
DYTextureUploadedMemory() called with unknown texture function; see DYAUIsTextureUploadFunction(): fenum=%s
basic_string
DYFKUninitializedBufferData
DYFKUninitializedTextureData
DYFKUninitializedColorAttachment
DYFKReadPixelsUninitializedColorAttachment
DYFKMSAAResolveUninitializedColorAttachment
DYFKBlitFramebufferReadFromUninitializedAttachment
DYFKPresentNonLayerBackedRenderbuffer
DYFKPresentNonExistentRenderbuffer
DYFKClearWithRasterizerDiscard
DYFKTransformFeedbackIsOverflowingBuffer
DYFKBufferDataCompletelyUpdated
DYFKTextureImageCompletelyUpdated
DYFKNoBufferData
DYFKStateQueryCallCount
DYFKExcessiveSmallBatchUsage
DYFKHeavyLightUsage
DYFKDrawCallWithZeroPrimitives
DYFKDrawCallWithIncompletePrimitives
DYFKGLErrorInvalidEnum
DYFKGLErrorInvalidValue
DYFKGLErrorInvalidOperation
DYFKGLErrorInvalidFramebufferOperation
DYFKGLErrorStackOverflow
DYFKGLErrorStackUnderflow
DYFKGLErrorOutOfMemory
DYFKGLDeprecated
DYFKBeginQueryQueryIsAlreadyActive
DYFKGetQueryObjectuivQueryIsActive
DYFKObjectIsNotAQueryObject
DYFKQueryIsAlreadyActive
DYFKAttemptToChangeQueryTarget
DYFKEndQueryWithoutActiveQuery
DYFKQueryingOcclusionQueryLaunchedInThisFrame
DYFKQueryStillActiveAtEndOfFrame
DYFKDiscardFramebufferBeforePresent
DYFKDepthTestEnabledWithoutDepthBuffer
DYFKStencilTestEnabledWithoutStencilBuffer
DYFKDrawCallAfterReadPixels
DYFKReadPixelsSuboptimalPacking
DYFKReadPixelsSuboptimalDimensions
DYFKReadPixelsSuboptimalFormat
DYFKNonExistentAttachment
DYFKZeroSizedAttachment
DYFKAttachmentSizeMismatch
DYFKAttachmentNumMultisampleMismatch
DYFKNoAttachments
DYFKTextureLayerAttachmentExceedsDepth
DYFKDepthStencilAttachmentsAreNotSameImage
DYFKClearBufferInvalidBufferType
DYFKDepthAttachmentInternalFormatIsNotDepthRenderable
DYFKStencilAttachmentInternalFormatIsNotStencilRenderable
DYFKColorAttachmentInternalFormatIsNotColorRenderable
DYFKAttachmentInternalFormatIsNotTextureFilterable
DYFKMipmappingWithoutCompleteMipchain
DYFKMipmappingWithNPOT
DYFKMipchainWithoutMipmapping
DYFKRecommendTexParameterSetupBeforeUpload
DYFKInconsistentMipchainSizes
DYFKInconsistentMipchainInternalFormats
DYFKInvalidMipLevelInternalFormat
DYFKTextureInternalFormatIsNotTextureFilterable
DYFKRecommendCompressedTexture
DYFKRecommendCompressedTextureES3
DYFKInvalidWrapParameter
DYFKTextureNotCubeComplete
DYFKMinLODExceedsMaxLOD
DYFKMulticontextTextureUsageWithoutFlush
DYFKMulticontextTextureUsageWithoutRebinding
DYFKMulticontextBufferUsageWithoutFlush
DYFKMulticontextBufferUsageWithoutRebinding
DYFKMulticontextRenderbufferUsageWithoutFlush
DYFKMulticontextRenderbufferUsageWithoutRebinding
DYFKIncorrectMulticontextObjectUsage
DYFKMultithreadedContextUsage
DYFKMultithreadedContextUsageError
DYFKMulticontextTransformFeedbackBufferUsageWithoutEnd
DYFKBindAttribAfterLink
DYFKNonExistentUniform
DYFKExceededUniformArrayBounds
DYFKCompileError
DYFKLinkError
DYFKPipelineValidateError
DYFKIneffectiveSetUniformCall
DYFKUseOfNonExistentProgram
DYFKUseOfUnlinkedProgram
DYFKMonolithicProgramWithProgramSeparable
DYFKUseOfNonExistentPipeline
DYFKUseOfIncompletePipeline
DYFKUseOfPipelineWithUnlinkedProgram
DYFKMissingShaderTypeForPipelineStage
DYFKExtraneousShaderForPipelineStage
DYFKAttachProgramWithoutProgramSeparable
DYFKRedundantUniformLocationQuery
DYFKRedundantAttribLocationQuery
DYFKUseProgramTransformFeedbackActiveNotPaused
DYFKUniformBufferTooSmallForUniformBlock
DYFKTransformFeedbackNoVaryings
DYFKTransformFeedbackWithUnlinkedVaryings
DYFKRedundantCall
DYFKInefficientStateUpdate
DYFKClientSidePerVertexDataAlignmentIssue
DYFKVertexBufferObjectDataAlignmentIssue
DYFKRecommendNotUsingFixed
DYFKRecommendByteSizedColorData
DYFKRecommendCompactTextureCoordinatesData
DYFKRecommendUsingVBO
DYFKRecommendUsingElementBuffers
DYFKRecommendUsingInterleavingForStaticVBOs
DYFKRecommendUsingVAO
DYFKBufferBindingVAODependency
DYFKRecommendShortElementData
DYFKRecommendIndexedRendering
DYFKRecommendFourComponentsForByteData
DYFKRecommendTwoOrFourComponentsForShortData
DYFKRecommendNotUsingSignedByte
DYFKDrawExceededArrayBufferSize
DYFKIndexedDrawExceededArrayBufferSize
DYFKDrawExceededElementArrayBufferSize
DYFKNonExistentBufferUsage
DYFKOverlappingVertexData
DYFKSameVertexData
DYFKDifferentStrides
DYFKIndexedDrawTransformFeedbackActiveNotPaused
DYFKPerFrameStatistics
Number of points rendered
Number of lines rendered
Number of triangles rendered
Number of draw calls
Number of enables
Number of disables
Number of GL calls
Number of platform calls
Number of textures uploaded
Amount of texture memory uploaded
Number of redundant state calls
Number of GL and platform calls
Number of render passes
Number of texture loads
Number of command buffer flushes
Number of GL get calls
Number of GL state/data update calls
Number of GL buffers uploaded
Amount of GL buffer memory uploaded
Number of unique textures used
Number of non mipmapped unique textures used
Number of GL read pixel commands
Number of GL finish commands
Number of MSAA Resolves
Presented Renderbuffer Width
Presented Renderbuffer Height
TextureID
BufferID
RenderbufferID
FramebufferID
ShaderID
ProgramID
ProgramPipelineID
QueryID
VertexArrayObjectID
FunctionEnum
TransformFeedbackBufferID
SamplerObjectID
SyncObjectID
AnalyzerFindingKinds
$ThisVSProg$
The vertex shaders in these programs
$ThisFSProg$
The fragment shaders in these programs
$ThisFBO$
These framebuffers
$ThisRB$
These renderbuffers
$texture$
textures
The vertex shader in this program
The fragment shader in this program
This framebuffer
This renderbuffer
GL_ALPHA_TEST
discard in a fragment shader
GL_SAMPLE_ALPHA_TO_COVERAGE
unsupported OpenGL API version: %d
v28@?0r^v8i16^B20
Texture
Framebuffer
Renderbuffer
Buffer
Shader
Program
Program Pipeline
Vertex Array Object
Query
TransformFeedbackBuffer
Sampler Object
Sync Object
%@ #%d "%@"
%@ #%d
GL_MAX_VERTEX_UNITS_OES
GL_MAX_TEXTURE_SIZE
GL_MAX_3D_TEXTURE_SIZE
GL_MAX_CUBE_MAP_TEXTURE_SIZE
GL_MAX_RENDERBUFFER_SIZE
GL_ALIASED_POINT_SIZE_RANGE
GL_ALIASED_LINE_WIDTH_RANGE
GL_MAX_PALETTE_MATRICES_OES
GL_MAX_CLIP_PLANES
GL_MAX_LIGHTS
GL_MAX_VERTEX_ATTRIBS
GL_MAX_VERTEX_UNIFORM_VECTORS
GL_MAX_FRAGMENT_UNIFORM_VECTORS
GL_MAX_COLOR_ATTACHMENTS
GL_MAX_DRAW_BUFFERS
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
GL_MAX_UNIFORM_BUFFER_BINDINGS
GL_OES_blend_subtract
GL_OES_compressed_paletted_texture
GL_OES_depth24
GL_OES_draw_texture
GL_OES_framebuffer_object
GL_OES_mapbuffer
GL_OES_matrix_palette
GL_OES_point_size_array
GL_OES_point_sprite
GL_OES_read_format
GL_OES_rgb8_rgba8
GL_OES_texture_mirrored_repeat
GL_EXT_texture_lod_bias
GL_IMG_read_format
GL_IMG_texture_compression_pvrtc
GL_IMG_texture_format_BGRA8888
GL_EXT_texture_filter_anisotropic
GL_APPLE_framebuffer_multisample
GL_APPLE_texture_format_BGRA8888
GL_APPLE_texture_max_level
GL_EXT_discard_framebuffer
GL_EXT_read_format_bgra
GL_OES_blend_equation_separate
GL_OES_blend_func_separate
GL_OES_fbo_render_mipmap
GL_OES_packed_depth_stencil
GL_OES_stencil8
GL_EXT_blend_minmax
GL_APPLE_texture_2D_limited_npot
GL_OES_stencil_wrap
GL_APPLE_rgb_422
GL_EXT_shader_texture_lod
GL_OES_depth_texture
GL_OES_standard_derivatives
GL_OES_texture_float
GL_OES_texture_half_float
GL_OES_vertex_array_object
GL_OES_element_index_uint
GL_OES_texture_half_float_linear
GL_EXT_debug_label
GL_EXT_debug_marker
GL_EXT_occlusion_query_boolean
GL_EXT_shadow_samplers
GL_EXT_texture_rg
GL_EXT_separate_shader_objects
GL_EXT_color_buffer_half_float
GL_EXT_color_buffer_float
GL_EXT_shader_framebuffer_fetch
GL_EXT_texture_storage
GL_EXT_map_buffer_range
GL_APPLE_sync
GL_APPLE_copy_texture_levels
GL_APPLE_clip_distance
GL_APPLE_texture_packed_float
GL_APPLE_color_buffer_packed_float
GL_EXT_sRGB
GL_EXT_pvrtc_sRGB
GL_EXT_instanced_arrays
GL_APPLE_texture_filter_cubic
GL_KHR_texture_compression_astc_ldr
GL_APPLE_texture_compression_astc_ldr
__MissingEntry
DYAnalyzerFinding
DYAnalyzerErrorFinding
DYAnalyzerFindingPunchThrough
failed to load heuristic '%@' for graphics API %d
-[DYGLAnalyzerEngine configureForArchive:]
sessionInfo
@16@?0Q8
RedundantState
DataInitialization
vector
decoded function has unknown context or drawable ID, unable to process in state mirror: index=%d, fenum=%s, context=%llu, drawable=%llu, internal=%u
unexpected command
[%d]
unknown or unsupported uniform component type: %s (%d)
v24@?0^v8^v16
i12@?0I8
Unsupported buffer target: 0x%x
_bufferCoverage
.cxx_destruct
Tc,N,V_firstBindAfterOutOfContextUpdate
finding
_apiSpecificReasonString:
initWithDouble:
_bufferUpdateIndices
isTextureImageCompletelyUpdated
_firstBindAfterOutOfContextUpdate
setGranularity:
.cxx_construct
addFunctionIndexFBOAttachments:
T@"DYGLProfileConstraints",R,N,V_platformConstraints
containsObject:
UTF8String
functionIndices
_bufferCoveredIndices
isRedundantCall
_constraintsData
_functionIndexSetFromDictionary:forObject:
_newHeuristicPoolWithGraphicsEngineID:
_platformConstraints
_populateHeuristicPool:
_renderbufferCoverage
_renderbufferUpdateIndices
_setContextIfPlatformFunc:
_setGenerationEnvironmentForFinding:
_simplifiedDetailsStringSubstituted:plural:
_stateMirrorInitialize
_stateMirrorProcessFunction:functionIndex:
_stateMirrorProcessFunctionAndAnnotate:functionIndex:
_supportedGraphicsAPI
_textureCoverage
_textureCoveredIndices
_textureUpdateIndices
addBufferFunctionIndex:functionIndex:
addFunctionIndex:
addFunctionIndexTextureCreation:textureID:
addFunctionIndexTextureMip:textureID:
addHeuristic:
addObject:
addRenderbufferFunctionIndex:functionIndex:
addTextureFunctionIndex:functionIndex:
appendBoundObjectDescription:target:andShortDesc:
appendDetails:
appendObjectDescription:objectType:objectID:andShortDesc:
appendShortDetails:
appendStatistic:object:
array
availableHeuristicNamesForAPI:
boundObjectDescription:
clearBufferCoverage:
clearBufferFunctionIndexSet:
clearRenderbufferCoverage:
clearRenderbufferCoverage:inRect:
clearRenderbufferFunctionIndexSet:
clearTextureCoverage:target:level:layer:inRect:
clearTextureFunctionIndexSet:
configureForArchive:
constRefToConstraintsData
contextInfoForContext:
countByEnumeratingWithState:objects:count:
coveredFunctionIndexSetForBuffer:
coveredFunctionIndexSetForTexture:
determineTextureUnitLimitsForRendererAtIndex:limits:
deviceInfo
deviceIsSGX535ForContext:
disableAllHeuristics
doesProgramHaveLinkedShader:programID:shaderType:
drawCallsUsingProgram:graphicsEngineID:
enableAllHeuristics
enableHeuristic:
enableStateDeltaGeneratorHeuristics
enabledHeuristicNameSet
endAllBlocks
engine
errorFindingFromFunction:
extensions
firstBindAfterOutOfContextUpdate
floatValue
functionIndexForBlockMode:
getBufferFunctionIndexSet:
getBufferSize:
getHeuristicPool:
getLocalizedString:
getLocalizedString:table:
getObjectLabel:objectType:objectID:
getPerStateMirrorAnnotation
getProgramArrayUsingShader:shaderID:
getRenderbufferFunctionIndexSet:
getShaderIDFromProgram:shaderType:programID:
getShaderType:shaderID:
getSharegroupObjectCoverage:
getStateMirrorContext:
getStateMirrorContextOpenGLFunctionalityLevel:
getStateMirrorManager
getStaticBufferIdArray:
getStaticObjectIDArray:objectType:
getStaticProgramIdArray:
getStaticShaderIdArray:
getStaticTextureIdArray:
getTextureFunctionIndexSet:
graphicsEngineID
graphicsEngineInfoProvider
heuristicBundlesForAPI:
heuristicForIdentifier:forAPI:
heuristicPool
indexLessThanIndex:
init
initNSUnarchiverClassTranslationMappings
initWithCaptureStore:
initWithChar:
initWithConstraints:
initWithEngine:graphicsEngineID:
initWithFloat:
initWithFunctionEnum:
initWithInt:
initWithLong:
initWithLongLong:
initWithPlatform:
initWithShort:
initWithUnsignedChar:
initWithUnsignedInt:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithUnsignedShort:
intValue
isBufferCovered:
isBufferCovered:offset:length:
isBufferDataCompletelyUpdated
isDataRestoreUnnecessaryForFunc:targetArgIndex:objectType:analyzerEngine:
isFrameStatistics
isInefficientStateUpdate
isMultiSampledRenderingEnabledForContext:
isObjectCreatedInCapture:objectType:objectID:
isObjectDataUpdatedInCapture:objectType:objectID:
isObjectFullyPreUpdatedInCapture:objectType:objectID:
isObjectUsedInCapture:objectType:objectID:
isPreSortHeuristic
isRedundantCallOrQuery
isRenderbufferCovered:coverageMask:
isRenderbufferCovered:inRect:coverageMask:
isRenderbufferRetainedBacking:
isTextureCovered:target:level:coverageMask:
isTextureCovered:target:level:inRect:coverageMask:
isTextureCovered:target:level:layer:inRect:coverageMask:
isUniformFullyPreUpdatedInCapture:programID:uniformLoc:
kind
length
limits
localizedKind
localizedStringForKey:value:table:
maxColorAttachmentsForContext:
maxDrawBuffersForContext:
maxTransformFeedbackSeparateAttribsForContext:
maxUniformBufferBindingsForContext:
maxVertexAttribsForContext:
nameForVariable:graphicsEngineID:
newFrameStatisticsFinding
numberWithInt:
numberWithUnsignedLongLong:
objectAtIndex:
objectDescription:objectID:
objectForKey:
platform
platformConstraints
processFunction:blockMode:streamMode:analyzeInserted:findingsHandler:
processFunction:stateMirrorRetCode:
processPostMirrorHeuristics:captureBlockMode:functionIndex:
processPreMirrorHeuristics:captureBlockMode:functionIndex:
rangeOfString:
refToConstraintsData
removeAllObjects
removeBufferCoverage:offset:length:
removeObjectForKey:
renderer
renderers
setClass:forClassName:
setDeviceInfo:
setEmitFunctionComments:
setFirstBindAfterOutOfContextUpdate:
setGraphicsEngineID:
setGraphicsEngineInfoProvider:
setHandler:
setKind:
setObject:forKey:
setRenderbufferRetainedBacking:bWriteable:
setResourceGroupID:
setStateMirrorRetCode:
setWarningLevel:
setWeakFindingPool:
shouldBeRunOnPlatform:
specifyBuffer:size:
specifyRenderbuffer:width:height:
specifyTexture:target:level:width:height:
specifyTexture:target:level:width:height:depth:
stringByReplacingOccurrencesOfString:withString:
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
supportsAPI:
synopsis
tagBufferAsCovered:
tagBufferAsCovered:start:end:
tagRenderbufferAsCovered:coverageMask:
tagRenderbufferAsCovered:coverageMask:bottom:top:left:right:
tagTextureAsCovered:target:level:coverageMask:
tagTextureAsCovered:target:level:coverageMask:bottom:top:left:right:
tagTextureAsCovered:target:level:coverageMask:bottom:top:left:right:lowLayer:highLayer:
traceFunction:error:
unsignedLongLongValue
usePreSortHeuristics
valueForLimit:
DYGLAnalyzerFinding
DYGLAnalyzerErrorFinding
DYGLAnalyzerFindingPunchThrough
DYGLAnalyzerHeuristicPool
DYGLProfileConstraints
DYGLAnalyzerHeuristic
DYGLAnalyzerSharegroupObjectCoverage
DYGLAnalyzerEngine
@16@0:8
c40@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24I28@32
c16@0:8
@28@0:8@16c24
@20@0:8i16
@32@0:8@16Q24
v32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24i28
v20@0:8c16
^{?=iiii{?=ii}{?=iii}{?=i}{?=ii}i^{?}ffiiiiiiiiii{?=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB}}16@0:8
r^{?=iiii{?=ii}{?=iii}{?=i}{?=ii}i^{?}ffiiiiiiiiii{?=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB}}16@0:8
@24@0:8r^{?=iiii{?=ii}{?=iii}{?=i}{?=ii}i^{?}ffiiiiiiiiii{?=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB}}16
{?="meApiVersion"i"meFunctionalityLevel"i"miMaxTexUnits"i"miMaxVtxUnits"i"mMax2DTexDim"{?="miWidth"i"miHeight"i}"mMaxVolTexDim"{?="miWidth"i"miHeight"i"miDepth"i}"mMaxCubTexDim"{?="miDim"i}"mMaxRenderbufferDim"{?="miWidth"i"miHeight"i}"miNumTexFmt"i"mpTexFormats"^{?}"mfMaxPointSize"f"mfMaxLineWidth"f"miMaxMtxPalletteRegisters"i"miMaxClipPlanes"i"miMaxLights"i"miMaxGenericVtxAttribs"i"miMaxVPUniformLocations"i"miMaxFPUniformLocations"i"miMaxColorAttachments"i"miMaxDrawBuffers"i"miMaxTransformFeedbackSeparateAttribs"i"miMaxUniformBufferBindings"i"mExtensions"{?="mbGL_OES_blend_subtract"B"mbGL_OES_compressed_paletted_texture"B"mbGL_OES_depth24"B"mbGL_OES_draw_texture"B"mbGL_OES_framebuffer_object"B"mbGL_OES_mapbuffer"B"mbGL_OES_matrix_palette"B"mbGL_OES_point_size_array"B"mbGL_OES_point_sprite"B"mbGL_OES_read_format"B"mbGL_OES_rgb8_rgba8"B"mbGL_OES_texture_mirrored_repeat"B"mbGL_EXT_texture_lod_bias"B"mbGL_IMG_read_format"B"mbGL_IMG_texture_compression_pvrtc"B"mbGL_IMG_texture_format_BGRA8888"B"mbGL_EXT_texture_filter_anisotropic"B"mbGL_APPLE_framebuffer_multisample"B"mbGL_APPLE_texture_format_BGRA8888"B"mbGL_APPLE_texture_max_level"B"mbGL_EXT_discard_framebuffer"B"mbGL_EXT_read_format_bgra"B"mbGL_OES_blend_equation_separate"B"mbGL_OES_blend_func_separate"B"mbGL_OES_fbo_render_mipmap"B"mbGL_OES_packed_depth_stencil"B"mbGL_OES_stencil8"B"mbGL_EXT_blend_minmax"B"mbGL_APPLE_texture_2D_limited_npot"B"mbGL_OES_stencil_wrap"B"mbGL_APPLE_rgb_422"B"mbGL_EXT_shader_texture_lod"B"mbGL_OES_depth_texture"B"mbGL_OES_standard_derivatives"B"mbGL_OES_texture_float"B"mbGL_OES_texture_half_float"B"mbGL_APPLE_texture_packed_float"B"mbGL_OES_vertex_array_object"B"mbGL_OES_element_index_uint"B"mbGL_APPLE_clip_distance"B"mbGL_OES_texture_half_float_linear"B"mbGL_EXT_debug_label"B"mbGL_EXT_debug_marker"B"mbGL_EXT_occlusion_query_boolean"B"mbGL_EXT_shadow_samplers"B"mbGL_EXT_texture_rg"B"mbGL_EXT_separate_shader_objects"B"mbGL_EXT_color_buffer_half_float"B"mbGL_EXT_color_buffer_float"B"mbGL_APPLE_color_buffer_packed_float"B"mbGL_EXT_shader_framebuffer_fetch"B"mbGL_EXT_texture_storage"B"mbGL_EXT_map_buffer_range"B"mbGL_APPLE_sync"B"mbGL_APPLE_copy_texture_levels"B"mbGL_EXT_sRGB"B"mbGL_EXT_pvrtc_sRGB"B"mbGL_EXT_instanced_arrays"B"mbGL_EXT_draw_instanced"B"mbGL_APPLE_texture_filter_cubic"B"mbGL_APPLE_tile_order_rot"B"mbGL_APPLE_get_framebuffer_texture_target"B"mbGL_KHR_texture_compression_astc_ldr"B"mbGL_APPLE_texture_compression_astc_ldr"B"mbGL_APPLE_texture_compression_astc_lowprecision"B}}
c20@0:8I16
v28@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16I24
v24@0:8@16
@24@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
v28@0:8@16i24
@24@0:8i16i20
v32@0:8@16i24c28
v36@0:8@16i24i28c32
v16@0:8
@"DYGLProfileConstraints"
v28@0:8i16q20
c20@0:8i16
c36@0:8i16q20q28
q20@0:8i16
v20@0:8i16
v36@0:8i16q20q28
v44@0:8i16i20i24q28q36
v52@0:8i16i20i24q28q36q44
v40@0:8i16i20i24i28r^{DYRegionRect=qqqq}32
c32@0:8i16i20i24I28
c64@0:8i16i20i24I28q32q40q48q56
c80@0:8i16i20i24I28q32q40q48q56q64q72
c40@0:8i16i20i24r^{DYRegionRect=qqqq}28I36
c44@0:8i16i20i24i28r^{DYRegionRect=qqqq}32I40
v28@0:8i16r^{DYRegionRect=qqqq}20
c24@0:8i16I20
c56@0:8i16I20q24q32q40q48
c32@0:8i16r^{DYRegionRect=qqqq}20I28
v24@0:8i16c20
@28@0:8@16i24
v24@0:8i16i20
{BufferCoverageContainer="mCoverageMap"{unordered_map<int, GPUTools::DYCoverageElement1D, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::DYCoverageElement1D>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}}
{TextureCoverageContainer="mCoverageMap"{unordered_map<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D, GPUTools::DYTexObjectKeyHash, std::equal_to<GPUTools::DYTexObjectKey>, std::allocator<std::pair<const GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>>>="__table_"{__hash_table<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, std::__unordered_map_hasher<GPUTools::DYTexObjectKey, std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, GPUTools::DYTexObjectKeyHash, std::equal_to<GPUTools::DYTexObjectKey>>, std::__unordered_map_equal<GPUTools::DYTexObjectKey, std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, std::equal_to<GPUTools::DYTexObjectKey>, GPUTools::DYTexObjectKeyHash>, std::allocator<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<GPUTools::DYTexObjectKey, std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, GPUTools::DYTexObjectKeyHash, std::equal_to<GPUTools::DYTexObjectKey>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<GPUTools::DYTexObjectKey, std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, std::equal_to<GPUTools::DYTexObjectKey>, GPUTools::DYTexObjectKeyHash>>="__value_"f}}}}
{RenderbufferCoverageContainer="mCoverageMap"{unordered_map<int, GPUTools::DYCoverageElement2D, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::DYCoverageElement2D>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}}
@"NSMutableDictionary"
@32@0:8@16@24
v44@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24c28c32@?36
v24@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
@24@0:8Q16
i28@0:8Q16I24
I32@0:8Q16i24I28
i24@0:8Q16
I24@0:8Q16
c24@0:8Q16
^v16@0:8
^v24@0:8Q16
B24@0:8Q16
@28@0:8Q16I24
@28@0:8I16Q20
c32@0:8Q16i24I28
c32@0:8Q16I24i28
@32@0:8Q16i24i28
@32@0:8r*16Q24
I16@0:8
I28@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24
{StateMirrorManager<GPUTools::AnnotatedBaseObjectTypes>="_contextStateMirrorMap"{unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_sharegroupStateMirrorMap"{unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_drawableInfoMap"{ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>, unsigned long long>="mInternalIDMap"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_passthrough"{PerStateMirrorAnnotation="LoadURLData"{function<void *(const char *, unsigned long *)>="__f_"{__value_func<void *(const char *, unsigned long *)>="__buf_"{type="__lx"[32C]}"__f_"^v}}"_pManager"^v"_previousUpdateIndices"{set<int, std::less<int>, std::allocator<int>>="__tree_"{__tree<int, std::less<int>, std::allocator<int>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<int, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<int>>="__value_"Q}}}"_contextFlushTimestampSets"{unordered_map<unsigned long long, std::set<unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::set<unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_contextDrawCallInfoMap"{unordered_map<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_lastSharegroupDrawFunctionIndex"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_lastSharegroupClearFunctionIndex"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_lastSharegroupPresentFunctionIndex"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}}"_surfaceBoundsDrawableID"Q"_deviceOrientation"i"_lastFunctionIndex"i}
0]$$
??????
!(7>ELSZ
8;>A
8;>A
JJJJJJJJ
!$'*.147:J=
MMMMMMMM
!$'*.147:M>
St20bad_array_new_length
St9exception
St12length_error
St11logic_error
8;>A
JJJJJJJJ
!$'*.147:J=
X[]adkn
>@CE:::::::HJMPSVY\_
9<?B
RRRRRRRR
!$'*258;?RD
`ehmpux
BEHK???????NQTWZ]`cf
BFO4>
X[]adkn
>@CE:::::::HJMPSVY\_
X[]admp
>@CE:::::::HJMPSVY\_
!&).
(+.5
A A 
A A |
A A 
A A A A 
A A 
A A A A A A A A A A A A A A A A A A A A O
A A 
A A A A A A A A A A A 
A A A A A A A A A A A A U
A A 
A A 
A A $
A A A A 
A A 
A A A n
A A Y
A A A A Q
A A A A 
A A A A A A A A 
A A 7
Q Q Q Q Q Q Q Q Q 
Q Q Q G
Q Q G
Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q 
Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q Q 
Q Q Q Q Q Q Q e
Q Q e
A A A A 
A A A A 
A A A A A A A A A A A A 
A A A A A A A A A A A A A A A A A A A 
A A 
A A A A A A A A A A A A A A A A A A A A A A A A A A 
A A A A A A A A 
A A A A A A A A A A 
A A 
A A A $
A A A A A A A 
A A A 
A A A A A A A A A }
A A A A A A 
A A A A 
A A A A A A N
A A A A 
A A A A 
A A A A A A A A A A A A A A A A 
A A 
A A 
A A 
A A 
A A 
A A 
A A 
A A A A A A A A A A A u
JJJJJJJJJJJJJJJJJJJJJ
& ++
*********************
*$**
**&* 
lllllllllllllllllllll
&&&St9bad_alloc
''''
'''''''
''''
''''''''''''
'''''''''''''
MMMMMMMM
#)M/28;>MA
NSt3__117bad_function_callE
v8@?0
DYTextureUploadedMemory() called with unknown texture function; see DYAUIsTextureUploadFunction(): fenum=%s
basic_string
DYFKUninitializedBufferData
DYFKUninitializedTextureData
DYFKUninitializedColorAttachment
DYFKReadPixelsUninitializedColorAttachment
DYFKMSAAResolveUninitializedColorAttachment
DYFKBlitFramebufferReadFromUninitializedAttachment
DYFKPresentNonLayerBackedRenderbuffer
DYFKPresentNonExistentRenderbuffer
DYFKClearWithRasterizerDiscard
DYFKTransformFeedbackIsOverflowingBuffer
DYFKBufferDataCompletelyUpdated
DYFKTextureImageCompletelyUpdated
DYFKNoBufferData
DYFKStateQueryCallCount
DYFKExcessiveSmallBatchUsage
DYFKHeavyLightUsage
DYFKDrawCallWithZeroPrimitives
DYFKDrawCallWithIncompletePrimitives
DYFKGLErrorInvalidEnum
DYFKGLErrorInvalidValue
DYFKGLErrorInvalidOperation
DYFKGLErrorInvalidFramebufferOperation
DYFKGLErrorStackOverflow
DYFKGLErrorStackUnderflow
DYFKGLErrorOutOfMemory
DYFKGLDeprecated
DYFKBeginQueryQueryIsAlreadyActive
DYFKGetQueryObjectuivQueryIsActive
DYFKObjectIsNotAQueryObject
DYFKQueryIsAlreadyActive
DYFKAttemptToChangeQueryTarget
DYFKEndQueryWithoutActiveQuery
DYFKQueryingOcclusionQueryLaunchedInThisFrame
DYFKQueryStillActiveAtEndOfFrame
DYFKDiscardFramebufferBeforePresent
DYFKDepthTestEnabledWithoutDepthBuffer
DYFKStencilTestEnabledWithoutStencilBuffer
DYFKDrawCallAfterReadPixels
DYFKReadPixelsSuboptimalPacking
DYFKReadPixelsSuboptimalDimensions
DYFKReadPixelsSuboptimalFormat
DYFKNonExistentAttachment
DYFKZeroSizedAttachment
DYFKAttachmentSizeMismatch
DYFKAttachmentNumMultisampleMismatch
DYFKNoAttachments
DYFKTextureLayerAttachmentExceedsDepth
DYFKDepthStencilAttachmentsAreNotSameImage
DYFKClearBufferInvalidBufferType
DYFKDepthAttachmentInternalFormatIsNotDepthRenderable
DYFKStencilAttachmentInternalFormatIsNotStencilRenderable
DYFKColorAttachmentInternalFormatIsNotColorRenderable
DYFKAttachmentInternalFormatIsNotTextureFilterable
DYFKMipmappingWithoutCompleteMipchain
DYFKMipmappingWithNPOT
DYFKMipchainWithoutMipmapping
DYFKRecommendTexParameterSetupBeforeUpload
DYFKInconsistentMipchainSizes
DYFKInconsistentMipchainInternalFormats
DYFKInvalidMipLevelInternalFormat
DYFKTextureInternalFormatIsNotTextureFilterable
DYFKRecommendCompressedTexture
DYFKRecommendCompressedTextureES3
DYFKInvalidWrapParameter
DYFKTextureNotCubeComplete
DYFKMinLODExceedsMaxLOD
DYFKMulticontextTextureUsageWithoutFlush
DYFKMulticontextTextureUsageWithoutRebinding
DYFKMulticontextBufferUsageWithoutFlush
DYFKMulticontextBufferUsageWithoutRebinding
DYFKMulticontextRenderbufferUsageWithoutFlush
DYFKMulticontextRenderbufferUsageWithoutRebinding
DYFKIncorrectMulticontextObjectUsage
DYFKMultithreadedContextUsage
DYFKMultithreadedContextUsageError
DYFKMulticontextTransformFeedbackBufferUsageWithoutEnd
DYFKBindAttribAfterLink
DYFKNonExistentUniform
DYFKExceededUniformArrayBounds
DYFKCompileError
DYFKLinkError
DYFKPipelineValidateError
DYFKIneffectiveSetUniformCall
DYFKUseOfNonExistentProgram
DYFKUseOfUnlinkedProgram
DYFKMonolithicProgramWithProgramSeparable
DYFKUseOfNonExistentPipeline
DYFKUseOfIncompletePipeline
DYFKUseOfPipelineWithUnlinkedProgram
DYFKMissingShaderTypeForPipelineStage
DYFKExtraneousShaderForPipelineStage
DYFKAttachProgramWithoutProgramSeparable
DYFKRedundantUniformLocationQuery
DYFKRedundantAttribLocationQuery
DYFKUseProgramTransformFeedbackActiveNotPaused
DYFKUniformBufferTooSmallForUniformBlock
DYFKTransformFeedbackNoVaryings
DYFKTransformFeedbackWithUnlinkedVaryings
DYFKRedundantCall
DYFKInefficientStateUpdate
DYFKClientSidePerVertexDataAlignmentIssue
DYFKVertexBufferObjectDataAlignmentIssue
DYFKRecommendNotUsingFixed
DYFKRecommendByteSizedColorData
DYFKRecommendCompactTextureCoordinatesData
DYFKRecommendUsingVBO
DYFKRecommendUsingElementBuffers
DYFKRecommendUsingInterleavingForStaticVBOs
DYFKRecommendUsingVAO
DYFKBufferBindingVAODependency
DYFKRecommendShortElementData
DYFKRecommendIndexedRendering
DYFKRecommendFourComponentsForByteData
DYFKRecommendTwoOrFourComponentsForShortData
DYFKRecommendNotUsingSignedByte
DYFKDrawExceededArrayBufferSize
DYFKIndexedDrawExceededArrayBufferSize
DYFKDrawExceededElementArrayBufferSize
DYFKNonExistentBufferUsage
DYFKOverlappingVertexData
DYFKSameVertexData
DYFKDifferentStrides
DYFKIndexedDrawTransformFeedbackActiveNotPaused
DYFKPerFrameStatistics
Number of points rendered
Number of lines rendered
Number of triangles rendered
Number of draw calls
Number of enables
Number of disables
Number of GL calls
Number of platform calls
Number of textures uploaded
Amount of texture memory uploaded
Number of redundant state calls
Number of GL and platform calls
Number of render passes
Number of texture loads
Number of command buffer flushes
Number of GL get calls
Number of GL state/data update calls
Number of GL buffers uploaded
Amount of GL buffer memory uploaded
Number of unique textures used
Number of non mipmapped unique textures used
Number of GL read pixel commands
Number of GL finish commands
Number of MSAA Resolves
Presented Renderbuffer Width
Presented Renderbuffer Height
TextureID
BufferID
RenderbufferID
FramebufferID
ShaderID
ProgramID
ProgramPipelineID
QueryID
VertexArrayObjectID
FunctionEnum
TransformFeedbackBufferID
SamplerObjectID
SyncObjectID
AnalyzerFindingKinds
$ThisVSProg$
The vertex shaders in these programs
$ThisFSProg$
The fragment shaders in these programs
$ThisFBO$
These framebuffers
$ThisRB$
These renderbuffers
$texture$
textures
The vertex shader in this program
The fragment shader in this program
This framebuffer
This renderbuffer
GL_ALPHA_TEST
discard in a fragment shader
GL_SAMPLE_ALPHA_TO_COVERAGE
unsupported OpenGL API version: %d
v28@?0r^v8i16^B20
Texture
Framebuffer
Renderbuffer
Buffer
Shader
Program
Program Pipeline
Vertex Array Object
Query
TransformFeedbackBuffer
Sampler Object
Sync Object
%@ #%d "%@"
%@ #%d
GL_MAX_VERTEX_UNITS_OES
GL_MAX_TEXTURE_SIZE
GL_MAX_3D_TEXTURE_SIZE
GL_MAX_CUBE_MAP_TEXTURE_SIZE
GL_MAX_RENDERBUFFER_SIZE
GL_ALIASED_POINT_SIZE_RANGE
GL_ALIASED_LINE_WIDTH_RANGE
GL_MAX_PALETTE_MATRICES_OES
GL_MAX_CLIP_PLANES
GL_MAX_LIGHTS
GL_MAX_VERTEX_ATTRIBS
GL_MAX_VERTEX_UNIFORM_VECTORS
GL_MAX_FRAGMENT_UNIFORM_VECTORS
GL_MAX_COLOR_ATTACHMENTS
GL_MAX_DRAW_BUFFERS
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
GL_MAX_UNIFORM_BUFFER_BINDINGS
GL_OES_blend_subtract
GL_OES_compressed_paletted_texture
GL_OES_depth24
GL_OES_draw_texture
GL_OES_framebuffer_object
GL_OES_mapbuffer
GL_OES_matrix_palette
GL_OES_point_size_array
GL_OES_point_sprite
GL_OES_read_format
GL_OES_rgb8_rgba8
GL_OES_texture_mirrored_repeat
GL_EXT_texture_lod_bias
GL_IMG_read_format
GL_IMG_texture_compression_pvrtc
GL_IMG_texture_format_BGRA8888
GL_EXT_texture_filter_anisotropic
GL_APPLE_framebuffer_multisample
GL_APPLE_texture_format_BGRA8888
GL_APPLE_texture_max_level
GL_EXT_discard_framebuffer
GL_EXT_read_format_bgra
GL_OES_blend_equation_separate
GL_OES_blend_func_separate
GL_OES_fbo_render_mipmap
GL_OES_packed_depth_stencil
GL_OES_stencil8
GL_EXT_blend_minmax
GL_APPLE_texture_2D_limited_npot
GL_OES_stencil_wrap
GL_APPLE_rgb_422
GL_EXT_shader_texture_lod
GL_OES_depth_texture
GL_OES_standard_derivatives
GL_OES_texture_float
GL_OES_texture_half_float
GL_OES_vertex_array_object
GL_OES_element_index_uint
GL_OES_texture_half_float_linear
GL_EXT_debug_label
GL_EXT_debug_marker
GL_EXT_occlusion_query_boolean
GL_EXT_shadow_samplers
GL_EXT_texture_rg
GL_EXT_separate_shader_objects
GL_EXT_color_buffer_half_float
GL_EXT_color_buffer_float
GL_EXT_shader_framebuffer_fetch
GL_EXT_texture_storage
GL_EXT_map_buffer_range
GL_APPLE_sync
GL_APPLE_copy_texture_levels
GL_APPLE_clip_distance
GL_APPLE_texture_packed_float
GL_APPLE_color_buffer_packed_float
GL_EXT_sRGB
GL_EXT_pvrtc_sRGB
GL_EXT_instanced_arrays
GL_APPLE_texture_filter_cubic
GL_KHR_texture_compression_astc_ldr
GL_APPLE_texture_compression_astc_ldr
__MissingEntry
DYAnalyzerFinding
DYAnalyzerErrorFinding
DYAnalyzerFindingPunchThrough
failed to load heuristic '%@' for graphics API %d
-[DYGLAnalyzerEngine configureForArchive:]
sessionInfo
@16@?0Q8
RedundantState
DataInitialization
vector
decoded function has unknown context or drawable ID, unable to process in state mirror: index=%d, fenum=%s, context=%llu, drawable=%llu, internal=%u
unexpected command
[%d]
unknown or unsupported uniform component type: %s (%d)
v24@?0^v8^v16
i12@?0I8
Unsupported buffer target: 0x%x
_bufferCoverage
.cxx_destruct
TB,N,V_firstBindAfterOutOfContextUpdate
finding
_apiSpecificReasonString:
initWithDouble:
_bufferUpdateIndices
isTextureImageCompletelyUpdated
_firstBindAfterOutOfContextUpdate
setGranularity:
.cxx_construct
addFunctionIndexFBOAttachments:
T@"DYGLProfileConstraints",R,N,V_platformConstraints
containsObject:
UTF8String
functionIndices
_bufferCoveredIndices
isRedundantCall
_constraintsData
_functionIndexSetFromDictionary:forObject:
_newHeuristicPoolWithGraphicsEngineID:
_platformConstraints
_populateHeuristicPool:
_renderbufferCoverage
_renderbufferUpdateIndices
_setContextIfPlatformFunc:
_setGenerationEnvironmentForFinding:
_simplifiedDetailsStringSubstituted:plural:
_stateMirrorInitialize
_stateMirrorProcessFunction:functionIndex:
_stateMirrorProcessFunctionAndAnnotate:functionIndex:
_supportedGraphicsAPI
_textureCoverage
_textureCoveredIndices
_textureUpdateIndices
addBufferFunctionIndex:functionIndex:
addFunctionIndex:
addFunctionIndexTextureCreation:textureID:
addFunctionIndexTextureMip:textureID:
addHeuristic:
addObject:
addRenderbufferFunctionIndex:functionIndex:
addTextureFunctionIndex:functionIndex:
appendBoundObjectDescription:target:andShortDesc:
appendDetails:
appendObjectDescription:objectType:objectID:andShortDesc:
appendShortDetails:
appendStatistic:object:
array
availableHeuristicNamesForAPI:
boundObjectDescription:
clearBufferCoverage:
clearBufferFunctionIndexSet:
clearRenderbufferCoverage:
clearRenderbufferCoverage:inRect:
clearRenderbufferFunctionIndexSet:
clearTextureCoverage:target:level:layer:inRect:
clearTextureFunctionIndexSet:
configureForArchive:
constRefToConstraintsData
contextInfoForContext:
countByEnumeratingWithState:objects:count:
coveredFunctionIndexSetForBuffer:
coveredFunctionIndexSetForTexture:
determineTextureUnitLimitsForRendererAtIndex:limits:
deviceInfo
deviceIsSGX535ForContext:
disableAllHeuristics
doesProgramHaveLinkedShader:programID:shaderType:
drawCallsUsingProgram:graphicsEngineID:
enableAllHeuristics
enableHeuristic:
enableStateDeltaGeneratorHeuristics
enabledHeuristicNameSet
endAllBlocks
engine
errorFindingFromFunction:
extensions
firstBindAfterOutOfContextUpdate
floatValue
functionIndexForBlockMode:
getBufferFunctionIndexSet:
getBufferSize:
getHeuristicPool:
getLocalizedString:
getLocalizedString:table:
getObjectLabel:objectType:objectID:
getPerStateMirrorAnnotation
getProgramArrayUsingShader:shaderID:
getRenderbufferFunctionIndexSet:
getShaderIDFromProgram:shaderType:programID:
getShaderType:shaderID:
getSharegroupObjectCoverage:
getStateMirrorContext:
getStateMirrorContextOpenGLFunctionalityLevel:
getStateMirrorManager
getStaticBufferIdArray:
getStaticObjectIDArray:objectType:
getStaticProgramIdArray:
getStaticShaderIdArray:
getStaticTextureIdArray:
getTextureFunctionIndexSet:
graphicsEngineID
graphicsEngineInfoProvider
heuristicBundlesForAPI:
heuristicForIdentifier:forAPI:
heuristicPool
indexLessThanIndex:
init
initNSUnarchiverClassTranslationMappings
initWithCaptureStore:
initWithChar:
initWithConstraints:
initWithEngine:graphicsEngineID:
initWithFloat:
initWithFunctionEnum:
initWithInt:
initWithLong:
initWithLongLong:
initWithPlatform:
initWithShort:
initWithUnsignedChar:
initWithUnsignedInt:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithUnsignedShort:
intValue
isBufferCovered:
isBufferCovered:offset:length:
isBufferDataCompletelyUpdated
isDataRestoreUnnecessaryForFunc:targetArgIndex:objectType:analyzerEngine:
isFrameStatistics
isInefficientStateUpdate
isMultiSampledRenderingEnabledForContext:
isObjectCreatedInCapture:objectType:objectID:
isObjectDataUpdatedInCapture:objectType:objectID:
isObjectFullyPreUpdatedInCapture:objectType:objectID:
isObjectUsedInCapture:objectType:objectID:
isPreSortHeuristic
isRedundantCallOrQuery
isRenderbufferCovered:coverageMask:
isRenderbufferCovered:inRect:coverageMask:
isRenderbufferRetainedBacking:
isTextureCovered:target:level:coverageMask:
isTextureCovered:target:level:inRect:coverageMask:
isTextureCovered:target:level:layer:inRect:coverageMask:
isUniformFullyPreUpdatedInCapture:programID:uniformLoc:
kind
length
limits
localizedKind
localizedStringForKey:value:table:
maxColorAttachmentsForContext:
maxDrawBuffersForContext:
maxTransformFeedbackSeparateAttribsForContext:
maxUniformBufferBindingsForContext:
maxVertexAttribsForContext:
nameForVariable:graphicsEngineID:
newFrameStatisticsFinding
numberWithInt:
numberWithUnsignedLongLong:
objectAtIndex:
objectDescription:objectID:
objectForKey:
platform
platformConstraints
processFunction:blockMode:streamMode:analyzeInserted:findingsHandler:
processFunction:stateMirrorRetCode:
processPostMirrorHeuristics:captureBlockMode:functionIndex:
processPreMirrorHeuristics:captureBlockMode:functionIndex:
rangeOfString:
refToConstraintsData
removeAllObjects
removeBufferCoverage:offset:length:
removeObjectForKey:
renderer
renderers
setClass:forClassName:
setDeviceInfo:
setEmitFunctionComments:
setFirstBindAfterOutOfContextUpdate:
setGraphicsEngineID:
setGraphicsEngineInfoProvider:
setHandler:
setKind:
setObject:forKey:
setRenderbufferRetainedBacking:bWriteable:
setResourceGroupID:
setStateMirrorRetCode:
setWarningLevel:
setWeakFindingPool:
shouldBeRunOnPlatform:
specifyBuffer:size:
specifyRenderbuffer:width:height:
specifyTexture:target:level:width:height:
specifyTexture:target:level:width:height:depth:
stringByReplacingOccurrencesOfString:withString:
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
supportsAPI:
synopsis
tagBufferAsCovered:
tagBufferAsCovered:start:end:
tagRenderbufferAsCovered:coverageMask:
tagRenderbufferAsCovered:coverageMask:bottom:top:left:right:
tagTextureAsCovered:target:level:coverageMask:
tagTextureAsCovered:target:level:coverageMask:bottom:top:left:right:
tagTextureAsCovered:target:level:coverageMask:bottom:top:left:right:lowLayer:highLayer:
traceFunction:error:
unsignedLongLongValue
usePreSortHeuristics
valueForLimit:
DYGLAnalyzerFinding
DYGLAnalyzerErrorFinding
DYGLAnalyzerFindingPunchThrough
DYGLAnalyzerHeuristicPool
DYGLProfileConstraints
DYGLAnalyzerHeuristic
DYGLAnalyzerSharegroupObjectCoverage
DYGLAnalyzerEngine
@16@0:8
B40@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24I28@32
B16@0:8
@28@0:8@16B24
@20@0:8i16
@32@0:8@16Q24
v32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24i28
v20@0:8B16
^{?=iiii{?=ii}{?=iii}{?=i}{?=ii}i^{?}ffiiiiiiiiii{?=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB}}16@0:8
r^{?=iiii{?=ii}{?=iii}{?=i}{?=ii}i^{?}ffiiiiiiiiii{?=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB}}16@0:8
@24@0:8r^{?=iiii{?=ii}{?=iii}{?=i}{?=ii}i^{?}ffiiiiiiiiii{?=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB}}16
{?="meApiVersion"i"meFunctionalityLevel"i"miMaxTexUnits"i"miMaxVtxUnits"i"mMax2DTexDim"{?="miWidth"i"miHeight"i}"mMaxVolTexDim"{?="miWidth"i"miHeight"i"miDepth"i}"mMaxCubTexDim"{?="miDim"i}"mMaxRenderbufferDim"{?="miWidth"i"miHeight"i}"miNumTexFmt"i"mpTexFormats"^{?}"mfMaxPointSize"f"mfMaxLineWidth"f"miMaxMtxPalletteRegisters"i"miMaxClipPlanes"i"miMaxLights"i"miMaxGenericVtxAttribs"i"miMaxVPUniformLocations"i"miMaxFPUniformLocations"i"miMaxColorAttachments"i"miMaxDrawBuffers"i"miMaxTransformFeedbackSeparateAttribs"i"miMaxUniformBufferBindings"i"mExtensions"{?="mbGL_OES_blend_subtract"B"mbGL_OES_compressed_paletted_texture"B"mbGL_OES_depth24"B"mbGL_OES_draw_texture"B"mbGL_OES_framebuffer_object"B"mbGL_OES_mapbuffer"B"mbGL_OES_matrix_palette"B"mbGL_OES_point_size_array"B"mbGL_OES_point_sprite"B"mbGL_OES_read_format"B"mbGL_OES_rgb8_rgba8"B"mbGL_OES_texture_mirrored_repeat"B"mbGL_EXT_texture_lod_bias"B"mbGL_IMG_read_format"B"mbGL_IMG_texture_compression_pvrtc"B"mbGL_IMG_texture_format_BGRA8888"B"mbGL_EXT_texture_filter_anisotropic"B"mbGL_APPLE_framebuffer_multisample"B"mbGL_APPLE_texture_format_BGRA8888"B"mbGL_APPLE_texture_max_level"B"mbGL_EXT_discard_framebuffer"B"mbGL_EXT_read_format_bgra"B"mbGL_OES_blend_equation_separate"B"mbGL_OES_blend_func_separate"B"mbGL_OES_fbo_render_mipmap"B"mbGL_OES_packed_depth_stencil"B"mbGL_OES_stencil8"B"mbGL_EXT_blend_minmax"B"mbGL_APPLE_texture_2D_limited_npot"B"mbGL_OES_stencil_wrap"B"mbGL_APPLE_rgb_422"B"mbGL_EXT_shader_texture_lod"B"mbGL_OES_depth_texture"B"mbGL_OES_standard_derivatives"B"mbGL_OES_texture_float"B"mbGL_OES_texture_half_float"B"mbGL_APPLE_texture_packed_float"B"mbGL_OES_vertex_array_object"B"mbGL_OES_element_index_uint"B"mbGL_APPLE_clip_distance"B"mbGL_OES_texture_half_float_linear"B"mbGL_EXT_debug_label"B"mbGL_EXT_debug_marker"B"mbGL_EXT_occlusion_query_boolean"B"mbGL_EXT_shadow_samplers"B"mbGL_EXT_texture_rg"B"mbGL_EXT_separate_shader_objects"B"mbGL_EXT_color_buffer_half_float"B"mbGL_EXT_color_buffer_float"B"mbGL_APPLE_color_buffer_packed_float"B"mbGL_EXT_shader_framebuffer_fetch"B"mbGL_EXT_texture_storage"B"mbGL_EXT_map_buffer_range"B"mbGL_APPLE_sync"B"mbGL_APPLE_copy_texture_levels"B"mbGL_EXT_sRGB"B"mbGL_EXT_pvrtc_sRGB"B"mbGL_EXT_instanced_arrays"B"mbGL_EXT_draw_instanced"B"mbGL_APPLE_texture_filter_cubic"B"mbGL_APPLE_tile_order_rot"B"mbGL_APPLE_get_framebuffer_texture_target"B"mbGL_KHR_texture_compression_astc_ldr"B"mbGL_APPLE_texture_compression_astc_ldr"B"mbGL_APPLE_texture_compression_astc_lowprecision"B}}
B20@0:8I16
v28@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16I24
v24@0:8@16
@24@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
v28@0:8@16i24
@24@0:8i16i20
v32@0:8@16i24B28
v36@0:8@16i24i28B32
v16@0:8
@"DYGLProfileConstraints"
v28@0:8i16q20
B20@0:8i16
B36@0:8i16q20q28
q20@0:8i16
v20@0:8i16
v36@0:8i16q20q28
v44@0:8i16i20i24q28q36
v52@0:8i16i20i24q28q36q44
v40@0:8i16i20i24i28r^{DYRegionRect=qqqq}32
B32@0:8i16i20i24I28
B64@0:8i16i20i24I28q32q40q48q56
B80@0:8i16i20i24I28q32q40q48q56q64q72
B40@0:8i16i20i24r^{DYRegionRect=qqqq}28I36
B44@0:8i16i20i24i28r^{DYRegionRect=qqqq}32I40
v28@0:8i16r^{DYRegionRect=qqqq}20
B24@0:8i16I20
B56@0:8i16I20q24q32q40q48
B32@0:8i16r^{DYRegionRect=qqqq}20I28
v24@0:8i16B20
@28@0:8@16i24
v24@0:8i16i20
{BufferCoverageContainer="mCoverageMap"{unordered_map<int, GPUTools::DYCoverageElement1D, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::DYCoverageElement1D>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::DYCoverageElement1D>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}}
{TextureCoverageContainer="mCoverageMap"{unordered_map<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D, GPUTools::DYTexObjectKeyHash, std::equal_to<GPUTools::DYTexObjectKey>, std::allocator<std::pair<const GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>>>="__table_"{__hash_table<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, std::__unordered_map_hasher<GPUTools::DYTexObjectKey, std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, GPUTools::DYTexObjectKeyHash, std::equal_to<GPUTools::DYTexObjectKey>>, std::__unordered_map_equal<GPUTools::DYTexObjectKey, std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, std::equal_to<GPUTools::DYTexObjectKey>, GPUTools::DYTexObjectKeyHash>, std::allocator<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<GPUTools::DYTexObjectKey, std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, GPUTools::DYTexObjectKeyHash, std::equal_to<GPUTools::DYTexObjectKey>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<GPUTools::DYTexObjectKey, std::__hash_value_type<GPUTools::DYTexObjectKey, GPUTools::DYCoverageElement3D>, std::equal_to<GPUTools::DYTexObjectKey>, GPUTools::DYTexObjectKeyHash>>="__value_"f}}}}
{RenderbufferCoverageContainer="mCoverageMap"{unordered_map<int, GPUTools::DYCoverageElement2D, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::DYCoverageElement2D>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::DYCoverageElement2D>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}}
@"NSMutableDictionary"
@32@0:8@16@24
v44@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24B28B32@?36
v24@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
@24@0:8Q16
i28@0:8Q16I24
I32@0:8Q16i24I28
i24@0:8Q16
I24@0:8Q16
B24@0:8Q16
^v16@0:8
^v24@0:8Q16
@28@0:8Q16I24
@28@0:8I16Q20
B32@0:8Q16i24I28
B32@0:8Q16I24i28
@32@0:8Q16i24i28
@32@0:8r*16Q24
I16@0:8
I28@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24
{StateMirrorManager<GPUTools::AnnotatedBaseObjectTypes>="_contextStateMirrorMap"{unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_sharegroupStateMirrorMap"{unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_drawableInfoMap"{ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>, unsigned long long>="mInternalIDMap"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUTools::AnnotatedBaseObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_passthrough"{PerStateMirrorAnnotation="LoadURLData"{function<void *(const char *, unsigned long *)>="__f_"{__value_func<void *(const char *, unsigned long *)>="__buf_"{type="__lx"[24C]}"__f_"^v}}"_pManager"^v"_previousUpdateIndices"{set<int, std::less<int>, std::allocator<int>>="__tree_"{__tree<int, std::less<int>, std::allocator<int>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<int, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<int>>="__value_"Q}}}"_contextFlushTimestampSets"{unordered_map<unsigned long long, std::set<unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::set<unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::set<unsigned long long>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_contextDrawCallInfoMap"{unordered_map<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, std::vector<std::shared_ptr<GPUTools::AnnotatedDrawCallInfo>>>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_lastSharegroupDrawFunctionIndex"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_lastSharegroupClearFunctionIndex"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_lastSharegroupPresentFunctionIndex"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}}"_surfaceBoundsDrawableID"Q"_deviceOrientation"i"_lastFunctionIndex"i}
