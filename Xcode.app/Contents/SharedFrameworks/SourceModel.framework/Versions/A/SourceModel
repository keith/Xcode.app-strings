@(#)PROGRAM:SourceModel  PROJECT:SourceModel-1
SourceModel
SwiftFunctionArgument
_NSRange
SMSourceNodeType
SMSourceModelToken
XCSyntaxType
Syntax Type
xcsynspec
InheritsNodeType
IsMark
IgnoreToken
NameFormat
CaptureTypes
xcode.lang.objc.identifier
xcode.syntax.identifier
NS_ENUM
xcode.lang.objc.string
xcode.lang.objc.interestingOperators
xcode.lang.objc.array.literal.start
xcode.lang.objc.dictionary.literal.start
xcode.lang.objc.expression.literal.start
xcode.lang.objc.property.options.identifier
xcode.lang.objc
xcode.lang.objc.property.options
xcode.lang.objc.method.declarator.args
xcode.lang.c.interestingOperators
xcode.lang.c.preprocessor.identifier
xcode.lang.character
xcode.lang.comment
xcode.lang.comment.singleline
xcode.lang.comment.headerdoc
xcode.lang.comment.headerdoc.singleline.bang
xcode.lang.comment.headerdoc.keywords
xcode.lang.url
xcode.lang.comment.mark
xcode.lang.c.preprocessor.mark.therest
xcode.syntax.preprocessor.keyword
xcode.lang.c.identifier
xcode.lang.c
EntityNameMap
SourceModelParser internal error:%s near character location %ld
xcode.lang.generated.eof
%@ must be an array of strings
Known
KnownMacros.plist
PlainMacros
FunctionMacros
EnumMacros
AVAILABLE_MAC_OS_X_VERSION_
DEPRECATED_IN_MAC_OS_X_VERSION_
v8@?0
DVTTextCheckParseTree
DVTTextValidateParseTree
DVTTextEnableNativeParser
com.apple.dt.SourceModel
SourceModel
TextResponsivenessPerformance
Couldn't load language spec for '%@'
Type
-[SourceModel dirtyRange:%@ lengthDelta:%ld] _dirtyRange was %@
-[SourceModel dirtyRange:lengthDelta:] only adjusting for whitespace change
-[SourceModel dirtyRange:lengthDelta:] _dirtyRange is now %@
-[SourceModel dirtyRange:lengthDelta:] _sourceItems (before): %@
-[SourceModel dirtyRange:lengthDelta:] _dirtyRange after right edge dirtying %@
-[SourceModel dirtyRange:lengthDelta:] _sourceItems (after): %@
--- Before Parse, dirty %@
Buffer = 
Items before = 
--- After Parse, dirty before %@, after %@
Items after = 
-[SourceModel parse]: (before correction) top item range: %@, file range: %@
-[SourceModel parse]: top item range: %@, file range: %@
#### Incremental parse doesn't match
     Full Parse: %@
     Incremental Parse: %@
self
xcode.lang.documentation.markup.directive.block.name
xcode.syntax.declaration.class
xcode.syntax.declaration.actor
xcode.syntax.definition.extension
xcode.syntax.declaration.extension
xcode.syntax.markup.directive.block
xcode.syntax.typedef
xcode.syntax.name.partial
xcode.syntax.name
xcode.syntax.name.tree
xcode.syntax.method.declarator
xcode.syntax.declaration.enum.case
xcode.syntax.definition.macro
xcode.syntax.definition.property
xcode.syntax.declaration.precedencegroup
xcode.syntax.declaration.operator
xcode.syntax.declaration.protocol
xcode.syntax.definition.subscript
xcode.syntax.definition.variable.block
xcode.syntax.comment.doc.parameter.block
xcode.syntax.comment.doc.parameter
xcode.syntax.completionplaceholder
xcode.syntax.preprocessor.include
xcode.syntax.objc.import
xcode.syntax.module.import
xcode.syntax.string
xcode.syntax.character
xcode.syntax.pattern
xcode.syntax.number
super
this
xcode.syntax.entity.start
xcode.syntax.associatedtype
xcode.syntax.markup.heading
xcode.syntax.markup.delimiter
xcode.lang.cpp.identifier
@selector
Keyword scanner "%@" shouldn't have a Tokenizer. Ignoring it.
.interestingOperators
CaseSensitive
WordBreak
CheckPreprocessorKnownMacros
StartChars
Chars
Words
Keyword "%@" (loc=%ld) Reusing old nodeType, Item: %@
Keyword "%@" (loc=%ld) Returning Item: %@
xcode.lang.objcpp.interestingOperators
xcode.lang.objcpp.array.literal.start
xcode.lang.objcpp.dictionary.literal.start
xcode.lang.objcpp.expression.literal.start
xcode.lang.objcpp.property.options.identifier
xcode.lang.objcpp.anoperator
xcode.lang.objcpp
xcode.lang.objcpp.operatorclause
'\n'
'\r'
'\t'
'%c'
'unexpected 0x%lX'
xcode.lang.
'%@'
identifier
languageName
languageSpecification
nativeSourceModelParserClass
documentationAbbreviation
fileDataTypeIdentifiers
fileDataTypes
conformsToLanguageIdentifiers
conformsTo
commentSyntaxes
documentationSyntaxes
supportsIndentation
allowWhitespaceTrimming
requiresHardTabs
indentationTriggers
indentation
trigger
scriptingLanguage
isHidden
usesColorLiteral
usesFileLiteral
usesImageLiteral
usesSymbolImageCodeGeneration
standardTypes
standardClasses
standardFunctions
standardConstants
standardVariables
fileExtensions
prefix
suffix
<%@:%p:'%@'>
plist
LanguageMetadata
Language previously registered with identifier %@. Skipping.
Failed to locate a source code language with identifier %@
token: %@ context: %@
*** endToken: %@
***        contextName: %@
xcode.lang.swift.string
xcode.lang.swift.string.interpolation
xcode.lang.swift.regex.hash
xcode.lang.comment.recursive
xcode.lang.swift.interestingOperators
xcode.lang.swift.preprocessor.keyword
await
case
catch
guardf
return
switch
throw
where
while
xcode.lang.swift
xcode.lang.swift.string.multiline.interpolation
xcode.lang.swift.operator
SourceScannerLogLevel
AltType
StartAtBOL
StartAtColumnZero
Foldable
ShouldTraverse
DirtyPreviousRightEdge
Volatile
Tokenizer
Couldn't load language spec for '%@' (from '%@')
Syntax
%@: "%@"
IncludeRules
nodeToReuse: Location=%ld Scanner:%@
OldItem: %@
*** Reusing item: (loc=%ld) %@
nodeForThisScanner: Location=%ld Scanner:%@
*** nodeForThisScanner found: (loc=%ld) %@
SourceScanner parseOne: Not adding to dirty range: %@
SourceScanner parseOne: Adding to dirty range: %@
SourceScanner parseOne: Pretending to reuse item: %@
%@-%@ %ld (loc=%ld) saving lexed token: %@
%@-%@ %ld (loc=%ld) Going back past: %@
%@-%@ %ld (loc=%ld) Skipping first %ld (%ld) children out of %ld (Range %ld to %ld)
%@-%@ %ld (loc=%ld) Skipping last %ld children out of %ld (Range %ld to %ld)
%@-%@ %ld (loc=%ld) Adding Ignored Token to children: %@
%@-%@ %ld (loc=%ld) Adding Saved Token to children: %@
%@-%@ %ld (loc=%ld) Going to Re-use Saved Token: %@
%@-%@ %ld (loc=%ld) Adding Leftover Token to children: %@
Production: %@
startToken: '%c', langSpec: %@, predictSet: %@
startToken: %d (%@), startProd %@, langSpec: %@, predictSet: %@, interiorPredictSet: %@,%@, interiorProductionRules: %@
Start
Until
Rules
Match
xcode.lang.generated.
AltEnd
AltUntil
Recursive
c32@?0@"SourceModelParserProductionRule"8Q16*24
q24@?0@"SourceModelParserProductionRule"8@"SourceModelParserProductionRule"16
xcode.lang.cpp.interestingOperators
xcode.lang.cpp.anoperator
xcode.lang.cpp
xcode.lang.cpp.operatorclause
%@: currentRuleIndex %lu, completeMatch %d
<%@: %p> (
{%lu, %lu}
xcode.lang.generated.indent
xcode.lang.generated.fullindent
xcode.lang.generated.dedent
Invalid language spec for '%@'
%@ (loc=%ld) %@ Predicts: %s
%@-%@ %ld (loc=%ld) Starting out with a saved token (re-saving): %@
[%@ PARSE] *** (loc=%ld) Got token: %@
%@-%@ %ld (loc=%ld) Saved token matched rule "%@": %@
[%@ PARSE] *** (loc=%ld) calling predictsRule(%@): %@
RuleScanner: Adding to dirty range: %@
[%@ PARSE] *** (loc=%ld) Got Node: %@
[%@ PARSE] *** (loc=%ld) Didn't match
[%@ PARSE] *** (loc=%ld) Didn't Match '\n' - skipping it
%@-%@ %ld (loc=%ld) (possibly) re-saving saved token: %@
[%@ PARSE] *** (loc=%ld) Matched Token: %@
%@-%@ %ld (loc=%ld) Adding saved token to children: %@
%@-%@ %ld (loc=%ld) Got non-volitile token: %@
[%@ PARSE] *** (loc=%ld) Didn't Match Token: %@
RuleScanner: clearing saved tokens (if any)
RuleScanner:      dropping token %@
RuleScanner:      putting indent/dedent back!
Rule "%@" (loc=%ld) Returning Item: %@
%@-%@ %ld (loc=%ld) Failed, Saving node: %@
SMSourceNodeTypesReadWriteQueue
xcode.syntax.plain
xcode.syntax.comment.doc.keyword
xcode.syntax.mark
xcode.syntax.regex
xcode.syntax.regex.number
xcode.syntax.regex.capturename
xcode.syntax.regex.charname
xcode.syntax.regex.other
xcode.syntax.url
xcode.syntax.attribute
xcode.syntax.declaration.type
xcode.syntax.declaration.other
xcode.syntax.entity
xcode.syntax.markup.code
xcode.syntax.markup.emphasis
xcode.syntax.markup.emphasis.strong
xcode.syntax.markup.strikethrough
xcode.syntax.markup.aside.kind
XCLanguage
language
xclangspec
IncludeInMenu
UsesCLikeIndentation
SourceScannerClassName
NumberScanner
RegExScanner
HTMLScanner
HTMLEntityScanner
IndentScanner
Name
.keyword
xcode.lang.objc.interface
xcode.lang.objc.interface.declarator
xcode.lang.objc.implementation
xcode.lang.objc.implementation.declarator
xcode.lang.objc.block
xcode.lang.objc.property.declaration
xcode.lang.objc.method.declaration
xcode.lang.objc.method.definition
xcode.lang.objc.classmethod.declaration
xcode.lang.objc.classmethod.definition
xcode.lang.objc.parenexpr
xcode.lang.objc.bracketexpr
xcode.lang.objc.property.implementation.synthesize
xcode.lang.objc.property.implementation.dynamic
xcode.lang.objc.category.openparen
xcode.lang.objc.categoryclause
xcode.lang.objc.classname
xcode.lang.objc.categoryname
Regex scanner "%@" shouldn't have a Tokenizer. Ignoring it.
Invalid language spec: "%@": 'Chars' given, but not 'StartChars'
MaxLinesPerToken
Warning: language spec %@ contains both CaptureTypes and IncludeRules. IncludedRules will be ignored.
RegEx "%@" (loc=%ld) Returning Item: %@
xcode.lang.generated.emptyline
GenerateEmptyLine
IndentWidth
xcode.lang.python.identifier
%@-%@ %ld (loc=%ld) Computed new context: %@
IndentScanner called as a non-lexer
%@-%@ %ld (loc=%ld) Generated (and saving) empty line: %@
%@-%@ %ld (loc=%ld) Generated (and saving) indent: %@
%@-%@ %ld (loc=%ld) Generated (and saving) dedent: %@
%@-%@ %ld (loc=%ld) EOL, but no indentation change necessary.
Ignore
AltToken
EscapeChar
ParseEndBeforeIncludedRules
-[ScopeScanner nextToken:]: Tossing saved token by mistake: %@
-[ScopeScanner nextToken:]: Tossing a token by mistake: %@
%@-%@ %ld (loc=%ld) Looking at saved token: %@
%@-%@ %ld (loc=%ld) Adding Saved Start Token to children: %@
%@-%@ %ld (loc=%ld) Resaving unwanted End Token: %@
%@-%@ %ld (loc=%ld) Adding End Token to children: %@
%@-%@ %ld (loc=%ld) End Token doesn't match context: %@
-[ScopeScanner parseRecursive]: Surprised to be saving token at end: %@
-[ScopeScanner parseRecursive]: Adding Leftover Token to children before returning: %@
ScopeScanner: Comment, so adding to dirty range: %@
Block "%@" (loc=%ld) Returning Item: %@
%@-%@ %ld (loc=%ld) Looking at Saved Token: %@
%@-%@ %ld (loc=%ld) Remembering Saved End Token for later: %@
%@-%@ %ld (loc=%ld) Adding Saved End Token to children: %@
ScopeScanner Comment, so adding to dirty range: %@
Block (nonRecur) "%@" (loc=%ld) Returning Item: %@
xcspec
DVTSpecificationErrorDomain
Identifier
BasedOn
Description
IsMissing
DVTExtraSourceSpecificationPaths
LanguageSpecifications
Library/Developer/Xcode/Specifications
SourceSpecificationLoading
Generic
couldn't register specification: unknown type '%@'
couldn't register specification: %@
Expected to find a dictionary as the %lu-th element but found %@.
No 'Type' key present, and none can be inferred from the filename suffix.
Language
FileType
PropertyPane
SourceDescription
file at '%@'
Couldn't load '%@'. Reason: %@.
malformed specification of %3$@ %1$@ -- the '%2$@' key must be non-empty
<unknown>
<%@:%p:'%@'%@>
:MISSING
%@SourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), nodeType=%@, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
SourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), lang=%ld, nodeType=%ld, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
IBOutlet
IBOutletCollection
IBAction
IBSegueAction
@end
@private
@public
@protected
@property
__unsafe_unretained
__weak
<EOF>
<unterminated raw regex>
<unterminated raw string>
flex scanner jammed
fatal flex scanner internal error--no action found
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yy_scan_buffer()
out of dynamic memory in yy_scan_bytes()
bad buffer in yy_scan_bytes()
yyset_lineno called with no buffer
yyset_column called with no buffer
xcode.lang.pattern
xcode.lang.swift.anoperator
__consuming
__owned
__shared
Protocol
Self
actor
assignment
associatedtype
associativity
async
borrowing
break
class
consume
consuming
continue
convenience
default
defer
deinit
didSet
discard
distributed
dynamic
dynamicType
each
else
enum
extension
fallthrough
false
fileprivate
final
func
guard
higherThan
import
indirect
infix
init
inout
internal
isolated
lazy
left
lowerThan
macro
mutating
none
nonisolated
nonmutating
open
operator
optional
override
package
postfix
precedence
precedencegroup
private
protocol
public
repeat
required
rethrows
right
safe
sending
some
static
struct
subscript
throws
true
typealias
unowned
unsafe
weak
willSet
@GKInspectable
@IBAction
@IBDesignable
@IBInspectable
@IBOutlet
@IBSegueAction
@NSApplicationMain
@NSCopying
@NSManaged
@Sendable
@UIApplicationMain
@actorIndependent
@asyncHandler
@attached
@autoclosure
@available
@backDeployed
@convention
@discardableResult
@dynamicMemberLookup
@escaping
@freestanding
@frozen
@globalActor
@implementation
@inlinable
@inline
@isolated
@main
@nonobjc
@noreturn
@objc
@objcMembers
@preconcurrency
@requires_stored_property_inits
@resultBuilder
@retroactive
@storageRestrictions
@testable
@unchecked
@unknown
@usableFromInline
@warn_unqualified_access
@_spi
#available
#colorLiteral
#column
#dsohandle
#else
#elseif
#endif
#error
#externalMacro
#file
#fileID
#fileLiteral
#filePath
#function
#imageLiteral
#isolation
#keyPath
#line
#selector
#sourceLocation
#unavailable
#warning
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yyensure_buffer_stack()
out of memory expanding start-condition stack
start-condition stack underflow
/##########
<raw string>
__alignof
__alignof__
__asm
__asm__
__attribute__
__auto_type
__block
__builtin_choose_expr
__builtin_offsetof
__builtin_types_compatible_p
__builtin_va_arg
__complex
__complex__
__const
__const__
__extension__
__func__
__imag
__imag__
__label__
__nonnull
__nullable
__null_unspecified
__real
__real__
__restrict
__restrict__
__signed
__signed__
__thread
__typeof
__typeof__
__volatile
__volatile__
__FUNCTION__
__PRETTY_FUNCTION__
_Bool
_Complex
_Decimal32
_Decimal64
_Decimal128
_Imaginary
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
auto
bool
char
const
double
extern
float
goto
inline
long
register
restrict
short
signed
sizeof
typedef
typeof
union
unsigned
void
volatile
FALSE
NULL
TRUE
_Alignas
_Alignof
_Atomic
_Generic
_Noreturn
_Static_assert
_Thread_local
_cmd
__autoreleasing
__bridge
__bridge_transfer
__bridge_retained
__kindof
__strong
@autoreleasepool
@catch
@class
@compatibility_alias
@defs
@dynamic
@encode
@finally
@import
@interface
@optional
@package
@protocol
@required
@synchronized
@synthesize
@throw
@try
bycopy
byref
oneway
BOOL
IBInspectable
IB_DESIGNABLE
nonnull
nullable
null_unspecified
NS_DURING
NS_ENDHANDLER
NS_HANDLER
NS_VALUERETURN
NS_VOIDRETURN
instancetype
assert
define
defined
elif
endif
error
ifdef
ifndef
include
include_next
line
pragma
unassert
undef
warning
__private_extern__
and_eq
bitand
bitor
compl
concept
const_cast
consteval
constinit
delete
dynamic_cast
explicit
export
friend
module
mutable
namespace
not_eq
or_eq
protected
reinterpret_cast
requires
static_cast
template
typeid
typename
using
virtual
wchar_t
xor_eq
alignof
char16_t
char32_t
char8_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_literal
__is_literal_type
__is_pod
__is_polymorphic
__is_trivial
__is_union
__is_trivially_copyable
__underlying_type
atomic
setter
getter
readonly
readwrite
assign
retain
copy
nonatomic
strong
unsafe_unretained
null_resettable
direct
__covariant
xcode.syntax.name.parameter.function
xcode.syntax.name.parameter.local
xcode.syntax.name.parameter
xcode.syntax.comment.doc
xcode.syntax.comment
xcode.syntax.preprocessor.identifier
xcode.syntax.preprocessor.parameters
xcode.syntax.preprocessor.define
xcode.syntax.declaration.enum
xcode.syntax.protocolclause
xcode.syntax.name.type
xcode.syntax.definition.objc.implementation
xcode.syntax.declaration.objc.interface
xcode.syntax.definition.class
xcode.syntax.declaration.union
xcode.syntax.declaration.struct
xcode.syntax.declaration.property
xcode.syntax.name.other
xcode.syntax.declaration.variable
xcode.syntax.keyword
xcode.syntax.preprocessor
xcode.syntax.identifier.plain
xcode.syntax.identifier.constant.system
xcode.syntax.identifier.constant
xcode.syntax.identifier.macro.system
xcode.syntax.identifier.macro
xcode.syntax.identifier.type.system
xcode.syntax.identifier.type
xcode.syntax.identifier.variable.system
xcode.syntax.identifier.variable
xcode.syntax.identifier.function.system
xcode.syntax.identifier.function
xcode.syntax.identifier.class.system
xcode.syntax.identifier.class
xcode.syntax.declaration.function
xcode.syntax.definition.function
xcode.syntax.declaration.method
xcode.syntax.definition.method
xcode.syntax.assignment
xcode.lang.xml.word
xcode.lang.xml.entity.end
xcode.lang.xml.entity.start
xcode.lang.xml.entity.block
xcode.lang.xml.entity.doctype
xcode.lang.php.inxml
xcode.lang.ruby.inxml
xcode.lang.html.entity.script
xcode.lang.html.entity.style
xcode.lang.html.word
xcode.lang.html.entity.standalone
xcode.lang.html.entity.end
xcode.lang.html.entity.start
xcode.lang.html.entity.block
xcode.lang.markdown.header.6
xcode.lang.markdown.header.5
xcode.lang.markdown.header.4
xcode.lang.markdown.header.3
xcode.lang.markdown.header.2.setext
xcode.lang.markdown.header.1.setext
xcode.lang.markdown.header.2
xcode.lang.markdown.header.1
xcode.lang.module-map.identifier
xcode.lang.module-map.bracketexpr
xcode.lang.module-map.block
xcode.lang.module-map
xcode.lang.swift.repeat
xcode.lang.swift.if
xcode.lang.swift.literal
xcode.lang.c.preprocessor.parameters
xcode.lang.c.preprocessor.define.name
xcode.lang.c.preprocessor.define
xcode.lang.c.preprocessor.systemIncludeString
xcode.lang.c.preprocessor.systemimport
xcode.lang.c.preprocessor.import
xcode.lang.c.preprocessor
xcode.lang.c.number
xcode.lang.objcpp.import
xcode.lang.objcpp.function.declarator.parameters
xcode.lang.objcpp.function.definition
xcode.lang.objcpp.function.declaration
xcode.lang.objcpp.function.declarator
xcode.lang.objcpp.function.name
xcode.lang.objcpp.typedef.end
xcode.lang.objcpp.typedef.function
xcode.lang.objcpp.typedef.name
xcode.lang.objcpp.typedef
xcode.lang.objcpp.protocolclause
xcode.lang.objcpp.protocolname
xcode.lang.objcpp.protocol
xcode.lang.objcpp.classnameclause
xcode.lang.objcpp.classname
xcode.lang.objcpp.categoryclause
xcode.lang.objcpp.categoryname
xcode.lang.objcpp.property.end
xcode.lang.objcpp.property.comma
xcode.lang.objcpp.property.options
xcode.lang.objcpp.property.name.actual
xcode.lang.objcpp.property.name
xcode.lang.objcpp.property.declarator
xcode.lang.objcpp.property.declaration
xcode.lang.objcpp.interface.declarator
xcode.lang.objcpp.interface
xcode.lang.objcpp.externblock
xcode.lang.objcpp.block.toplevel
xcode.lang.objcpp.block
xcode.lang.objcpp.identifier
xcode.lang.objcpp.bracketexpr
xcode.lang.objcpp.parenexpr
xcode.lang.objcpp.expression.attribute
xcode.lang.generated.preprocessor.function.ignore
xcode.lang.generated.preprocessor.ignore
xcode.lang.objcpp.cpp.type.name.specialized
xcode.lang.objcpp.cpp.type.name.qualified
xcode.lang.cpp.expression.attribute.function
xcode.lang.cpp.parenexpr
xcode.lang.objcpp.enumblock
xcode.lang.objcpp.enum.optionalname
xcode.lang.objcpp.protocol.declarator
xcode.lang.objcpp.nsenumblock
xcode.lang.objcpp.nsenum.declarator
xcode.lang.objcpp.method.colon
xcode.lang.objcpp.method.declarator.moreargs
xcode.lang.objcpp.method.declarator.args
xcode.lang.objcpp.method.declarator
xcode.lang.objcpp.method.declaration
xcode.lang.objcpp.classmethod.declarator
xcode.lang.objcpp.classmethod.declaration
xcode.lang.objcpp.parameter.name.local
xcode.lang.objcpp.partialname
xcode.lang.objcpp.basetype
xcode.lang.objcpp.structblock
xcode.lang.objcpp.enum.declarator
xcode.lang.cpp.enum.declarator
xcode.lang.objc.enum.declarator
xcode.lang.c.enum.declarator
xcode.lang.objcpp.union.declarator
xcode.lang.cpp.union.declarator
xcode.lang.objc.union.declarator
xcode.lang.c.union.declarator
xcode.lang.objcpp.struct.declarator
xcode.lang.cpp.struct.declarator
xcode.lang.objc.struct.declarator
xcode.lang.c.struct.declarator
xcode.lang.swift.string.multiline
xcode.lang.string
@propertyWrapper
xcode.lang.swift.commaAndEOL
xcode.lang.swift.enum.case.assignment
xcode.lang.swift.guard
xcode.lang.swift.conformance.start
xcode.lang.swift.whereclause
xcode.lang.swift.identifier
xcode.lang.swift.identifier.attribute
xcode.lang.swift.doccomment.star
xcode.lang.swift.doccomment.slash
xcode.lang.swift.openAngle
xcode.lang.swift.bracketexpr
xcode.lang.swift.preprocessor.line.start
xcode.lang.swift.preprocessor.line
xcode.lang.swift.precedencegroup
xcode.lang.swift.operator.precedence
xcode.lang.swift.parenexpr.complex.type
xcode.lang.swift.name.type
xcode.lang.swift.typealias.type
xcode.lang.swift.typealias.name
xcode.lang.swift.typealias
xcode.lang.swift.block
xcode.lang.swift.enum.block
xcode.lang.swift.struct.block
xcode.lang.swift.class.block
xcode.lang.swift.actor.block
xcode.lang.swift.initializer.declarator
xcode.lang.swift.enum.declarator
xcode.lang.swift.struct.declarator
xcode.lang.swift.extension.declarator
xcode.lang.swift.protocol.declarator
xcode.lang.swift.class.declarator
xcode.lang.swift.actor.declarator
xcode.lang.swift.enum.case.more
xcode.lang.swift.enum.case.declarator
xcode.lang.swift.enum.case.name.clause
xcode.lang.swift.enum.case.name
xcode.lang.swift.enum.case.associatedvalue
xcode.lang.swift.enum
xcode.lang.swift.struct
xcode.lang.swift.extension
xcode.lang.swift.protocol
xcode.lang.swift.class
xcode.lang.swift.actor
xcode.lang.swift.declaration.name
xcode.lang.swift.name.conformance
xcode.lang.swift.conformance
xcode.lang.swift.double
xcode.lang.swift.integer
xcode.lang.swift.catch.start
xcode.lang.swift.catch
xcode.lang.swift.switch.default
xcode.lang.swift.switch.case.start
xcode.lang.swift.switch.case
xcode.lang.swift.switch.start
xcode.lang.swift.switch
xcode.lang.swift.pattern.case
xcode.lang.swift.while.start
xcode.lang.swift.while
xcode.lang.swift.if.start
xcode.lang.swift.if.else.part
xcode.lang.swift.if.part
xcode.lang.swift.for.start
xcode.lang.swift.for
xcode.lang.swift.subscript
xcode.lang.swift.property.namelist
xcode.lang.swift.property.name
xcode.lang.swift.property.more
xcode.lang.swift.property.tuple
xcode.lang.swift.property
xcode.lang.swift.variable.global.namelist
xcode.lang.swift.variable.global.name
xcode.lang.swift.variable.global.more
xcode.lang.swift.variable.global.tuple
xcode.lang.swift.variable.global
xcode.lang.swift.variable.didSet.block
xcode.lang.swift.variable.willSet.block
xcode.lang.swift.variable.init.block
xcode.lang.swift.variable.set.block
xcode.lang.swift.variable.get.block
xcode.lang.swift.variable.block
xcode.lang.swift.variable.case.var
xcode.lang.swift.variable.case.let
xcode.lang.swift.variable.assignment.simple
xcode.lang.swift.variable.assignment
xcode.lang.swift.variable.type
xcode.lang.swift.variable.namelist
xcode.lang.swift.variable.name
xcode.lang.swift.variable.simple
xcode.lang.swift.variable.more
xcode.lang.swift.variable.tuple
xcode.lang.swift.variable.name.identifier
xcode.lang.swift.variable
xcode.lang.swift.import.modulepath.more
xcode.lang.swift.import.modulepath
xcode.lang.swift.import
xcode.lang.swift.genericsclause.general
xcode.lang.swift.genericsclause
xcode.lang.swift.initializer.init
xcode.lang.swift.initializer
xcode.lang.swift.macro.declarator
xcode.lang.swift.macro
xcode.lang.swift.method
xcode.lang.swift.function.parameters.end
xcode.lang.swift.function.parameter.therest
xcode.lang.swift.function.return
xcode.lang.swift.function.parameter.name
xcode.lang.swift.function.parameter.label
xcode.lang.swift.function.parameter
xcode.lang.swift.function.parameters.more
xcode.lang.swift.function.parameters.start
xcode.lang.swift.function.parameters
xcode.lang.swift.function.name
xcode.lang.swift.function.declarator
xcode.lang.swift.function
xcode.lang.completionplaceholder
xcode.lang.swift.parenexpr
xcode.lang.swift.parenexpr.complex
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
T@"NSArray",R,C
T#,R,V_nativeSourceModelParserClass
T@"NSArray",R,N
T@"<SMSourceBufferProvider>",V_sourceBufferProvider
T@"NSString",R,C,V_languageName
T@"NSArray",&,N,V_endProductions
Tc,R,V_isHidden
T@"NSArray",&,N,V_interiorProductionRules
Tq,R,V_uniqueId
T@"NSArray",&,N,V_tokenInteriorPredictSet
_conformedToLanguageIdentifiers
T@"NSArray",R,C,V_blockDocumentationCircumfixes
_fileExtensions
T@"NSArray",R,C,V_fileExtensions
_isAtColumnZero
T@"NSArray",R,C,V_lineDocumentationPrefixes
_itemIsVolatile
T@"NSArray",R,C,V_standardConstants
_langId
T@"NSArray",R,C,V_standardVariables
_productionRule
T@"NSArray",R,V_includedRules
_shouldTraverse
T@"NSDictionary",R,V_syntaxRules
_string
T@"NSString",C,V_nameFormat
_unused
T@"NSString",R,C,V_documentationAbbreviation
arrayWithArray:
T@"NSString",R,V_identifier
containsObject:
T@"NSString",R,V_superSpecIdentifier
dealloc
T@"SMLanguageSpecification",R,N,V_langSpec
doingBatchEdit:
T@"SMLanguageSpecification",R,N,V_startProduction
initAsMissingSpecificationProxyWithIdentifier:name:description:
T@"SMSourceModelItem",&,V_sourceItems
initWithString:
T@"SMSourceSpecification",R,V_superSpecification
isAtBOL
T@"SourceModelParserProductionRule",R,N
isClassIdentifierInSourceModel:
T@"SourceScanner",&,V_scanner
isInIncludeStatementAtLocation:
T@"SourceScanner",R,V_scanner
isObjCGenericInstanceMethodItem
TQ,N,V_temporaryLexerFlags
methodDeclaratorItemAtLocation:
TQ,R,N,V_ignoreNodes
nextGlobalToken
objCCategoryClauseSpecification
Tc,N,V_inheritsNodeType
objCImplementationSpecification
Tc,N,V_isBlock
reduceToProduction:stackOffset:
Tc,N,V_itemIsVolatileAnchor
scanner
Tc,R,N
Tc,R,N,V_epsilonMatch
setInputStream:
Tc,R,N,V_repeatable
specificationTypePathExtensions
Tc,R,N,V_saveToken
startProduction
Tc,R,V_allowMultiple
tokenForString:
Tc,R,V_ignoreToken
uppercaseString
Tc,R,V_inheritsNodeType
valueWithRange:
.cxx_destruct
T@"NSArray",R,C,V_standardTypes
T#,R,V_scannerClass
T@"NSDictionary",R,V_properties
T@"CharStream",&,V_inputStream
T@"SourceModelParserInteriorProductionRule",&,N,V_nextCandidate
T@"NSArray",&,N,V_endTokens
Tc,R,V_optional
T@"NSArray",&,N,V_nodeInteriorPredictSet
_altIgnoreToken
T@"NSArray",R,C,V_blockCommentCircumfixes
_endProductions
T@"NSArray",R,C,V_fileDataTypeIdentifiers
_hashValueValid
T@"NSArray",R,C,V_lineCommentPrefixes
_isMark
T@"NSArray",R,C,V_standardClasses
_itemSyntaxType
T@"NSArray",R,C,V_standardFunctions
_parent
T@"NSArray",R,N,V_predictSet
_ranges
T@"NSArray",R,V_indentationTriggers
_sourceCodeLanguageForMetadata:
T@"NSMutableArray",&,N,V_children
_tokens
T@"NSString",R
allKeys
T@"NSString",R,C,V_identifier
bundleForClass:
T@"NSString",R,V_string
curChar
T@"SMLanguageSpecification",R
dirtyRightEdge:
T@"SMLanguageSpecification",R,N,V_production
enumerateDescendentsUsingBlock:
T@"SMLanguageSpecification",R,V_langSpec
initWithPropertyListDictionary:
T@"SMSourceModelItem",N,V_parent
interfaceDeclarationAtLocation:
T@"SourceModelParserProductionRule",&,N,V_productionRule
isBlock
T@"SourceModelParserProductionRule",R,N,V_prodRule
isEqualToArray:
T@"SourceScanner",R,V_lexer
isObjCBlockItem
TQ,N,V_lexerMode
lowercaseString
TQ,R,N
mutableChildren
TS,R,V_firstChar
nextIndentForlocation:inString:
Tc,N,V_ignoreToken
objCClassItemNameInSourceModel:
Tc,N,V_interiorRuleMayHaveTemporaryLexerFlags
rangeBetweenChildrenAtLocation:
Tc,N,V_itemIsVolatile
removeAllRanges
Tc,N,V_shouldTraverse
scopeProduction
Tc,R,N,V_completeMatch
setIgnoreToken:
Tc,R,N,V_optional
setSourceItems:
Tc,R,N,V_saveEndToken
standardClasses
Tc,R,V_acceptToken
stringByAppendingPathComponent:
Tc,R,V_allowWhitespaceTrimming
tokenForSymbol:
Tc,R,V_includeInMenu
usesFileLiteral
Tc,R,V_isMark
Tc,R,V_requiresHardTabs
Tc,R,V_scriptingLanguage
Tc,R,V_supportsIndentation
Tc,R,V_usesCLikeIndentation
Tc,R,V_usesColorLiteral
Tc,R,V_usesFileLiteral
Tc,R,V_usesImageLiteral
Tc,R,V_usesSymbolImageCodeGeneration
Tc,V_isDoingBatchEdit
Ti,R,N,V_startToken
Ti,R,N,V_token
Tq,N,V_itemToken
Tq,R,V_langId
Tq,R,V_token
Ts,N,V_itemSyntaxType
T{_NSRange=QQ},V_dirtyRange
T{_NSRange=QQ},V_relativeLocation
URLsForResourcesWithExtension:subdirectory:
_BOLIsKnown
_SeenOneCharAtBOL
_SeenWhitespaceAtBOL
_acceptChildrenInScope:atIndex:stackRange:node:
_acceptToken
_allowMultiple
_allowWhitespaceTrimming
_altInheritsNodeType
_altIsSimpleToken
_altNodeType
_atEndOfParseRange
_beginLexerMode:
_blockCommentCircumfixes
_blockDocumentationCircumfixes
_branchToReuseInScope:atLocation:node:
_builtUpNameForItem:mutableNameRanges:
_builtUpNameForSubTree:mutableNameRanges:
_cachedIndexInParent
_canSkipCurrentRule
_capacity
_captureNodeTypes
_caseSensitive
_cheapString
_checkPreprocessorKnownMacros
_childEnclosingLocation:
_children
_commentSyntaxes
_completeMatch
_computeBOL
_conformedToLanguages
_contextMaskForAncestorIncludingSelf:
_count
_currentLocation
_currentRuleIndex
_currentToken
_dirty
_dirtyRange
_discardChildrenInScope:fromIndex:toLocation:
_documentationAbbreviation
_documentationSyntaxes
_endLexerMode:
_endTokens
_entityMap
_eoftoken
_epsilonMatch
_fileDataTypeIdentifiers
_firstChar
_firstLeafItem
_generateEmptyLine
_getNextToken:temporaryFlags:
_getRawStringDelimLength
_hasInnerState
_hashValue
_hoistUpTrailingIgnoreNodesFromNode:toArray:
_identifier
_ignoreNodes
_ignoreToken
_includeInMenu
_includedRules
_indentForLineWithRange:inString:
_indentWidth
_indentationTriggers
_inheritsNodeType
_initializeProductionStateForCurrentToken:tokenInteriorPredictSet:tokenInteriorPredictSetCount:
_initializeProductionStateForNode:scopeProdRule:nodeInteriorPredictSet:nodeInteriorPredictSetCount:
_innerState
_inputStream
_interiorProductionRules
_interiorRuleMayHaveTemporaryLexerFlags
_invertedOtherSet
_isAtBOL
_isBlock
_isDoingBatchEdit
_isFoldable
_isHidden
_isIdentifier
_isOpaque
_isPython
_isSimpleToken
_isURL
_isVolatile
_isVolatileAnchor
_itemIsVolatileAnchor
_itemToken
_keywords
_langSpec
_langToken
_languageName
_languageSpecification
_languageSpecificationIdentifier
_lastLeafItem
_lexer
_lexerMode
_lineCommentPrefixes
_lineDocumentationPrefixes
_maxLinesPerToken
_nameFormat
_nativeParser
_nativeSourceModelParserClass
_needToDirtyRightEdges
_needsAdjustNodeType
_nextCandidate
_nextPreorderItem
_nodeInteriorPredictSet
_nodePredictSetBuffer
_nodePredictSetBufferSize
_nodeStack
_nodeType
_objectForKeyIgnoringInheritance:
_optional
_parse:inScope:node:outOfBand:depth:
_parseOutOfBand:
_parseRange
_pathExtensionsToTypesRegistry
_predictSet
_previousTokenRange
_prodRule
_production
_productionState
_properties
_realString
_realStringLength
_reduceToProduction:stackRange:node:inScope:
_regExes
_registerSpecificationProxiesOfType:fromDictionaryOrArray:inDirectory:bundle:sourceDescription:
_relativeLocation
_repeatable
_replaceItemsWithinRange:newArray:index:
_requiresHardTabs
_resetLexerWithInputString:
_reuseAndSkipAhead:index:location:
_reuseScopeNode:using:
_rules
_saveEndToken
_saveToken
_savedBottomItem
_savedItems
_scanner
_scannerClass
_scriptingLanguage
_setLocationAfterNode:
_setRawStringDelimLength:
_shouldRecurseIntoDirectoryNamed:ofType:
_sourceBufferProvider
_sourceItems
_stackOffset
_standardClasses
_standardConstants
_standardFunctions
_standardTypes
_standardVariables
_startAtBOL
_startAtColumnZero
_startChar
_startProduction
_startSet
_startToken
_stringBuffer
_stringByRemovingLeadingAndTrailingCharacters:fromString:
_subSpecificationsOfSpecification:
_subrange
_superSpecIdentifier
_superSpecification
_supportsIndentation
_syntaxRules
_temporaryLexerFlags
_token
_tokenInteriorPredictSet
_tokenPredictSetBuffer
_tokenPredictSetBufferSize
_tokenSet
_topLevelSourceItem
_typesToSpecTypeBaseClassesRegistry
_uniqueId
_uniqueIdForIdentifier:
_usesCLikeIndentation
_usesColorLiteral
_usesFileLiteral
_usesImageLiteral
_usesSymbolImageCodeGeneration
_validProductionStates
_validToken
_wordBreak
acceptToken
actionForEndToken:inContext:inputStream:
addArrayOfStrings:
addBlockItemsInTypeList:fromItem:toArray:
addCharactersInString:
addChild:
addChildren:
addChildrenFromArray:inRange:
addGlobalTokenName:
addIdentifierItemsFromItem:toArray:
addIndex:
addIndexes:
addIndexesInRange:
addItemsInTypeList:fromItem:toArray:
addObject:
addObjectsFromArray:
addRange:
addRangesFromArray:
addTokenForString:
adjoiningItemAtLocation:
adjustForWhitespaceChangeInRange:changeInLength:
adjustRelativeRange:changeInLength:shouldDirty:
allAlternateRules
allDescendantItemsConformingToSpecification:
allObjects
allTokens
allValues
allocWithZone:
allowMultiple
allowWhitespaceTrimming
alphanumericCharacterSet
altEndRules
altToken
ancestorContextMask
ancestorOfItem:inTypeList:
appendFormat:
appendString:
array
arrayForKey:
arrayFromArrayOfDicts:withKey:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
assignAllParents:
assignParents:
attributesOfItemAtPath:error:
availableKeywords
blockCommentCircumfixes
blockDepth
blockDocumentationCircumfixes
blockItemAtLocation:
boolForKey:
boolValue
buffer
bufferLen
bufferLoc
builtUpNameForItem:nameRanges:
canTokenize
caseInsensitiveCompare:
caseSensitive
characterAtIndex:
characterConstantAtLocation:
characterIsMember:
characterSetWithCharactersInString:
childAdjoiningLocation:
childEnclosingLocation:
children
classAtLocation:
classItems
clearAdjustedNodeTypes
commentAtLocation:
commentBlockItems
compare:
completeMatch
completionPlaceholderItemAtLocation:
componentsSeparatedByString:
computeContext:inString:forLocation:
conformedToLanguages
conformsToAnySpecificationInSet:
conformsToLanguage:
conformsToSpecification:
conformsToSpecificationForIdentifier:
containerItems
containersAtLocation:
containingObjCClassItem
containsToken:
contentsOfDirectoryAtPath:error:
contextArray
contextMask
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createTerminalNodeForToken:scopeProductionRule:
currentProduction
decimalDigitCharacterSet
defaultManager
description
descriptionWithLocale:
dictionary
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithContentsOfURL:
dictionaryWithObject:forKey:
dictionaryWithObjectsAndKeys:
diffableDescription
dirty
dirtyRange
dirtyRange:changeInLength:
docCommentAtLocation:
documentationAbbreviation
dumpContext
enableNativeParser
enclosingBlock
enclosingItemAtLocation:
endProductions
endRules
endTokens
enumCaseDeclaratorItemAtLocation:
enumerateIdentifierItemsInRange:usingBlock:
enumerateIdentifierItemsInRange:withStop:usingBlock:
enumerateIdentifierItemsInRelativeRange:usingBlock:
enumerateIdentifierItemsInRelativeRange:withStop:usingBlock:
enumerateItemsInRange:usingBlock:
enumerateItemsInRelativeRange:usingBlock:
enumerateItemsUsingBlock:
epsilonMatch
errorWithDomain:code:userInfo:
escapeChar
exceptionWithName:reason:userInfo:
fileDataTypeIdentifiers
fileExistsAtPath:isDirectory:
fileExtensions
fileType
firstChar
firstChildItemWithLangId:
firstDescendantItemConformingToSpecification:
firstIndex
firstItemInLineageOfType:
firstMatchInString:options:range:
firstObject
firstPrecedingAttributeOfItem:
firstRange
foldableBlockItemForLineAtLocation:
foldableBlockItemForLocation:
followingItem
followingSiblingItem
functionOrMethodAtLocation:
functionOrMethodDefinitionAtLocation:
functionsAndMethodItems
getCharacters:range:
getIndexes:maxCount:inIndexRange:
getMacros:forName:
getObjects:range:
getRanges:count:
globalTokenNames
hasPrefix:
hasSavedItems
hasSuffix:
hash
homeDirectoryForCurrentUser
identOrKeywordItemAtLocation:
identifier
identifierCompare:
identifierForUniqueId:
identifierItemsFromItem:
ignoreNodes
ignoreRules
ignoreToken
includeInMenu
includeStatementAtLocation:
includedRules
indentForItem:
indentationTriggers
indexGreaterThanIndex:
indexOfChildAfterLocation:
indexOfChildAfterRelativeLocation:orAtLocation:
indexOfChildAtLocation:
indexOfChildBeforeLocation:
indexOfObjectIdenticalTo:
indexOfProductionMatchingNode:inProduction:
indexOfProductionMatchingToken:inProduction:
indexOfRange:
indexOfRangeContainingOrFollowing:
indexOfRangeContainingOrPreceding:
indexOfRangeFollowing:
indexOfRangePreceding:
indexSet
indexSetWithIndexesInRange:
indexesOfObjectsPassingTest:
inheritsNodeType
init
initWithArrayOfStrings:caseSensitive:
initWithCapacity:
initWithContentsOfFile:
initWithData:encoding:
initWithDictionary:
initWithLanguageDescription:
initWithLanguageSpecification:
initWithObjects:count:
initWithProduction:saveToken:
initWithProductionRule:optional:repeatable:
initWithProductionRule:stackOffset:
initWithPropertyListDictionary:language:
initWithRange:
initWithRange:language:token:nodeType:
initWithRanges:count:
initWithRealString:subrange:
initWithSourceBufferProvider:
initWithStartProduction:langSpec:
initWithStartToken:langSpec:predictSet:
initWithString:acceptToken:
initWithToken:saveToken:
initialize
initializeLanguageSpecification:
initializeLexerModes
initializeProductionsForLanguageSpecification:
innerDescription:showSelf:
innerRange
inputStream
insertObject:atIndex:
insertObjects:atIndexes:
insertRange:atIndex:
integerForKey:
integerValue
interiorProductionRules
interiorRuleMayHaveTemporaryLexerFlags
invert
invertedSet
isARCTypeQualifierInSourceModel:
isActionKeywordInSourceModel:
isAncestorOf:
isAtColumnZero
isDeclarationOrDefinitionAtLocation:
isDoingBatchEdit
isEnumMacro:
isEqual:
isEqualToString:
isFoldedInLayoutManager:
isFunctionMacro:
isHidden
isIdentifier
isInCharacterConstantAtLocation:
isInCommentAtLocation:
isInDocCommentAtLocation:
isInIdentifierAtLocation:
isInKeywordAtLocation:
isInNumberConstantAtLocation:
isInPatternConstantAtLocation:
isInPlainCodeAtLocation:
isInPreprocessorStatementAtLocation:
isInStringConstantAtLocation:
isInTokenizableCodeAtLocation:
isIncompletionPlaceholderAtLocation:
isItemAngleExpression:
isItemBraceExpression:
isItemBracketExpression:
isItemClosedAngleExpression:
isItemClosedBraceExpression:
isItemClosedBracketExpression:
isItemClosedParenExpression:
isItemContainer:
isItemDeclarationOrDefinition:
isItemDeclaratorName:
isItemDictionaryLiteral:
isItemExpression:startingWith:
isItemExpression:startingWith:endingWith:
isItemForStatement:
isItemInPreprocessorStatement:
isItemObjectLiteral:
isItemParenExpression:
isItemSemanticBlock:
isItemUnclosedHTMLEntity:
isKeyword
isKeyword:inSourceModel:
isKindOfSpecification:
isMark
isMissingSpecificationProxy
isObjCAtEndKeywordInSourceModel:
isObjCAtPrivateKeywordInSourceModel:
isObjCAtPropertyKeywordInSourceModel:
isObjCAtProtectedKeywordInSourceModel:
isObjCAtPublicKeywordInSourceModel:
isObjCBracketExpressionItem
isObjCCategoryImplementationItem
isObjCCategoryInterfaceItem
isObjCCategoryOpenParenItem
isObjCClassExtensionItem
isObjCClassMethodDeclarationItem
isObjCClassMethodImplementationItem
isObjCGenericClassMethodItem
isObjCGenericClassMethodSpecification
isObjCGenericInstanceMethodSpecification
isObjCGenericMethodItem
isObjCGenericMethodSpecification
isObjCIdentifierItem
isObjCImplementationDeclaratorItem
isObjCImplementationItem
isObjCInstanceMethodDeclarationItem
isObjCInstanceMethodImplementationItem
isObjCInterfaceDeclaratorItem
isObjCInterfaceItem
isObjCNamedCategoryImplementationDeclaratorItem
isObjCNamedCategoryInterfaceDeclaratorItem
isObjCPropertyDeclarationItem
isObjCStrictImplementationItem
isObjCStrictInterfaceItem
isObjCSuperKeywordInSourceModel:
isOpaque
isOutletCollectionKeywordInSourceModel:
isOutletKeywordInSourceModel:
isPlainMacro:
isPostfixExpressionAtLocation:
isSegueActionKeywordInSourceModel:
isSimpleToken
isSwiftIdentifierOrKeyword
isSwiftPreprocessorKeyword
isTypeIdentifier
isVolatile
isVolatileAnchor
item:hasPrecedingToken:
itemAtLocation:conformingToSpecification:
itemAtLocation:inTypeList:
itemAtLocation:ofType:
itemIsVolatile
itemIsVolatileAnchor
itemNameAtLocation:inTypeList:nameRanges:scopeRange:
itemSyntaxType
itemToken
itemsAtLocation:inTypeList:
langId
langSpec
language
languageName
languageSpecification
lastObject
lastRange
leadingWhitespacePositionsForLine:
length
lexer
lexerKeywords
lexerMode
lineCommentPrefixes
lineDocumentationPrefixes
lineRangeForCharacterRange:
lineRangeForRange:
loadAndCacheDefaultSourceCodeLanguages
loadAndCacheSourceCodeLanguageWithPlist:
localizedSpecificationTypeName
localizedStringForKey:value:table:
location
locationOfNewlineFrom:searchBackwards:
locationOfNextNewlineFrom:until:inStream:
mainBundle
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
matchEndNode:
matchEndToken:
matchNode:
matchNode:currentStackTop:
matchToken:
matchToken:currentStackTop:
matchesToken:
matchingIgnoreRule:
matchingRule:isAltRule:
methodNameForItem:nameRanges:
methodOrFunctionRangeAtRange:
missingSpecificationForIdentifier:
moduleImportStatementAtLocation:
mutableCopy
mutableCopyWithZone:
name
nameCompare:
nameFormat
nameInSourceModel:
nameOfItem:nameRanges:scopeRange:
nativeSourceModelParserClass
needToDirtyRightEdges
needsAdjustNodeType
newlineCharacterSet
nextCandidate
nextChar
nextCharSkippingWhitespace
nextItem
nextPreorderItem
nextToken:initialToken:until:outputRange:subItems:
nextToken:withContext:initialToken:outputRange:
nextToken:withItem:inTree:withContext:initialToken:insideBlock:range:dirtyRange:reusedToken:
nextToken:withItemArray:inTree:withContext:initialToken:range:dirtyRange:
nodeForThisScanner:atLocation:inputStream:
nodeInteriorPredictSet
nodeToReuse:withContext:forScanner:inputStream:
nodeType
nodeType:conformsToNodeTypeNamed:
nodeType:conformsToNodeTypesInList:
nodeTypeListForTypeNames:
nodeTypeNameForId:
nodeTypesCount
normalize
normalizedRangeArray
numberConstantAtLocation:
numberOfChildren
numberWithInteger:
numberWithShort:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objCAtDynamicSpecification
objCAtSynthesizeSpecification
objCBlockSpecification
objCBracketExpressionSpecification
objCCategoryItemNameInSourceModel:
objCCategoryNameSpecification
objCCategoryOpenParenSpecification
objCClassMethodDeclarationSpecification
objCClassMethodImplementationSpecification
objCClassNameSpecification
objCDeclaratorItemAtLocation:
objCIdentifierSpecification
objCImplementationDeclaratorSpecification
objCInstanceMethodDeclarationSpecification
objCInstanceMethodImplementationSpecification
objCInterfaceDeclaratorSpecification
objCInterfaceSpecification
objCMethodNameForItem:nameRanges:
objCParenthesisExpressionSpecification
objCPropertyDeclarationSpecification
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectLiteralItemAtLocation:
objectsAtIndexes:
offsetBy:
optional
orderedSetWithArray:
parameterDescriptionItems
parameterNameItemFromItem:
parenItemAtLocation:
parenLikeItemAtLocation:
parent
parse
parse:withContext:initialToken:inputStream:range:dirtyRange:
parse:withContext:inputString:range:dirtyRange:
parseEndBeforeIncludedRules
parseIncludedRules:inTree:withContext:initialToken:inputStream:range:dirtyRange:
parseOneIncludedRule:inTree:withContext:initialToken:inputStream:range:dirtyRange:isLexing:reusedToken:
parseRecursive:withContext:depth:inputStream:range:dirtyRange:
parseRule:into:acceptToken:
path
pathExtension
patternConstantAtLocation:
peekChar
peekCharSkippingWhitespace
peekCharacterInSet:
placeholderItemsFromItem:
precedingItem
precedingSiblingItem
predictSet
predictsRule:inputStream:
preprocessorStatementAtLocation:
previousAncestralSibling
previousItem
prodRule
production
productionRule
properties
propertyList
raise:format:
range
rangeAtIndex:
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:range:
rangeOfString:
rangeValue
rawNodeType
reason
recursive
registerMissingSpecification:forIdentifier:
registerNodeTypeNamed:
registerSourceCodeLanguageFromMetadataPlist:
registerSourceCodeLanguageWithMetadata:
registerSpecificationOrProxy:
registerSpecificationProxiesFromPropertyListsInDirectory:recursively:
registerSpecificationProxiesFromPropertyListsInDirectory:recursively:inBundle:
registerSpecificationProxyFromPropertyList:
registerSpecificationTypeBaseClass:
registeredSpecifications
regularExpressionWithPattern:options:error:
relativeLocation
removeAllIndexes
removeAllObjects
removeIndex:
removeLastObject
removeObjectAtIndex:
removeObjectsAtIndexes:
removeObjectsInRange:
removeRangeAtIndex:
removeRangesAtIndexes:
repeatable
replaceObjectAtIndex:withObject:
replaceObjectsInRange:withObjectsFromArray:
replaceObjectsInRange:withObjectsFromArray:range:
replaceRangeAtIndex:withRange:
requiresHardTabs
resetWithProductionRule:stackOffset:
resourcePath
saveEndToken
saveItem:
saveToken
savedItem
scannerClass
scheduleLazyInvalidationForRange:
scriptingLanguage
searchForAndRegisterAllAvailableSpecifications
semanticItemAtLocation:
setArray:
setCaseSensitive:
setDirty:
setDirtyRange:
setEnableNativeParser:
setEndProductions:
setEndTokens:
setGlobalToken:forString:
setInheritsNodeType:
setInteriorProductionRules:
setInteriorRuleMayHaveTemporaryLexerFlags:
setIsBlock:
setIsDoingBatchEdit:
setIsOpaque:
setIsSimpleToken:
setItemIsVolatile:
setItemIsVolatileAnchor:
setItemSyntaxType:
setItemToken:
setLangId:
setLexerMode:
setLocation:
setMutableChildren:
setNameFormat:
setNeedToDirtyRightEdges:
setNeedsAdjustNodeType:
setNextCandidate:
setNodeInteriorPredictSet:
setNodeType:
setObject:forKey:
setObject:forKeyedSubscript:
setParent:
setProductionRule:
setRange:
setRange:atIndex:
setRealString:subrange:
setRelativeLocation:
setScanner:
setShouldTraverse:
setSourceBufferProvider:
setString:
setTemporaryLexerFlags:
setToken:
setTokenInteriorPredictSet:
setValue:forKey:
setVersion:
setVolatile:
setVolatileAnchor:
setWithArray:
setWithCapacity:
setWithObject:
shortValue
shouldTraverse
simpleDescription
sort
sortUsingComparator:
sortedRangeArray
sourceBufferProvider
sourceCodeLanguageForFileDataTypeIdentifier:
sourceCodeLanguageForFileExtension:
sourceCodeLanguageForLanguageSpecificationIdentifier:
sourceCodeLanguageWithIdentifier:
sourceCodeLanguages
sourceItems
sourceModelInfoForSourceModelItem:matchingAnnotationKindMask:
sourceModelItemWithRange:language:token:nodeType:
specification
specificationForIdentifier:
specificationIdentifier
specificationLineage
specificationRegistry
specificationRegistryName
specificationType
specificationTypeBaseClass
specificationsForIdentifiers:
standardConstants
standardFunctions
standardTypes
standardUserDefaults
standardVariables
startChar
startString
startToken
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingTrailingOption
stringByStandardizingPath
stringConstantAtLocation:
stringForKey:
stringLen
stringLoc
stringWithCString:encoding:
stringWithCapacity:
stringWithFormat:
stringWithRange:
stringWithString:
stringWithUTF8String:
strongToStrongObjectsMapTable
subSpecifications
subarrayWithRange:
substringFromIndex:
substringToIndex:
substringWithRange:
superSpecIdentifier
superSpecification
supportsIndentation
syntaxRules
syntaxType
tags
temporaryLexerFlags
textOfItem:
token
tokenForRule:initialToken:inputStream:newLocation:
tokenForString:forRange:subItems:
tokenInteriorPredictSet
tossSavedItems:withContext:
typeDeclarationAtLocation:
typeWithIdentifier:
unionSet:
uniqueId
unsignedIntValue
updateContext:forReusedNode:inputStream:
usesCLikeIndentation
usesColorLiteral
usesImageLiteral
usesNativeParser
usesSymbolImageCodeGeneration
validate
valueForKey:
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
wordRangeInString:fromIndex:
wordRangeInString:fromIndex:allowNonWords:
SMSyntaxTypeSpecification
ObjCSourceModelParser
CSourceModelParser
HTMLEntityScanner
SourceModelParser
KnownMacros
CharStream
SMSourceModel
Deprecated
RevlockIBDVTSourceModelAdditions
KeywordScanner
ObjCPlusPlusSourceModelParser
SMSourceTokens
ParserStringAdditions
SMSourceCodeLanguage
NSCopying
CheapReusableSubstring
HTMLScanner
SwiftSourceModelParser
SourceScanner
SourceModelParserInteriorProductionRule
SourceModelParserProductionRule
ScopeRule
ScopeToken
CPlusPlusSourceModelParser
NumberScanner
SourceModelParserProductionState
RangeArrayAdditions
RangeArray
MutableRangeArray
ScannerRule
RuleScanner
SMSourceNodeTypes
SMLanguageSpecification
FormerIBDVTFoundationAdditions
RegExScanner
IndentScanner
ScopeScannerRule
ScopeScanner
SMSourceSpecification
SMSourceModelItem
FormerIDEDVTSourceModelAdditions
StringBuffer
#16@0:8
@16@0:8
@24@0:8@16
c16@0:8
v24@0:8@16
v16@0:8
@"NSString"
@32@0:8^{?=ii{?=qq}*i}16^@24
Q16@0:8
c32@0:8^{?=ii{?=qq}*i}16Q24
v24@0:8Q16
@32@0:8@16q24
@72@0:8@16@24q32@40{_NSRange=QQ}48^{_NSRange=QQ}64
@"NSDictionary"
@64@0:8@16@24@32{_NSRange=QQ}40^{_NSRange=QQ}56
@56@0:8@16@24@32q40q48
Q40@0:8@16@24Q32
Q40@0:8@16Q24Q32
v40@0:8@16@24Q32
v48@0:8@16@24@32Q40
@56@0:8@16{_NSRange=QQ}24@40@48
Q56@0:8@16Q24{_NSRange=QQ}32@48
@40@0:8@16Q24@32
Q32@0:8@16@24
v32@0:8@16@24
@"SMLanguageSpecification"
{?="tokenType"i"tokenAltType"i"charRange"{?="location"q"length"q}"lexeme"*"outOfBand"i}
{?="location"q"length"q}
{_NSRange="location"Q"length"Q}
@"NSMutableArray"
@"NSMutableIndexSet"
@32@0:8@16@24
c24@0:8@16
S16@0:8
Q24@0:8@16
Q28@0:8Q16c24
@32@0:8{_NSRange=QQ}16
@"StringBuffer"
@"CheapReusableSubstring"
@"SMSourceModelItem"
v20@0:8c16
{_NSRange=QQ}24@0:8@16
v40@0:8{_NSRange=QQ}16q32
@24@0:8Q16
q24@0:8@16
@32@0:8@16^@24
@32@0:8@16^q24
@32@0:8Q16^q24
@32@0:8Q16@24
v24@0:8@?16
v40@0:8{_NSRange=QQ}16@?32
v48@0:8{_NSRange=QQ}16*32@?40
@40@0:8@16^@24^{_NSRange=QQ}32
@48@0:8Q16^q24^@32^{_NSRange=QQ}40
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
c24@0:8Q16
v40@0:8^q16@24@32
c28@0:8@16S24
c32@0:8@16S24S28
c32@0:8@16q24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSObject<SMSourceBufferProvider>"
@"CharStream"
@"SourceScanner"
@"SourceModelParser"
@32@0:8@16Q24
c32@0:8q16@24
q48@0:8@16@24q32^{_NSRange=QQ}40
{_NSRange=QQ}32@0:8@16Q24
@"NSCharacterSet"
@"SMSourceTokens"
q16@0:8
v32@0:8q16@24
@28@0:8@16c24
@"NSMutableSet"
@24@0:8^{_NSZone=}16
@"NSArray"
@40@0:8@16{_NSRange=QQ}24
v40@0:8@16{_NSRange=QQ}24
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
i40@0:8@16@24@32
v40@0:8@16@24@32
@48@0:8@16@24@32@40
q92@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72c80*84
v80@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72
{_NSRange=QQ}36@0:8@16Q24c32
@32@0:8@16c24c28
@"SourceModelParserProductionRule"
@"SourceModelParserInteriorProductionRule"
i24@0:8@16
Q28@0:8i16@20
@36@0:8i16@20@28
c20@0:8i16
@20@0:8i16
i16@0:8
v24@0:8q16
s16@0:8
v20@0:8s16
@24@0:8i16c20
q40@0:8@16^{_NSRange=QQ}24^@32
v32@0:8@16Q24
c28@0:8i16Q20
c32@0:8@16Q24
@32@0:8^@16^Q24
@"SourceModelParserProductionState"
{_NSRange=QQ}24@0:8Q16
@32@0:8r^@16Q24
@32@0:8r^{_NSRange=QQ}16Q24
Q32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v32@0:8^{_NSRange=QQ}16Q24
^{_NSRange=QQ}
v32@0:8Q16@24
v40@0:8{_NSRange=QQ}16Q32
v40@0:8Q16{_NSRange=QQ}24
c24@0:8q16
@"NSSet"
q80@0:8@16@24@32@40q48{_NSRange=QQ}56^{_NSRange=QQ}72
s24@0:8@16
@20@0:8s16
c28@0:8s16@20
^q24@0:8@16
c28@0:8s16r^q20
@24@0:8q16
Q40@0:8Q16Q24@32
q56@0:8@16q24Q32^{_NSRange=QQ}40^@48
q40@0:8{_NSRange=QQ}16@32
Q32@0:8Q16@24
v36@0:8@16@24c32
q48@0:8@16q24@32Q40
q92@0:8@16@24@32@40q48c56{_NSRange=QQ}60^{_NSRange=QQ}76*84
@32@0:8q16*24
@56@0:8@16@24@32@40@48
c32@0:8@16@24
@36@0:8@16c24@28
v24@0:8#16
@40@0:8@16@24@32
@"SMSourceSpecification"
@52@0:8{_NSRange=QQ}16q32q40s48
v44@0:8{_NSRange=QQ}16q32C40
Q20@0:8c16
[32S]
So13SMSourceModelC
SSSg
$sSY
So8NSNumberC
$ss21_ObjectiveCBridgeableP
ySo17SMSourceModelItemCGG
ySo17SMSourceModelItemCGG
ySo17SMSourceModelItemCG
callLabel
range
expressionRange
rawValue
location
length
RawValue
_ObjectiveCType
@(#)PROGRAM:SourceModel  PROJECT:SourceModel-1
1H_v
 ; B
SourceModel
SwiftFunctionArgument
_NSRange
SMSourceNodeType
SMSourceModelToken
XCSyntaxType
Syntax Type
xcsynspec
InheritsNodeType
IsMark
IgnoreToken
NameFormat
CaptureTypes
xcode.lang.objc.identifier
xcode.syntax.identifier
NS_ENUM
xcode.lang.objc.string
xcode.lang.objc.interestingOperators
xcode.lang.objc.array.literal.start
xcode.lang.objc.dictionary.literal.start
xcode.lang.objc.expression.literal.start
xcode.lang.objc.property.options.identifier
xcode.lang.objc
xcode.lang.objc.property.options
xcode.lang.objc.method.declarator.args
xcode.lang.c.interestingOperators
xcode.lang.c.preprocessor.identifier
xcode.lang.character
xcode.lang.comment
xcode.lang.comment.singleline
xcode.lang.comment.headerdoc
xcode.lang.comment.headerdoc.singleline.bang
xcode.lang.comment.headerdoc.keywords
xcode.lang.url
xcode.lang.comment.mark
xcode.lang.c.preprocessor.mark.therest
xcode.syntax.preprocessor.keyword
xcode.lang.c.identifier
xcode.lang.c
EntityNameMap
SourceModelParser internal error:%s near character location %ld
xcode.lang.generated.eof
%@ must be an array of strings
Known
KnownMacros.plist
PlainMacros
FunctionMacros
EnumMacros
AVAILABLE_MAC_OS_X_VERSION_
DEPRECATED_IN_MAC_OS_X_VERSION_
v8@?0
DVTTextCheckParseTree
DVTTextValidateParseTree
DVTTextEnableNativeParser
com.apple.dt.SourceModel
SourceModel
TextResponsivenessPerformance
Couldn't load language spec for '%@'
Type
-[SourceModel dirtyRange:%@ lengthDelta:%ld] _dirtyRange was %@
-[SourceModel dirtyRange:lengthDelta:] only adjusting for whitespace change
-[SourceModel dirtyRange:lengthDelta:] _dirtyRange is now %@
-[SourceModel dirtyRange:lengthDelta:] _sourceItems (before): %@
-[SourceModel dirtyRange:lengthDelta:] _dirtyRange after right edge dirtying %@
-[SourceModel dirtyRange:lengthDelta:] _sourceItems (after): %@
--- Before Parse, dirty %@
Buffer = 
Items before = 
--- After Parse, dirty before %@, after %@
Items after = 
-[SourceModel parse]: (before correction) top item range: %@, file range: %@
-[SourceModel parse]: top item range: %@, file range: %@
#### Incremental parse doesn't match
     Full Parse: %@
     Incremental Parse: %@
self
xcode.lang.documentation.markup.directive.block.name
xcode.syntax.declaration.class
xcode.syntax.declaration.actor
xcode.syntax.definition.extension
xcode.syntax.declaration.extension
xcode.syntax.markup.directive.block
xcode.syntax.typedef
xcode.syntax.name.partial
xcode.syntax.name
xcode.syntax.name.tree
xcode.syntax.method.declarator
xcode.syntax.declaration.enum.case
xcode.syntax.definition.macro
xcode.syntax.definition.property
xcode.syntax.declaration.precedencegroup
xcode.syntax.declaration.operator
xcode.syntax.declaration.protocol
xcode.syntax.definition.subscript
xcode.syntax.definition.variable.block
xcode.syntax.comment.doc.parameter.block
xcode.syntax.comment.doc.parameter
xcode.syntax.completionplaceholder
xcode.syntax.preprocessor.include
xcode.syntax.objc.import
xcode.syntax.module.import
xcode.syntax.string
xcode.syntax.character
xcode.syntax.pattern
xcode.syntax.number
super
this
xcode.syntax.entity.start
xcode.syntax.associatedtype
xcode.syntax.markup.heading
xcode.syntax.markup.delimiter
xcode.lang.cpp.identifier
@selector
Keyword scanner "%@" shouldn't have a Tokenizer. Ignoring it.
.interestingOperators
CaseSensitive
WordBreak
CheckPreprocessorKnownMacros
StartChars
Chars
Words
Keyword "%@" (loc=%ld) Reusing old nodeType, Item: %@
Keyword "%@" (loc=%ld) Returning Item: %@
xcode.lang.objcpp.interestingOperators
xcode.lang.objcpp.array.literal.start
xcode.lang.objcpp.dictionary.literal.start
xcode.lang.objcpp.expression.literal.start
xcode.lang.objcpp.property.options.identifier
xcode.lang.objcpp.anoperator
xcode.lang.objcpp
xcode.lang.objcpp.operatorclause
'\n'
'\r'
'\t'
'%c'
'unexpected 0x%lX'
xcode.lang.
'%@'
identifier
languageName
languageSpecification
nativeSourceModelParserClass
documentationAbbreviation
fileDataTypeIdentifiers
fileDataTypes
conformsToLanguageIdentifiers
conformsTo
commentSyntaxes
documentationSyntaxes
supportsIndentation
allowWhitespaceTrimming
requiresHardTabs
indentationTriggers
indentation
trigger
scriptingLanguage
isHidden
usesColorLiteral
usesFileLiteral
usesImageLiteral
usesSymbolImageCodeGeneration
standardTypes
standardClasses
standardFunctions
standardConstants
standardVariables
fileExtensions
prefix
suffix
<%@:%p:'%@'>
plist
LanguageMetadata
Language previously registered with identifier %@. Skipping.
Failed to locate a source code language with identifier %@
token: %@ context: %@
*** endToken: %@
***        contextName: %@
xcode.lang.swift.string
xcode.lang.swift.string.interpolation
xcode.lang.swift.regex.hash
xcode.lang.comment.recursive
xcode.lang.swift.interestingOperators
xcode.lang.swift.preprocessor.keyword
await
case
catch
guardf
return
switch
throw
where
while
xcode.lang.swift
xcode.lang.swift.string.multiline.interpolation
xcode.lang.swift.operator
SourceScannerLogLevel
AltType
StartAtBOL
StartAtColumnZero
Foldable
ShouldTraverse
DirtyPreviousRightEdge
Volatile
Tokenizer
Couldn't load language spec for '%@' (from '%@')
Syntax
%@: "%@"
IncludeRules
nodeToReuse: Location=%ld Scanner:%@
OldItem: %@
*** Reusing item: (loc=%ld) %@
nodeForThisScanner: Location=%ld Scanner:%@
*** nodeForThisScanner found: (loc=%ld) %@
SourceScanner parseOne: Not adding to dirty range: %@
SourceScanner parseOne: Adding to dirty range: %@
SourceScanner parseOne: Pretending to reuse item: %@
%@-%@ %ld (loc=%ld) saving lexed token: %@
%@-%@ %ld (loc=%ld) Going back past: %@
%@-%@ %ld (loc=%ld) Skipping first %ld (%ld) children out of %ld (Range %ld to %ld)
%@-%@ %ld (loc=%ld) Skipping last %ld children out of %ld (Range %ld to %ld)
%@-%@ %ld (loc=%ld) Adding Ignored Token to children: %@
%@-%@ %ld (loc=%ld) Adding Saved Token to children: %@
%@-%@ %ld (loc=%ld) Going to Re-use Saved Token: %@
%@-%@ %ld (loc=%ld) Adding Leftover Token to children: %@
Production: %@
startToken: '%c', langSpec: %@, predictSet: %@
startToken: %d (%@), startProd %@, langSpec: %@, predictSet: %@, interiorPredictSet: %@,%@, interiorProductionRules: %@
Start
Until
Rules
Match
xcode.lang.generated.
AltEnd
AltUntil
Recursive
B32@?0@"SourceModelParserProductionRule"8Q16^B24
q24@?0@"SourceModelParserProductionRule"8@"SourceModelParserProductionRule"16
xcode.lang.cpp.interestingOperators
xcode.lang.cpp.anoperator
xcode.lang.cpp
xcode.lang.cpp.operatorclause
%@: currentRuleIndex %lu, completeMatch %d
<%@: %p> (
{%lu, %lu}
xcode.lang.generated.indent
xcode.lang.generated.fullindent
xcode.lang.generated.dedent
Invalid language spec for '%@'
%@ (loc=%ld) %@ Predicts: %s
%@-%@ %ld (loc=%ld) Starting out with a saved token (re-saving): %@
[%@ PARSE] *** (loc=%ld) Got token: %@
%@-%@ %ld (loc=%ld) Saved token matched rule "%@": %@
[%@ PARSE] *** (loc=%ld) calling predictsRule(%@): %@
RuleScanner: Adding to dirty range: %@
[%@ PARSE] *** (loc=%ld) Got Node: %@
[%@ PARSE] *** (loc=%ld) Didn't match
[%@ PARSE] *** (loc=%ld) Didn't Match '\n' - skipping it
%@-%@ %ld (loc=%ld) (possibly) re-saving saved token: %@
[%@ PARSE] *** (loc=%ld) Matched Token: %@
%@-%@ %ld (loc=%ld) Adding saved token to children: %@
%@-%@ %ld (loc=%ld) Got non-volitile token: %@
[%@ PARSE] *** (loc=%ld) Didn't Match Token: %@
RuleScanner: clearing saved tokens (if any)
RuleScanner:      dropping token %@
RuleScanner:      putting indent/dedent back!
Rule "%@" (loc=%ld) Returning Item: %@
%@-%@ %ld (loc=%ld) Failed, Saving node: %@
SMSourceNodeTypesReadWriteQueue
xcode.syntax.plain
xcode.syntax.comment.doc.keyword
xcode.syntax.mark
xcode.syntax.regex
xcode.syntax.regex.number
xcode.syntax.regex.capturename
xcode.syntax.regex.charname
xcode.syntax.regex.other
xcode.syntax.url
xcode.syntax.attribute
xcode.syntax.declaration.type
xcode.syntax.declaration.other
xcode.syntax.entity
xcode.syntax.markup.code
xcode.syntax.markup.emphasis
xcode.syntax.markup.emphasis.strong
xcode.syntax.markup.strikethrough
xcode.syntax.markup.aside.kind
XCLanguage
language
xclangspec
IncludeInMenu
UsesCLikeIndentation
SourceScannerClassName
NumberScanner
RegExScanner
HTMLScanner
HTMLEntityScanner
IndentScanner
Name
.keyword
xcode.lang.objc.interface
xcode.lang.objc.interface.declarator
xcode.lang.objc.implementation
xcode.lang.objc.implementation.declarator
xcode.lang.objc.block
xcode.lang.objc.property.declaration
xcode.lang.objc.method.declaration
xcode.lang.objc.method.definition
xcode.lang.objc.classmethod.declaration
xcode.lang.objc.classmethod.definition
xcode.lang.objc.parenexpr
xcode.lang.objc.bracketexpr
xcode.lang.objc.property.implementation.synthesize
xcode.lang.objc.property.implementation.dynamic
xcode.lang.objc.category.openparen
xcode.lang.objc.categoryclause
xcode.lang.objc.classname
xcode.lang.objc.categoryname
Regex scanner "%@" shouldn't have a Tokenizer. Ignoring it.
Invalid language spec: "%@": 'Chars' given, but not 'StartChars'
MaxLinesPerToken
Warning: language spec %@ contains both CaptureTypes and IncludeRules. IncludedRules will be ignored.
RegEx "%@" (loc=%ld) Returning Item: %@
xcode.lang.generated.emptyline
GenerateEmptyLine
IndentWidth
xcode.lang.python.identifier
%@-%@ %ld (loc=%ld) Computed new context: %@
IndentScanner called as a non-lexer
%@-%@ %ld (loc=%ld) Generated (and saving) empty line: %@
%@-%@ %ld (loc=%ld) Generated (and saving) indent: %@
%@-%@ %ld (loc=%ld) Generated (and saving) dedent: %@
%@-%@ %ld (loc=%ld) EOL, but no indentation change necessary.
Ignore
AltToken
EscapeChar
ParseEndBeforeIncludedRules
-[ScopeScanner nextToken:]: Tossing saved token by mistake: %@
-[ScopeScanner nextToken:]: Tossing a token by mistake: %@
%@-%@ %ld (loc=%ld) Looking at saved token: %@
%@-%@ %ld (loc=%ld) Adding Saved Start Token to children: %@
%@-%@ %ld (loc=%ld) Resaving unwanted End Token: %@
%@-%@ %ld (loc=%ld) Adding End Token to children: %@
%@-%@ %ld (loc=%ld) End Token doesn't match context: %@
-[ScopeScanner parseRecursive]: Surprised to be saving token at end: %@
-[ScopeScanner parseRecursive]: Adding Leftover Token to children before returning: %@
ScopeScanner: Comment, so adding to dirty range: %@
Block "%@" (loc=%ld) Returning Item: %@
%@-%@ %ld (loc=%ld) Looking at Saved Token: %@
%@-%@ %ld (loc=%ld) Remembering Saved End Token for later: %@
%@-%@ %ld (loc=%ld) Adding Saved End Token to children: %@
ScopeScanner Comment, so adding to dirty range: %@
Block (nonRecur) "%@" (loc=%ld) Returning Item: %@
xcspec
DVTSpecificationErrorDomain
Identifier
BasedOn
Description
IsMissing
DVTExtraSourceSpecificationPaths
LanguageSpecifications
Library/Developer/Xcode/Specifications
SourceSpecificationLoading
Generic
couldn't register specification: unknown type '%@'
couldn't register specification: %@
Expected to find a dictionary as the %lu-th element but found %@.
No 'Type' key present, and none can be inferred from the filename suffix.
Language
FileType
PropertyPane
SourceDescription
file at '%@'
Couldn't load '%@'. Reason: %@.
malformed specification of %3$@ %1$@ -- the '%2$@' key must be non-empty
<unknown>
<%@:%p:'%@'%@>
:MISSING
%@SourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), nodeType=%@, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
SourceModelItem<%0lx>: %@ (%ld, %ld), rel=(%ld, %ld), lang=%ld, nodeType=%ld, tok=%@, inherit=%lc, ignore=%lc, block=%lc, volatile=%lc, dirty=%lc, children = %ld
IBOutlet
IBOutletCollection
IBAction
IBSegueAction
@end
@private
@public
@protected
@property
__unsafe_unretained
__weak
<EOF>
<unterminated raw regex>
<unterminated raw string>
flex scanner jammed
fatal flex scanner internal error--no action found
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yy_scan_buffer()
out of dynamic memory in yy_scan_bytes()
bad buffer in yy_scan_bytes()
yyset_lineno called with no buffer
yyset_column called with no buffer
xcode.lang.pattern
xcode.lang.swift.anoperator
__consuming
__owned
__shared
Protocol
Self
actor
assignment
associatedtype
associativity
async
borrowing
break
class
consume
consuming
continue
convenience
default
defer
deinit
didSet
discard
distributed
dynamic
dynamicType
each
else
enum
extension
fallthrough
false
fileprivate
final
func
guard
higherThan
import
indirect
infix
init
inout
internal
isolated
lazy
left
lowerThan
macro
mutating
none
nonisolated
nonmutating
open
operator
optional
override
package
postfix
precedence
precedencegroup
private
protocol
public
repeat
required
rethrows
right
safe
sending
some
static
struct
subscript
throws
true
typealias
unowned
unsafe
weak
willSet
@GKInspectable
@IBAction
@IBDesignable
@IBInspectable
@IBOutlet
@IBSegueAction
@NSApplicationMain
@NSCopying
@NSManaged
@Sendable
@UIApplicationMain
@actorIndependent
@asyncHandler
@attached
@autoclosure
@available
@backDeployed
@convention
@discardableResult
@dynamicMemberLookup
@escaping
@freestanding
@frozen
@globalActor
@implementation
@inlinable
@inline
@isolated
@main
@nonobjc
@noreturn
@objc
@objcMembers
@preconcurrency
@requires_stored_property_inits
@resultBuilder
@retroactive
@storageRestrictions
@testable
@unchecked
@unknown
@usableFromInline
@warn_unqualified_access
@_spi
#available
#colorLiteral
#column
#dsohandle
#else
#elseif
#endif
#error
#externalMacro
#file
#fileID
#fileLiteral
#filePath
#function
#imageLiteral
#isolation
#keyPath
#line
#selector
#sourceLocation
#unavailable
#warning
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yyensure_buffer_stack()
out of memory expanding start-condition stack
start-condition stack underflow
/##########
<raw string>
__alignof
__alignof__
__asm
__asm__
__attribute__
__auto_type
__block
__builtin_choose_expr
__builtin_offsetof
__builtin_types_compatible_p
__builtin_va_arg
__complex
__complex__
__const
__const__
__extension__
__func__
__imag
__imag__
__label__
__nonnull
__nullable
__null_unspecified
__real
__real__
__restrict
__restrict__
__signed
__signed__
__thread
__typeof
__typeof__
__volatile
__volatile__
__FUNCTION__
__PRETTY_FUNCTION__
_Bool
_Complex
_Decimal32
_Decimal64
_Decimal128
_Imaginary
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
auto
bool
char
const
double
extern
float
goto
inline
long
register
restrict
short
signed
sizeof
typedef
typeof
union
unsigned
void
volatile
FALSE
NULL
TRUE
_Alignas
_Alignof
_Atomic
_Generic
_Noreturn
_Static_assert
_Thread_local
_cmd
__autoreleasing
__bridge
__bridge_transfer
__bridge_retained
__kindof
__strong
@autoreleasepool
@catch
@class
@compatibility_alias
@defs
@dynamic
@encode
@finally
@import
@interface
@optional
@package
@protocol
@required
@synchronized
@synthesize
@throw
@try
bycopy
byref
oneway
BOOL
IBInspectable
IB_DESIGNABLE
nonnull
nullable
null_unspecified
NS_DURING
NS_ENDHANDLER
NS_HANDLER
NS_VALUERETURN
NS_VOIDRETURN
instancetype
assert
define
defined
elif
endif
error
ifdef
ifndef
include
include_next
line
pragma
unassert
undef
warning
__private_extern__
and_eq
bitand
bitor
compl
concept
const_cast
consteval
constinit
delete
dynamic_cast
explicit
export
friend
module
mutable
namespace
not_eq
or_eq
protected
reinterpret_cast
requires
static_cast
template
typeid
typename
using
virtual
wchar_t
xor_eq
alignof
char16_t
char32_t
char8_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_literal
__is_literal_type
__is_pod
__is_polymorphic
__is_trivial
__is_union
__is_trivially_copyable
__underlying_type
atomic
setter
getter
readonly
readwrite
assign
retain
copy
nonatomic
strong
unsafe_unretained
null_resettable
direct
__covariant
xcode.syntax.name.parameter.function
xcode.syntax.name.parameter.local
xcode.syntax.name.parameter
xcode.syntax.comment.doc
xcode.syntax.comment
xcode.syntax.preprocessor.identifier
xcode.syntax.preprocessor.parameters
xcode.syntax.preprocessor.define
xcode.syntax.declaration.enum
xcode.syntax.protocolclause
xcode.syntax.name.type
xcode.syntax.definition.objc.implementation
xcode.syntax.declaration.objc.interface
xcode.syntax.definition.class
xcode.syntax.declaration.union
xcode.syntax.declaration.struct
xcode.syntax.declaration.property
xcode.syntax.name.other
xcode.syntax.declaration.variable
xcode.syntax.keyword
xcode.syntax.preprocessor
xcode.syntax.identifier.plain
xcode.syntax.identifier.constant.system
xcode.syntax.identifier.constant
xcode.syntax.identifier.macro.system
xcode.syntax.identifier.macro
xcode.syntax.identifier.type.system
xcode.syntax.identifier.type
xcode.syntax.identifier.variable.system
xcode.syntax.identifier.variable
xcode.syntax.identifier.function.system
xcode.syntax.identifier.function
xcode.syntax.identifier.class.system
xcode.syntax.identifier.class
xcode.syntax.declaration.function
xcode.syntax.definition.function
xcode.syntax.declaration.method
xcode.syntax.definition.method
xcode.syntax.assignment
xcode.lang.xml.word
xcode.lang.xml.entity.end
xcode.lang.xml.entity.start
xcode.lang.xml.entity.block
xcode.lang.xml.entity.doctype
xcode.lang.php.inxml
xcode.lang.ruby.inxml
xcode.lang.html.entity.script
xcode.lang.html.entity.style
xcode.lang.html.word
xcode.lang.html.entity.standalone
xcode.lang.html.entity.end
xcode.lang.html.entity.start
xcode.lang.html.entity.block
xcode.lang.markdown.header.6
xcode.lang.markdown.header.5
xcode.lang.markdown.header.4
xcode.lang.markdown.header.3
xcode.lang.markdown.header.2.setext
xcode.lang.markdown.header.1.setext
xcode.lang.markdown.header.2
xcode.lang.markdown.header.1
xcode.lang.module-map.identifier
xcode.lang.module-map.bracketexpr
xcode.lang.module-map.block
xcode.lang.module-map
xcode.lang.swift.repeat
xcode.lang.swift.if
xcode.lang.swift.literal
xcode.lang.c.preprocessor.parameters
xcode.lang.c.preprocessor.define.name
xcode.lang.c.preprocessor.define
xcode.lang.c.preprocessor.systemIncludeString
xcode.lang.c.preprocessor.systemimport
xcode.lang.c.preprocessor.import
xcode.lang.c.preprocessor
xcode.lang.c.number
xcode.lang.objcpp.import
xcode.lang.objcpp.function.declarator.parameters
xcode.lang.objcpp.function.definition
xcode.lang.objcpp.function.declaration
xcode.lang.objcpp.function.declarator
xcode.lang.objcpp.function.name
xcode.lang.objcpp.typedef.end
xcode.lang.objcpp.typedef.function
xcode.lang.objcpp.typedef.name
xcode.lang.objcpp.typedef
xcode.lang.objcpp.protocolclause
xcode.lang.objcpp.protocolname
xcode.lang.objcpp.protocol
xcode.lang.objcpp.classnameclause
xcode.lang.objcpp.classname
xcode.lang.objcpp.categoryclause
xcode.lang.objcpp.categoryname
xcode.lang.objcpp.property.end
xcode.lang.objcpp.property.comma
xcode.lang.objcpp.property.options
xcode.lang.objcpp.property.name.actual
xcode.lang.objcpp.property.name
xcode.lang.objcpp.property.declarator
xcode.lang.objcpp.property.declaration
xcode.lang.objcpp.interface.declarator
xcode.lang.objcpp.interface
xcode.lang.objcpp.externblock
xcode.lang.objcpp.block.toplevel
xcode.lang.objcpp.block
xcode.lang.objcpp.identifier
xcode.lang.objcpp.bracketexpr
xcode.lang.objcpp.parenexpr
xcode.lang.objcpp.expression.attribute
xcode.lang.generated.preprocessor.function.ignore
xcode.lang.generated.preprocessor.ignore
xcode.lang.objcpp.cpp.type.name.specialized
xcode.lang.objcpp.cpp.type.name.qualified
xcode.lang.cpp.expression.attribute.function
xcode.lang.cpp.parenexpr
xcode.lang.objcpp.enumblock
xcode.lang.objcpp.enum.optionalname
xcode.lang.objcpp.protocol.declarator
xcode.lang.objcpp.nsenumblock
xcode.lang.objcpp.nsenum.declarator
xcode.lang.objcpp.method.colon
xcode.lang.objcpp.method.declarator.moreargs
xcode.lang.objcpp.method.declarator.args
xcode.lang.objcpp.method.declarator
xcode.lang.objcpp.method.declaration
xcode.lang.objcpp.classmethod.declarator
xcode.lang.objcpp.classmethod.declaration
xcode.lang.objcpp.parameter.name.local
xcode.lang.objcpp.partialname
xcode.lang.objcpp.basetype
xcode.lang.objcpp.structblock
xcode.lang.objcpp.enum.declarator
xcode.lang.cpp.enum.declarator
xcode.lang.objc.enum.declarator
xcode.lang.c.enum.declarator
xcode.lang.objcpp.union.declarator
xcode.lang.cpp.union.declarator
xcode.lang.objc.union.declarator
xcode.lang.c.union.declarator
xcode.lang.objcpp.struct.declarator
xcode.lang.cpp.struct.declarator
xcode.lang.objc.struct.declarator
xcode.lang.c.struct.declarator
xcode.lang.swift.string.multiline
xcode.lang.string
@propertyWrapper
xcode.lang.swift.commaAndEOL
xcode.lang.swift.enum.case.assignment
xcode.lang.swift.guard
xcode.lang.swift.conformance.start
xcode.lang.swift.whereclause
xcode.lang.swift.identifier
xcode.lang.swift.identifier.attribute
xcode.lang.swift.doccomment.star
xcode.lang.swift.doccomment.slash
xcode.lang.swift.openAngle
xcode.lang.swift.bracketexpr
xcode.lang.swift.preprocessor.line.start
xcode.lang.swift.preprocessor.line
xcode.lang.swift.precedencegroup
xcode.lang.swift.operator.precedence
xcode.lang.swift.parenexpr.complex.type
xcode.lang.swift.name.type
xcode.lang.swift.typealias.type
xcode.lang.swift.typealias.name
xcode.lang.swift.typealias
xcode.lang.swift.block
xcode.lang.swift.enum.block
xcode.lang.swift.struct.block
xcode.lang.swift.class.block
xcode.lang.swift.actor.block
xcode.lang.swift.initializer.declarator
xcode.lang.swift.enum.declarator
xcode.lang.swift.struct.declarator
xcode.lang.swift.extension.declarator
xcode.lang.swift.protocol.declarator
xcode.lang.swift.class.declarator
xcode.lang.swift.actor.declarator
xcode.lang.swift.enum.case.more
xcode.lang.swift.enum.case.declarator
xcode.lang.swift.enum.case.name.clause
xcode.lang.swift.enum.case.name
xcode.lang.swift.enum.case.associatedvalue
xcode.lang.swift.enum
xcode.lang.swift.struct
xcode.lang.swift.extension
xcode.lang.swift.protocol
xcode.lang.swift.class
xcode.lang.swift.actor
xcode.lang.swift.declaration.name
xcode.lang.swift.name.conformance
xcode.lang.swift.conformance
xcode.lang.swift.double
xcode.lang.swift.integer
xcode.lang.swift.catch.start
xcode.lang.swift.catch
xcode.lang.swift.switch.default
xcode.lang.swift.switch.case.start
xcode.lang.swift.switch.case
xcode.lang.swift.switch.start
xcode.lang.swift.switch
xcode.lang.swift.pattern.case
xcode.lang.swift.while.start
xcode.lang.swift.while
xcode.lang.swift.if.start
xcode.lang.swift.if.else.part
xcode.lang.swift.if.part
xcode.lang.swift.for.start
xcode.lang.swift.for
xcode.lang.swift.subscript
xcode.lang.swift.property.namelist
xcode.lang.swift.property.name
xcode.lang.swift.property.more
xcode.lang.swift.property.tuple
xcode.lang.swift.property
xcode.lang.swift.variable.global.namelist
xcode.lang.swift.variable.global.name
xcode.lang.swift.variable.global.more
xcode.lang.swift.variable.global.tuple
xcode.lang.swift.variable.global
xcode.lang.swift.variable.didSet.block
xcode.lang.swift.variable.willSet.block
xcode.lang.swift.variable.init.block
xcode.lang.swift.variable.set.block
xcode.lang.swift.variable.get.block
xcode.lang.swift.variable.block
xcode.lang.swift.variable.case.var
xcode.lang.swift.variable.case.let
xcode.lang.swift.variable.assignment.simple
xcode.lang.swift.variable.assignment
xcode.lang.swift.variable.type
xcode.lang.swift.variable.namelist
xcode.lang.swift.variable.name
xcode.lang.swift.variable.simple
xcode.lang.swift.variable.more
xcode.lang.swift.variable.tuple
xcode.lang.swift.variable.name.identifier
xcode.lang.swift.variable
xcode.lang.swift.import.modulepath.more
xcode.lang.swift.import.modulepath
xcode.lang.swift.import
xcode.lang.swift.genericsclause.general
xcode.lang.swift.genericsclause
xcode.lang.swift.initializer.init
xcode.lang.swift.initializer
xcode.lang.swift.macro.declarator
xcode.lang.swift.macro
xcode.lang.swift.method
xcode.lang.swift.function.parameters.end
xcode.lang.swift.function.parameter.therest
xcode.lang.swift.function.return
xcode.lang.swift.function.parameter.name
xcode.lang.swift.function.parameter.label
xcode.lang.swift.function.parameter
xcode.lang.swift.function.parameters.more
xcode.lang.swift.function.parameters.start
xcode.lang.swift.function.parameters
xcode.lang.swift.function.name
xcode.lang.swift.function.declarator
xcode.lang.swift.function
xcode.lang.completionplaceholder
xcode.lang.swift.parenexpr
xcode.lang.swift.parenexpr.complex
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
T@"NSArray",R,C
T#,R,V_nativeSourceModelParserClass
T@"NSArray",R,N
T@"<SMSourceBufferProvider>",V_sourceBufferProvider
T@"NSString",R,C,V_languageName
T@"NSArray",&,N,V_endProductions
TB,R,V_isHidden
T@"NSArray",&,N,V_interiorProductionRules
Tq,R,V_uniqueId
T@"NSArray",&,N,V_tokenInteriorPredictSet
_conformedToLanguageIdentifiers
T@"NSArray",R,C,V_blockDocumentationCircumfixes
_fileExtensions
T@"NSArray",R,C,V_fileExtensions
_isAtColumnZero
T@"NSArray",R,C,V_lineDocumentationPrefixes
_itemIsVolatile
T@"NSArray",R,C,V_standardConstants
_langId
T@"NSArray",R,C,V_standardVariables
_productionRule
T@"NSArray",R,V_includedRules
_shouldTraverse
T@"NSDictionary",R,V_syntaxRules
_string
T@"NSString",C,V_nameFormat
_unused
T@"NSString",R,C,V_documentationAbbreviation
arrayWithArray:
T@"NSString",R,V_identifier
containsObject:
T@"NSString",R,V_superSpecIdentifier
dealloc
T@"SMLanguageSpecification",R,N,V_langSpec
doingBatchEdit:
T@"SMLanguageSpecification",R,N,V_startProduction
initAsMissingSpecificationProxyWithIdentifier:name:description:
T@"SMSourceModelItem",&,V_sourceItems
initWithString:
T@"SMSourceSpecification",R,V_superSpecification
isAtBOL
T@"SourceModelParserProductionRule",R,N
isClassIdentifierInSourceModel:
T@"SourceScanner",&,V_scanner
isInIncludeStatementAtLocation:
T@"SourceScanner",R,V_scanner
isObjCGenericInstanceMethodItem
TB,N,V_ignoreToken
methodDeclaratorItemAtLocation:
TB,N,V_interiorRuleMayHaveTemporaryLexerFlags
nextGlobalToken
TB,N,V_itemIsVolatile
objCCategoryClauseSpecification
TB,N,V_shouldTraverse
objCImplementationSpecification
TB,R,N,V_completeMatch
reduceToProduction:stackOffset:
TB,R,N,V_optional
scanner
TB,R,N,V_saveEndToken
TB,R,V_acceptToken
setInputStream:
TB,R,V_allowWhitespaceTrimming
specificationTypePathExtensions
TB,R,V_includeInMenu
startProduction
TB,R,V_isMark
tokenForString:
TB,R,V_scriptingLanguage
uppercaseString
TB,R,V_usesCLikeIndentation
valueWithRange:
.cxx_destruct
T@"NSArray",R,C,V_standardTypes
T#,R,V_scannerClass
T@"NSDictionary",R,V_properties
T@"CharStream",&,V_inputStream
T@"SourceModelParserInteriorProductionRule",&,N,V_nextCandidate
T@"NSArray",&,N,V_endTokens
TB,R,V_optional
T@"NSArray",&,N,V_nodeInteriorPredictSet
_altIgnoreToken
T@"NSArray",R,C,V_blockCommentCircumfixes
_endProductions
T@"NSArray",R,C,V_fileDataTypeIdentifiers
_hashValueValid
T@"NSArray",R,C,V_lineCommentPrefixes
_isMark
T@"NSArray",R,C,V_standardClasses
_itemSyntaxType
T@"NSArray",R,C,V_standardFunctions
_parent
T@"NSArray",R,N,V_predictSet
_ranges
T@"NSArray",R,V_indentationTriggers
_sourceCodeLanguageForMetadata:
T@"NSMutableArray",&,N,V_children
_tokens
T@"NSString",R
allKeys
T@"NSString",R,C,V_identifier
bundleForClass:
T@"NSString",R,V_string
curChar
T@"SMLanguageSpecification",R
dirtyRightEdge:
T@"SMLanguageSpecification",R,N,V_production
enumerateDescendentsUsingBlock:
T@"SMLanguageSpecification",R,V_langSpec
initWithPropertyListDictionary:
T@"SMSourceModelItem",N,V_parent
interfaceDeclarationAtLocation:
T@"SourceModelParserProductionRule",&,N,V_productionRule
isBlock
T@"SourceModelParserProductionRule",R,N,V_prodRule
isEqualToArray:
T@"SourceScanner",R,V_lexer
isObjCBlockItem
lowercaseString
TB,N,V_inheritsNodeType
mutableChildren
TB,N,V_isBlock
nextIndentForlocation:inString:
TB,N,V_itemIsVolatileAnchor
objCClassItemNameInSourceModel:
TB,R,N
rangeBetweenChildrenAtLocation:
TB,R,N,V_epsilonMatch
removeAllRanges
TB,R,N,V_repeatable
scopeProduction
TB,R,N,V_saveToken
setIgnoreToken:
TB,R,V_allowMultiple
setSourceItems:
TB,R,V_ignoreToken
standardClasses
TB,R,V_inheritsNodeType
stringByAppendingPathComponent:
TB,R,V_requiresHardTabs
tokenForSymbol:
TB,R,V_supportsIndentation
usesFileLiteral
TB,R,V_usesColorLiteral
TB,R,V_usesFileLiteral
TB,R,V_usesImageLiteral
TB,R,V_usesSymbolImageCodeGeneration
TB,V_isDoingBatchEdit
TQ,N,V_lexerMode
TQ,N,V_temporaryLexerFlags
TQ,R,N
TQ,R,N,V_ignoreNodes
TS,R,V_firstChar
Ti,R,N,V_startToken
Ti,R,N,V_token
Tq,N,V_itemToken
Tq,R,V_langId
Tq,R,V_token
Ts,N,V_itemSyntaxType
T{_NSRange=QQ},V_dirtyRange
T{_NSRange=QQ},V_relativeLocation
URLsForResourcesWithExtension:subdirectory:
_BOLIsKnown
_SeenOneCharAtBOL
_SeenWhitespaceAtBOL
_acceptChildrenInScope:atIndex:stackRange:node:
_acceptToken
_allowMultiple
_allowWhitespaceTrimming
_altInheritsNodeType
_altIsSimpleToken
_altNodeType
_atEndOfParseRange
_beginLexerMode:
_blockCommentCircumfixes
_blockDocumentationCircumfixes
_branchToReuseInScope:atLocation:node:
_builtUpNameForItem:mutableNameRanges:
_builtUpNameForSubTree:mutableNameRanges:
_cachedIndexInParent
_canSkipCurrentRule
_capacity
_captureNodeTypes
_caseSensitive
_cheapString
_checkPreprocessorKnownMacros
_childEnclosingLocation:
_children
_commentSyntaxes
_completeMatch
_computeBOL
_conformedToLanguages
_contextMaskForAncestorIncludingSelf:
_count
_currentLocation
_currentRuleIndex
_currentToken
_dirty
_dirtyRange
_discardChildrenInScope:fromIndex:toLocation:
_documentationAbbreviation
_documentationSyntaxes
_endLexerMode:
_endTokens
_entityMap
_eoftoken
_epsilonMatch
_fileDataTypeIdentifiers
_firstChar
_firstLeafItem
_generateEmptyLine
_getNextToken:temporaryFlags:
_getRawStringDelimLength
_hasInnerState
_hashValue
_hoistUpTrailingIgnoreNodesFromNode:toArray:
_identifier
_ignoreNodes
_ignoreToken
_includeInMenu
_includedRules
_indentForLineWithRange:inString:
_indentWidth
_indentationTriggers
_inheritsNodeType
_initializeProductionStateForCurrentToken:tokenInteriorPredictSet:tokenInteriorPredictSetCount:
_initializeProductionStateForNode:scopeProdRule:nodeInteriorPredictSet:nodeInteriorPredictSetCount:
_innerState
_inputStream
_interiorProductionRules
_interiorRuleMayHaveTemporaryLexerFlags
_invertedOtherSet
_isAtBOL
_isBlock
_isDoingBatchEdit
_isFoldable
_isHidden
_isIdentifier
_isOpaque
_isPython
_isSimpleToken
_isURL
_isVolatile
_isVolatileAnchor
_itemIsVolatileAnchor
_itemToken
_keywords
_langSpec
_langToken
_languageName
_languageSpecification
_languageSpecificationIdentifier
_lastLeafItem
_lexer
_lexerMode
_lineCommentPrefixes
_lineDocumentationPrefixes
_maxLinesPerToken
_nameFormat
_nativeParser
_nativeSourceModelParserClass
_needToDirtyRightEdges
_needsAdjustNodeType
_nextCandidate
_nextPreorderItem
_nodeInteriorPredictSet
_nodePredictSetBuffer
_nodePredictSetBufferSize
_nodeStack
_nodeType
_objectForKeyIgnoringInheritance:
_optional
_parse:inScope:node:outOfBand:depth:
_parseOutOfBand:
_parseRange
_pathExtensionsToTypesRegistry
_predictSet
_previousTokenRange
_prodRule
_production
_productionState
_properties
_realString
_realStringLength
_reduceToProduction:stackRange:node:inScope:
_regExes
_registerSpecificationProxiesOfType:fromDictionaryOrArray:inDirectory:bundle:sourceDescription:
_relativeLocation
_repeatable
_replaceItemsWithinRange:newArray:index:
_requiresHardTabs
_resetLexerWithInputString:
_reuseAndSkipAhead:index:location:
_reuseScopeNode:using:
_rules
_saveEndToken
_saveToken
_savedBottomItem
_savedItems
_scanner
_scannerClass
_scriptingLanguage
_setLocationAfterNode:
_setRawStringDelimLength:
_shouldRecurseIntoDirectoryNamed:ofType:
_sourceBufferProvider
_sourceItems
_stackOffset
_standardClasses
_standardConstants
_standardFunctions
_standardTypes
_standardVariables
_startAtBOL
_startAtColumnZero
_startChar
_startProduction
_startSet
_startToken
_stringBuffer
_stringByRemovingLeadingAndTrailingCharacters:fromString:
_subSpecificationsOfSpecification:
_subrange
_superSpecIdentifier
_superSpecification
_supportsIndentation
_syntaxRules
_temporaryLexerFlags
_token
_tokenInteriorPredictSet
_tokenPredictSetBuffer
_tokenPredictSetBufferSize
_tokenSet
_topLevelSourceItem
_typesToSpecTypeBaseClassesRegistry
_uniqueId
_uniqueIdForIdentifier:
_usesCLikeIndentation
_usesColorLiteral
_usesFileLiteral
_usesImageLiteral
_usesSymbolImageCodeGeneration
_validProductionStates
_validToken
_wordBreak
acceptToken
actionForEndToken:inContext:inputStream:
addArrayOfStrings:
addBlockItemsInTypeList:fromItem:toArray:
addCharactersInString:
addChild:
addChildren:
addChildrenFromArray:inRange:
addGlobalTokenName:
addIdentifierItemsFromItem:toArray:
addIndex:
addIndexes:
addIndexesInRange:
addItemsInTypeList:fromItem:toArray:
addObject:
addObjectsFromArray:
addRange:
addRangesFromArray:
addTokenForString:
adjoiningItemAtLocation:
adjustForWhitespaceChangeInRange:changeInLength:
adjustRelativeRange:changeInLength:shouldDirty:
allAlternateRules
allDescendantItemsConformingToSpecification:
allObjects
allTokens
allValues
allocWithZone:
allowMultiple
allowWhitespaceTrimming
alphanumericCharacterSet
altEndRules
altToken
ancestorContextMask
ancestorOfItem:inTypeList:
appendFormat:
appendString:
array
arrayForKey:
arrayFromArrayOfDicts:withKey:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
assignAllParents:
assignParents:
attributesOfItemAtPath:error:
availableKeywords
blockCommentCircumfixes
blockDepth
blockDocumentationCircumfixes
blockItemAtLocation:
boolForKey:
boolValue
buffer
bufferLen
bufferLoc
builtUpNameForItem:nameRanges:
canTokenize
caseInsensitiveCompare:
caseSensitive
characterAtIndex:
characterConstantAtLocation:
characterIsMember:
characterSetWithCharactersInString:
childAdjoiningLocation:
childEnclosingLocation:
children
classAtLocation:
classItems
clearAdjustedNodeTypes
commentAtLocation:
commentBlockItems
compare:
completeMatch
completionPlaceholderItemAtLocation:
componentsSeparatedByString:
computeContext:inString:forLocation:
conformedToLanguages
conformsToAnySpecificationInSet:
conformsToLanguage:
conformsToSpecification:
conformsToSpecificationForIdentifier:
containerItems
containersAtLocation:
containingObjCClassItem
containsToken:
contentsOfDirectoryAtPath:error:
contextArray
contextMask
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createTerminalNodeForToken:scopeProductionRule:
currentProduction
decimalDigitCharacterSet
defaultManager
description
descriptionWithLocale:
dictionary
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithContentsOfURL:
dictionaryWithObject:forKey:
dictionaryWithObjectsAndKeys:
diffableDescription
dirty
dirtyRange
dirtyRange:changeInLength:
docCommentAtLocation:
documentationAbbreviation
dumpContext
enableNativeParser
enclosingBlock
enclosingItemAtLocation:
endProductions
endRules
endTokens
enumCaseDeclaratorItemAtLocation:
enumerateIdentifierItemsInRange:usingBlock:
enumerateIdentifierItemsInRange:withStop:usingBlock:
enumerateIdentifierItemsInRelativeRange:usingBlock:
enumerateIdentifierItemsInRelativeRange:withStop:usingBlock:
enumerateItemsInRange:usingBlock:
enumerateItemsInRelativeRange:usingBlock:
enumerateItemsUsingBlock:
epsilonMatch
errorWithDomain:code:userInfo:
escapeChar
exceptionWithName:reason:userInfo:
fileDataTypeIdentifiers
fileExistsAtPath:isDirectory:
fileExtensions
fileType
firstChar
firstChildItemWithLangId:
firstDescendantItemConformingToSpecification:
firstIndex
firstItemInLineageOfType:
firstMatchInString:options:range:
firstObject
firstPrecedingAttributeOfItem:
firstRange
foldableBlockItemForLineAtLocation:
foldableBlockItemForLocation:
followingItem
followingSiblingItem
functionOrMethodAtLocation:
functionOrMethodDefinitionAtLocation:
functionsAndMethodItems
getCharacters:range:
getIndexes:maxCount:inIndexRange:
getMacros:forName:
getObjects:range:
getRanges:count:
globalTokenNames
hasPrefix:
hasSavedItems
hasSuffix:
hash
homeDirectoryForCurrentUser
identOrKeywordItemAtLocation:
identifier
identifierCompare:
identifierForUniqueId:
identifierItemsFromItem:
ignoreNodes
ignoreRules
ignoreToken
includeInMenu
includeStatementAtLocation:
includedRules
indentForItem:
indentationTriggers
indexGreaterThanIndex:
indexOfChildAfterLocation:
indexOfChildAfterRelativeLocation:orAtLocation:
indexOfChildAtLocation:
indexOfChildBeforeLocation:
indexOfObjectIdenticalTo:
indexOfProductionMatchingNode:inProduction:
indexOfProductionMatchingToken:inProduction:
indexOfRange:
indexOfRangeContainingOrFollowing:
indexOfRangeContainingOrPreceding:
indexOfRangeFollowing:
indexOfRangePreceding:
indexSet
indexSetWithIndexesInRange:
indexesOfObjectsPassingTest:
inheritsNodeType
init
initWithArrayOfStrings:caseSensitive:
initWithCapacity:
initWithContentsOfFile:
initWithData:encoding:
initWithDictionary:
initWithLanguageDescription:
initWithLanguageSpecification:
initWithObjects:count:
initWithProduction:saveToken:
initWithProductionRule:optional:repeatable:
initWithProductionRule:stackOffset:
initWithPropertyListDictionary:language:
initWithRange:
initWithRange:language:token:nodeType:
initWithRanges:count:
initWithRealString:subrange:
initWithSourceBufferProvider:
initWithStartProduction:langSpec:
initWithStartToken:langSpec:predictSet:
initWithString:acceptToken:
initWithToken:saveToken:
initialize
initializeLanguageSpecification:
initializeLexerModes
initializeProductionsForLanguageSpecification:
innerDescription:showSelf:
innerRange
inputStream
insertObject:atIndex:
insertObjects:atIndexes:
insertRange:atIndex:
integerForKey:
integerValue
interiorProductionRules
interiorRuleMayHaveTemporaryLexerFlags
invert
invertedSet
isARCTypeQualifierInSourceModel:
isActionKeywordInSourceModel:
isAncestorOf:
isAtColumnZero
isDeclarationOrDefinitionAtLocation:
isDoingBatchEdit
isEnumMacro:
isEqual:
isEqualToString:
isFoldedInLayoutManager:
isFunctionMacro:
isHidden
isIdentifier
isInCharacterConstantAtLocation:
isInCommentAtLocation:
isInDocCommentAtLocation:
isInIdentifierAtLocation:
isInKeywordAtLocation:
isInNumberConstantAtLocation:
isInPatternConstantAtLocation:
isInPlainCodeAtLocation:
isInPreprocessorStatementAtLocation:
isInStringConstantAtLocation:
isInTokenizableCodeAtLocation:
isIncompletionPlaceholderAtLocation:
isItemAngleExpression:
isItemBraceExpression:
isItemBracketExpression:
isItemClosedAngleExpression:
isItemClosedBraceExpression:
isItemClosedBracketExpression:
isItemClosedParenExpression:
isItemContainer:
isItemDeclarationOrDefinition:
isItemDeclaratorName:
isItemDictionaryLiteral:
isItemExpression:startingWith:
isItemExpression:startingWith:endingWith:
isItemForStatement:
isItemInPreprocessorStatement:
isItemObjectLiteral:
isItemParenExpression:
isItemSemanticBlock:
isItemUnclosedHTMLEntity:
isKeyword
isKeyword:inSourceModel:
isKindOfSpecification:
isMark
isMissingSpecificationProxy
isObjCAtEndKeywordInSourceModel:
isObjCAtPrivateKeywordInSourceModel:
isObjCAtPropertyKeywordInSourceModel:
isObjCAtProtectedKeywordInSourceModel:
isObjCAtPublicKeywordInSourceModel:
isObjCBracketExpressionItem
isObjCCategoryImplementationItem
isObjCCategoryInterfaceItem
isObjCCategoryOpenParenItem
isObjCClassExtensionItem
isObjCClassMethodDeclarationItem
isObjCClassMethodImplementationItem
isObjCGenericClassMethodItem
isObjCGenericClassMethodSpecification
isObjCGenericInstanceMethodSpecification
isObjCGenericMethodItem
isObjCGenericMethodSpecification
isObjCIdentifierItem
isObjCImplementationDeclaratorItem
isObjCImplementationItem
isObjCInstanceMethodDeclarationItem
isObjCInstanceMethodImplementationItem
isObjCInterfaceDeclaratorItem
isObjCInterfaceItem
isObjCNamedCategoryImplementationDeclaratorItem
isObjCNamedCategoryInterfaceDeclaratorItem
isObjCPropertyDeclarationItem
isObjCStrictImplementationItem
isObjCStrictInterfaceItem
isObjCSuperKeywordInSourceModel:
isOpaque
isOutletCollectionKeywordInSourceModel:
isOutletKeywordInSourceModel:
isPlainMacro:
isPostfixExpressionAtLocation:
isSegueActionKeywordInSourceModel:
isSimpleToken
isSwiftIdentifierOrKeyword
isSwiftPreprocessorKeyword
isTypeIdentifier
isVolatile
isVolatileAnchor
item:hasPrecedingToken:
itemAtLocation:conformingToSpecification:
itemAtLocation:inTypeList:
itemAtLocation:ofType:
itemIsVolatile
itemIsVolatileAnchor
itemNameAtLocation:inTypeList:nameRanges:scopeRange:
itemSyntaxType
itemToken
itemsAtLocation:inTypeList:
langId
langSpec
language
languageName
languageSpecification
lastObject
lastRange
leadingWhitespacePositionsForLine:
length
lexer
lexerKeywords
lexerMode
lineCommentPrefixes
lineDocumentationPrefixes
lineRangeForCharacterRange:
lineRangeForRange:
loadAndCacheDefaultSourceCodeLanguages
loadAndCacheSourceCodeLanguageWithPlist:
localizedSpecificationTypeName
localizedStringForKey:value:table:
location
locationOfNewlineFrom:searchBackwards:
locationOfNextNewlineFrom:until:inStream:
mainBundle
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
matchEndNode:
matchEndToken:
matchNode:
matchNode:currentStackTop:
matchToken:
matchToken:currentStackTop:
matchesToken:
matchingIgnoreRule:
matchingRule:isAltRule:
methodNameForItem:nameRanges:
methodOrFunctionRangeAtRange:
missingSpecificationForIdentifier:
moduleImportStatementAtLocation:
mutableCopy
mutableCopyWithZone:
name
nameCompare:
nameFormat
nameInSourceModel:
nameOfItem:nameRanges:scopeRange:
nativeSourceModelParserClass
needToDirtyRightEdges
needsAdjustNodeType
newlineCharacterSet
nextCandidate
nextChar
nextCharSkippingWhitespace
nextItem
nextPreorderItem
nextToken:initialToken:until:outputRange:subItems:
nextToken:withContext:initialToken:outputRange:
nextToken:withItem:inTree:withContext:initialToken:insideBlock:range:dirtyRange:reusedToken:
nextToken:withItemArray:inTree:withContext:initialToken:range:dirtyRange:
nodeForThisScanner:atLocation:inputStream:
nodeInteriorPredictSet
nodeToReuse:withContext:forScanner:inputStream:
nodeType
nodeType:conformsToNodeTypeNamed:
nodeType:conformsToNodeTypesInList:
nodeTypeListForTypeNames:
nodeTypeNameForId:
nodeTypesCount
normalize
normalizedRangeArray
numberConstantAtLocation:
numberOfChildren
numberWithInteger:
numberWithShort:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objCAtDynamicSpecification
objCAtSynthesizeSpecification
objCBlockSpecification
objCBracketExpressionSpecification
objCCategoryItemNameInSourceModel:
objCCategoryNameSpecification
objCCategoryOpenParenSpecification
objCClassMethodDeclarationSpecification
objCClassMethodImplementationSpecification
objCClassNameSpecification
objCDeclaratorItemAtLocation:
objCIdentifierSpecification
objCImplementationDeclaratorSpecification
objCInstanceMethodDeclarationSpecification
objCInstanceMethodImplementationSpecification
objCInterfaceDeclaratorSpecification
objCInterfaceSpecification
objCMethodNameForItem:nameRanges:
objCParenthesisExpressionSpecification
objCPropertyDeclarationSpecification
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectLiteralItemAtLocation:
objectsAtIndexes:
offsetBy:
optional
orderedSetWithArray:
parameterDescriptionItems
parameterNameItemFromItem:
parenItemAtLocation:
parenLikeItemAtLocation:
parent
parse
parse:withContext:initialToken:inputStream:range:dirtyRange:
parse:withContext:inputString:range:dirtyRange:
parseEndBeforeIncludedRules
parseIncludedRules:inTree:withContext:initialToken:inputStream:range:dirtyRange:
parseOneIncludedRule:inTree:withContext:initialToken:inputStream:range:dirtyRange:isLexing:reusedToken:
parseRecursive:withContext:depth:inputStream:range:dirtyRange:
parseRule:into:acceptToken:
path
pathExtension
patternConstantAtLocation:
peekChar
peekCharSkippingWhitespace
peekCharacterInSet:
placeholderItemsFromItem:
precedingItem
precedingSiblingItem
predictSet
predictsRule:inputStream:
preprocessorStatementAtLocation:
previousAncestralSibling
previousItem
prodRule
production
productionRule
properties
propertyList
raise:format:
range
rangeAtIndex:
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:range:
rangeOfString:
rangeValue
rawNodeType
reason
recursive
registerMissingSpecification:forIdentifier:
registerNodeTypeNamed:
registerSourceCodeLanguageFromMetadataPlist:
registerSourceCodeLanguageWithMetadata:
registerSpecificationOrProxy:
registerSpecificationProxiesFromPropertyListsInDirectory:recursively:
registerSpecificationProxiesFromPropertyListsInDirectory:recursively:inBundle:
registerSpecificationProxyFromPropertyList:
registerSpecificationTypeBaseClass:
registeredSpecifications
regularExpressionWithPattern:options:error:
relativeLocation
removeAllIndexes
removeAllObjects
removeIndex:
removeLastObject
removeObjectAtIndex:
removeObjectsAtIndexes:
removeObjectsInRange:
removeRangeAtIndex:
removeRangesAtIndexes:
repeatable
replaceObjectAtIndex:withObject:
replaceObjectsInRange:withObjectsFromArray:
replaceObjectsInRange:withObjectsFromArray:range:
replaceRangeAtIndex:withRange:
requiresHardTabs
resetWithProductionRule:stackOffset:
resourcePath
saveEndToken
saveItem:
saveToken
savedItem
scannerClass
scheduleLazyInvalidationForRange:
scriptingLanguage
searchForAndRegisterAllAvailableSpecifications
semanticItemAtLocation:
setArray:
setCaseSensitive:
setDirty:
setDirtyRange:
setEnableNativeParser:
setEndProductions:
setEndTokens:
setGlobalToken:forString:
setInheritsNodeType:
setInteriorProductionRules:
setInteriorRuleMayHaveTemporaryLexerFlags:
setIsBlock:
setIsDoingBatchEdit:
setIsOpaque:
setIsSimpleToken:
setItemIsVolatile:
setItemIsVolatileAnchor:
setItemSyntaxType:
setItemToken:
setLangId:
setLexerMode:
setLocation:
setMutableChildren:
setNameFormat:
setNeedToDirtyRightEdges:
setNeedsAdjustNodeType:
setNextCandidate:
setNodeInteriorPredictSet:
setNodeType:
setObject:forKey:
setObject:forKeyedSubscript:
setParent:
setProductionRule:
setRange:
setRange:atIndex:
setRealString:subrange:
setRelativeLocation:
setScanner:
setShouldTraverse:
setSourceBufferProvider:
setString:
setTemporaryLexerFlags:
setToken:
setTokenInteriorPredictSet:
setValue:forKey:
setVersion:
setVolatile:
setVolatileAnchor:
setWithArray:
setWithCapacity:
setWithObject:
shortValue
shouldTraverse
simpleDescription
sort
sortUsingComparator:
sortedRangeArray
sourceBufferProvider
sourceCodeLanguageForFileDataTypeIdentifier:
sourceCodeLanguageForFileExtension:
sourceCodeLanguageForLanguageSpecificationIdentifier:
sourceCodeLanguageWithIdentifier:
sourceCodeLanguages
sourceItems
sourceModelInfoForSourceModelItem:matchingAnnotationKindMask:
sourceModelItemWithRange:language:token:nodeType:
specification
specificationForIdentifier:
specificationIdentifier
specificationLineage
specificationRegistry
specificationRegistryName
specificationType
specificationTypeBaseClass
specificationsForIdentifiers:
standardConstants
standardFunctions
standardTypes
standardUserDefaults
standardVariables
startChar
startString
startToken
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingTrailingOption
stringByStandardizingPath
stringConstantAtLocation:
stringForKey:
stringLen
stringLoc
stringWithCString:encoding:
stringWithCapacity:
stringWithFormat:
stringWithRange:
stringWithString:
stringWithUTF8String:
strongToStrongObjectsMapTable
subSpecifications
subarrayWithRange:
substringFromIndex:
substringToIndex:
substringWithRange:
superSpecIdentifier
superSpecification
supportsIndentation
syntaxRules
syntaxType
tags
temporaryLexerFlags
textOfItem:
token
tokenForRule:initialToken:inputStream:newLocation:
tokenForString:forRange:subItems:
tokenInteriorPredictSet
tossSavedItems:withContext:
typeDeclarationAtLocation:
typeWithIdentifier:
unionSet:
uniqueId
unsignedIntValue
updateContext:forReusedNode:inputStream:
usesCLikeIndentation
usesColorLiteral
usesImageLiteral
usesNativeParser
usesSymbolImageCodeGeneration
validate
valueForKey:
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
wordRangeInString:fromIndex:
wordRangeInString:fromIndex:allowNonWords:
SMSyntaxTypeSpecification
ObjCSourceModelParser
CSourceModelParser
HTMLEntityScanner
SourceModelParser
KnownMacros
CharStream
SMSourceModel
Deprecated
RevlockIBDVTSourceModelAdditions
KeywordScanner
ObjCPlusPlusSourceModelParser
SMSourceTokens
ParserStringAdditions
SMSourceCodeLanguage
NSCopying
CheapReusableSubstring
HTMLScanner
SwiftSourceModelParser
SourceScanner
SourceModelParserInteriorProductionRule
SourceModelParserProductionRule
ScopeRule
ScopeToken
CPlusPlusSourceModelParser
NumberScanner
SourceModelParserProductionState
RangeArrayAdditions
RangeArray
MutableRangeArray
ScannerRule
RuleScanner
SMSourceNodeTypes
SMLanguageSpecification
FormerIBDVTFoundationAdditions
RegExScanner
IndentScanner
ScopeScannerRule
ScopeScanner
SMSourceSpecification
SMSourceModelItem
FormerIDEDVTSourceModelAdditions
StringBuffer
#16@0:8
@16@0:8
@24@0:8@16
B16@0:8
v24@0:8@16
v16@0:8
@"NSString"
@32@0:8^{?=ii{?=qq}*i}16^@24
Q16@0:8
B32@0:8^{?=ii{?=qq}*i}16Q24
v24@0:8Q16
@32@0:8@16q24
@72@0:8@16@24q32@40{_NSRange=QQ}48^{_NSRange=QQ}64
@"NSDictionary"
@64@0:8@16@24@32{_NSRange=QQ}40^{_NSRange=QQ}56
@56@0:8@16@24@32q40q48
Q40@0:8@16@24Q32
Q40@0:8@16Q24Q32
v40@0:8@16@24Q32
v48@0:8@16@24@32Q40
@56@0:8@16{_NSRange=QQ}24@40@48
Q56@0:8@16Q24{_NSRange=QQ}32@48
@40@0:8@16Q24@32
Q32@0:8@16@24
v32@0:8@16@24
@"SMLanguageSpecification"
{?="tokenType"i"tokenAltType"i"charRange"{?="location"q"length"q}"lexeme"*"outOfBand"i}
{?="location"q"length"q}
{_NSRange="location"Q"length"Q}
@"NSMutableArray"
@"NSMutableIndexSet"
@32@0:8@16@24
B24@0:8@16
S16@0:8
Q24@0:8@16
Q28@0:8Q16B24
@32@0:8{_NSRange=QQ}16
@"StringBuffer"
@"CheapReusableSubstring"
@"SMSourceModelItem"
v20@0:8B16
{_NSRange=QQ}24@0:8@16
v40@0:8{_NSRange=QQ}16q32
@24@0:8Q16
q24@0:8@16
@32@0:8@16^@24
@32@0:8@16^q24
@32@0:8Q16^q24
@32@0:8Q16@24
v24@0:8@?16
v40@0:8{_NSRange=QQ}16@?32
v48@0:8{_NSRange=QQ}16^B32@?40
@40@0:8@16^@24^{_NSRange=QQ}32
@48@0:8Q16^q24^@32^{_NSRange=QQ}40
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
B24@0:8Q16
v40@0:8^q16@24@32
B28@0:8@16S24
B32@0:8@16S24S28
B32@0:8@16q24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"NSObject<SMSourceBufferProvider>"
@"CharStream"
@"SourceScanner"
@"SourceModelParser"
@32@0:8@16Q24
B32@0:8q16@24
q48@0:8@16@24q32^{_NSRange=QQ}40
{_NSRange=QQ}32@0:8@16Q24
@"NSCharacterSet"
@"SMSourceTokens"
q16@0:8
v32@0:8q16@24
@28@0:8@16B24
@"NSMutableSet"
@24@0:8^{_NSZone=}16
@"NSArray"
@40@0:8@16{_NSRange=QQ}24
v40@0:8@16{_NSRange=QQ}24
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
i40@0:8@16@24@32
v40@0:8@16@24@32
@48@0:8@16@24@32@40
q92@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72B80^B84
v80@0:8@16@24@32q40@48{_NSRange=QQ}56^{_NSRange=QQ}72
{_NSRange=QQ}36@0:8@16Q24B32
@32@0:8@16B24B28
@"SourceModelParserProductionRule"
@"SourceModelParserInteriorProductionRule"
i24@0:8@16
Q28@0:8i16@20
@36@0:8i16@20@28
B20@0:8i16
@20@0:8i16
i16@0:8
v24@0:8q16
s16@0:8
v20@0:8s16
@24@0:8i16B20
q40@0:8@16^{_NSRange=QQ}24^@32
v32@0:8@16Q24
B28@0:8i16Q20
B32@0:8@16Q24
@32@0:8^@16^Q24
@"SourceModelParserProductionState"
{_NSRange=QQ}24@0:8Q16
@32@0:8r^@16Q24
@32@0:8r^{_NSRange=QQ}16Q24
Q32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v32@0:8^{_NSRange=QQ}16Q24
^{_NSRange=QQ}
v32@0:8Q16@24
v40@0:8{_NSRange=QQ}16Q32
v40@0:8Q16{_NSRange=QQ}24
B24@0:8q16
@"NSSet"
q80@0:8@16@24@32@40q48{_NSRange=QQ}56^{_NSRange=QQ}72
s24@0:8@16
@20@0:8s16
B28@0:8s16@20
^q24@0:8@16
B28@0:8s16r^q20
@24@0:8q16
Q40@0:8Q16Q24@32
q56@0:8@16q24Q32^{_NSRange=QQ}40^@48
q40@0:8{_NSRange=QQ}16@32
Q32@0:8Q16@24
v36@0:8@16@24B32
q48@0:8@16q24@32Q40
q92@0:8@16@24@32@40q48B56{_NSRange=QQ}60^{_NSRange=QQ}76^B84
@32@0:8q16^B24
@56@0:8@16@24@32@40@48
B32@0:8@16@24
@36@0:8@16B24@28
v24@0:8#16
@40@0:8@16@24@32
@"SMSourceSpecification"
@52@0:8{_NSRange=QQ}16q32q40s48
v44@0:8{_NSRange=QQ}16q32C40
Q20@0:8B16
[32S]
So13SMSourceModelC
SSSg
$sSY
So8NSNumberC
$ss21_ObjectiveCBridgeableP
ySo17SMSourceModelItemCGG
ySo17SMSourceModelItemCGG
ySo17SMSourceModelItemCG
callLabel
range
expressionRange
rawValue
location
length
RawValue
_ObjectiveCType
T@B)
