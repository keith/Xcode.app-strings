@(#)PROGRAM:DVTDeviceFoundation  PROJECT:DVTFrameworks-1
version
deviceIdentifier
macAddress
ipAddress
type
unknown
manual
bonjour proxy
bonjour advertisement
bonjour unknown source
NDAddress: unable to retrieve string from sockaddr instance, unknown address family (0x%X)
NDAddress: unable to decode device identifier
NDAddress: unable to decode MAC address for device identifier %@
NDAddress: unable to decode IP address for device identifier %@
<%@: %p, deviceIdentifier=%@, macAddress=%@, ipAddress=%@, type=%@>
NDAddress: unable to construct sockaddr_in6 instance from address '%@' (%@)
NDAddress: unable to construct sockaddr_in instance from address '%@' (%@)
NDAddress: checking port %d at address '%@'...
NDAddress: port %d is present at address '%@' (lookup took %.02f seconds)
NDAddress: port %d is NOT present at address '%@'
v8@?0
DVTNDM
DVTNetworkDeviceMonitorAddresses
DVTNetworkDeviceMonitorScanIntervalSeconds
IDEEnableNetworkDeviceMonitor
DVTNetworkDeviceMonitorEnablePassiveScan
NDM: DVTNetworkDeviceMonitor disabled
NDM: starting DVTNetworkDeviceMonitor
com.apple.dt.Xcode.DVTNetworkDeviceMonitor.ObservingQueue
com.apple.dt.Xcode.DVTNetworkDeviceMonitor.DeviceScanTimerSourcesLock
com.apple.dt.Xcode.DVTNetworkDeviceMonitor.DeviceAddressesLock
com.apple.dt.Xcode.DVTNetworkDeviceMonitor.ActiveDeviceBonjourLock
NDM: NOT passively scanning for available devices (set user default %@ to true and restart to enable)
NDM: stopping DVTNetworkDeviceMonitor
NDM: NDSB found service for '%@': %@
NDM: NDSB service %@ for device is no longer present
NDM: NDSB resolved address for '%@' for service named '%@': %@
NDM: NDSB removed actively advertised address for service named '%@': %@
NDM: passively scanning for available devices (set user default %@ to false and restart to disable)
availableDevices
v32@?0@8@"NSDictionary"16*24
NDM: started observing %@ (%@)
hasConnection
NDM: stopped observing %@ (%@)
NDM: started monitoring network status of %@ (%@)
NDM: skipping scan for %@ (%@) because it is connected
NDM: scanning for %@ (%@) at %lu potential device addresses
NDM: skipping unreachable address %@
NDM: scanning address %@
NDM: connected to %@ at address %@
NDM: failed to connect to %@ at address %@
ConcurrentQueue: %@
-[DVTNetworkDeviceMonitor _scanForDevice:potentialAddresses:]_block_invoke
NDM: not starting bonjour proxy for %@ (%@) because it is connected
NDM: starting bonjour proxy for %@ (%@)
NDM: started bonjour proxy for %@ address %@
NDM: active advertisement started for %@ after bonjour proxy started
NDM: failed to start bonjour proxy for %@ address %@ (%@)
v24@?0@"NSString"8@"NSError"16
NDM: stopped monitoring network status of %@ (%@)
NDM: looking for existing bonjour proxies to terminate for %@ (%@)
NDM: terminating existing bonjour proxy %@ for %@ (%@)
c16@?0@"NSString"8
@16@?0@"NSData"8
NDM: restored device address %@
NDM: saved device address %@
c16@?0@"<DVTBasicDevice>"8
v16@?0@"NSNotification"8
NDR: address unreachable (0x%x): %@
_apple-mobdev2._tcp.
com.apple.dt.Xcode.DVTNetworkDeviceServiceBrowser
NDSB: starting search
NDSB: stopping search
NDSB: did not search: %@
NDSB: found domain: %@
NDSB: removed domain: %@
NDSB: found service: %@
NDSB: can not resolve MAC address from service name '%@'
NDSB: will resolve addresses for service named '%@'
NDSB: removed service: %@
NDSB: service %@ resolved %lu addresses
NDSB: service %@ updated TXT record: %@
+[DVTNetworkDeviceARPTool arpLookupCallingCompletionHandlerOnQueue:completionHandler:]_block_invoke
/usr/sbin/arp
 ifscope 
 permanent 
ARP: failed to recognize tool output: '%@'
ARP: failed to recognize IP address in tool output: '%@'
ARP: failed to recognize MAC address in tool output: '%@'
@16@?0@"NSString"8
%@/%@
ARP: tool recognized %lu potential device addresses
v16@?0@"NSString"8
+[DVTNetworkDeviceIfconfigTool enumerateActiveUsableInterfacesCallingCompletionHandlerOnQueue:completionHandler:]_block_invoke
/sbin/ifconfig
flags=
BROADCAST
IFCONFIG: found unrecognized interface line: '%@'
awdl
IFCONFIG: found interface '%@'
inet 
 broadcast 
IFCONFIG: failed to find broadcast address for interface %@ in inet line '%@'
IFCONFIG: found broadcast address '%@' for interface '%@'
+[DVTNetworkDevicePingTool populateARPCacheByScanningInterface:completionQueue:completionBlock:]_block_invoke
PING: could not parse interface description '%@'
/sbin/ping
-i 1
-c 2
PING: output for %@ (took %.3f seconds):
_DVTNDLaunchTool_block_invoke
DVTNDTool: launching '%@ %@'
v16@?0@"NSFileHandle"8
DVTNDTool: %@ completed successfully
DVTNDTool: failed to launch %@: %@
DVTDeviceBonjourProxyErrorDomain
RemoteAddress
32498
DVTDeviceBonjourProxy: terminating existing proxy process for primary address %@ with pid %d
%@@%@
device-%@.local
v12@?0i8
Device has not been paired with this computer
The Device's primary (WiFi MAC) address is not known
Could not generate pairing token
_apple-mobdev2._tcp,%08lx
dns-sd
local
Bonjour proxy is running and listening for this device (pid %d forwarding to %@)
You can choose to kill this proxy or cancel to leave the current proxy running.
Cancel
Kill Process
c24@?0@"NSError"8q16
/usr/bin/dns-sd
Unable to connect to %@. The device did not respond in a reasonable amount of time. Is it awake and reachable?
the device
c16@?0@"DVTDevice"8
0.0.0.0
Failed to query C string for %@.
ether_aton failed for %@.
inet_ntop failed for %@: %d (%s)
Failed to create string for %s.
v16@?0@"NSArray"8
Connect to this device over the network
The operating system version on %@ does not support network development.
Disconnect the USB cable from %@ and pair with it over the network.
v16@?0@"DVTPromise"8
@"DVTFuture"16@?0@8
PinCode
Please enter the code displayed on the device
Pair to device...
v20@?0@"NSString"8c16
v16@?0@?<v@?@"NSString"c>8
Connect...
What is the remote address of the device?
Please enter a valid IP Address
Unpair Device
Xcode.DeviceType.iPhoneSimulator
com.apple.dt.Xcode.DVTDeviceSupport.Network.OperationQueue.%@
Device %@ has no stored remote address
-[DVTBuildTargetDevice initWithPlatform:]
DVTFrameworks/DVTDeviceFoundation/DVTBuildTargetDevice.m
((platform)) != nil
%@ should not be nil.
(platform)
dvtdevice-%@-%@:placeholder
((location)) != nil
(location)
Any %@ Host
Any %@ Device
watchos
Generic%@
com.apple.dt.Xcode.device.%@
PGO is unsupported for %@
-[DVTBuildTargetDevice debugXPCServices:onPairedDevice:completionSemaphore:]
Attempt to debug XPC services (%@) on placeholder device %@ (using paired device: %@) (the real device likely disconnected during attach)
__objc_no
Called DVTWarn
Xcode.DeviceType.Generic
com.apple.dt.Xcode.DVTDeviceTokenAction.TokenConnect
com.apple.dt.Xcode.DVTDeviceAction.EnableRemoteSSH
com.apple.dt.Xcode.DVTDeviceAction.UpdateRemoteSSHStatus
com.apple.dt.Xcode.DVTDeviceAction.SchemeActionValidation
com.apple.dt.Xcode.DVTDeviceFoundation.Network.Actions.EnableNetworkAccess
com.apple.dt.Xcode.DVTDeviceFoundation.Network.Actions.Connect
com.apple.dt.Xcode.DVTDeviceFoundation.Network.Actions.ExtendedPair
com.apple.dt.Xcode.DVTDeviceFoudation.Network.Actions.Forget
Xcode.DVTDeviceFoundation.DeviceActionProvider
providerClass
-[DVTAsyncDeviceAction initWithIdentifier:title:]
DVTFrameworks/DVTDeviceFoundation/DVTDeviceAction.m
((identifier)) != nil
(identifier)
((title)) != nil
(title)
com.apple.dt.Xcode.IDEInternalDeviceSupport.OperationQueue.%@
-[DVTAsyncDeviceAction shouldShowActionForDevice:]
method %@ is a subclass responsibility of %@
Operation not supported: device type not recognized
Operation not supported: device does not have a valid identifier
Operation not supported: the device is already busy performing this operation
-[DVTAsyncDeviceAction performForDevice:infoRequestHandler:completionHandler:]_block_invoke_2
-[DVTAsyncDeviceAction performForDevice:infoRequestHandler:completionHandler:]_block_invoke_4
-[DVTAsyncDeviceAction performForDevice:withArguments:infoRequestHandler:]
Xcode.DVTDeviceFoundation.Aspect
code
_Bool DVTDFSupportsAspect(NSString *__strong)_block_invoke_2
DVTFrameworks/DVTDeviceFoundation/DVTDeviceFoundation.m
((aspectCode)) != nil
(aspectCode)
IDEEnable%@
Xcode.DVTDeviceFoundation.CompatibleDeviceFamilyPair
pair
/Library/Developer/PrivateFrameworks/CoreDevice.framework/CoreDevice
DVTDeviceTokenConnectionDidAppearNotification
T@"NSString",&,N,V_defaultValue
T#,R
_observeDevice:
T@"NSString",&,N,V_key
_primaryAddress
T@"NSString",?,R,C
containsObject:
T@"NSString",R,C,N
dealloc
T@"NSString",R,C,N,V_ipAddress
deviceToolsType
TB,R
isGenericDevice
TXTRecordData
isProxy
Tq,R,N,V_type
lowercaseString
UTF8String
netServiceBrowserDidStopSearch:
_activeDeviceBonjourProxies
release
_activelyProxiedAddresses
_attemptToConnectToDevice:promisingDeviceAddress:
titleForDevice:
_bonjourProxyTaskWithError:
.cxx_destruct
T@"NSString",R,C,N,V_macAddress
T@"NSNumber",R,C
_operationQueue
T@"NSString",&,N,V_userPrompt
allKeys
T@"NSString",R,C
containsString:
T@"NSString",R,C,N,V_deviceIdentifier
deviceExtension
T@"NSString",R,N
disableLANConnectionsWithError:
TQ,R
isProxiedDevice
Tc,R
URLWithString:
netServiceBrowser:didNotSearch:
_activeDeviceBonjourLock
_activelyAdvertisedAddresses
restartBrowsing
_addPotentialDeviceAddress:
setKey:
_availableDevicesToken
userDescription
_browser
_browserQueue
_connectToDeviceWithTimeout:completionHandler:
_defaultValue
_delegate
_deviceAddresses
_deviceAddressesLock
_deviceForAdvertisedServiceName:devicesToSearch:
_deviceForProxiedServiceName:devicesToSearch:
_deviceForServiceName:type:
_deviceForUnknownServiceName:devicesToSearch:
_deviceIdentifier
_deviceIsActivelyAdvertising:
_deviceMACAddressFromServiceName:
_deviceObservingQueue
_deviceObservingTokens
_deviceRequiresSRPForNetworkDevelopment:
_deviceScanTimerSources
_deviceScanTimerSourcesLock
_deviceVersionSupportsNBDD:
_deviceWithIdentifier:
_dnssdTask
_enableRemoteSSHAction
_existingBonjourProxyProcessesMatchingPrimaryAddress:
_hostPairingToken
_identifier
_ipAddress
_key
_logAtLogLevel:withFormat:
_macAddress
_networkDeviceServiceBrowser
_observeAvailableDevices
_operationMap
_parameterMap
_potentialDeviceAddressesForDevice:
_processIdentifier
_remoteAddress
_restoreSavedDeviceAddresses
_saveDeviceAddresses
_savedServiceAddresses
_scanForDevice:potentialAddresses:
_services
_startMonitoringNetworkStatusOfDevice:
_stopMonitoringNetworkStatusOfDevice:
_stopObservingDevice:
_supportedArchitectures
_terminatePID:
_terminatePossiblyActiveProxyForDevice:
_title
_type
_unableToConnectErrorWithDeviceIdentifier:
_userPrompt
absoluteString
addObject:
addObjectsFromArray:
addParameterWithKey:userPrompt:defaultValue:
addressDataWithPort:
addresses
allApplicationArguments
allDeviceActions
allDeviceTokenActions
allSupportedArchitectures
allValues
appendData:
arpLookupCallingCompletionHandlerOnQueue:completionHandler:
array
arrayForKey:
arrayWithObjects:
arrayWithObjects:count:
asyncPerformLockedWriterBlock:
attemptConnectionToAddressAtPort:timeout:
autorelease
availableData
availableDevices
bonjourServiceName
boolForKey:
boolValue
buildVersion
bytes
canBeWatchCompanion
canConnectOnDemand
canSelectArchitectureToExecute
cancel
cancelForDevice:
cancelTrackingReachabilityForToken:
class
className
code
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
confirmationMessageForDevice:
conformsToProtocol:
connectToDeviceWithCompletionHandler:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentStateForDevice:
currentThread
data
dataWithBytes:length:
date
debugDescription
debugXPCServices:onPairedDevice:completionSemaphore:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultDeviceManager
defaultPlugInManager
defaultValue
defaultValueForDevice:ofParameterWithKey:
delegate
description
deviceActivationState
deviceAddressIsReachable:
deviceArchitecture
deviceAvailableCapacity
deviceBatteryCapacity
deviceBluetoothMAC
deviceChipID
deviceClass
deviceCodename
deviceColorString
deviceDeveloperModeStatus
deviceDevelopmentStatus
deviceECID
deviceEnclosureColorString
deviceIMEI
deviceIdentifier
deviceIsProduction
deviceName
deviceProductionSOC
deviceSerialNumber
deviceTotalCapacity
deviceType
deviceTypeWithIdentifier:
deviceWiFiMAC
dictionary
dictionaryWithObjects:forKeys:count:
displayName
displayOrder
domain
dvt_addObjectsFromArrayIfAbsent:
dvt_addObserverForName:object:queue:usingBlock:
dvt_anyObjectPassingTest:
dvt_anyObjectsPassTest:
dvt_archivedDataWithSecureRootObject:error:
dvt_arrayByApplyingBlock:
dvt_errorByInjectingUserInfoObjects:
dvt_errorWithDomain:errorCode:message:recoverySuggestion:recoveryOptions:andRecoveryBlock:
dvt_errorWithDomain:errorCode:messageFormat:
dvt_errorWithPOSIXErrorCode:messageFormat:
dvt_extendedInfo
dvt_isNonEmpty
dvt_newObserverForKeyPath:options:withHandlerBlock:
dvt_unarchiveObjectOfClasses:fromData:error:
dvt_versionNumberComparison:
enableLANConnections
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateActiveUsableInterfacesCallingCompletionHandlerOnQueue:completionHandler:
error
extendedPairWithPromise:extendedInformationHandler:
extensionPointWithIdentifier:
extensions
extraDebuggingRuntimeDylibPath
failWithError:
fileHandleForReading
firstObject
futureWithBlock:
futureWithResult:
hasCohortPlatforms
hasConnection
hasPrefix:
hasSuffix:
hasWiredConnection
hasWirelessConnection
hash
hookStandardOutputToPipe:closingParentEndOnLaunch:
hostPairingToken
hostname
identifier
init
initWithCoder:
initWithData:encoding:
initWithDelegate:
initWithDeviceIdentifier:hostPairingToken:primaryAddress:remoteAddress:
initWithDeviceIdentifier:macAddress:ipAddress:type:
initWithDeviceLocation:extension:
initWithIdentifier:title:
initWithPlatform:
initialize
intValue
integerForKey:
ipAddress
ipAddressFromAddressData:
ipAddressFromSockaddr:
isAvailable
isCancelled
isConcreteDevice
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isPaired
isPasscodeLocked
isRunning
isWireless
isWirelessEnabled
launchReturningError:
launchRunningTerminationHandlerOnQueue:error:terminationHandler:
length
localComputer
logAspectWithName:
macAddress
minimumOSForBackgroundFetchEvents
minimumOSForNetworkedDevelopment
modelCode
modelName
modelUTI
name
nativeArchitecture
netService:didAcceptConnectionWithInputStream:outputStream:
netService:didNotPublish:
netService:didNotResolve:
netService:didUpdateTXTRecordData:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceBrowserWillSearch:
netServiceDidPublish:
netServiceDidResolveAddress:
netServiceDidStop:
netServiceWillPublish:
netServiceWillResolve:
networkDeviceServiceBrowser:didFindServiceNamed:shouldResolve:
networkDeviceServiceBrowser:didRemoveIPAddress:deviceMACAddress:serviceName:
networkDeviceServiceBrowser:didResolveIPAddress:deviceMACAddress:serviceName:
newlineCharacterSet
numberWithInt:
object
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
operatingSystemVersion
orderedSetWithArray:
performForDevice:infoRequestHandler:completionHandler:
performForDevice:withArguments:infoRequestHandler:
performForDeviceToken:completionHandler:
performLockedReaderBlock:
performLockedWriterBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pipe
platform
populateARPCacheByScanningInterface:completionQueue:completionBlock:
preflightWithError:
presumedRemoteAddress
primaryAddress
processIdentifier
productVersion
qualityOfService
rangeOfCharacterFromSet:
rangeOfString:
readWriteDispatchLockWithDebugName:
registerDefaults:
removeAllObjects
removeObject:
removeObjectForKey:
requestProcessInformationsOnPairedDevice:handler:
requiresSRPForNetworkDevelopment
resolveWithTimeout:
respondsToSelector:
retain
retainCount
runtimeInternalStateContains:
searchForServicesOfType:inDomain:
self
sendSignal:error:
serviceName
setArguments:
setDefaultValue:
setDelegate:
setIdentifier:
setLaunchPath:
setObject:forKey:
setObject:forKeyedSubscript:
setPlatform:
setPresumedRemoteAddress:
setReadabilityHandler:
setUserPrompt:
setWithArray:
sharedReachability
shouldEnableActionForDevice:
shouldShowActionForDevice:
sockaddrWithPort:
standardUserDefaults
start
startProxyWithCompletionHandler:
startUpDevice
stop
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringWithFormat:
stringWithUTF8String:
substringFromIndex:
substringToIndex:
substringWithRange:
succeedWithResult:
superclass
supportedArchitectures
supportsArchiving
supportsAttachByPIDOrName
supportsDaemonDebugging
supportsFetchEvents
supportsLANConnections
supportsMainThreadChecker
supportsPGOReturningError:
supportsRecordedFrames
supportsSecureCoding
supportsUnpair
terminate
terminateExistingBonjourProxiesForDeviceWithPrimaryAddress:
then:
thinningProductType
timeIntervalSinceDate:
title
token
toolsInfo
tooltipForDevice:
trackReachabilityForDeviceAddresses:notificationBlock:
type
unpair
userCanToggleLANConnections
userInfo
userPrompt
valueForKey:
waitUntilFinished
whitespaceCharacterSet
zone
DVTNetworkDeviceAddress
NSSecureCoding
NSCoding
NSCopying
DVTNetworkDeviceARPScanner
DVTNetworkDeviceMonitor
DVTNetworkDeviceServiceBrowserDelegate
NSObject
DVTDeviceToken
DVTNetworkDeviceReachability
DVTNetworkDeviceReachabilityToken
DVTNetworkDeviceServiceBrowser
NSNetServiceBrowserDelegate
NSNetServiceDelegate
DVTNetworkDeviceARPTool
DVTNetworkDeviceIfconfigTool
DVTNetworkDevicePingTool
DVTDeviceBonjourProxy
DVTDNAEnableNetworkAccessAction
DVTDNAExtendedPairAction
DVTDNAConnectAction
DVTDNAForgetAction
DVTDNATokenConnectAction
DVTDeviceTokenAction
DVTDeviceNetworkActionProvider
DVTDeviceActionProvider
DVTBuildTargetDevice
DVTAsyncDeviceAction
DVTDeviceAction
DVTAsyncDeviceActionParameter
c16@0:8
@24@0:8^{sockaddr=CC[14c]}16
@24@0:8@16
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32q40
Q16@0:8
c24@0:8@16
@16@0:8
^{sockaddr=CC[14c]}20@0:8i16
@20@0:8i16
B28@0:8i16d20
q16@0:8
v16@0:8
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24^B32
v48@0:8@16@24@32@40
v40@0:8@"DVTNetworkDeviceServiceBrowser"16@"NSString"24^B32
v48@0:8@"DVTNetworkDeviceServiceBrowser"16@"NSString"24@"NSString"32@"NSString"40
B24@0:8@16
v32@0:8@16@24
@32@0:8@16^q24
@32@0:8@16@24
@"DVTObservingToken"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"DVTDispatchLock"
@"DVTNetworkDeviceServiceBrowser"
v32@0:8@16@?24
B16@0:8
v32@0:8@"DVTPromise"16@?<v@?@?<v@?@"NSString"c>>24
@"NSNumber"16@0:8
@32@0:8@16@?24
v36@0:8@16@24c32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24c32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24c32
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetServiceBrowser"
@"NSMutableSet"
@"NSObject<DVTNetworkDeviceServiceBrowserDelegate>"
v40@0:8@16@24@?32
v20@0:8i16
@48@0:8@16@24@32@40
c24@0:8^@16
v24@0:8@?16
v32@0:8Q16@?24
@24@0:8^@16
@"DVTTask"
@"NSNumber"
Q24@0:8@16
@40@0:8@16@24@?32
@"DVTAsyncDeviceAction"
v32@0:8@"<DVTDeviceToken>"16@?<v@?@"NSError">24
@"NSArray"16@0:8
v28@0:8c16@?20
v36@0:8@16c24@28
@"NSOrderedSet"
v40@0:8@16@?24@?32
@"NSString"24@0:8@"<DVTBasicDevice>"16
B24@0:8@"<DVTBasicDevice>"16
Q24@0:8@"<DVTBasicDevice>"16
v40@0:8@"<DVTBasicDevice>"16@?<v@?@"<DVTDeviceAction>"@"<DVTBasicDevice>"@"NSString"@"NSString"@"NSString"@?<v@?@"NSString"c>>24@?<v@?c@"NSError">32
v24@0:8@"<DVTBasicDevice>"16
@(#)PROGRAM:DVTDeviceFoundation  PROJECT:DVTFrameworks-1
version
deviceIdentifier
macAddress
ipAddress
type
unknown
manual
bonjour proxy
bonjour advertisement
bonjour unknown source
NDAddress: unable to retrieve string from sockaddr instance, unknown address family (0x%X)
NDAddress: unable to decode device identifier
NDAddress: unable to decode MAC address for device identifier %@
NDAddress: unable to decode IP address for device identifier %@
<%@: %p, deviceIdentifier=%@, macAddress=%@, ipAddress=%@, type=%@>
NDAddress: unable to construct sockaddr_in6 instance from address '%@' (%@)
NDAddress: unable to construct sockaddr_in instance from address '%@' (%@)
NDAddress: checking port %d at address '%@'...
NDAddress: port %d is present at address '%@' (lookup took %.02f seconds)
NDAddress: port %d is NOT present at address '%@'
v8@?0
DVTNDM
DVTNetworkDeviceMonitorAddresses
DVTNetworkDeviceMonitorScanIntervalSeconds
IDEEnableNetworkDeviceMonitor
DVTNetworkDeviceMonitorEnablePassiveScan
NDM: DVTNetworkDeviceMonitor disabled
NDM: starting DVTNetworkDeviceMonitor
com.apple.dt.Xcode.DVTNetworkDeviceMonitor.ObservingQueue
com.apple.dt.Xcode.DVTNetworkDeviceMonitor.DeviceScanTimerSourcesLock
com.apple.dt.Xcode.DVTNetworkDeviceMonitor.DeviceAddressesLock
com.apple.dt.Xcode.DVTNetworkDeviceMonitor.ActiveDeviceBonjourLock
NDM: NOT passively scanning for available devices (set user default %@ to true and restart to enable)
NDM: stopping DVTNetworkDeviceMonitor
NDM: NDSB found service for '%@': %@
NDM: NDSB service %@ for device is no longer present
NDM: NDSB resolved address for '%@' for service named '%@': %@
NDM: NDSB removed actively advertised address for service named '%@': %@
NDM: passively scanning for available devices (set user default %@ to false and restart to disable)
availableDevices
v32@?0@8@"NSDictionary"16^B24
NDM: started observing %@ (%@)
hasConnection
NDM: stopped observing %@ (%@)
NDM: started monitoring network status of %@ (%@)
NDM: skipping scan for %@ (%@) because it is connected
NDM: scanning for %@ (%@) at %lu potential device addresses
NDM: skipping unreachable address %@
NDM: scanning address %@
NDM: connected to %@ at address %@
NDM: failed to connect to %@ at address %@
ConcurrentQueue: %@
-[DVTNetworkDeviceMonitor _scanForDevice:potentialAddresses:]_block_invoke
NDM: not starting bonjour proxy for %@ (%@) because it is connected
NDM: starting bonjour proxy for %@ (%@)
NDM: started bonjour proxy for %@ address %@
NDM: active advertisement started for %@ after bonjour proxy started
NDM: failed to start bonjour proxy for %@ address %@ (%@)
v24@?0@"NSString"8@"NSError"16
NDM: stopped monitoring network status of %@ (%@)
NDM: looking for existing bonjour proxies to terminate for %@ (%@)
NDM: terminating existing bonjour proxy %@ for %@ (%@)
B16@?0@"NSString"8
@16@?0@"NSData"8
NDM: restored device address %@
NDM: saved device address %@
B16@?0@"<DVTBasicDevice>"8
v16@?0@"NSNotification"8
NDR: address unreachable (0x%x): %@
_apple-mobdev2._tcp.
com.apple.dt.Xcode.DVTNetworkDeviceServiceBrowser
NDSB: starting search
NDSB: stopping search
NDSB: did not search: %@
NDSB: found domain: %@
NDSB: removed domain: %@
NDSB: found service: %@
NDSB: can not resolve MAC address from service name '%@'
NDSB: will resolve addresses for service named '%@'
NDSB: removed service: %@
NDSB: service %@ resolved %lu addresses
NDSB: service %@ updated TXT record: %@
+[DVTNetworkDeviceARPTool arpLookupCallingCompletionHandlerOnQueue:completionHandler:]_block_invoke
/usr/sbin/arp
 ifscope 
 permanent 
ARP: failed to recognize tool output: '%@'
ARP: failed to recognize IP address in tool output: '%@'
ARP: failed to recognize MAC address in tool output: '%@'
@16@?0@"NSString"8
%@/%@
ARP: tool recognized %lu potential device addresses
v16@?0@"NSString"8
+[DVTNetworkDeviceIfconfigTool enumerateActiveUsableInterfacesCallingCompletionHandlerOnQueue:completionHandler:]_block_invoke
/sbin/ifconfig
flags=
BROADCAST
IFCONFIG: found unrecognized interface line: '%@'
awdl
IFCONFIG: found interface '%@'
inet 
 broadcast 
IFCONFIG: failed to find broadcast address for interface %@ in inet line '%@'
IFCONFIG: found broadcast address '%@' for interface '%@'
+[DVTNetworkDevicePingTool populateARPCacheByScanningInterface:completionQueue:completionBlock:]_block_invoke
PING: could not parse interface description '%@'
/sbin/ping
-i 1
-c 2
PING: output for %@ (took %.3f seconds):
_DVTNDLaunchTool_block_invoke
DVTNDTool: launching '%@ %@'
v16@?0@"NSFileHandle"8
DVTNDTool: %@ completed successfully
DVTNDTool: failed to launch %@: %@
DVTDeviceBonjourProxyErrorDomain
RemoteAddress
32498
DVTDeviceBonjourProxy: terminating existing proxy process for primary address %@ with pid %d
%@@%@
device-%@.local
v12@?0i8
Device has not been paired with this computer
The Device's primary (WiFi MAC) address is not known
Could not generate pairing token
_apple-mobdev2._tcp,%08lx
dns-sd
local
Bonjour proxy is running and listening for this device (pid %d forwarding to %@)
You can choose to kill this proxy or cancel to leave the current proxy running.
Cancel
Kill Process
B24@?0@"NSError"8q16
/usr/bin/dns-sd
Unable to connect to %@. The device did not respond in a reasonable amount of time. Is it awake and reachable?
the device
B16@?0@"DVTDevice"8
0.0.0.0
Failed to query C string for %@.
ether_aton failed for %@.
inet_ntop failed for %@: %d (%s)
Failed to create string for %s.
v16@?0@"NSArray"8
Connect to this device over the network
The operating system version on %@ does not support network development.
Disconnect the USB cable from %@ and pair with it over the network.
v16@?0@"DVTPromise"8
@"DVTFuture"16@?0@8
PinCode
Please enter the code displayed on the device
Pair to device...
v20@?0@"NSString"8B16
v16@?0@?<v@?@"NSString"B>8
Connect...
What is the remote address of the device?
Please enter a valid IP Address
Unpair Device
Xcode.DeviceType.iPhoneSimulator
com.apple.dt.Xcode.DVTDeviceSupport.Network.OperationQueue.%@
Device %@ has no stored remote address
-[DVTBuildTargetDevice initWithPlatform:]
DVTFrameworks/DVTDeviceFoundation/DVTBuildTargetDevice.m
((platform)) != nil
%@ should not be nil.
(platform)
dvtdevice-%@-%@:placeholder
((location)) != nil
(location)
Any %@ Host
Any %@ Device
watchos
Generic%@
com.apple.dt.Xcode.device.%@
PGO is unsupported for %@
-[DVTBuildTargetDevice debugXPCServices:onPairedDevice:completionSemaphore:]
Attempt to debug XPC services (%@) on placeholder device %@ (using paired device: %@) (the real device likely disconnected during attach)
__objc_no
Called DVTWarn
Xcode.DeviceType.Generic
com.apple.dt.Xcode.DVTDeviceTokenAction.TokenConnect
com.apple.dt.Xcode.DVTDeviceAction.EnableRemoteSSH
com.apple.dt.Xcode.DVTDeviceAction.UpdateRemoteSSHStatus
com.apple.dt.Xcode.DVTDeviceAction.SchemeActionValidation
com.apple.dt.Xcode.DVTDeviceFoundation.Network.Actions.EnableNetworkAccess
com.apple.dt.Xcode.DVTDeviceFoundation.Network.Actions.Connect
com.apple.dt.Xcode.DVTDeviceFoundation.Network.Actions.ExtendedPair
com.apple.dt.Xcode.DVTDeviceFoudation.Network.Actions.Forget
Xcode.DVTDeviceFoundation.DeviceActionProvider
providerClass
-[DVTAsyncDeviceAction initWithIdentifier:title:]
DVTFrameworks/DVTDeviceFoundation/DVTDeviceAction.m
((identifier)) != nil
(identifier)
((title)) != nil
(title)
com.apple.dt.Xcode.IDEInternalDeviceSupport.OperationQueue.%@
-[DVTAsyncDeviceAction shouldShowActionForDevice:]
method %@ is a subclass responsibility of %@
Operation not supported: device type not recognized
Operation not supported: device does not have a valid identifier
Operation not supported: the device is already busy performing this operation
-[DVTAsyncDeviceAction performForDevice:infoRequestHandler:completionHandler:]_block_invoke_2
-[DVTAsyncDeviceAction performForDevice:infoRequestHandler:completionHandler:]_block_invoke_4
-[DVTAsyncDeviceAction performForDevice:withArguments:infoRequestHandler:]
Xcode.DVTDeviceFoundation.Aspect
code
_Bool DVTDFSupportsAspect(NSString *__strong)_block_invoke_2
DVTFrameworks/DVTDeviceFoundation/DVTDeviceFoundation.m
((aspectCode)) != nil
(aspectCode)
IDEEnable%@
Xcode.DVTDeviceFoundation.CompatibleDeviceFamilyPair
pair
/Library/Developer/PrivateFrameworks/CoreDevice.framework/CoreDevice
DVTDeviceTokenConnectionDidAppearNotification
T@"NSString",&,N,V_defaultValue
T#,R
_observeDevice:
T@"NSString",&,N,V_key
_primaryAddress
T@"NSString",?,R,C
containsObject:
T@"NSString",R,C,N
dealloc
T@"NSString",R,C,N,V_ipAddress
deviceToolsType
TB,R
isGenericDevice
TXTRecordData
isProxy
URLWithString:
lowercaseString
_activeDeviceBonjourLock
netServiceBrowserDidStopSearch:
_activelyAdvertisedAddresses
release
_addPotentialDeviceAddress:
_availableDevicesToken
titleForDevice:
_browser
.cxx_destruct
T@"NSString",R,C,N,V_macAddress
T@"NSNumber",R,C
_operationQueue
T@"NSString",&,N,V_userPrompt
allKeys
T@"NSString",R,C
containsString:
T@"NSString",R,C,N,V_deviceIdentifier
deviceExtension
T@"NSString",R,N
disableLANConnectionsWithError:
TQ,R
isProxiedDevice
Tq,R,N,V_type
UTF8String
netServiceBrowser:didNotSearch:
_activeDeviceBonjourProxies
_activelyProxiedAddresses
restartBrowsing
_attemptToConnectToDevice:promisingDeviceAddress:
setKey:
_bonjourProxyTaskWithError:
userDescription
_browserQueue
_connectToDeviceWithTimeout:completionHandler:
_defaultValue
_delegate
_deviceAddresses
_deviceAddressesLock
_deviceForAdvertisedServiceName:devicesToSearch:
_deviceForProxiedServiceName:devicesToSearch:
_deviceForServiceName:type:
_deviceForUnknownServiceName:devicesToSearch:
_deviceIdentifier
_deviceIsActivelyAdvertising:
_deviceMACAddressFromServiceName:
_deviceObservingQueue
_deviceObservingTokens
_deviceRequiresSRPForNetworkDevelopment:
_deviceScanTimerSources
_deviceScanTimerSourcesLock
_deviceVersionSupportsNBDD:
_deviceWithIdentifier:
_dnssdTask
_enableRemoteSSHAction
_existingBonjourProxyProcessesMatchingPrimaryAddress:
_hostPairingToken
_identifier
_ipAddress
_key
_logAtLogLevel:withFormat:
_macAddress
_networkDeviceServiceBrowser
_observeAvailableDevices
_operationMap
_parameterMap
_potentialDeviceAddressesForDevice:
_processIdentifier
_remoteAddress
_restoreSavedDeviceAddresses
_saveDeviceAddresses
_savedServiceAddresses
_scanForDevice:potentialAddresses:
_services
_startMonitoringNetworkStatusOfDevice:
_stopMonitoringNetworkStatusOfDevice:
_stopObservingDevice:
_supportedArchitectures
_terminatePID:
_terminatePossiblyActiveProxyForDevice:
_title
_type
_unableToConnectErrorWithDeviceIdentifier:
_userPrompt
absoluteString
addObject:
addObjectsFromArray:
addParameterWithKey:userPrompt:defaultValue:
addressDataWithPort:
addresses
allApplicationArguments
allDeviceActions
allDeviceTokenActions
allSupportedArchitectures
allValues
appendData:
arpLookupCallingCompletionHandlerOnQueue:completionHandler:
array
arrayForKey:
arrayWithObjects:
arrayWithObjects:count:
asyncPerformLockedWriterBlock:
attemptConnectionToAddressAtPort:timeout:
autorelease
availableData
availableDevices
bonjourServiceName
boolForKey:
boolValue
buildVersion
bytes
canBeWatchCompanion
canConnectOnDemand
canSelectArchitectureToExecute
cancel
cancelForDevice:
cancelTrackingReachabilityForToken:
class
className
code
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
confirmationMessageForDevice:
conformsToProtocol:
connectToDeviceWithCompletionHandler:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentStateForDevice:
currentThread
data
dataWithBytes:length:
date
debugDescription
debugXPCServices:onPairedDevice:completionSemaphore:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultDeviceManager
defaultPlugInManager
defaultValue
defaultValueForDevice:ofParameterWithKey:
delegate
description
deviceActivationState
deviceAddressIsReachable:
deviceArchitecture
deviceAvailableCapacity
deviceBatteryCapacity
deviceBluetoothMAC
deviceChipID
deviceClass
deviceCodename
deviceColorString
deviceDeveloperModeStatus
deviceDevelopmentStatus
deviceECID
deviceEnclosureColorString
deviceIMEI
deviceIdentifier
deviceIsProduction
deviceName
deviceProductionSOC
deviceSerialNumber
deviceTotalCapacity
deviceType
deviceTypeWithIdentifier:
deviceWiFiMAC
dictionary
dictionaryWithObjects:forKeys:count:
displayName
displayOrder
domain
dvt_addObjectsFromArrayIfAbsent:
dvt_addObserverForName:object:queue:usingBlock:
dvt_anyObjectPassingTest:
dvt_anyObjectsPassTest:
dvt_archivedDataWithSecureRootObject:error:
dvt_arrayByApplyingBlock:
dvt_errorByInjectingUserInfoObjects:
dvt_errorWithDomain:errorCode:message:recoverySuggestion:recoveryOptions:andRecoveryBlock:
dvt_errorWithDomain:errorCode:messageFormat:
dvt_errorWithPOSIXErrorCode:messageFormat:
dvt_extendedInfo
dvt_isNonEmpty
dvt_newObserverForKeyPath:options:withHandlerBlock:
dvt_unarchiveObjectOfClasses:fromData:error:
dvt_versionNumberComparison:
enableLANConnections
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateActiveUsableInterfacesCallingCompletionHandlerOnQueue:completionHandler:
error
extendedPairWithPromise:extendedInformationHandler:
extensionPointWithIdentifier:
extensions
extraDebuggingRuntimeDylibPath
failWithError:
fileHandleForReading
firstObject
futureWithBlock:
futureWithResult:
hasCohortPlatforms
hasConnection
hasPrefix:
hasSuffix:
hasWiredConnection
hasWirelessConnection
hash
hookStandardOutputToPipe:closingParentEndOnLaunch:
hostPairingToken
hostname
identifier
init
initWithCoder:
initWithData:encoding:
initWithDelegate:
initWithDeviceIdentifier:hostPairingToken:primaryAddress:remoteAddress:
initWithDeviceIdentifier:macAddress:ipAddress:type:
initWithDeviceLocation:extension:
initWithIdentifier:title:
initWithPlatform:
initialize
intValue
integerForKey:
ipAddress
ipAddressFromAddressData:
ipAddressFromSockaddr:
isAvailable
isCancelled
isConcreteDevice
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isPaired
isPasscodeLocked
isRunning
isWireless
isWirelessEnabled
launchReturningError:
launchRunningTerminationHandlerOnQueue:error:terminationHandler:
length
localComputer
logAspectWithName:
macAddress
minimumOSForBackgroundFetchEvents
minimumOSForNetworkedDevelopment
modelCode
modelName
modelUTI
name
nativeArchitecture
netService:didAcceptConnectionWithInputStream:outputStream:
netService:didNotPublish:
netService:didNotResolve:
netService:didUpdateTXTRecordData:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceBrowserWillSearch:
netServiceDidPublish:
netServiceDidResolveAddress:
netServiceDidStop:
netServiceWillPublish:
netServiceWillResolve:
networkDeviceServiceBrowser:didFindServiceNamed:shouldResolve:
networkDeviceServiceBrowser:didRemoveIPAddress:deviceMACAddress:serviceName:
networkDeviceServiceBrowser:didResolveIPAddress:deviceMACAddress:serviceName:
newlineCharacterSet
numberWithInt:
object
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
operatingSystemVersion
orderedSetWithArray:
performForDevice:infoRequestHandler:completionHandler:
performForDevice:withArguments:infoRequestHandler:
performForDeviceToken:completionHandler:
performLockedReaderBlock:
performLockedWriterBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pipe
platform
populateARPCacheByScanningInterface:completionQueue:completionBlock:
preflightWithError:
presumedRemoteAddress
primaryAddress
processIdentifier
productVersion
qualityOfService
rangeOfCharacterFromSet:
rangeOfString:
readWriteDispatchLockWithDebugName:
registerDefaults:
removeAllObjects
removeObject:
removeObjectForKey:
requestProcessInformationsOnPairedDevice:handler:
requiresSRPForNetworkDevelopment
resolveWithTimeout:
respondsToSelector:
retain
retainCount
runtimeInternalStateContains:
searchForServicesOfType:inDomain:
self
sendSignal:error:
serviceName
setArguments:
setDefaultValue:
setDelegate:
setIdentifier:
setLaunchPath:
setObject:forKey:
setObject:forKeyedSubscript:
setPlatform:
setPresumedRemoteAddress:
setReadabilityHandler:
setUserPrompt:
setWithArray:
sharedReachability
shouldEnableActionForDevice:
shouldShowActionForDevice:
sockaddrWithPort:
standardUserDefaults
start
startProxyWithCompletionHandler:
startUpDevice
stop
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringWithFormat:
stringWithUTF8String:
substringFromIndex:
substringToIndex:
substringWithRange:
succeedWithResult:
superclass
supportedArchitectures
supportsArchiving
supportsAttachByPIDOrName
supportsDaemonDebugging
supportsFetchEvents
supportsLANConnections
supportsMainThreadChecker
supportsPGOReturningError:
supportsRecordedFrames
supportsSecureCoding
supportsUnpair
terminate
terminateExistingBonjourProxiesForDeviceWithPrimaryAddress:
then:
thinningProductType
timeIntervalSinceDate:
title
token
toolsInfo
tooltipForDevice:
trackReachabilityForDeviceAddresses:notificationBlock:
type
unpair
userCanToggleLANConnections
userInfo
userPrompt
valueForKey:
waitUntilFinished
whitespaceCharacterSet
zone
DVTNetworkDeviceAddress
NSSecureCoding
NSCoding
NSCopying
DVTNetworkDeviceARPScanner
DVTNetworkDeviceMonitor
DVTNetworkDeviceServiceBrowserDelegate
NSObject
DVTDeviceToken
DVTNetworkDeviceReachability
DVTNetworkDeviceReachabilityToken
DVTNetworkDeviceServiceBrowser
NSNetServiceBrowserDelegate
NSNetServiceDelegate
DVTNetworkDeviceARPTool
DVTNetworkDeviceIfconfigTool
DVTNetworkDevicePingTool
DVTDeviceBonjourProxy
DVTDNAEnableNetworkAccessAction
DVTDNAExtendedPairAction
DVTDNAConnectAction
DVTDNAForgetAction
DVTDNATokenConnectAction
DVTDeviceTokenAction
DVTDeviceNetworkActionProvider
DVTDeviceActionProvider
DVTBuildTargetDevice
DVTAsyncDeviceAction
DVTDeviceAction
DVTAsyncDeviceActionParameter
B16@0:8
@24@0:8^{sockaddr=CC[14c]}16
@24@0:8@16
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32q40
Q16@0:8
B24@0:8@16
@16@0:8
^{sockaddr=CC[14c]}20@0:8i16
@20@0:8i16
B28@0:8i16d20
q16@0:8
v16@0:8
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24^B32
v48@0:8@16@24@32@40
v40@0:8@"DVTNetworkDeviceServiceBrowser"16@"NSString"24^B32
v48@0:8@"DVTNetworkDeviceServiceBrowser"16@"NSString"24@"NSString"32@"NSString"40
v32@0:8@16@24
@32@0:8@16^q24
@32@0:8@16@24
@"DVTObservingToken"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"DVTDispatchLock"
@"DVTNetworkDeviceServiceBrowser"
v32@0:8@16@?24
v32@0:8@"DVTPromise"16@?<v@?@?<v@?@"NSString"B>>24
@"NSNumber"16@0:8
@32@0:8@16@?24
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetServiceBrowser"
@"NSMutableSet"
@"NSObject<DVTNetworkDeviceServiceBrowserDelegate>"
v40@0:8@16@24@?32
v20@0:8i16
@48@0:8@16@24@32@40
B24@0:8^@16
v24@0:8@?16
v32@0:8Q16@?24
@24@0:8^@16
@"DVTTask"
@"NSNumber"
Q24@0:8@16
@40@0:8@16@24@?32
@"DVTAsyncDeviceAction"
v32@0:8@"<DVTDeviceToken>"16@?<v@?@"NSError">24
@"NSArray"16@0:8
v28@0:8B16@?20
v36@0:8@16B24@28
@"NSOrderedSet"
v40@0:8@16@?24@?32
@"NSString"24@0:8@"<DVTBasicDevice>"16
B24@0:8@"<DVTBasicDevice>"16
Q24@0:8@"<DVTBasicDevice>"16
v40@0:8@"<DVTBasicDevice>"16@?<v@?@"<DVTDeviceAction>"@"<DVTBasicDevice>"@"NSString"@"NSString"@"NSString"@?<v@?@"NSString"B>>24@?<v@?B@"NSError">32
v24@0:8@"<DVTBasicDevice>"16
