@(#)PROGRAM:DVTViewControllerKit  PROJECT:DVTFrameworks-23175.17
_checkKvoWindow
T#,R
_window
T@"DVTStackBacktrace",?,&
containsObject:
T@"DVTViewController",&
hostViewControllerWillUninstall
T@"DVTViewController<DVTMainViewControllerDrawingStrategyDelegate>",R,V_delegate
isDescendantOf:
T@"NSString",?,R,C
isValid
T@"NSString",R,C
release
T@"NSView",R
setNextKeyView:
.cxx_destruct
_viewDidInstall
T@"DVTExtension",&,N,V_representedExtension
bundleForClass:
T@"DVTStackBacktrace",?,R
countForObject:
T@"DVTViewController",R
initWithWindow:
T@"NSBundle",R
isProxy
T@"NSString",R
nibName
T@"NSView",&
T@"NSWindow",W,V_window
T@"NSWindowController",R
TQ,R
Tc,?,R,N,GisValid
Tc,R
Tc,V_isViewLoaded
__isDVTInvalidation
_appActivationObservation
_appDeactivationObservation
_appIsActive
_delegate
_didInstall
_dvt_mainViewControllerMonitor
_firstResponderObservingToken
_installed
_interposeViewControllerNotifyingLifecycleMethodsIfNecessaryForView:
_isInstalled
_isViewLoaded
_kvoWindow
_mainViewController
_mainViewControllerIsValidObservingToken
_mainViewControllerToken
_monitorWholeTree
_originalClassBeforeLifecycleInterposingInstalled
_representedExtension
_requiresConstraintBasedLayout
_treeHasMainViewController
_viewControllerIsMain
_viewDidMoveToSuperView
_viewDidMoveToWindow
_viewWillChangeSuperview
_viewWillChangeWindow
_viewWillUninstall
_windowActivationToken
_windowIsKey
_windowWillClose:
addAutoCancelledObject:
addAutoInvalidatedObject:
addObject:
addObserver:selector:name:object:
appActivationChanged
appendFormat:
array
assertionBehaviorAfterEndOfEventForSelector:
assertionBehaviorForKeyValueObservationsAtEndOfEvent
automaticallyNotifiesObserversOfDvt_mainViewController
automaticallyNotifiesObserversOf_dvt_mainViewControllerMonitor
autorelease
boolForKey:
canBecomeMainViewController
cancel
class
commitEditing
commitEditingForAction:errors:
compileTimeClassNameFromRuntimeClassName:
conformsToProtocol:
countByEnumeratingWithState:objects:count:
creationBacktrace
currentStackBacktrace
debugDescription
defaultCenter
defaultNibBundle
defaultNibName
defaultViewNibBundle
defaultViewNibName
delegate
delegateFirstResponder
description
descriptionForAssertionMessage
didChangeValueForKey:
discardEditing
dvtViewController_commonInit
dvt_addObserverForName:object:queue:usingBlock:
dvt_clearNibBindings
dvt_isAncestorOfResponder:
dvt_mainViewController
dvt_newObserverForKeyPath:options:withHandlerBlock:
dvt_registerActivationStateObserver:
dvt_synthesizeInvalidation
dvt_updateMainViewControllerUsingResponderChain
dvt_viewController
dvt_viewControllerWillUninstall:
firstResponder
hash
hostViewControllerDidInstall
init
initUsingDefaultNib
initWithCoder:
initWithDelegate:monitorWholeTree:
initWithNibName:bundle:
initialize
instanceMethodForSelector:
invalidate
invalidationBacktrace
isActive
isEqual:
isKeyWindow
isKindOfClass:
isMemberOfClass:
isViewLoaded
keyPathsForValuesAffectingMainViewControllerInParentWindow
keyPathsForValuesAffectingParentWindowController
loadView
mainViewController
mainViewControllerChanged
mainViewControllerDrawingStrategyActivationStateDidChange:
mainViewControllerInParentWindow
nextKeyView
nextResponder
parentWindowController
pathForResource:ofType:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
primitiveInvalidate
rangeOfString:
removeFromSuperviewWithoutNeedingDisplay
removeObject:
removeObserver:name:object:
representedExtension
requiresUninstallAfterLoadView
respondsToSelector:
retain
retainCount
self
separateKeyViewLoops
setCreationBacktrace:
setDvt_mainViewController:
setDvt_viewController:
setFlag:toValue:
setIsViewLoaded:
setMainViewController:
setNextResponder:
setRepresentedExtension:
setView:
setWindow:
setWithObject:
set_dvt_mainViewControllerMonitor:
shouldHaveActiveAppearance
standardUserDefaults
startMonitoringMainViewControllerInWindow:
stopMonitoringMainViewControllerInWindow:
string
stringByReplacingOccurrencesOfString:withString:
stringRepresentation
stringRepresentationWithAddresses:
stringWithFormat:
stringWithUTF8String:
substringFromIndex:
substringToIndex:
superclass
superview
supplementalMainViewController
supportsInvalidationPrevention
title
valid
view
viewControllerUsingDefaultNib
viewDidAppear
viewDidDisappear
viewDidInstall
viewDidMoveToSuperview
viewDidMoveToWindow
viewIfLoaded
viewWillMoveToSuperview:
viewWillMoveToWindow:
viewWillUninstall
willChangeValueForKey:
window
window:didChangeActivationState:
windowController
zone
dvt_mainViewController
_dvt_mainViewControllerMonitor
-[_DVTMainViewControllerMonitor initWithWindow:]
DVTFrameworks/DVTViewControllerKit/View Controllers/DVTMainViewControllerMonitor.m
((window)) != nil
%@ should not be nil.
(window)
((void *)0) == window._dvt_mainViewControllerMonitor
firstResponder
v32@?0@8@"NSDictionary"16*24
valid
-[_DVTMainViewControllerMonitor setMainViewController:]_block_invoke
DVTIsMainThread()
code should be running on main thread
viewController != self.mainViewController
self.mainViewController is still: %@
v32@?0@"DVTViewController"8@"NSDictionary"16*24
-[DVTMainViewControllerDrawingStrategy initWithDelegate:monitorWholeTree:]
DVTFrameworks/DVTViewControllerKit/View Controllers/DVTMainViewControllerDrawingStrategy.m
![_delegate isViewLoaded]
-[DVTMainViewControllerDrawingStrategy primitiveInvalidate]
((_windowActivationToken)) == nil
%@ should be nil, but it is %@
(_windowActivationToken)
((_appActivationObservation)) == nil
(_appActivationObservation)
((_appDeactivationObservation)) == nil
(_appDeactivationObservation)
((_mainViewControllerToken)) == nil
(_mainViewControllerToken)
-[DVTMainViewControllerDrawingStrategy hostViewControllerDidInstall]
(([[_delegate view] window])) != nil
([[_delegate view] window])
v16@?0@"NSNotification"8
mainViewControllerInParentWindow
representedObject
Controller
-[DVTViewController invalidate]
DVTFrameworks/DVTViewControllerKit/View Controllers/DVTViewController.m
((void *)0) == [[self view] window]
Calling -invalidate while self.view is still in a window that may still be visible to the user.
window: %@ '%@'
window.delegate: %@
superviews:%@
creationBacktrace:%@
DVTViewController_DisableDidCallViewWillUninstallAssertions
_isInstalled == __objc_no
Calling -invalidate without calling -viewWillUninstall first. Set the DVTViewController_DisableDidCallViewWillUninstallAssertions default to YES to disable this.
-[DVTViewController primitiveInvalidate]
%@ was invalidated while still attached to %@
__objc_no
Called DVTWarn
((aClass)) != nil
(aClass)
Did not call -viewWillUninstall for %@
-[DVTViewController primitiveInvalidate]_block_invoke_2
didInstall
-loadView was called but the custom -viewWillUninstall was never called because the view was never added to a window. Since this object implements -viewWillUninstall it may have done setup in -loadView and not have completed all necessary teardown.
creationBacktrace:
v8@?0
-[DVTViewController setRepresentedExtension:]
!extension || (_representedExtension == ((void *)0))
Represented extension is already set.
<%@: %p representing: %@>
%@, 
%@ (repeated keyview)
-[DVTViewController separateKeyViewLoops]
The following views created a nextKeyView loop. This is a serious issue and should be fixed: %@
-[DVTViewController setView:]
[invalidatableView isValid]
Message sent to invalidated object: <%@ %p>.
invalidationBacktrace:
creationBacktrace:
The view controller: "%@" is loading the nib file: "%@".
-[DVTViewController _viewDidInstall]
((self)) != nil
(self)
[self isValid]
__objc_no == _isInstalled
((void *)0) != view.superview
((void *)0) != window
-[DVTViewController _viewWillUninstall]
_isInstalled
_kvoWindow.dvt_mainViewController
_kvoWindow.windowController
_kvoWindow
%s_ControlledBy_%@
DVTMainViewControllerMonitorAdditions
_DVTMainViewControllerMonitor
DVTInvalidation
NSObject
DVTMainViewControllerMonitor
DVTMainViewControllerDrawingStrategy
DVTWindowActivationStateObserver
DVTViewController
DVTEditor
_DVTViewController_ViewLifecycleInterpositions
@16@0:8
v24@0:8@16
v16@0:8
Q16@0:8
c16@0:8
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
Q24@0:8:16
v24@0:8@"<DVTInvalidation>"16
v24@0:8@"<DVTCancellable>"16
@"DVTStackBacktrace"16@0:8
v24@0:8@"DVTStackBacktrace"16
@24@0:8@16
@"DVTObservingToken"
@"DVTViewController"
@"NSWindow"
v32@0:8@16q24
v32@0:8@"NSWindow"16q24
@28@0:8@16c24
v28@0:8*16c24
@"<DVTCancellable>"
@"DVTNotificationToken"
@"DVTViewController<DVTMainViewControllerDrawingStrategyDelegate>"
c28@0:8i16@20
c28@0:8i16@"NSMutableArray"20
@32@0:8@16@24
v20@0:8c16
@"DVTExtension"
@(#)PROGRAM:DVTViewControllerKit  PROJECT:DVTFrameworks-23175.17
dvt_mainViewController
_dvt_mainViewControllerMonitor
-[_DVTMainViewControllerMonitor initWithWindow:]
DVTFrameworks/DVTViewControllerKit/View Controllers/DVTMainViewControllerMonitor.m
((window)) != nil
%@ should not be nil.
(window)
((void *)0) == window._dvt_mainViewControllerMonitor
firstResponder
v32@?0@8@"NSDictionary"16^B24
valid
-[_DVTMainViewControllerMonitor setMainViewController:]_block_invoke
DVTIsMainThread()
code should be running on main thread
viewController != self.mainViewController
self.mainViewController is still: %@
v32@?0@"DVTViewController"8@"NSDictionary"16^B24
-[DVTMainViewControllerDrawingStrategy initWithDelegate:monitorWholeTree:]
DVTFrameworks/DVTViewControllerKit/View Controllers/DVTMainViewControllerDrawingStrategy.m
![_delegate isViewLoaded]
-[DVTMainViewControllerDrawingStrategy primitiveInvalidate]
((_windowActivationToken)) == nil
%@ should be nil, but it is %@
(_windowActivationToken)
((_appActivationObservation)) == nil
(_appActivationObservation)
((_appDeactivationObservation)) == nil
(_appDeactivationObservation)
((_mainViewControllerToken)) == nil
(_mainViewControllerToken)
-[DVTMainViewControllerDrawingStrategy hostViewControllerDidInstall]
(([[_delegate view] window])) != nil
([[_delegate view] window])
v16@?0@"NSNotification"8
mainViewControllerInParentWindow
representedObject
Controller
-[DVTViewController invalidate]
DVTFrameworks/DVTViewControllerKit/View Controllers/DVTViewController.m
((void *)0) == [[self view] window]
Calling -invalidate while self.view is still in a window that may still be visible to the user.
window: %@ '%@'
window.delegate: %@
superviews:%@
creationBacktrace:%@
DVTViewController_DisableDidCallViewWillUninstallAssertions
_isInstalled == __objc_no
Calling -invalidate without calling -viewWillUninstall first. Set the DVTViewController_DisableDidCallViewWillUninstallAssertions default to YES to disable this.
-[DVTViewController primitiveInvalidate]
%@ was invalidated while still attached to %@
__objc_no
Called DVTWarn
((aClass)) != nil
(aClass)
Did not call -viewWillUninstall for %@
-[DVTViewController primitiveInvalidate]_block_invoke_2
didInstall
-loadView was called but the custom -viewWillUninstall was never called because the view was never added to a window. Since this object implements -viewWillUninstall it may have done setup in -loadView and not have completed all necessary teardown.
creationBacktrace:
v8@?0
-[DVTViewController setRepresentedExtension:]
!extension || (_representedExtension == ((void *)0))
Represented extension is already set.
<%@: %p representing: %@>
%@, 
%@ (repeated keyview)
-[DVTViewController separateKeyViewLoops]
The following views created a nextKeyView loop. This is a serious issue and should be fixed: %@
-[DVTViewController setView:]
[invalidatableView isValid]
Message sent to invalidated object: <%@ %p>.
invalidationBacktrace:
creationBacktrace:
The view controller: "%@" is loading the nib file: "%@".
-[DVTViewController _viewDidInstall]
((self)) != nil
(self)
[self isValid]
__objc_no == _isInstalled
((void *)0) != view.superview
((void *)0) != window
-[DVTViewController _viewWillUninstall]
_isInstalled
_kvoWindow.dvt_mainViewController
_kvoWindow.windowController
_kvoWindow
%s_ControlledBy_%@
_checkKvoWindow
T#,R
_window
T@"DVTStackBacktrace",?,&
containsObject:
T@"DVTViewController",&
hostViewControllerWillUninstall
T@"DVTViewController<DVTMainViewControllerDrawingStrategyDelegate>",R,V_delegate
isDescendantOf:
T@"NSString",?,R,C
isValid
T@"NSString",R,C
release
T@"NSView",R
setNextKeyView:
.cxx_destruct
_viewDidInstall
T@"DVTExtension",&,N,V_representedExtension
bundleForClass:
T@"DVTStackBacktrace",?,R
countForObject:
T@"DVTViewController",R
initWithWindow:
T@"NSBundle",R
isProxy
T@"NSString",R
nibName
T@"NSView",&
T@"NSWindow",W,V_window
T@"NSWindowController",R
TB,?,R,N,GisValid
TB,R
TB,V_isViewLoaded
TQ,R
__isDVTInvalidation
_appActivationObservation
_appDeactivationObservation
_appIsActive
_delegate
_didInstall
_dvt_mainViewControllerMonitor
_firstResponderObservingToken
_installed
_interposeViewControllerNotifyingLifecycleMethodsIfNecessaryForView:
_isInstalled
_isViewLoaded
_kvoWindow
_mainViewController
_mainViewControllerIsValidObservingToken
_mainViewControllerToken
_monitorWholeTree
_originalClassBeforeLifecycleInterposingInstalled
_representedExtension
_requiresConstraintBasedLayout
_treeHasMainViewController
_viewControllerIsMain
_viewDidMoveToSuperView
_viewDidMoveToWindow
_viewWillChangeSuperview
_viewWillChangeWindow
_viewWillUninstall
_windowActivationToken
_windowIsKey
_windowWillClose:
addAutoCancelledObject:
addAutoInvalidatedObject:
addObject:
addObserver:selector:name:object:
appActivationChanged
appendFormat:
array
assertionBehaviorAfterEndOfEventForSelector:
assertionBehaviorForKeyValueObservationsAtEndOfEvent
automaticallyNotifiesObserversOfDvt_mainViewController
automaticallyNotifiesObserversOf_dvt_mainViewControllerMonitor
autorelease
boolForKey:
canBecomeMainViewController
cancel
class
commitEditing
commitEditingForAction:errors:
compileTimeClassNameFromRuntimeClassName:
conformsToProtocol:
countByEnumeratingWithState:objects:count:
creationBacktrace
currentStackBacktrace
debugDescription
defaultCenter
defaultNibBundle
defaultNibName
defaultViewNibBundle
defaultViewNibName
delegate
delegateFirstResponder
description
descriptionForAssertionMessage
didChangeValueForKey:
discardEditing
dvtViewController_commonInit
dvt_addObserverForName:object:queue:usingBlock:
dvt_clearNibBindings
dvt_isAncestorOfResponder:
dvt_mainViewController
dvt_newObserverForKeyPath:options:withHandlerBlock:
dvt_registerActivationStateObserver:
dvt_synthesizeInvalidation
dvt_updateMainViewControllerUsingResponderChain
dvt_viewController
dvt_viewControllerWillUninstall:
firstResponder
hash
hostViewControllerDidInstall
init
initUsingDefaultNib
initWithCoder:
initWithDelegate:monitorWholeTree:
initWithNibName:bundle:
initialize
instanceMethodForSelector:
invalidate
invalidationBacktrace
isActive
isEqual:
isKeyWindow
isKindOfClass:
isMemberOfClass:
isViewLoaded
keyPathsForValuesAffectingMainViewControllerInParentWindow
keyPathsForValuesAffectingParentWindowController
loadView
mainViewController
mainViewControllerChanged
mainViewControllerDrawingStrategyActivationStateDidChange:
mainViewControllerInParentWindow
nextKeyView
nextResponder
parentWindowController
pathForResource:ofType:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
primitiveInvalidate
rangeOfString:
removeFromSuperviewWithoutNeedingDisplay
removeObject:
removeObserver:name:object:
representedExtension
requiresUninstallAfterLoadView
respondsToSelector:
retain
retainCount
self
separateKeyViewLoops
setCreationBacktrace:
setDvt_mainViewController:
setDvt_viewController:
setFlag:toValue:
setIsViewLoaded:
setMainViewController:
setNextResponder:
setRepresentedExtension:
setView:
setWindow:
setWithObject:
set_dvt_mainViewControllerMonitor:
shouldHaveActiveAppearance
standardUserDefaults
startMonitoringMainViewControllerInWindow:
stopMonitoringMainViewControllerInWindow:
string
stringByReplacingOccurrencesOfString:withString:
stringRepresentation
stringRepresentationWithAddresses:
stringWithFormat:
stringWithUTF8String:
substringFromIndex:
substringToIndex:
superclass
superview
supplementalMainViewController
supportsInvalidationPrevention
title
valid
view
viewControllerUsingDefaultNib
viewDidAppear
viewDidDisappear
viewDidInstall
viewDidMoveToSuperview
viewDidMoveToWindow
viewIfLoaded
viewWillMoveToSuperview:
viewWillMoveToWindow:
viewWillUninstall
willChangeValueForKey:
window
window:didChangeActivationState:
windowController
zone
DVTMainViewControllerMonitorAdditions
_DVTMainViewControllerMonitor
DVTInvalidation
NSObject
DVTMainViewControllerMonitor
DVTMainViewControllerDrawingStrategy
DVTWindowActivationStateObserver
DVTViewController
DVTEditor
_DVTViewController_ViewLifecycleInterpositions
@16@0:8
v24@0:8@16
v16@0:8
Q16@0:8
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Q24@0:8:16
v24@0:8@"<DVTInvalidation>"16
v24@0:8@"<DVTCancellable>"16
@"DVTStackBacktrace"16@0:8
v24@0:8@"DVTStackBacktrace"16
@24@0:8@16
@"DVTObservingToken"
@"DVTViewController"
@"NSWindow"
v32@0:8@16q24
v32@0:8@"NSWindow"16q24
@28@0:8@16B24
v28@0:8^B16B24
@"<DVTCancellable>"
@"DVTNotificationToken"
@"DVTViewController<DVTMainViewControllerDrawingStrategyDelegate>"
B28@0:8i16@20
B28@0:8i16@"NSMutableArray"20
@32@0:8@16@24
v20@0:8B16
@"DVTExtension"
