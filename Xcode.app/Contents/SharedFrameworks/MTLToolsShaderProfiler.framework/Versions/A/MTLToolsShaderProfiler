MbP?
St20bad_array_new_length
St9bad_alloc
St9exception
St11logic_error
St12length_error
_dumpTraceProfileDataForResult:
.cxx_destruct
_saveAddressList:size:filename:
T@"NSArray",&,N,V_encoderTilerParamBufBytesUsedArray
allKeys
T@"NSDictionary",&,N,V_softwareCounterInfo
binaryRangeInfo
T@"NSMutableDictionary",&,N,V_blitEncoderTimeInfo
containsObject:
T@"NSNumber",&,N,V_parameterBufferMaxSize
context
T@"NSNumber",&,N,V_parameterBufferMaxSizeNeverMemless
dataWithLength:
TQ,N,V_libraryId
encoderTimeData
Td,N,V_shaderProfilingTime
gpuTime
_ProcessLineList:forFileCostMap:forDebugInfo:andCost:forAddr:andDrawIndex:andTargetIndex:withDefaultDisassemblyInfo:withALUInstructionType:
gtProcessedShaderProfilerResult
_addDerivedCounterDataToTimelineInfo:usingShaderProfilerResult:forWorkloadInfo:
loadActionTimes
_analyzeShaderBinarySamplesForResult:forShaderKeyToSourcePath:
pipelineStateId
_calculatePerDrawCallCostWithSampleData:targetIndex:
setDisassembly:
_calculatePerDrawCosts:
setPerFileCost:
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
setWithObjects:
_calculatePerSampleAggregatedActiveShaders:withShaderProfilerResult:forWorkloadInfo:
toArray
.cxx_construct
_parameterBufferPercentFullDict
JSGlobalContextRef
_saveSampleDataFromGPURawCounters:size:filename:withTimeStamps:
T@"NSDictionary",&,N,V_parameterBufferPercentFullDict
arrayWithArray:
T@"NSMutableArray",&,N,V_shaderProfilingFrameTimes
bundleForClass:
T@"NSMutableDictionary",&,N,V_perRingPerFrameLimiterData
containsString:
T@"NSNumber",&,N,V_parameterBufferMaxSizeEverMemless
createArrayRef:
TI,N,V_encoderCount
encoderInfoList
Tc,N,V_hasCost
extractShaderBinaryTextSegment:
UTF8String
gtHasSavedProcessedProfilerData
_addBlitTimesToEffectiveKickTimes:
hasCost
_addPerLineCost:to:
numberWithBool:
_blitEncoderTimeInfo
programInfoList
_calculatePerDrawCallWithGRCSampleData:targetIndex:
setMaxConcurrentOperationCount:
_calculatePerLineCostWithSampleData:binary:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
setVertexCount:
_calculatePerSampleActiveShaders:withShaderProfilerResult:forWorkloadInfo:
stringByAppendingPathComponent:
_collectBatchFilteredDataForShaderProfilerResultOverrideGT:
_constructPayload
_createPerCounterCommandData:withPerCommandData:
_createPerFileCostDictionaryWith:lineOffset:
_createPerLineCostDictionaryWith:lineOffset:
_derivedCounterInfoResult
_dividePerLineCost:by:
_effectiveBatchDrawKickTimes:forShaderProfilerResult:
_encoderCount
_encoderTilerParamBufBytesUsedArray
_gatherStaticInformation
_generateSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:andMinIndex:withProgramAddressList:withUSCSampleList:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:
_getAddressAndLineTableForDebugInfo:
_getDebugInfoForBinary:withTextSegment:forTargetIndex:forKey:
_getLegacyProgramType:
_grcFrameData
_hasCost
_hasValidShaderProfilerInfo
_isForInternalTool
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
_libraryId
_metalPluginName
_mtlShaderAnalyzer
_mutex
_parallelQueue
_parameterBufferMaxSize
_parameterBufferMaxSizeEverMemless
_parameterBufferMaxSizeNeverMemless
_payload
_perRingPerFrameLimiterData
_platformShaderAnalyzer
_platformShaderProfiler
_preProcessStreamingUSCSampleData:result:
_preProcessStreamingUSCSampleData:result:withAddressData:sampleData:frameIndex:ringBufferIdx:targetIndex:
_preProcessStreamingUSCSampleData:result:withAddressMappings:sampleData:frameIndex:ringBufferIdx:targetIndex:
_preProcessUSCSampleData:result:targetIndex:
_preparePrioritizedPerEncoderDrawListFromShaderProfilerResult:andGetMaxDrawsPerEncoder:andGetEncoderBatchIndexToDrawIndexMap:andGetDrawCallIndexToEncoderBatchIndexMap:
_processDerivedEncoderCounterData:forDerivedEncoderData:
_processEncoderTimeData:withKickTimeData:forPayload:withGPUTime:
_processFrameTimeData:forProcessedFrameTimeData:
_processHarvestedBinaryData:forStreamedData:
_processPerLineCostDataForLineTable:withFileCost:withDebugInfo:andAllDrawCost:withKey:withShaderSourcePath:withDrawCost:
_queryDerivedCounterDataWithDelegate:withShaderInfoResult:forPayload:withShaderProfilerResult:
_queryStreamingAPSData:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingOverridenAPSData:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerData:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataGT:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataOverride:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataOverrideGT:forDelegate:forFuture:forGPUTimelineFuture:
_saveAddressMappings:filename:
_sessionIsInvalid
_setupFragmentEncoderCountersPerDrawCall:
_setupLimiterInfoPerDrawCall:forPayload:
_shaderInfoResult
_shaderProfilingFrameTimes
_shaderProfilingTime
_shouldUseProgramAddressMappings:
_showDrawCallDataforResult:
_softwareCounterInfo
_updateDrawCallTimingCounters:forShaderProfilerResult:withDrawCallData:withBottleNeckAnalysisDrawCallsData:withCounterIndices:
_updateShaderTimelineInfo:withShaderTimelineDataEx:forGPUTimelineInfo:withEncoderGlobalTraceIdToStateMirrorIdMapping:forRingBuffer:
_useEncoderDataForCounters
_visitAllShaderInfosInResult:usingBlock:
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
activeShadersPerPeriodicSample
addDependency:
addObject:
addObjectsFromArray:
addOperation:
adjustHWBiasAndFinalizeResult
aggregatedGPUTimelineInfo
allObjects
allValues
allocWithZone:
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
analyzerResult
appendBytes:length:
appendFormat:
appendString:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
averagePerDrawKickDurations
binary
blitEncoderTimeInfo
blitTimeData
blockOperationWithBlock:
boolForKey:
boolValue
bundlePath
bytes
calculateEncoderProgramInfo
calculateFrameTime:result:
calculateRealTimeInfoWithGPUTime:
calculateUtilizations:result:
callFunction:withArguments:
callStackInfo
cancelAllOperations
captureArchive
characterSetWithCharactersInString:
coalescedEncoderInfo
collectBatchFilteredDataForShaderProfilerResult:
collectBatchFilteredDataForShaderProfilerResultGT:
commandType
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
computeFromFrameInfoResult:forFuture:
computeFromShaderInfoResult:forPayload:forFuture:
computeProgramId
computeProgramInfo
computeTiming
consistentStateAchieved
constructPayloadFromArchive:
copy
copyWithZone:
cost
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dataWithBytes:length:
dataWithCapacity:
dataWithData:
dataWithJSONObject:options:error:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultManager
delegate
derivedCounterInfo:
derivedCounterNames
derivedCountersData
deviceInfo
diassemblyString
dictionary
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
disassembleBinary:
disassembledLineInfo
doubleValue
drawCallCost
drawCallIndex
drawCallInfoIndices
drawCallInfoList
drawCallInfoWithFunctionIndex:subCommandIndex:
drawCallPerLineCost
dumpInstructions
effectiveKickTimes
effectivePerEncoderDrawKickTimes
encodeInt64:forKey:
encodeObject:forKey:
encodeWithCoder:
encoderCount
encoderFunctionIndex
encoderIndex
encoderProgramInfoList
encoderTilerParamBufBytesUsedArray
encoderTimelineInfos
enumerateFragmentShadersForResult:andShaderInfoDictionary:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
evaluateDerivedCounters
evaluateScriptCode:
evaluateStreamingSamples:withUSCSampleNum:withProgramAddressLUT:targetIndex:forRingBufferIndex:withMinEncoderIndex:withMaxEncoderIndex:withEncoderIdToEncoderIndexMap:withProfilingData:
evaluteScript:scriptURL:
exportCounterValues:
exportDerivedCounterDataAtPath:renameWhenConflict:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
firstObject
fragmentCount
fragmentShaderInfo
fragmentTiming
functionIndex
future
futureWithResult:error:
gatherStatisticsFromArchive:
generateTargetSamplesForResult:withProgramAddressLUT:withBatchIndexMin:withProgramAddressList:withUSCSampleBuffer:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:targetIndex:
getTraceDataForFunctionIndexArray:forCaptureArchive:
getValue:
gtAddAPSData:
gtEnumerateUnarchivedGPUTimelineData:
gtEnumerateUnarchivedShaderProfilerData:
gtHasOverloadedBatchIdFilteredCountersData
gtHasOverloadedShaderProfilerData
gtProcessAPSCostData
gtProcessAPSTimelineData
gtProcessBatchIDFilteringData:
gtProcessGPUTimelineData:
gtProcessShaderProfilerData:
gtProcessedTimelineResult
gtProessStoredBatchIdFilteredCountersData
gtSetupForBatchIDFilteringCounters:
gtSetupStreamDataProcessor:
gtTestNewShaderProfiler
gtUseAPSData
gtUseNewShaderProfiler
gtVerifyShaderProfilerResult:
gtVerifyTimelineData:
gtWaitGPUTimelineData
gtWaitShaderProfilerData
handleCaptureSessionTearDown
increaseLengthBy:
indexOfObject:
init
initWithCapacity:
initWithCoder:
initWithData:encoding:
initWithDelegate:
initWithLibraryId:
initializeShaderAnalyzer
instanceCount
invertedSet
irString
isComputeDispatchCall
isDisassemblerAvailable
isEqualToString:
isForInternalTool
lastObject
lastPathComponent
length
libraryId
mGPUTimelineInfoAtIndex:
mGPUTimelineInfos
mainBundle
maxConcurrentOperationCount
mergeLegacyAndNewShadersInShaderInfoDictionary:
metalPlugin
metalPluginForPlatform:
mutableBytes
mutableCopy
newShaderProfilerWithDelegate:
notifyCounterGraphItemChangedOnQueue:handler:
notifyOnQueue:handler:
notifyStreamingShaderProfilingDataOnQueue:handler:
numActiveShadersPerPeriodicSample
numPeriodicSamples
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
offset
opCode
opCodeSubType
opCodeType
parameterBufferMaxSize
parameterBufferMaxSizeEverMemless
parameterBufferMaxSizeNeverMemless
parameterBufferPercentFullDict
path
pathExtension
pathForResource:ofType:
perFileCost
perLineInfoForFunctionFilePath:withLibraryIdSet:atFunctionIndex:
perRingPerFrameLimiterData
platform
platformShaderAnalyzer
prepareCounterNames:softwareCounterNames:derivedCounterNames:
prepareCounterValues:softwareCounterValues:
profileFrameAtConsistentState:
profileShader:afterGPUTimelineGather:atConsistentState:withOverlappingEnabled:
profiledState
programId
programIndex
programInfo
programPipelineInfoList
queryAPSDataWithPayload:
queryGPUTimelineDataWithPayload:
queryShaderInfoWithPayload:
removeItemAtURL:error:
removeObject:
removeObjectForKey:
removeTemporaryDirectory
result
setActiveCoreInfoMasksPerPeriodicSample:
setActiveShadersPerPeriodicSample:
setAnalyzerResult:
setArray:
setBinary:
setBinaryDisassemblyInfo:
setBinaryRangeInfo:
setBlitEncoderTimeInfo:
setBlitTimeData:
setCallStackInfo:
setCoalescedEncoderInfo:
setCommandBufferCount:
setConsistentStateAchieved:
setCoreCounts:
setCost:
setCostPercentage:
setDerivedCounterNames:
setDerivedCounters:
setDerivedCountersData:
setDerivedEncoderCounterInfo:
setDictionary:
setDirectory:
setDisasmSource:
setDisassembledLineInfo:
setDrawCallCost:
setDrawCallPerLineCost:
setDylib:
setEffectivePerEncoderDrawKickTimes:
setEncoderCount:
setEncoderIndexToLabelMap:
setEncoderInfos:
setEncoderTilerParamBufBytesUsedArray:
setEncoderTimeData:
setEncoderTimelineInfos:
setError:
setFile:
setFragmentCount:
setFragmentCountPercentage:
setFunction:
setGpuTime:
setHasCost:
setInstanceCount:
setInstanceCountPercentage:
setIrSource:
setLength:
setLibraryId:
setLineIndex:
setName:
setNumActiveShadersPerPeriodicSample:
setNumPeriodicSamples:
setObject:atIndexedSubscript:
setObject:forKeyedSubscript:
setOffset:
setOpcode:
setOpcodeSubType:
setOpcodeType:
setParameterBufferMaxSize:
setParameterBufferMaxSizeEverMemless:
setParameterBufferMaxSizeNeverMemless:
setParameterBufferPercentFullDict:
setPerCommandBufferEncoderCount:
setPerRingPerFrameLimiterData:
setPerRingSampledDerivedCounters:
setProfiledState:
setRawArrayValues:withUint32Values:andNumCounters:
setRawArrayValues:withUint64Values:andNumCounters:
setRestoreTimestamps:
setResult:
setShaderProfilingFrameTimes:
setShaderProfilingTime:
setSoftwareCounterInfo:
setSourceInfo:
setSourcePath:
setSupportsImmediateModeDrawCounters:
setTimeBaseDenominator:
setTimeBaseNumerator:
setTimestamps:
setTotalCost:
setTotalPerLineCost:
setType:
setUscSamples:
setValues:
setVertexCountPercentage:
setWithCapacity:
setXpState:
setupDataForEvaluatingStreamingSamples:forRingBufferCount:forTargetIndex:
setupForAnalysis
setupShaderInstructionInfoForBinary:forTargetIndex:
shaderAnalyzer
shaderAnalyzerDyson
shaderInstructionInfoFromBinary:withStartOffset:forLength:targetIndex:
shaderInstructionInfoWithStartOffset:endOffset:
shaderProfiler
shaderProfilerDyson
shaderProfilerGPUDesktopReplayer
shaderProfilingFrameTimes
shaderProfilingTime
shaderSourceForProgramInfo:atFunctionIndex:
softwareCounterInfo
sortedArrayUsingComparator:
source
standardUserDefaults
storeActionTimes
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByStandardizingPath
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
superclass
supportRendererType:
supportsBatchIdFiltering
supportsDerivedCounters
supportsGPUTimeline
supportsImmediateModeDrawCounters
supportsSecureCoding
timeoutAfter:label:
timestamps
timing
type
unarchivedObjectOfClasses:fromData:error:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
uscSamples
valid
vertexCount
vertexShaderInfo
vertexTiming
waitUntilAllOperationsAreFinished
waitUntilFinished
waitUntilResolved
wantsDerivedCounters
writeToFile:atomically:encoding:error:
writeToURL:atomically:
libraryId
encoderTilerParamBufBytesUsedArray
parameterBufferMaxSize
parameterBufferMaxSizeEverMemless
parameterBufferMaxSizeNeverMemless
v32@?0@8@16*24
fragment
vertex
tile
fragment-dynamic-libraries
vertex-dynamic-libraries
tile-dynamic-libraries
compute
compute-dynamic-libraries
perLineCost
perDrawCall
perLineCostTotal
perLineCostVertex
perLineCostFragment
perLineCostComputeKernel
perLineCostCurrentDraw
perBinaryCost
perBinaryType
%@_%lu.csv
Index,FunctionIndex,CommandBuffer,Encoder,Marker,%@
%lu,%@,%@
vertex shader info
fragment shader info
compute kernel info
mutiple binary info
activePerEncoderDrawCallCount
perEncoderKickCount
VertexTPULimiter
VertexALULimiter
VertexGlobalLoadLimiter
VertexGlobalStoreLimiter
VertexPBELimiter
VertexSampleLimiter
VertexLocalLoadLimiter
VertexLocalStoreLimiter
FragmentTPULimiter
FragmentALULimiter
FragmentGlobalLoadLimiter
FragmentGlobalStoreLimiter
FragmentPBELimiter
FragmentSampleLimiter
FragmentLocalLoadLimiter
FragmentLocalStoreLimiter
TPULimiter
ALULimiter
GlobalLoadLimiter
GlobalStoreLimiter
PBELimiter
SampleLimiter
LocalLoadLimiter
LocalStoreLimiter
BufferLoadLimiter
BufferStoreLimiter
VertexBufferLoadLimiter
VertexBufferStoreLimiter
FragmentBufferLoadLimiter
FragmentBufferStoreLimiter
GlobalLoad
GlobalStore
Sample
LocalLoad
LocalStore
FSSamplerStall
ShaderCoreFragmentUtilization
FSTextureCacheMissRate
FragmentShaderBusy
FragmentPipelinePercent
PixelWriteStallPercent
GPU Time
DerivedCounterInfo
vertex shader key
fragment shader key
compute kernel key
draw call info
mutiple binary keys
type
draw call %lu, replacing key %@ with %@, type %@
draw call %lu, ignoring key %@, type %@
perCommandBufferEncoderCount
encoderIndexToLabel
binary
dylib
v28@?0@"NSString"8@"NSMutableDictionary"16I24
rm -rf /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults/json
encoder time data
kick time data
MetalPluginName
Frame Consistent Perf Info
level
enabled
consistent
gputime
consistent time
tilerParamBufBytesUsedArray
frametime
performance statistics
ParameterBufferMaxSize
ParameterBufferMaxSizeEverMemless
ParameterBufferMaxSizeNeverMemless
/tmp/com.apple.gputools.profiling
disassembly is unavailable
PerDrawNsecTimes
blitEncoderIndices
GPUShaderProfilerExportShaderInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/ProgramPipelineCosts.txt
q24@?0@"DYShaderProfilerProgramInfo"8@"DYShaderProfilerProgramInfo"16
ProgramIndex
ProgramId
[%u] PipelineState 0x%llX
Vertex(0x%s)[%.4f%%]
Fragment(0x%s)[%.4f%%]
VS_Hash
VS_Percent
FS_Hash
FS_Percent
[%u] PipelineState 0x%llX
Compute(0x%s)[%.4f%%]
CS_Hash
CS_Percent
index
functionIndex
Compute
Vert
Fragment
q24@?0@"NSNumber"8@"NSNumber"16
DrawCallsSorted
Index
FunctionIndex
%.2f%%
%.4f%%
%.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
NumSamples
%10.4f%%
%10.4f%%
%10.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts_Sorted.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
%10.4f%%
%10.4f%%
%10.4f%%
q24@?0@"NSMutableDictionary"8@"NSMutableDictionary"16
Cost
/tmp/com.apple.gputools.profiling/shaderProfilerResults/PerEncoderPipelineCosts.txt
SortedPipelines
Encoder %u
AbsoluteCost
Pipeline %llu
PipelineState 0x%llX = [%.4f%%]
PipelineId
DrawCalls
index
functionIndex
PercentageCost
frameProfile
frame counters
frame profile data
Frame Profiler
Frame profiler failed due to an internal error.
MTLStat_nSec
MTLStatVertices
frameGPUTime
perEncoderDrawCallCount
GPUState
Frame profiler failed to get data from the device.
v8@?0
Total Samples = %g
index
functionIndex
vertTiming
vertCyclePercentragTiming
fragmentCyclePercent
%6u : encoderId:%u limiterIdx:%u (TS: %llu) nTracePackets:%u)
%6u : 0x%0.8llx 0x%0.8llx
GPUToolsAvoidProgramAddressMappings
usc sampling address data
usc sampling sample data
frame index
ring buffer
usc sampling address mappings
encID
drawCallIndex
mappedAddress
mappedSize
binaryUniqueId
encIndex
Blit Encoder Kick Times Nsec
Blit Encoder Indices
GPU Encoder Info
aggregated derived counters
sampled timestamps
aggregated timeline data
aggregated timeline data ex
ring buffer sampled counter data
core counts
ring buffer blend factors
Restore Timestamps
coalesced encoder mapping
v32@?0@"NSNumber"8@"NSArray"16*24
limiter data
limiter time stamps
limiter counter list
shader timeline data
shader timeline data ex
Havested Binaries
Finalize Shader Profiler Result
Kick Time Data
Encoder Load Action Times
Encoder Store Action Times
Shader Profiling Frame Time
Frame Time Data
Num Ring Buffers
Blit Command Nsec Times
derivedCounterData
@"NSDictionary"16@?0@"NSDictionary"8
gputools.%@.%p
End Streaming Data
v16@?0@"NSDictionary"8
QueryShaderInfoWithPayload
rm -rf /tmp/com.apple.gputools.profiling/gpuTimelineResults
mkdir /tmp/com.apple.gputools.profiling/gpuTimelineResults
Streaming GPU Timeline Data
Streaming Shader Profiling Data
UseKicktimestamps
UseMTLCounters
CoalesceComputeEncoders
CoalesceBlitEncoders
useOverlap
SupportsFileFormatV2
GPUDebugger.CounterGraph.UseEncoderDataForCounters
gputools.GPUToolsDebugger.DYPMTLShaderProfiler.ParallelQueue
/tmp/com.apple.gputools.profiling/shaderProfilerResults/uscSamplingAddressProcessed.txt
Index : ProgramType BatchIdx FunctionIdx [Start - End]
%6u : %2u %6u %6u [0x%0.8llx - 0x%0.8llx]
Encoder  Index [  Start -  End   ]  BinaryUniqueID  EncIdx Index Type
index
%08x %5d [%08llx-%08llx] %016llx %6d %5d %3d %s
QueryAPSData
Streaming APS Data
GPUCounterGraph
plist
counters
batchfiltered
vendorCounters
v32@?0@"NSString"8@"NSDictionary"16*24
GPUTime
v32@?0@"NSString"8@16*24
encoderBatchPriorityList
maxDrawsInAnyEncoder
collectInBackground
pause
derivedCounterInfo
batchFilteredDerivedCounters
SubcommandIndex
highPriorityBatches
HighPriorityBatchInfo
Batch Filtering Started
vector
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.ParallelQueue
v32@?0@8@"NSNumber"16*24
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/com.apple.gputools.profiling/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
source
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %u %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
    %d %s [%u %u] %.1f %.2f%%
    %d %s [%u %u]
binaryDisassemblyInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
/program_source
Offset
totalCost
16777235-0
::air.vertexFetchFunction()
basic_string
TraceId to SampleIndex
Frame Encoder Times Data
Encoder TraceId Data
Sample Marker
Blit TraceId to Sample Index
Blit Encoder Time Data
Blit Split TraceId to Sample Index
Blit Split Encoder Time Data
Blit Encoder Frame Data
Blit Encoder Info
Blit Split Encoder Frame Data
Blit Split Encoder Info
Encoder Draw Call Count
Blit Encoder Nsec Times
Blit Command Kick Times Nsec
passList
DerivedCounterDictionary
DerivedCounters
subtype
Normalize
_encoderRawData
_encoderTileInfos
_encoderKickTimes
DerivedCounterConfigurationVariables
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
_RawCounterValues
AverageSamples
derivedCounterDataForBottleneckAnalysis
DerivedCounterAnalysis
DerivedCounterAnalysisFunctions
BatchInfos
name
description
num_cores
MTLStatTotalGPUCycles
_vtx
_frg
_cmp
var %@%@ = 0;
var %@_norm%@ = 0;
var core_count = num_cores;
var TileWidth  = 0;
var TileHeight = 0;
var _DerivedCounterResult = [];
var _RawCounterValues = [];
function _SetAndEvaluateRawCounterValues() {
for (var encoderIdx = 0; encoderIdx < _encoderRawData.length; encoderIdx++) {
TileWidth = _encoderTileInfos[encoderIdx][0];
TileHeight = _encoderTileInfos[encoderIdx][1];
_DerivedCounterResult[encoderIdx] = []
_RawCounterValues[encoderIdx] = []
%@%@ = _encoderRawData[encoderIdx][%u][%u][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@ = _encoderKickTimes[encoderIdx][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@
%@_norm%@ = 100.0 * %@ * (%@%@ / Math.max(_encoderRawData[encoderIdx][%u][%u][%u], 1));
_RawCounterValues[encoderIdx].push(%@_norm%@);
%@_norm%@
%@ = %@%@ + %@%@ + %@%@;
_RawCounterValues[encoderIdx].push(%@);
%@_norm = 100.0 * %@ * (%@ / Math.max(_encoderRawData[encoderIdx][0][%u][%u] + _encoderRawData[encoderIdx][1][%u][%u] + _encoderRawData[encoderIdx][2][%u][%u], 1.0));
_RawCounterValues[encoderIdx].push(%@_norm);
_norm
try { value = %@(); if (!isFinite(value) || isNaN(value) || (value < 0)) { value = 0; } _DerivedCounterResult[encoderIdx].push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult[encoderIdx].push(0); }
v16@?0@"NSString"8
ErrorLog
DerivedCounterScript
Timebase
Post Processing Frame Marker
profileCounters
Frame Index
Source Sample Marker
ShaderProfilerData
Derived Counter Sample Data
Kick Times
Batch Filtered Counters
End Batch ID Streaming Data
Program Address Buffer
Program Address Mappings
Command Buffer Timestamps
PState Info Data
mapping
TraceId to BatchId
v32@?0@"NSNumber"8@"NSNumber"16*24
TraceId to Coalesced BatchId
v32@?0@"NSArray"8Q16*24
GPU Stats
Frame Encoder Time Data
EncoderTime
RingBufferIndex
Source
Subdivided Dictionary
Encoder Infos
Encoder Tile Info
Counter Info
Derived Counters Info Data
Num Encoders
Fragment Counter
Encoder Time Sample Data
Encoder Sample Index Data
limiter sample counters
var %@ = 0;
var %@_norm = 0;
var core_count = num_cores;
var MTLStat_nSec = 0;
function _SetAndEvaluateRawCounterValues(numSamples, gpuCyclesCounterIndex, ringBufferIndex) {
num_cores = _CoreCount[ringBufferIndex];
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu;
var gpuCycles = _RawCounterValues[gpuCyclesCounterIndex + sampleStartIndex] / num_cores;
MTLStat_nSec = (_RawTimestampDelta[sampleIndex]) * %u / %u;
%@ = _RawCounterValues[%lu + sampleStartIndex];
%@_norm = 100.0 * (_RawCounterValues[%lu + sampleStartIndex] / gpuCycles);
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
core_mask_list
gputools.MTLShaderProfiler.GRCPerFrameDataparallelQueue
_RawTimestampDelta
_CoreCount
usc sample count
usc sample data thread offsets
Bandwidth
gputools.MTLShaderProfiler.parallelQueue
groups
Resources/GPUCounterGraph.plist
%@ (%@)
unit
Encoder Index
CommandBuffer
Encoder
Marker
%d %d %d
%lu,%d,
DYMTLShaderProfilerShaderInfo
DYMTLShaderProfilerResult
DYMTLShaderProfiler
1D!1
DYShaderAnalyzerNextGPU
GRCPerFrameDataClass
c16@0:8
@24@0:8Q16
@24@0:8@16
v24@0:8@16
Q16@0:8
v24@0:8Q16
@16@0:8
@24@0:8^{_NSZone=}16
v32@0:8@16@24
v32@0:8@16d24
v24@0:8d16
@36@0:8@16^v24I32
@28@0:8@16c24
v20@0:8c16
I16@0:8
v20@0:8I16
d16@0:8
v16@0:8
@"NSArray"
@"NSNumber"
@"NSDictionary"
@"NSMutableDictionary"
@"NSMutableArray"
v32@0:8@16@?24
v40@0:8@16@24@?32
@48@0:8@16@24@32Q40
@32@0:8@16@24
@48@0:8@16^Q24^v32^v40
@52@0:8I16@20@28@36r^{CounterIndexInfo=QQQQQ}44
@40@0:8@16@24@32
@20@0:8I16
@48@0:8@16@24@32@40
v44@0:8^Q16I24r*28^Q36
c24@0:8@16
I24@0:8@16
v60@0:8@16@24@32@40I48I52i56
v40@0:8@16@24@32
v52@0:8@16@24@32^v40I48
B48@0:8@16@24@32@40
@40@0:8@16@24I32c36
v36@0:8@16@24i32
v80@0:8@16^v24I32I36I40^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})(?={?=QQ}{?=Qb8b24I})}44^{DYMTLShaderProfilerUSCSample=I(?={?=(?=II)I}{?=II})}52I60^v64^v72
v36@0:8^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})(?={?=QQ}{?=Qb8b24I})}16I24r*28
v32@0:8@16r*24
@"<DYPShaderProfiler>"
{atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}
@"NSString"
@"NSOperationQueue"
@"DYShaderAnalyzerNextGPU"
c20@0:8i16
@72@0:8@16@24i32@36@44@52I60@64
@60@0:8@16@24i32@36@44r^v52
@52@0:8@16@24i32@36@44
@28@0:8@16i24
d28@0:8@16I24
d36@0:8@16I24@28
{DebugInfo={vector<DebugInfo::LineEntry, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}{unordered_map<std::string, unsigned int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int>>>={__hash_table<std::__hash_value_type<std::string, unsigned int>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, unsigned int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>>>=f}}}{vector<std::string, std::allocator<std::string>>=^v^v{__compressed_pair<std::string *, std::allocator<std::string>>=^v}}IIIII}44@0:8@16@24i32@36
{pair<std::vector<unsigned int>, std::vector<std::vector<DebugInfo::LineEntry *>>>={vector<unsigned int, std::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::allocator<unsigned int>>=^I}}{vector<std::vector<DebugInfo::LineEntry *>, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v^v{__compressed_pair<std::vector<DebugInfo::LineEntry *> *, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v}}}24@0:8^v16
v72@0:8^v16^v24^v32d40I48I52i56r^{LineDisassemblyInfo=@@dIIII}60B68
@72@0:8^v16^v24^v32d40@48@56^v64
@28@0:8r^v16I24
@"<DYPShaderAnalyzer>"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{unique_ptr<GRCPerFrameData, std::default_delete<GRCPerFrameData>>="__ptr_"{__compressed_pair<GRCPerFrameData *, std::default_delete<GRCPerFrameData>>="__value_"^{GRCPerFrameData}}}
ShaderProfiler-ProcessStreamedDataPayload
bPostProcessingMarkerReceived: %u
profileCounters
Frame Index: %u
usc sampling address data
Frame Index, ShaderProfilerData: %u
Frame Time Data
Blit Encoder Frame Data
Derived Counter Sample Data
Havested Binaries
Kick Times
End Batch ID Streaming Data
ShaderProfiler-ProcessStreamedDataPostProcessing
ShaderProfiler-ComputeDerivedCountersFromData
MbP?
IOV::
")zz
St20bad_array_new_length
St9bad_alloc
St9exception
St11logic_error
RX_::
")}}
%1>TT
%1>TT
@MF::
")zz
%1>VV
BOHSt12length_error
_dumpTraceProfileDataForResult:
.cxx_destruct
_saveAddressList:size:filename:
T@"NSArray",&,N,V_encoderTilerParamBufBytesUsedArray
allKeys
T@"NSDictionary",&,N,V_softwareCounterInfo
binaryRangeInfo
T@"NSMutableDictionary",&,N,V_blitEncoderTimeInfo
containsObject:
T@"NSNumber",&,N,V_parameterBufferMaxSize
context
T@"NSNumber",&,N,V_parameterBufferMaxSizeNeverMemless
dataWithLength:
TI,N,V_encoderCount
encoderTimeData
Td,N,V_shaderProfilingTime
gpuTime
_ProcessLineList:forFileCostMap:forDebugInfo:andCost:forAddr:andDrawIndex:andTargetIndex:withDefaultDisassemblyInfo:withALUInstructionType:
gtProcessedShaderProfilerResult
_addDerivedCounterDataToTimelineInfo:usingShaderProfilerResult:forWorkloadInfo:
loadActionTimes
_analyzeShaderBinarySamplesForResult:forShaderKeyToSourcePath:
pipelineStateId
_calculatePerDrawCallCostWithSampleData:targetIndex:
setDisassembly:
_calculatePerDrawCosts:
setPerFileCost:
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
setWithObjects:
_calculatePerSampleAggregatedActiveShaders:withShaderProfilerResult:forWorkloadInfo:
toArray
.cxx_construct
_parameterBufferPercentFullDict
JSGlobalContextRef
_saveSampleDataFromGPURawCounters:size:filename:withTimeStamps:
T@"NSDictionary",&,N,V_parameterBufferPercentFullDict
arrayWithArray:
T@"NSMutableArray",&,N,V_shaderProfilingFrameTimes
bundleForClass:
T@"NSMutableDictionary",&,N,V_perRingPerFrameLimiterData
containsString:
T@"NSNumber",&,N,V_parameterBufferMaxSizeEverMemless
createArrayRef:
TB,N,V_hasCost
encoderInfoList
TQ,N,V_libraryId
extractShaderBinaryTextSegment:
UTF8String
gtHasSavedProcessedProfilerData
_addBlitTimesToEffectiveKickTimes:
hasCost
_addPerLineCost:to:
numberWithBool:
_blitEncoderTimeInfo
programInfoList
_calculatePerDrawCallWithGRCSampleData:targetIndex:
setMaxConcurrentOperationCount:
_calculatePerLineCostWithSampleData:binary:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
setVertexCount:
_calculatePerSampleActiveShaders:withShaderProfilerResult:forWorkloadInfo:
stringByAppendingPathComponent:
_collectBatchFilteredDataForShaderProfilerResultOverrideGT:
_constructPayload
_createPerCounterCommandData:withPerCommandData:
_createPerFileCostDictionaryWith:lineOffset:
_createPerLineCostDictionaryWith:lineOffset:
_derivedCounterInfoResult
_dividePerLineCost:by:
_effectiveBatchDrawKickTimes:forShaderProfilerResult:
_encoderCount
_encoderTilerParamBufBytesUsedArray
_gatherStaticInformation
_generateSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:andMinIndex:withProgramAddressList:withUSCSampleList:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:
_getAddressAndLineTableForDebugInfo:
_getDebugInfoForBinary:withTextSegment:forTargetIndex:forKey:
_getLegacyProgramType:
_grcFrameData
_hasCost
_hasValidShaderProfilerInfo
_isForInternalTool
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
_libraryId
_metalPluginName
_mtlShaderAnalyzer
_mutex
_parallelQueue
_parameterBufferMaxSize
_parameterBufferMaxSizeEverMemless
_parameterBufferMaxSizeNeverMemless
_payload
_perRingPerFrameLimiterData
_platformShaderAnalyzer
_platformShaderProfiler
_preProcessStreamingUSCSampleData:result:
_preProcessStreamingUSCSampleData:result:withAddressData:sampleData:frameIndex:ringBufferIdx:targetIndex:
_preProcessStreamingUSCSampleData:result:withAddressMappings:sampleData:frameIndex:ringBufferIdx:targetIndex:
_preProcessUSCSampleData:result:targetIndex:
_preparePrioritizedPerEncoderDrawListFromShaderProfilerResult:andGetMaxDrawsPerEncoder:andGetEncoderBatchIndexToDrawIndexMap:andGetDrawCallIndexToEncoderBatchIndexMap:
_processDerivedEncoderCounterData:forDerivedEncoderData:
_processEncoderTimeData:withKickTimeData:forPayload:withGPUTime:
_processFrameTimeData:forProcessedFrameTimeData:
_processHarvestedBinaryData:forStreamedData:
_processPerLineCostDataForLineTable:withFileCost:withDebugInfo:andAllDrawCost:withKey:withShaderSourcePath:withDrawCost:
_queryDerivedCounterDataWithDelegate:withShaderInfoResult:forPayload:withShaderProfilerResult:
_queryStreamingAPSData:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingOverridenAPSData:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerData:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataGT:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataOverride:forDelegate:forFuture:forGPUTimelineFuture:
_queryStreamingProfilerDataOverrideGT:forDelegate:forFuture:forGPUTimelineFuture:
_saveAddressMappings:filename:
_sessionIsInvalid
_setupFragmentEncoderCountersPerDrawCall:
_setupLimiterInfoPerDrawCall:forPayload:
_shaderInfoResult
_shaderProfilingFrameTimes
_shaderProfilingTime
_shouldUseProgramAddressMappings:
_showDrawCallDataforResult:
_softwareCounterInfo
_updateDrawCallTimingCounters:forShaderProfilerResult:withDrawCallData:withBottleNeckAnalysisDrawCallsData:withCounterIndices:
_updateShaderTimelineInfo:withShaderTimelineDataEx:forGPUTimelineInfo:withEncoderGlobalTraceIdToStateMirrorIdMapping:forRingBuffer:
_useEncoderDataForCounters
_visitAllShaderInfosInResult:usingBlock:
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
activeShadersPerPeriodicSample
addDependency:
addObject:
addObjectsFromArray:
addOperation:
adjustHWBiasAndFinalizeResult
aggregatedGPUTimelineInfo
allObjects
allValues
allocWithZone:
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
analyzerResult
appendBytes:length:
appendFormat:
appendString:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
averagePerDrawKickDurations
binary
blitEncoderTimeInfo
blitTimeData
blockOperationWithBlock:
boolForKey:
boolValue
bundlePath
bytes
calculateEncoderProgramInfo
calculateFrameTime:result:
calculateRealTimeInfoWithGPUTime:
calculateUtilizations:result:
callFunction:withArguments:
callStackInfo
cancelAllOperations
captureArchive
characterSetWithCharactersInString:
coalescedEncoderInfo
collectBatchFilteredDataForShaderProfilerResult:
collectBatchFilteredDataForShaderProfilerResultGT:
commandType
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
computeFromFrameInfoResult:forFuture:
computeFromShaderInfoResult:forPayload:forFuture:
computeProgramId
computeProgramInfo
computeTiming
consistentStateAchieved
constructPayloadFromArchive:
copy
copyWithZone:
cost
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dataWithBytes:length:
dataWithCapacity:
dataWithData:
dataWithJSONObject:options:error:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultManager
delegate
derivedCounterInfo:
derivedCounterNames
derivedCountersData
deviceInfo
diassemblyString
dictionary
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
disassembleBinary:
disassembledLineInfo
doubleValue
drawCallCost
drawCallIndex
drawCallInfoIndices
drawCallInfoList
drawCallInfoWithFunctionIndex:subCommandIndex:
drawCallPerLineCost
dumpInstructions
effectiveKickTimes
effectivePerEncoderDrawKickTimes
encodeInt64:forKey:
encodeObject:forKey:
encodeWithCoder:
encoderCount
encoderFunctionIndex
encoderIndex
encoderProgramInfoList
encoderTilerParamBufBytesUsedArray
encoderTimelineInfos
enumerateFragmentShadersForResult:andShaderInfoDictionary:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
evaluateDerivedCounters
evaluateScriptCode:
evaluateStreamingSamples:withUSCSampleNum:withProgramAddressLUT:targetIndex:forRingBufferIndex:withMinEncoderIndex:withMaxEncoderIndex:withEncoderIdToEncoderIndexMap:withProfilingData:
evaluteScript:scriptURL:
exportCounterValues:
exportDerivedCounterDataAtPath:renameWhenConflict:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
firstObject
fragmentCount
fragmentShaderInfo
fragmentTiming
functionIndex
future
futureWithResult:error:
gatherStatisticsFromArchive:
generateTargetSamplesForResult:withProgramAddressLUT:withBatchIndexMin:withProgramAddressList:withUSCSampleBuffer:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:targetIndex:
getTraceDataForFunctionIndexArray:forCaptureArchive:
getValue:
gtAddAPSData:
gtEnumerateUnarchivedGPUTimelineData:
gtEnumerateUnarchivedShaderProfilerData:
gtHasOverloadedBatchIdFilteredCountersData
gtHasOverloadedShaderProfilerData
gtProcessAPSCostData
gtProcessAPSTimelineData
gtProcessBatchIDFilteringData:
gtProcessGPUTimelineData:
gtProcessShaderProfilerData:
gtProcessedTimelineResult
gtProessStoredBatchIdFilteredCountersData
gtSetupForBatchIDFilteringCounters:
gtSetupStreamDataProcessor:
gtTestNewShaderProfiler
gtUseAPSData
gtUseNewShaderProfiler
gtVerifyShaderProfilerResult:
gtVerifyTimelineData:
gtWaitGPUTimelineData
gtWaitShaderProfilerData
handleCaptureSessionTearDown
increaseLengthBy:
indexOfObject:
init
initWithCapacity:
initWithCoder:
initWithData:encoding:
initWithDelegate:
initWithLibraryId:
initializeShaderAnalyzer
instanceCount
invertedSet
irString
isComputeDispatchCall
isDisassemblerAvailable
isEqualToString:
isForInternalTool
lastObject
lastPathComponent
length
libraryId
mGPUTimelineInfoAtIndex:
mGPUTimelineInfos
mainBundle
maxConcurrentOperationCount
mergeLegacyAndNewShadersInShaderInfoDictionary:
metalPlugin
metalPluginForPlatform:
mutableBytes
mutableCopy
newShaderProfilerWithDelegate:
notifyCounterGraphItemChangedOnQueue:handler:
notifyOnQueue:handler:
notifyStreamingShaderProfilingDataOnQueue:handler:
numActiveShadersPerPeriodicSample
numPeriodicSamples
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
offset
opCode
opCodeSubType
opCodeType
parameterBufferMaxSize
parameterBufferMaxSizeEverMemless
parameterBufferMaxSizeNeverMemless
parameterBufferPercentFullDict
path
pathExtension
pathForResource:ofType:
perFileCost
perLineInfoForFunctionFilePath:withLibraryIdSet:atFunctionIndex:
perRingPerFrameLimiterData
platform
platformShaderAnalyzer
prepareCounterNames:softwareCounterNames:derivedCounterNames:
prepareCounterValues:softwareCounterValues:
profileFrameAtConsistentState:
profileShader:afterGPUTimelineGather:atConsistentState:withOverlappingEnabled:
profiledState
programId
programIndex
programInfo
programPipelineInfoList
queryAPSDataWithPayload:
queryGPUTimelineDataWithPayload:
queryShaderInfoWithPayload:
removeItemAtURL:error:
removeObject:
removeObjectForKey:
removeTemporaryDirectory
result
setActiveCoreInfoMasksPerPeriodicSample:
setActiveShadersPerPeriodicSample:
setAnalyzerResult:
setArray:
setBinary:
setBinaryDisassemblyInfo:
setBinaryRangeInfo:
setBlitEncoderTimeInfo:
setBlitTimeData:
setCallStackInfo:
setCoalescedEncoderInfo:
setCommandBufferCount:
setConsistentStateAchieved:
setCoreCounts:
setCost:
setCostPercentage:
setDerivedCounterNames:
setDerivedCounters:
setDerivedCountersData:
setDerivedEncoderCounterInfo:
setDictionary:
setDirectory:
setDisasmSource:
setDisassembledLineInfo:
setDrawCallCost:
setDrawCallPerLineCost:
setDylib:
setEffectivePerEncoderDrawKickTimes:
setEncoderCount:
setEncoderIndexToLabelMap:
setEncoderInfos:
setEncoderTilerParamBufBytesUsedArray:
setEncoderTimeData:
setEncoderTimelineInfos:
setError:
setFile:
setFragmentCount:
setFragmentCountPercentage:
setFunction:
setGpuTime:
setHasCost:
setInstanceCount:
setInstanceCountPercentage:
setIrSource:
setLength:
setLibraryId:
setLineIndex:
setName:
setNumActiveShadersPerPeriodicSample:
setNumPeriodicSamples:
setObject:atIndexedSubscript:
setObject:forKeyedSubscript:
setOffset:
setOpcode:
setOpcodeSubType:
setOpcodeType:
setParameterBufferMaxSize:
setParameterBufferMaxSizeEverMemless:
setParameterBufferMaxSizeNeverMemless:
setParameterBufferPercentFullDict:
setPerCommandBufferEncoderCount:
setPerRingPerFrameLimiterData:
setPerRingSampledDerivedCounters:
setProfiledState:
setRawArrayValues:withUint32Values:andNumCounters:
setRawArrayValues:withUint64Values:andNumCounters:
setRestoreTimestamps:
setResult:
setShaderProfilingFrameTimes:
setShaderProfilingTime:
setSoftwareCounterInfo:
setSourceInfo:
setSourcePath:
setSupportsImmediateModeDrawCounters:
setTimeBaseDenominator:
setTimeBaseNumerator:
setTimestamps:
setTotalCost:
setTotalPerLineCost:
setType:
setUscSamples:
setValues:
setVertexCountPercentage:
setWithCapacity:
setXpState:
setupDataForEvaluatingStreamingSamples:forRingBufferCount:forTargetIndex:
setupForAnalysis
setupShaderInstructionInfoForBinary:forTargetIndex:
shaderAnalyzer
shaderAnalyzerDyson
shaderInstructionInfoFromBinary:withStartOffset:forLength:targetIndex:
shaderInstructionInfoWithStartOffset:endOffset:
shaderProfiler
shaderProfilerDyson
shaderProfilerGPUDesktopReplayer
shaderProfilingFrameTimes
shaderProfilingTime
shaderSourceForProgramInfo:atFunctionIndex:
softwareCounterInfo
sortedArrayUsingComparator:
source
standardUserDefaults
storeActionTimes
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByStandardizingPath
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
superclass
supportRendererType:
supportsBatchIdFiltering
supportsDerivedCounters
supportsGPUTimeline
supportsImmediateModeDrawCounters
supportsSecureCoding
timeoutAfter:label:
timestamps
timing
type
unarchivedObjectOfClasses:fromData:error:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
uscSamples
valid
vertexCount
vertexShaderInfo
vertexTiming
waitUntilAllOperationsAreFinished
waitUntilFinished
waitUntilResolved
wantsDerivedCounters
writeToFile:atomically:encoding:error:
writeToURL:atomically:
libraryId
encoderTilerParamBufBytesUsedArray
parameterBufferMaxSize
parameterBufferMaxSizeEverMemless
parameterBufferMaxSizeNeverMemless
v32@?0@8@16^B24
fragment
vertex
tile
fragment-dynamic-libraries
vertex-dynamic-libraries
tile-dynamic-libraries
compute
compute-dynamic-libraries
perLineCost
perDrawCall
perLineCostTotal
perLineCostVertex
perLineCostFragment
perLineCostComputeKernel
perLineCostCurrentDraw
perBinaryCost
perBinaryType
%@_%lu.csv
Index,FunctionIndex,CommandBuffer,Encoder,Marker,%@
%lu,%@,%@
vertex shader info
fragment shader info
compute kernel info
mutiple binary info
activePerEncoderDrawCallCount
perEncoderKickCount
VertexTPULimiter
VertexALULimiter
VertexGlobalLoadLimiter
VertexGlobalStoreLimiter
VertexPBELimiter
VertexSampleLimiter
VertexLocalLoadLimiter
VertexLocalStoreLimiter
FragmentTPULimiter
FragmentALULimiter
FragmentGlobalLoadLimiter
FragmentGlobalStoreLimiter
FragmentPBELimiter
FragmentSampleLimiter
FragmentLocalLoadLimiter
FragmentLocalStoreLimiter
TPULimiter
ALULimiter
GlobalLoadLimiter
GlobalStoreLimiter
PBELimiter
SampleLimiter
LocalLoadLimiter
LocalStoreLimiter
BufferLoadLimiter
BufferStoreLimiter
VertexBufferLoadLimiter
VertexBufferStoreLimiter
FragmentBufferLoadLimiter
FragmentBufferStoreLimiter
GlobalLoad
GlobalStore
Sample
LocalLoad
LocalStore
FSSamplerStall
ShaderCoreFragmentUtilization
FSTextureCacheMissRate
FragmentShaderBusy
FragmentPipelinePercent
PixelWriteStallPercent
GPU Time
DerivedCounterInfo
vertex shader key
fragment shader key
compute kernel key
draw call info
mutiple binary keys
type
draw call %lu, replacing key %@ with %@, type %@
draw call %lu, ignoring key %@, type %@
perCommandBufferEncoderCount
encoderIndexToLabel
binary
dylib
v28@?0@"NSString"8@"NSMutableDictionary"16I24
rm -rf /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults/json
encoder time data
kick time data
MetalPluginName
Frame Consistent Perf Info
level
enabled
consistent
gputime
consistent time
tilerParamBufBytesUsedArray
frametime
performance statistics
ParameterBufferMaxSize
ParameterBufferMaxSizeEverMemless
ParameterBufferMaxSizeNeverMemless
/tmp/com.apple.gputools.profiling
disassembly is unavailable
PerDrawNsecTimes
blitEncoderIndices
GPUShaderProfilerExportShaderInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/ProgramPipelineCosts.txt
q24@?0@"DYShaderProfilerProgramInfo"8@"DYShaderProfilerProgramInfo"16
ProgramIndex
ProgramId
[%u] PipelineState 0x%llX
Vertex(0x%s)[%.4f%%]
Fragment(0x%s)[%.4f%%]
VS_Hash
VS_Percent
FS_Hash
FS_Percent
[%u] PipelineState 0x%llX
Compute(0x%s)[%.4f%%]
CS_Hash
CS_Percent
index
functionIndex
Compute
Vert
Fragment
q24@?0@"NSNumber"8@"NSNumber"16
DrawCallsSorted
Index
FunctionIndex
%.2f%%
%.4f%%
%.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
NumSamples
%10.4f%%
%10.4f%%
%10.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts_Sorted.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
%10.4f%%
%10.4f%%
%10.4f%%
q24@?0@"NSMutableDictionary"8@"NSMutableDictionary"16
Cost
/tmp/com.apple.gputools.profiling/shaderProfilerResults/PerEncoderPipelineCosts.txt
SortedPipelines
Encoder %u
AbsoluteCost
Pipeline %llu
PipelineState 0x%llX = [%.4f%%]
PipelineId
DrawCalls
index
functionIndex
PercentageCost
frameProfile
frame counters
frame profile data
Frame Profiler
Frame profiler failed due to an internal error.
MTLStat_nSec
MTLStatVertices
frameGPUTime
perEncoderDrawCallCount
GPUState
Frame profiler failed to get data from the device.
v8@?0
Total Samples = %g
index
functionIndex
vertTiming
vertCyclePercentragTiming
fragmentCyclePercent
%6u : encoderId:%u limiterIdx:%u (TS: %llu) nTracePackets:%u)
%6u : 0x%0.8llx 0x%0.8llx
GPUToolsAvoidProgramAddressMappings
usc sampling address data
usc sampling sample data
frame index
ring buffer
usc sampling address mappings
encID
drawCallIndex
mappedAddress
mappedSize
binaryUniqueId
encIndex
Blit Encoder Kick Times Nsec
Blit Encoder Indices
GPU Encoder Info
aggregated derived counters
sampled timestamps
aggregated timeline data
aggregated timeline data ex
ring buffer sampled counter data
core counts
ring buffer blend factors
Restore Timestamps
coalesced encoder mapping
v32@?0@"NSNumber"8@"NSArray"16^B24
limiter data
limiter time stamps
limiter counter list
shader timeline data
shader timeline data ex
Havested Binaries
Finalize Shader Profiler Result
Kick Time Data
Encoder Load Action Times
Encoder Store Action Times
Shader Profiling Frame Time
Frame Time Data
Num Ring Buffers
Blit Command Nsec Times
derivedCounterData
@"NSDictionary"16@?0@"NSDictionary"8
gputools.%@.%p
End Streaming Data
v16@?0@"NSDictionary"8
QueryShaderInfoWithPayload
rm -rf /tmp/com.apple.gputools.profiling/gpuTimelineResults
mkdir /tmp/com.apple.gputools.profiling/gpuTimelineResults
Streaming GPU Timeline Data
Streaming Shader Profiling Data
UseKicktimestamps
UseMTLCounters
CoalesceComputeEncoders
CoalesceBlitEncoders
useOverlap
SupportsFileFormatV2
GPUDebugger.CounterGraph.UseEncoderDataForCounters
gputools.GPUToolsDebugger.DYPMTLShaderProfiler.ParallelQueue
/tmp/com.apple.gputools.profiling/shaderProfilerResults/uscSamplingAddressProcessed.txt
Index : ProgramType BatchIdx FunctionIdx [Start - End]
%6u : %2u %6u %6u [0x%0.8llx - 0x%0.8llx]
Encoder  Index [  Start -  End   ]  BinaryUniqueID  EncIdx Index Type
index
%08x %5d [%08llx-%08llx] %016llx %6d %5d %3d %s
QueryAPSData
Streaming APS Data
GPUCounterGraph
plist
counters
batchfiltered
vendorCounters
v32@?0@"NSString"8@"NSDictionary"16^B24
GPUTime
v32@?0@"NSString"8@16^B24
encoderBatchPriorityList
maxDrawsInAnyEncoder
collectInBackground
pause
derivedCounterInfo
batchFilteredDerivedCounters
SubcommandIndex
highPriorityBatches
HighPriorityBatchInfo
Batch Filtering Started
vector
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.ParallelQueue
v32@?0@8@"NSNumber"16^B24
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/com.apple.gputools.profiling/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
source
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %u %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
    %d %s [%u %u] %.1f %.2f%%
    %d %s [%u %u]
binaryDisassemblyInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
/program_source
Offset
totalCost
16777235-0
::air.vertexFetchFunction()
basic_string
TraceId to SampleIndex
Frame Encoder Times Data
Encoder TraceId Data
Sample Marker
Blit TraceId to Sample Index
Blit Encoder Time Data
Blit Split TraceId to Sample Index
Blit Split Encoder Time Data
Blit Encoder Frame Data
Blit Encoder Info
Blit Split Encoder Frame Data
Blit Split Encoder Info
Encoder Draw Call Count
Blit Encoder Nsec Times
Blit Command Kick Times Nsec
passList
DerivedCounterDictionary
DerivedCounters
subtype
Normalize
_encoderRawData
_encoderTileInfos
_encoderKickTimes
DerivedCounterConfigurationVariables
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
_RawCounterValues
AverageSamples
derivedCounterDataForBottleneckAnalysis
DerivedCounterAnalysis
DerivedCounterAnalysisFunctions
BatchInfos
name
description
num_cores
MTLStatTotalGPUCycles
_vtx
_frg
_cmp
var %@%@ = 0;
var %@_norm%@ = 0;
var core_count = num_cores;
var TileWidth  = 0;
var TileHeight = 0;
var _DerivedCounterResult = [];
var _RawCounterValues = [];
function _SetAndEvaluateRawCounterValues() {
for (var encoderIdx = 0; encoderIdx < _encoderRawData.length; encoderIdx++) {
TileWidth = _encoderTileInfos[encoderIdx][0];
TileHeight = _encoderTileInfos[encoderIdx][1];
_DerivedCounterResult[encoderIdx] = []
_RawCounterValues[encoderIdx] = []
%@%@ = _encoderRawData[encoderIdx][%u][%u][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@ = _encoderKickTimes[encoderIdx][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@
%@_norm%@ = 100.0 * %@ * (%@%@ / Math.max(_encoderRawData[encoderIdx][%u][%u][%u], 1));
_RawCounterValues[encoderIdx].push(%@_norm%@);
%@_norm%@
%@ = %@%@ + %@%@ + %@%@;
_RawCounterValues[encoderIdx].push(%@);
%@_norm = 100.0 * %@ * (%@ / Math.max(_encoderRawData[encoderIdx][0][%u][%u] + _encoderRawData[encoderIdx][1][%u][%u] + _encoderRawData[encoderIdx][2][%u][%u], 1.0));
_RawCounterValues[encoderIdx].push(%@_norm);
_norm
try { value = %@(); if (!isFinite(value) || isNaN(value) || (value < 0)) { value = 0; } _DerivedCounterResult[encoderIdx].push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult[encoderIdx].push(0); }
v16@?0@"NSString"8
ErrorLog
DerivedCounterScript
Timebase
Post Processing Frame Marker
profileCounters
Frame Index
Source Sample Marker
ShaderProfilerData
Derived Counter Sample Data
Kick Times
Batch Filtered Counters
End Batch ID Streaming Data
Program Address Buffer
Program Address Mappings
Command Buffer Timestamps
PState Info Data
mapping
TraceId to BatchId
v32@?0@"NSNumber"8@"NSNumber"16^B24
TraceId to Coalesced BatchId
v32@?0@"NSArray"8Q16^B24
GPU Stats
Frame Encoder Time Data
EncoderTime
RingBufferIndex
Source
Subdivided Dictionary
Encoder Infos
Encoder Tile Info
Counter Info
Derived Counters Info Data
Num Encoders
Fragment Counter
Encoder Time Sample Data
Encoder Sample Index Data
limiter sample counters
var %@ = 0;
var %@_norm = 0;
var core_count = num_cores;
var MTLStat_nSec = 0;
function _SetAndEvaluateRawCounterValues(numSamples, gpuCyclesCounterIndex, ringBufferIndex) {
num_cores = _CoreCount[ringBufferIndex];
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu;
var gpuCycles = _RawCounterValues[gpuCyclesCounterIndex + sampleStartIndex] / num_cores;
MTLStat_nSec = (_RawTimestampDelta[sampleIndex]) * %u / %u;
%@ = _RawCounterValues[%lu + sampleStartIndex];
%@_norm = 100.0 * (_RawCounterValues[%lu + sampleStartIndex] / gpuCycles);
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
core_mask_list
gputools.MTLShaderProfiler.GRCPerFrameDataparallelQueue
_RawTimestampDelta
_CoreCount
usc sample count
usc sample data thread offsets
Bandwidth
gputools.MTLShaderProfiler.parallelQueue
groups
Resources/GPUCounterGraph.plist
%@ (%@)
unit
Encoder Index
CommandBuffer
Encoder
Marker
%d %d %d
%lu,%d,
DYMTLShaderProfilerShaderInfo
DYMTLShaderProfilerResult
DYMTLShaderProfiler
1D!1
DYShaderAnalyzerNextGPU
GRCPerFrameDataClass
B16@0:8
@24@0:8Q16
@24@0:8@16
v24@0:8@16
Q16@0:8
v24@0:8Q16
@16@0:8
@24@0:8^{_NSZone=}16
v32@0:8@16@24
v32@0:8@16d24
v24@0:8d16
@36@0:8@16^v24I32
@28@0:8@16B24
v20@0:8B16
I16@0:8
v20@0:8I16
d16@0:8
v16@0:8
@"NSArray"
@"NSNumber"
@"NSDictionary"
@"NSMutableDictionary"
@"NSMutableArray"
v32@0:8@16@?24
v40@0:8@16@24@?32
@48@0:8@16@24@32Q40
@32@0:8@16@24
@48@0:8@16^Q24^v32^v40
@52@0:8I16@20@28@36r^{CounterIndexInfo=QQQQQ}44
@40@0:8@16@24@32
@20@0:8I16
@48@0:8@16@24@32@40
v44@0:8^Q16I24r*28^Q36
B24@0:8@16
I24@0:8@16
v60@0:8@16@24@32@40I48I52i56
v40@0:8@16@24@32
v52@0:8@16@24@32^v40I48
B48@0:8@16@24@32@40
@40@0:8@16@24I32B36
v36@0:8@16@24i32
v80@0:8@16^v24I32I36I40^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})(?={?=QQ}{?=Qb8b24I})}44^{DYMTLShaderProfilerUSCSample=I(?={?=(?=II)I}{?=II})}52I60^v64^v72
v36@0:8^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})(?={?=QQ}{?=Qb8b24I})}16I24r*28
v32@0:8@16r*24
@"<DYPShaderProfiler>"
{atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}
@"NSString"
@"NSOperationQueue"
@"DYShaderAnalyzerNextGPU"
B20@0:8i16
@72@0:8@16@24i32@36@44@52I60@64
@60@0:8@16@24i32@36@44r^v52
@52@0:8@16@24i32@36@44
@28@0:8@16i24
d28@0:8@16I24
d36@0:8@16I24@28
{DebugInfo={vector<DebugInfo::LineEntry, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}{unordered_map<std::string, unsigned int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int>>>={__hash_table<std::__hash_value_type<std::string, unsigned int>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, unsigned int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>>>=f}}}{vector<std::string, std::allocator<std::string>>=^v^v{__compressed_pair<std::string *, std::allocator<std::string>>=^v}}IIIII}44@0:8@16@24i32@36
{pair<std::vector<unsigned int>, std::vector<std::vector<DebugInfo::LineEntry *>>>={vector<unsigned int, std::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::allocator<unsigned int>>=^I}}{vector<std::vector<DebugInfo::LineEntry *>, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v^v{__compressed_pair<std::vector<DebugInfo::LineEntry *> *, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v}}}24@0:8^v16
v72@0:8^v16^v24^v32d40I48I52i56r^{LineDisassemblyInfo=@@dIIII}60B68
@72@0:8^v16^v24^v32d40@48@56^v64
@28@0:8r^v16I24
@"<DYPShaderAnalyzer>"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{unique_ptr<GRCPerFrameData, std::default_delete<GRCPerFrameData>>="__ptr_"{__compressed_pair<GRCPerFrameData *, std::default_delete<GRCPerFrameData>>="__value_"^{GRCPerFrameData}}}
ShaderProfiler-ProcessStreamedDataPayload
bPostProcessingMarkerReceived: %u
profileCounters
Frame Index: %u
usc sampling address data
Frame Index, ShaderProfilerData: %u
Frame Time Data
Blit Encoder Frame Data
Derived Counter Sample Data
Havested Binaries
Kick Times
End Batch ID Streaming Data
ShaderProfiler-ProcessStreamedDataPostProcessing
ShaderProfiler-ComputeDerivedCountersFromData
