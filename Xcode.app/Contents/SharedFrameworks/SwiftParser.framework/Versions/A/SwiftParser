$ss12CaseIterableP
8newState_t
5index_
7lexemest
Si15delimiterLength_t
4kind_Si15delimiterLengtht
Sb11isRawString_t
17stringLiteralKind_t
17stringLiteralKind_Si10parenCountt
5index_SPy
G7lexemest
5error_t
$ss9OptionSetP
$sSY
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
3key_
Sg21unexpectedBeforeColon
5colonAA5valuet
$s14IDESwiftParser15SyntaxParseableP
SaySSG
ySSG
ySiG
$sSt
$sST
$s14IDESwiftParser13TokenConsumerP
5start_t
_AAt
$s14IDESwiftParser27NominalTypeDeclarationTraitP
$s14IDESwiftParser21RawParameterListTraitP
$s14IDESwiftParser23RawParameterClauseTraitP
$s14IDESwiftParser17RawParameterTraitP
15ParameterSyntax
10Parameters
$sSl
$sSK
$sSk
SiSg
8slashEnd_Si9numPoundstSg
$s14IDESwiftParser33RawMisplacedEffectSpecifiersTraitP
22CorrectAsyncTokenKinds
23CorrectThrowsTokenKinds
25MisspelledAsyncTokenKinds
26MisspelledThrowsTokenKinds
$s14IDESwiftParser24RawEffectSpecifiersTraitP
$s14IDESwiftParser25UnexpectedNodesCombinableP
16closingDelimiter_t
$s14IDESwiftParser12TokenSpecSetP
yxq_GG
5IndexSlQzz_x_SlRz
7ElementSTRtzlXX
visibility
metadata
<#declaration#>
sourceLocation
else
elseif
endif
available
unavailable
AnyObject
elif
SwiftParser/Expressions.swift
Fatal error
Postfix #if should only have one element
SwiftParser/IncrementalParseTransition.swift
ConcurrentEdits created by translateSequentialEditsToConcurrentEdits do not satisfy ConcurrentEdits requirements
A single edit doesn't satisfy the ConcurrentEdits requirements?
_TtC14IDESwiftParser26IncrementalParseTransition
previousIncrementalParseResult
edits
reusedNodeCallback
Edits passed to ConcurrentEdits(concurrent:) does not satisfy the requirements posed by ConcurrentEdits
_TtC14IDESwiftParser21LookaheadTrackerOwner
lookaheadTracker
_TtC14IDESwiftParserP33_78149DB072C20084E7D780D86E26C3AF41StringLiteralExpressionIndentationChecker
expectedIndentation
arena
AccessLevelModifier
IDESwiftParser
StringLiteralKind
Cursor
Result
UnknownCharactersClassification
LexingDiagnostic
State
StateTransition
StateStack
NewlinePresence
Position
TriviaLexingMode
AccessorIntroducer
IfConfigContinuationClauseStartKeyword
ExperimentalFeatures
CollectionKind
IDESwiftParser
IncrementalParseTransition
ConcurrentEdits
IncrementalParseLookup
ConcurrentEditsError
SyntaxCursor
IDESwiftParser
IdentifierCheckContext
IDESwiftParser
SyntaxParseable
Lexeme
Flags
LexemeSequence
IDESwiftParser
Lexer
SkippingState
Lookahead
BracketedTokens
AccessLevelModifier
IDESwiftParser
NominalTypeDeclarationTrait
PrimaryOrGenerics
IDESwiftParser
RawParameterTrait
RawParameterListTrait
ParameterSyntax
RawParameterClauseTrait
Parameters
IDESwiftParser
IncrementalParseResult
IDESwiftParser
AccessorSpecifierOptions
QuestionOrExclamationMarkOptions
AvailabilityKeywordOptions
LabelOptions
LiteralOptions
SpecifierOptions
DetailOptions
FirstNameOptions
SecondNameOptions
NameOptions
ConsumeKeywordOptions
BaseNameOptions
ArgumentOptions
KindSpecifierOptions
AsyncSpecifierOptions
IdentifierOptions
PoundKeywordOptions
ImportKindSpecifierOptions
OptionalMarkOptions
LayoutSpecifierOptions
ParameterOptions
MetatypeSpecifierOptions
FixitySpecifierOptions
BindingSpecifierOptions
ValueOptions
HigherThanOrLowerThanLabelOptions
EqualOptions
OpeningQuoteOptions
ClosingQuoteOptions
SomeOrAnySpecifierOptions
ThrowsSpecifierOptions
IDESwiftParser
Parser
LookaheadTracker
LookaheadTrackerOwner
LookaheadRanges
Element
IDESwiftParser
RegexLiteralLexemes
Builder
Kind
IDESwiftParser
AsyncEffectSpecifier
ThrowsEffectSpecifier
EffectSpecifier
RawMisplacedEffectSpecifiersTrait
MisspelledAsyncTokenKinds CorrectAsyncTokenKinds MisspelledThrowsTokenKinds CorrectThrowsTokenKinds
RawEffectSpecifiersTrait
MisspelledThrowsTokenKinds
MisspelledAsyncTokenKinds
CorrectThrowsTokenKinds
CorrectAsyncTokenKinds
IDESwiftParser
StringLiteralExpressionIndentationChecker
SwiftVersion
IDESwiftParser
UnexpectedNodesCombinable
IDESwiftParser
TokenConsumer
Token
IDESwiftParser
TokenPrecedence
IDESwiftParser
TokenSpec
IDESwiftParser
TokenSpecSet
DeclarationStart
DeclarationModifier
PostfixOperatorLike
BinaryOperatorLike
OperatorLike
AccessorModifier
SwitchCaseStart
CanBeStatementStart
EitherTokenSpecSet
PureDeclarationKeyword
IDESwiftParser
TriviaParser
private
fileprivate
internal
public
open
AllCases
singleLine
multiLine
singleQuote
position
previousTokenKind
previousLexemeTrailingNewlinePresence
previousKeyword
stateStack
input
previous
absent
present
topState
push
pushRegexLexemes
replace
afterRawStringDelimiter
inStringLiteral
afterStringLiteral
inStringInterpolationStart
inStringInterpolation
inRegexLiteral
normal
preferRegexOverBinaryOperator
afterClosingStringQuote
kind
trivia
lexemeContents
tokenKind
flags
error
stateTransition
trailingTriviaLexingMode
keywordKind
trailingNewlinePresence
noNewlines
escapedNewlineInMultiLineStringLiteral
attributes
modifier
kind
unexpectedBeforeToken
token
poundElseif
poundElse
pound
AllCases
Element
RawValue
ArrayLiteralElement
rawValue
dictionary
array
previousIncrementalParseResult
edits
reusedNodeCallback
editsNotConcurrent
transition
cursor
node
finished
viewMode
variableName
memberAccess
Element
RawValue
ArrayLiteralElement
rawTokenKind
flags
diagnostic
start
leadingTriviaByteLength
textByteLength
trailingTriviaByteLength
cursor
rawValue
Element
Iterator
sourceBufferStart
cursor
nextToken
lexerStateAllocator
lookaheadTracker
Token
skipSinglePost
skipUntil
skipSingle
lexemes
currentToken
tokensConsumed
swiftVersion
experimentalFeatures
leftParen
leftBrace
leftSquare
poundIf
poundElse
poundElseif
AllCases
private
fileprivate
internal
public
AllCases
PrimaryOrGenerics
ParameterSyntax
Parameters
tree
lookaheadRanges
AllCases
didSet
willSet
unsafeAddress
addressWithOwner
addressWithNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
_read
_modify
init
postfixQuestionMark
exclamationMark
poundAvailable
poundUnavailable
message
renamed
introduced
obsoleted
deprecated
true
false
_version
_underlyingVersion
weak
unowned
safe
unsafe
identifier
wildcard
_move
consume
__consuming
__setter_access
_const
_local
actor
async
borrowing
class
consuming
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
mutating
nonisolated
nonmutating
open
optional
override
package
postfix
prefix
private
public
reasync
_resultDependsOnSelf
required
static
transferring
self
Self
deinit
subscript
dollarIdentifier
binaryOperator
integerLiteral
_forward
reverse
_linear
visibility
metadata
prefixOperator
postfixOperator
poundIf
poundElseif
poundElse
typealias
struct
enum
protocol
func
inout
target
availability
exported
kind
spiModule
_Trivial
_TrivialAtMost
_UnknownLayout
_RefCountedObject
_NativeRefCountedObject
_Class
_NativeClass
_BridgeObject
_TrivialStride
Type
Protocol
_mutating
_borrowing
_consuming
left
right
none
higherThan
lowerThan
stringQuote
multilineStringQuote
__shared
__owned
_resultDependsOn
some
singleQuote
throws
rethrows
Token
arena
lexemes
currentToken
nestingLevel
maximumNestingLevel
parseLookup
lookaheadRanges
lookaheadTrackerOwner
swiftVersion
experimentalFeatures
_emptyRawMultipleTrailingClosureElementListSyntax
_emptyRawDeclModifierListSyntax
_emptyRawAttributeListSyntax
_emptyRawTypeSpecifierListSyntax
furthestOffset
lookaheadTracker
Element
Iterator
Index
SubSequence
Indices
kind
error
builder
openingPounds
openingSlash
pattern
closingSlash
closingPounds
numOpenPounds
patternByteLength
numClosePounds
_startInput
_patternErrorOffset
_patternErrorKind
_startPrevious
lexemeCount
RawValue
AllCases
MisspelledAsyncTokenKinds
CorrectAsyncTokenKinds
MisspelledThrowsTokenKinds
CorrectThrowsTokenKinds
async
await
reasync
rethrows
throw
throws
asyncSpecifier
throwsSpecifier
expectedIndentation
arena
weakBracketed
openingBrace
unknownToken
identifierLike
exprKeyword
weakPunctuator
mediumPunctuator
weakBracketClose
stmtKeyword
strongPunctuator
closingBrace
declKeyword
openingPoundIf
closingPoundIf
rawTokenKind
keyword
remapping
recoveryPrecedence
allowAtStartOfLine
actor
associatedtype
case
class
deinit
enum
extension
func
import
init
macro
operator
precedencegroup
protocol
struct
subscript
typealias
pound
break
continue
defer
fallthrough
discard
guard
repeat
return
switch
then
throw
while
yield
default
__consuming
consuming
borrowing
mutating
nonmutating
binaryOperatorLike
postfixOperatorLike
prefixOperator
binaryOperator
infixQuestionMark
equal
arrow
postfixOperator
exclamationMark
postfixQuestionMark
__setter_access
_const
_local
async
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
nonisolated
open
optional
override
package
postfix
prefix
private
public
reasync
required
rethrows
static
transferring
unowned
weak
_resultDependsOn
_resultDependsOnSelf
declarationModifier
declarationKeyword
AllCases
 !"#$%
 !"#$
AccessLevelModifier
                 2   : >B
IDESwiftParser
StringLiteralKind
Cursor
Result
UnknownCharactersClassification
LexingDiagnostic
State
StateTransition
StateStack
NewlinePresence
Position
TriviaLexingMode
AccessorIntroducer
IfConfigContinuationClauseStartKeyword
ExperimentalFeatures
&&&'&&&&&
CollectionKind
IDESwiftParser
IncrementalParseTransition
ConcurrentEdits
IncrementalParseLookup
ConcurrentEditsError
SyntaxCursor
IDESwiftParser
IdentifierCheckContext
IDESwiftParser
SyntaxParseable
Lexeme
Flags
LexemeSequence
IDESwiftParser
Lexer
SkippingState
Lookahead
BracketedTokens
AccessLevelModifier
IDESwiftParser
NominalTypeDeclarationTrait
PrimaryOrGenerics
IDESwiftParser
RawParameterTrait
RawParameterListTrait
ParameterSyntax
RawParameterClauseTrait
Parameters
IDESwiftParser
IncrementalParseResult
IDESwiftParser
AccessorSpecifierOptions
QuestionOrExclamationMarkOptions
AvailabilityKeywordOptions
LabelOptions
LiteralOptions
SpecifierOptions
DetailOptions
FirstNameOptions
SecondNameOptions
NameOptions
ConsumeKeywordOptions
BaseNameOptions
ArgumentOptions
KindSpecifierOptions
AsyncSpecifierOptions
IdentifierOptions
PoundKeywordOptions
ImportKindSpecifierOptions
OptionalMarkOptions
LayoutSpecifierOptions
ParameterOptions
MetatypeSpecifierOptions
FixitySpecifierOptions
BindingSpecifierOptions
ValueOptions
HigherThanOrLowerThanLabelOptions
EqualOptions
OpeningQuoteOptions
ClosingQuoteOptions
SomeOrAnySpecifierOptions
ThrowsSpecifierOptions
IDESwiftParser
Parser
LookaheadTracker
LookaheadTrackerOwner
LookaheadRanges
Element
IDESwiftParser
RegexLiteralLexemes
Builder
Kind
IDESwiftParser
AsyncEffectSpecifier
ThrowsEffectSpecifier
EffectSpecifier
RawMisplacedEffectSpecifiersTrait
MisspelledAsyncTokenKinds CorrectAsyncTokenKinds MisspelledThrowsTokenKinds CorrectThrowsTokenKinds
RawEffectSpecifiersTrait
MisspelledThrowsTokenKinds
MisspelledAsyncTokenKinds
CorrectThrowsTokenKinds
CorrectAsyncTokenKinds
6;@E
IDESwiftParser
StringLiteralExpressionIndentationChecker
SwiftVersion
IDESwiftParser
UnexpectedNodesCombinable
IDESwiftParser
TokenConsumer
Token
, $(IDESwiftParser
TokenPrecedence
IDESwiftParser
TokenSpec
cbbbbb
bbbb
bbbbb
bbbbbb
!bb#


IDESwiftParser
TokenSpecSet
DeclarationStart
DeclarationModifier
PostfixOperatorLike
BinaryOperatorLike
OperatorLike
AccessorModifier
SwitchCaseStart
CanBeStatementStart
EitherTokenSpecSet
PureDeclarationKeyword
IDESwiftParser
TriviaParser
222222222222
222222222222222222222222222222
22222222222222222222222222222
$ss12CaseIterableP
8newState_t
5index_
7lexemest
Si15delimiterLength_t
4kind_Si15delimiterLengtht
Sb11isRawString_t
17stringLiteralKind_t
17stringLiteralKind_Si10parenCountt
5index_SPy
G7lexemest
5error_t
$ss9OptionSetP
$sSY
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
3key_
Sg21unexpectedBeforeColon
5colonAA5valuet
$s14IDESwiftParser15SyntaxParseableP
SaySSG
ySSG
ySiG
$sSt
$sST
$s14IDESwiftParser13TokenConsumerP
5start_t
_AAt
$s14IDESwiftParser27NominalTypeDeclarationTraitP
$s14IDESwiftParser21RawParameterListTraitP
$s14IDESwiftParser23RawParameterClauseTraitP
$s14IDESwiftParser17RawParameterTraitP
15ParameterSyntax
10Parameters
$sSl
$sSK
$sSk
SiSg
8slashEnd_Si9numPoundstSg
$s14IDESwiftParser33RawMisplacedEffectSpecifiersTraitP
22CorrectAsyncTokenKinds
23CorrectThrowsTokenKinds
25MisspelledAsyncTokenKinds
26MisspelledThrowsTokenKinds
$s14IDESwiftParser24RawEffectSpecifiersTraitP
$s14IDESwiftParser25UnexpectedNodesCombinableP
16closingDelimiter_t
$s14IDESwiftParser12TokenSpecSetP
yxq_GG
5IndexSlQzz_x_SlRz
7ElementSTRtzlXX
visibility
metadata
<#declaration#>
sourceLocation
else
elseif
endif
available
unavailable
AnyObject
elif
SwiftParser/Expressions.swift
Fatal error
Postfix #if should only have one element
SwiftParser/IncrementalParseTransition.swift
ConcurrentEdits created by translateSequentialEditsToConcurrentEdits do not satisfy ConcurrentEdits requirements
A single edit doesn't satisfy the ConcurrentEdits requirements?
_TtC14IDESwiftParser26IncrementalParseTransition
previousIncrementalParseResult
edits
reusedNodeCallback
Edits passed to ConcurrentEdits(concurrent:) does not satisfy the requirements posed by ConcurrentEdits
_TtC14IDESwiftParser21LookaheadTrackerOwner
lookaheadTracker
_TtC14IDESwiftParserP33_78149DB072C20084E7D780D86E26C3AF41StringLiteralExpressionIndentationChecker
expectedIndentation
arena
private
fileprivate
internal
public
open
AllCases
singleLine
multiLine
singleQuote
position
previousTokenKind
previousLexemeTrailingNewlinePresence
previousKeyword
stateStack
input
previous
absent
present
topState
push
pushRegexLexemes
replace
afterRawStringDelimiter
inStringLiteral
afterStringLiteral
inStringInterpolationStart
inStringInterpolation
inRegexLiteral
normal
preferRegexOverBinaryOperator
afterClosingStringQuote
kind
trivia
lexemeContents
tokenKind
flags
error
stateTransition
trailingTriviaLexingMode
keywordKind
trailingNewlinePresence
noNewlines
escapedNewlineInMultiLineStringLiteral
attributes
modifier
kind
unexpectedBeforeToken
token
poundElseif
poundElse
pound
AllCases
Element
RawValue
ArrayLiteralElement
rawValue
dictionary
array
previousIncrementalParseResult
edits
reusedNodeCallback
editsNotConcurrent
transition
cursor
node
finished
viewMode
variableName
memberAccess
Element
RawValue
ArrayLiteralElement
rawTokenKind
flags
diagnostic
start
leadingTriviaByteLength
textByteLength
trailingTriviaByteLength
cursor
rawValue
Element
Iterator
sourceBufferStart
cursor
nextToken
lexerStateAllocator
lookaheadTracker
Token
skipSinglePost
skipUntil
skipSingle
lexemes
currentToken
tokensConsumed
swiftVersion
experimentalFeatures
leftParen
leftBrace
leftSquare
poundIf
poundElse
poundElseif
AllCases
private
fileprivate
internal
public
AllCases
PrimaryOrGenerics
ParameterSyntax
Parameters
tree
lookaheadRanges
AllCases
didSet
willSet
unsafeAddress
addressWithOwner
addressWithNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
_read
_modify
init
postfixQuestionMark
exclamationMark
poundAvailable
poundUnavailable
message
renamed
introduced
obsoleted
deprecated
true
false
_version
_underlyingVersion
weak
unowned
safe
unsafe
identifier
wildcard
_move
consume
__consuming
__setter_access
_const
_local
actor
async
borrowing
class
consuming
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
mutating
nonisolated
nonmutating
open
optional
override
package
postfix
prefix
private
public
reasync
_resultDependsOnSelf
required
static
transferring
self
Self
deinit
subscript
dollarIdentifier
binaryOperator
integerLiteral
_forward
reverse
_linear
visibility
metadata
prefixOperator
postfixOperator
poundIf
poundElseif
poundElse
typealias
struct
enum
protocol
func
inout
target
availability
exported
kind
spiModule
_Trivial
_TrivialAtMost
_UnknownLayout
_RefCountedObject
_NativeRefCountedObject
_Class
_NativeClass
_BridgeObject
_TrivialStride
Type
Protocol
_mutating
_borrowing
_consuming
left
right
none
higherThan
lowerThan
stringQuote
multilineStringQuote
__shared
__owned
_resultDependsOn
some
singleQuote
throws
rethrows
Token
arena
lexemes
currentToken
nestingLevel
maximumNestingLevel
parseLookup
lookaheadRanges
lookaheadTrackerOwner
swiftVersion
experimentalFeatures
_emptyRawMultipleTrailingClosureElementListSyntax
_emptyRawDeclModifierListSyntax
_emptyRawAttributeListSyntax
_emptyRawTypeSpecifierListSyntax
furthestOffset
lookaheadTracker
Element
Iterator
Index
SubSequence
Indices
kind
error
builder
openingPounds
openingSlash
pattern
closingSlash
closingPounds
numOpenPounds
patternByteLength
numClosePounds
_startInput
_patternErrorOffset
_patternErrorKind
_startPrevious
lexemeCount
RawValue
AllCases
MisspelledAsyncTokenKinds
CorrectAsyncTokenKinds
MisspelledThrowsTokenKinds
CorrectThrowsTokenKinds
async
await
reasync
rethrows
throw
throws
asyncSpecifier
throwsSpecifier
expectedIndentation
arena
weakBracketed
openingBrace
unknownToken
identifierLike
exprKeyword
weakPunctuator
mediumPunctuator
weakBracketClose
stmtKeyword
strongPunctuator
closingBrace
declKeyword
openingPoundIf
closingPoundIf
rawTokenKind
keyword
remapping
recoveryPrecedence
allowAtStartOfLine
actor
associatedtype
case
class
deinit
enum
extension
func
import
init
macro
operator
precedencegroup
protocol
struct
subscript
typealias
pound
break
continue
defer
fallthrough
discard
guard
repeat
return
switch
then
throw
while
yield
default
__consuming
consuming
borrowing
mutating
nonmutating
binaryOperatorLike
postfixOperatorLike
prefixOperator
binaryOperator
infixQuestionMark
equal
arrow
postfixOperator
exclamationMark
postfixQuestionMark
__setter_access
_const
_local
async
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
nonisolated
open
optional
override
package
postfix
prefix
private
public
reasync
required
rethrows
static
transferring
unowned
weak
_resultDependsOn
_resultDependsOnSelf
declarationModifier
declarationKeyword
AllCases
 !"#$%
 !"#$
