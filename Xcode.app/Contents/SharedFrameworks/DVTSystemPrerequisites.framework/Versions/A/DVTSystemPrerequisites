@(#)PROGRAM:DVTSystemPrerequisites  PROJECT:DVTSystemPrerequisites-23231
XCODE_DEVELOPER_DIR_PATH
version.plist
Resources/Packages
Resources/CoreDeviceDDIs
/Library/Developer/PrivateFrameworks/CoreDevice.framework/Resources/bin/devicectl
Info.plist
Resources/LicenseInfo.plist
Resources/en.lproj/License.rtf
/Library/Preferences/com.apple.dt.Xcode.plist
com.apple.DeveloperTools
~/Library/Developer/Xcode/DerivedData/ModuleCache.noindex
~/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex
DVTCoreDeviceDDIInstallerErrorDomain
DVTCoreDeviceDDIInstaller.m
Invalid parameter not satisfying: %@
path
manage
ddis
update
--source-dir
Updating the Core Device Developer Disk Images failed.
taskExitStatus
v16@?0@"NSTask"8
Failed to connect to installation service.
Xcode failed to connect to the installation service. If this version of Xcode has library validation disabled (DisableLV), Xcode is not permitted to start package installs and installation must be performed manually using:
cd "%s"; for f in *.pkg; do sudo installer -pkg "$f" -target /; done
100%
Install Started
Install Succeeded
Install Failed: 
DVTFirstLaunchErrorDomain
/Library/Developer/PrivateFrameworks/CoreSimulator.framework
/Library/Developer/PrivateFrameworks/CoreDevice.framework
/Library/Developer/PrivateFrameworks/DVTDownloads.framework
/Library/Developer/PrivateFrameworks/ROCKit.framework
/Library/Apple/System/Library/PrivateFrameworks/Mercury.framework
/Library/Apple/System/Library/PrivateFrameworks/MobileDevice.framework
/Library/Apple/System/Library/PrivateFrameworks/RemotePairing.framework
com.apple.dt.DVTSystemPrerequisites
DVTFirstLaunchPackageInstaller
DVTFirstLaunchPackageInstaller.m
Failed to create DVTFirstLaunchPackageInstaller: %@
com.apple.pkg.MobileDevice
com.apple.pkg.MobileDeviceSubpackage
com.apple.pkg.XcodeSystemResources
com.apple.pkg.XcodeSystemResources_Full
package is newer
package is not newer
/Library/Apple/
v32@?0@"PKBundleComponent"8@"PKBundleComponent"16*24
c24@?0@"DVTFirstLaunchPackage"8@"NSDictionary"16
v8@?0
Failed to open package.
Failed to create install request.
packageSpecs
system.install.apple-software
IDELastGMLicenseAgreedTo
IDELastPTRLicenseAgreedTo
IDELastBetaLicenseAgreedTo
IDEXcodeVersionForAgreedToGMLicense
IDEXcodeVersionForAgreedToPTRLicense
IDEXcodeVersionForAgreedToBetaLicense
DVTLicenseAgreement.m
bundledLicenseInfoPath
acceptedLicensePlistPath
currentMarketingVersion
licenseType
licenseID
License plist missing string for 'licenseType' key at path %@
License plist missing string for 'licenseID' key at path %@
Beta
License plist invalid string for 'licenseType' key at path %@
com.apple.dt.Xcode
DVTAlwaysShowLicenseAgreement
DVTAlwaysShowAllPackagesToInstall
DVTSkipFirstLaunchFrameworkVersionChecking
CFBundleShortVersionString
Agreeing to the Xcode and SDK licenses requires admin privileges, please run 
sudo xcodebuild -license
 and then retry this command.
The license file is immutable. To fix this, run 
sudo chflags nouimmutable %s
 and then retry this command.
Unable to locate LicenseInfo.plist. The license could not be accepted.
Unable to find the license agreement in the Xcode app bundle.
You have not agreed to the Xcode license agreements. Please run 'sudo xcodebuild -license' from within a Terminal window to review and agree to the Xcode and Apple SDKs license.
You have not agreed to the Xcode and Apple SDKs license. You must agree to the license below in order to use Xcode.
Press enter to display the license:
/usr/bin/textutil
-cat
-stdout
textutil not available for RTF to plain text conversion.
Review the license at: %s
Agreeing to the Xcode and Apple SDKs license requires admin privileges, please accept the Xcode license as the root user (e.g. 'sudo xcodebuild -license').
By typing 'agree' you are agreeing to the terms of the software license agreements. Any other response will cancel. [agree, cancel]
Error reading input: %s
Error parsing input as UTF-8
agree
You can review the license in Xcode
s About window, or at: %s
T@"NSArray",R,N
DDIDirectoryPath
_cacheDirectory
T@"<DVTPackageInstallerDelegate>",W,N,V_delegate
bundleForClass:
T@"NSArray",R
inputFileHandle
T@"NSFileHandle",&,N,V_errorFileHandle
isAcceptedLicensePlistImmutable
T@"NSFileHandle",&,N,V_outputFileHandle
release
T@"NSString",C,N,V_devicectlPath
.cxx_destruct
T@"PKPackage",R
T#,R
_licenseRTFPath
T@"DVTLicenseAgreement",R,N,V_licenseAgreement
errorFileHandle
T@"NSArray",R,N,V_packagesInDirectory
installClient:didFailWithError:
T@"NSFileHandle",&,N,V_inputFileHandle
isProxy
T@"NSString",?,R,C
stringByAppendingPathComponent:
T@"NSString",R
T@"NSString",R,C
T@"NSString",R,C,N,V_DDIDirectoryPath
T@"NSString",R,C,N,V_acceptedLicensePlistPath
T@"NSString",R,C,N,V_bundledLicenseID
T@"NSString",R,C,N,V_bundledLicenseInfoPath
T@"NSString",R,C,N,V_currentMarketingVersion
T@"NSString",R,C,N,V_packagesDirectory
T@"NSString",R,C,V_cacheDirectory
T@"NSString",R,V_displayName
T@"NSString",R,V_path
T@"NSUserDefaults",&,N
TQ,R
Tc,N,V_allowInteractiveAuthorization
Tc,N,V_requiresRunningAsRootUserToModifyAcceptedLicensePlist
Tc,R
Tc,R,N
Tq,N,V_promptMode
Tq,R,V_bundledLicenseType
UTF8String
_DDIDirectoryPath
_acceptedLicensePlistPath
_activeInstallClient
_allowInteractiveAuthorization
_bundledLicenseID
_bundledLicenseInfoPath
_bundledLicenseType
_createInstallTask
_currentMarketingVersion
_delegate
_devicectlPath
_displayName
_errorFileHandle
_errorForTerminationStatus:
_inputFileHandle
_installComplete
_installError
_knownPathsInstalledByPackageIdentifier
_lastPrintedProgress
_licenseAgreement
_outputFileHandle
_packageHasNewerVersionThanOnDiskContent:
_packageInstaller
_packagesDirectory
_packagesInDirectory
_path
_pkPackage
_promptMode
_requiresRunningAsRootUserToModifyAcceptedLicensePlist
_superiorXcodeAppContentsDirectory
acceptLicenseOrPrintErrors
acceptWithoutInteraction
acceptedLicensePlistPath
addObject:
allowInteractiveAuthorization
alwaysShowAllPackagesToInstall
alwaysShowLicenseAgreement
anyKnownPathsMissingOnDiskForPackage:
appendData:
array
arrayWithObjects:count:
asyncInstallWithCompletionHandler:
attributesOfItemAtPath:error:
authorizeForRight:allowingInteraction:
autorelease
boolForKey:
boolValue
bundleComponentVersionWithOnDiskCFBundle:
bundleName
bundlePath
bundleVersion
bundledLicenseID
bundledLicenseInfoPath
bundledLicenseInfoPlistPath
bundledLicenseRTFPath
bundledLicenseType
bytes
cacheDirectory
caseInsensitiveCompare:
class
code
compare:
compare:options:
conformsToProtocol:
contentsOfDirectoryAtPath:error:
copy
count
countByEnumeratingWithState:objects:count:
currentHandler
currentMarketingVersion
currentRunLoop
data
dataUsingEncoding:
dateWithTimeIntervalSinceNow:
debugDescription
defaultCoreDeviceDDIsDirectory
defaultManager
defaultPackagesDirectory
defaultPathsContainingCachedSDKVersionSpecificContent
delegate
description
developerToolsCacheDirectory
devicectlPath
dictionary
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
displayName
domain
enumerateBundleComponentsUsingBlock:
errorWithDomain:code:userInfo:
fileDescriptor
fileExistsAtPath:
fileHandleWithStandardError
fileHandleWithStandardInput
fileHandleWithStandardOutput
fileSystemRepresentation
fileURLWithPath:
fileURLWithPath:isDirectory:
filteredArrayUsingPredicate:
firstLaunchPackageInstaller:didCompleteWithSuccess:error:
firstLaunchPackageInstaller:progressChanged:
firstLaunchPackageInstallerDidStart:
handleFailureInMethod:object:file:lineNumber:description:
hash
hostAppVersionPlistPath
init
initWithBundledLicenseInfoPath:currentMarketingVersion:acceptedLicensePlistPath:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCacheDirectory:
initWithDDIDirectoryPath:
initWithData:encoding:
initWithLicenseAgreement:licenseRTFPath:
initWithPackage:
initWithPackageAtPath:
initWithPackageInstaller:
initWithPackagesDirectory:
initWithPackagesDirectory:error:
initWithRequest:delegate:options:error:
initialize
installClient:currentState:package:progress:timeRemaining:
installClientDidBegin:
installClientDidFinish:
installPackagesWithAuthRef:allowInteractiveAuthorization:
installPackagesWithError:
instanceWithDefaultPaths
interactivelyPromptToAccept
isAbsolutePath
isBundleAtPath:atLeastPackageVersion:
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
lastPathComponent
launchAndReturnError:
length
licenseAgreement
licenseHostAppInfoPlistPath
localizedDescription
mainRunLoop
needsToInstallPackages
neverShowPackagesToInstall
numberWithInt:
objectForKey:
objectForKeyedSubscript:
outputFileHandle
overrideKnownPaths:installedByPackageIdentifier:
packageIdentifier
packageWithPath:
packagesDirectory
packagesInDirectory
packagesToInstall
path
pathExtension
performInModes:block:
performPreflightCheckReturningError:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pkPackage
predicateWithBlock:
promptMode
readDataUpToLength:error:
recordLicenseAcceptance
removeItemAtPath:error:
requestWithPackages:destination:
requiresRunningAsRootUserToModifyAcceptedLicensePlist
respondsToSelector:
retain
retainCount
runMode:beforeDate:
self
setAllowInteractiveAuthorization:
setArguments:
setAuthorization:
setDelegate:
setDevicectlPath:
setErrorFileHandle:
setExecutableURL:
setInputFileHandle:
setLaunchPath:
setMinimumRequiredTrustLevel:
setObject:forKey:
setObject:forKeyedSubscript:
setOutputFileHandle:
setPrefixPath:
setPromptMode:
setRequiresRunningAsRootUserToModifyAcceptedLicensePlist:
setStandardError:
setStandardInput:
setStandardOutput:
setTerminationHandler:
setUserDefaultsSuite:
shouldInstallPackage:
shouldPromptToAcceptBundledLicense
shouldPromptToAcceptBundledLicenseID:currentMarketingVersion:lastAcceptedLicenseID:lastAcceptedMarketingVersion:
standardUserDefaults
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringWithFormat:
stringWithUTF8String:
superclass
synchronouslyClearCacheDirectory:
synchronouslyInstallReturningError:
systemWideAcceptedLicensePlistPath
terminationStatus
userDefaultsSuite
waitUntilExit
writeCurrentProgress:
writeData:
writeToFile:atomically:
zone
DVTSystemPrerequisitesPaths
DVTCoreDeviceDDIInstaller
DVTFirstLaunchPackageInstallerCLI
DVTPackageInstallerDelegate
NSObject
DVTFirstLaunchPackageInstaller
DVTFirstLaunchPackage
DVTLicenseAgreement
DVTSystemPrerequisitesUserDefaults
DVTCacheCleaner
DVTLicenseAgreementCLI
@16@0:8
@24@0:8@16
@20@0:8i16
v24@0:8@?16
c24@0:8^@16
v24@0:8@16
v16@0:8
@"NSString"
@"NSFileHandle"
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16d24
v36@0:8@16c24@28
v24@0:8@"DVTFirstLaunchPackageInstaller"16
v32@0:8@"DVTFirstLaunchPackageInstaller"16d24
v36@0:8@"DVTFirstLaunchPackageInstaller"16c24@"NSError"28
v20@0:8C16
v20@0:8c16
@"DVTFirstLaunchPackageInstaller"
@"NSError"
@32@0:8@16^@24
c32@0:8@16@24
v32@0:8@16@24
v28@0:8^{AuthorizationOpaqueRef=}16c24
v52@0:8@16i24@28d36d44
@"NSMutableDictionary"
@"PKInstallClient"
@"<DVTPackageInstallerDelegate>"
@"NSArray"
@"PKPackage"
c48@0:8@16@24@32@40
@40@0:8@16@24@32
q16@0:8
v24@0:8q16
@32@0:8@16@24
@"DVTLicenseAgreement"
Unable to read contents of packages directory at %{public}@: %{public}@
Found %lu packages in Packages directory
Unable to get version of bundle at %{public}@
Bundle at %{public}@ has version %{public}@, package has version %{public}@ (%{public}s)
Enumerating bundle components in package %{public}@
Electing to install package %{public}@ because of component %{public}@
Skipping all packages via default: DVTSkipFirstLaunchFrameworkVersionChecking
Showing all packages via default: DVTAlwaysShowAllPackagesToInstall
Won't install %{public}@ because all on-disk content is up-to-date
Will install %{public}@ because some on-disk content is known missing
Tried to install 0 packages
Initiating installation of FLE packages: %{public}@
Installation of FLE packages failed with error: %{public}@
Progress for pkg install %f
Installation of FLE packages completed succcessfully
Install reported success, but not all packages were installed. Remaining: %{public}@
@(#)PROGRAM:DVTSystemPrerequisites  PROJECT:DVTSystemPrerequisites-23231
XCODE_DEVELOPER_DIR_PATH
version.plist
Resources/Packages
Resources/CoreDeviceDDIs
/Library/Developer/PrivateFrameworks/CoreDevice.framework/Resources/bin/devicectl
Info.plist
Resources/LicenseInfo.plist
Resources/en.lproj/License.rtf
/Library/Preferences/com.apple.dt.Xcode.plist
com.apple.DeveloperTools
~/Library/Developer/Xcode/DerivedData/ModuleCache.noindex
~/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex
DVTCoreDeviceDDIInstallerErrorDomain
DVTCoreDeviceDDIInstaller.m
Invalid parameter not satisfying: %@
path
manage
ddis
update
--source-dir
Updating the Core Device Developer Disk Images failed.
taskExitStatus
v16@?0@"NSTask"8
Failed to connect to installation service.
Xcode failed to connect to the installation service. If this version of Xcode has library validation disabled (DisableLV), Xcode is not permitted to start package installs and installation must be performed manually using:
cd "%s"; for f in *.pkg; do sudo installer -pkg "$f" -target /; done
100%
Install Started
Install Succeeded
Install Failed: 
DVTFirstLaunchErrorDomain
/Library/Developer/PrivateFrameworks/CoreSimulator.framework
/Library/Developer/PrivateFrameworks/CoreDevice.framework
/Library/Developer/PrivateFrameworks/DVTDownloads.framework
/Library/Developer/PrivateFrameworks/ROCKit.framework
/Library/Apple/System/Library/PrivateFrameworks/Mercury.framework
/Library/Apple/System/Library/PrivateFrameworks/MobileDevice.framework
/Library/Apple/System/Library/PrivateFrameworks/RemotePairing.framework
com.apple.dt.DVTSystemPrerequisites
DVTFirstLaunchPackageInstaller
DVTFirstLaunchPackageInstaller.m
Failed to create DVTFirstLaunchPackageInstaller: %@
com.apple.pkg.MobileDevice
com.apple.pkg.MobileDeviceSubpackage
com.apple.pkg.XcodeSystemResources
com.apple.pkg.XcodeSystemResources_Full
package is newer
package is not newer
/Library/Apple/
v32@?0@"PKBundleComponent"8@"PKBundleComponent"16^B24
B24@?0@"DVTFirstLaunchPackage"8@"NSDictionary"16
v8@?0
Failed to open package.
Failed to create install request.
packageSpecs
system.install.apple-software
IDELastGMLicenseAgreedTo
IDELastPTRLicenseAgreedTo
IDELastBetaLicenseAgreedTo
IDEXcodeVersionForAgreedToGMLicense
IDEXcodeVersionForAgreedToPTRLicense
IDEXcodeVersionForAgreedToBetaLicense
DVTLicenseAgreement.m
bundledLicenseInfoPath
acceptedLicensePlistPath
currentMarketingVersion
licenseType
licenseID
License plist missing string for 'licenseType' key at path %@
License plist missing string for 'licenseID' key at path %@
Beta
License plist invalid string for 'licenseType' key at path %@
com.apple.dt.Xcode
DVTAlwaysShowLicenseAgreement
DVTAlwaysShowAllPackagesToInstall
DVTSkipFirstLaunchFrameworkVersionChecking
CFBundleShortVersionString
Agreeing to the Xcode and SDK licenses requires admin privileges, please run 
sudo xcodebuild -license
 and then retry this command.
The license file is immutable. To fix this, run 
sudo chflags nouimmutable %s
 and then retry this command.
Unable to locate LicenseInfo.plist. The license could not be accepted.
Unable to find the license agreement in the Xcode app bundle.
You have not agreed to the Xcode license agreements. Please run 'sudo xcodebuild -license' from within a Terminal window to review and agree to the Xcode and Apple SDKs license.
You have not agreed to the Xcode and Apple SDKs license. You must agree to the license below in order to use Xcode.
Press enter to display the license:
/usr/bin/textutil
-cat
-stdout
textutil not available for RTF to plain text conversion.
Review the license at: %s
Agreeing to the Xcode and Apple SDKs license requires admin privileges, please accept the Xcode license as the root user (e.g. 'sudo xcodebuild -license').
By typing 'agree' you are agreeing to the terms of the software license agreements. Any other response will cancel. [agree, cancel]
Error reading input: %s
Error parsing input as UTF-8
agree
You can review the license in Xcode
s About window, or at: %s
DVTSystemPrerequisitesPaths
DVTCoreDeviceDDIInstaller
DVTFirstLaunchPackageInstallerCLI
DVTPackageInstallerDelegate
NSObject
DVTFirstLaunchPackageInstaller
DVTFirstLaunchPackage
DVTLicenseAgreement
DVTSystemPrerequisitesUserDefaults
DVTCacheCleaner
DVTLicenseAgreementCLI
T@"NSArray",R,N
DDIDirectoryPath
_cacheDirectory
T@"<DVTPackageInstallerDelegate>",W,N,V_delegate
bundleForClass:
T@"NSArray",R
inputFileHandle
T@"NSFileHandle",&,N,V_errorFileHandle
isAcceptedLicensePlistImmutable
T@"NSFileHandle",&,N,V_outputFileHandle
release
T@"NSString",C,N,V_devicectlPath
.cxx_destruct
T@"PKPackage",R
T#,R
_licenseRTFPath
T@"DVTLicenseAgreement",R,N,V_licenseAgreement
errorFileHandle
T@"NSArray",R,N,V_packagesInDirectory
installClient:didFailWithError:
T@"NSFileHandle",&,N,V_inputFileHandle
isProxy
T@"NSString",?,R,C
stringByAppendingPathComponent:
T@"NSString",R
T@"NSString",R,C
T@"NSString",R,C,N,V_DDIDirectoryPath
T@"NSString",R,C,N,V_acceptedLicensePlistPath
T@"NSString",R,C,N,V_bundledLicenseID
T@"NSString",R,C,N,V_bundledLicenseInfoPath
T@"NSString",R,C,N,V_currentMarketingVersion
T@"NSString",R,C,N,V_packagesDirectory
T@"NSString",R,C,V_cacheDirectory
T@"NSString",R,V_displayName
T@"NSString",R,V_path
T@"NSUserDefaults",&,N
TB,N,V_allowInteractiveAuthorization
TB,N,V_requiresRunningAsRootUserToModifyAcceptedLicensePlist
TB,R
TB,R,N
TQ,R
Tq,N,V_promptMode
Tq,R,V_bundledLicenseType
UTF8String
_DDIDirectoryPath
_acceptedLicensePlistPath
_activeInstallClient
_allowInteractiveAuthorization
_bundledLicenseID
_bundledLicenseInfoPath
_bundledLicenseType
_createInstallTask
_currentMarketingVersion
_delegate
_devicectlPath
_displayName
_errorFileHandle
_errorForTerminationStatus:
_inputFileHandle
_installComplete
_installError
_knownPathsInstalledByPackageIdentifier
_lastPrintedProgress
_licenseAgreement
_outputFileHandle
_packageHasNewerVersionThanOnDiskContent:
_packageInstaller
_packagesDirectory
_packagesInDirectory
_path
_pkPackage
_promptMode
_requiresRunningAsRootUserToModifyAcceptedLicensePlist
_superiorXcodeAppContentsDirectory
acceptLicenseOrPrintErrors
acceptWithoutInteraction
acceptedLicensePlistPath
addObject:
allowInteractiveAuthorization
alwaysShowAllPackagesToInstall
alwaysShowLicenseAgreement
anyKnownPathsMissingOnDiskForPackage:
appendData:
array
arrayWithObjects:count:
asyncInstallWithCompletionHandler:
attributesOfItemAtPath:error:
authorizeForRight:allowingInteraction:
autorelease
boolForKey:
boolValue
bundleComponentVersionWithOnDiskCFBundle:
bundleName
bundlePath
bundleVersion
bundledLicenseID
bundledLicenseInfoPath
bundledLicenseInfoPlistPath
bundledLicenseRTFPath
bundledLicenseType
bytes
cacheDirectory
caseInsensitiveCompare:
class
code
compare:
compare:options:
conformsToProtocol:
contentsOfDirectoryAtPath:error:
copy
count
countByEnumeratingWithState:objects:count:
currentHandler
currentMarketingVersion
currentRunLoop
data
dataUsingEncoding:
dateWithTimeIntervalSinceNow:
debugDescription
defaultCoreDeviceDDIsDirectory
defaultManager
defaultPackagesDirectory
defaultPathsContainingCachedSDKVersionSpecificContent
delegate
description
developerToolsCacheDirectory
devicectlPath
dictionary
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
displayName
domain
enumerateBundleComponentsUsingBlock:
errorWithDomain:code:userInfo:
fileDescriptor
fileExistsAtPath:
fileHandleWithStandardError
fileHandleWithStandardInput
fileHandleWithStandardOutput
fileSystemRepresentation
fileURLWithPath:
fileURLWithPath:isDirectory:
filteredArrayUsingPredicate:
firstLaunchPackageInstaller:didCompleteWithSuccess:error:
firstLaunchPackageInstaller:progressChanged:
firstLaunchPackageInstallerDidStart:
handleFailureInMethod:object:file:lineNumber:description:
hash
hostAppVersionPlistPath
init
initWithBundledLicenseInfoPath:currentMarketingVersion:acceptedLicensePlistPath:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCacheDirectory:
initWithDDIDirectoryPath:
initWithData:encoding:
initWithLicenseAgreement:licenseRTFPath:
initWithPackage:
initWithPackageAtPath:
initWithPackageInstaller:
initWithPackagesDirectory:
initWithPackagesDirectory:error:
initWithRequest:delegate:options:error:
initialize
installClient:currentState:package:progress:timeRemaining:
installClientDidBegin:
installClientDidFinish:
installPackagesWithAuthRef:allowInteractiveAuthorization:
installPackagesWithError:
instanceWithDefaultPaths
interactivelyPromptToAccept
isAbsolutePath
isBundleAtPath:atLeastPackageVersion:
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
lastPathComponent
launchAndReturnError:
length
licenseAgreement
licenseHostAppInfoPlistPath
localizedDescription
mainRunLoop
needsToInstallPackages
neverShowPackagesToInstall
numberWithInt:
objectForKey:
objectForKeyedSubscript:
outputFileHandle
overrideKnownPaths:installedByPackageIdentifier:
packageIdentifier
packageWithPath:
packagesDirectory
packagesInDirectory
packagesToInstall
path
pathExtension
performInModes:block:
performPreflightCheckReturningError:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pkPackage
predicateWithBlock:
promptMode
readDataUpToLength:error:
recordLicenseAcceptance
removeItemAtPath:error:
requestWithPackages:destination:
requiresRunningAsRootUserToModifyAcceptedLicensePlist
respondsToSelector:
retain
retainCount
runMode:beforeDate:
self
setAllowInteractiveAuthorization:
setArguments:
setAuthorization:
setDelegate:
setDevicectlPath:
setErrorFileHandle:
setExecutableURL:
setInputFileHandle:
setLaunchPath:
setMinimumRequiredTrustLevel:
setObject:forKey:
setObject:forKeyedSubscript:
setOutputFileHandle:
setPrefixPath:
setPromptMode:
setRequiresRunningAsRootUserToModifyAcceptedLicensePlist:
setStandardError:
setStandardInput:
setStandardOutput:
setTerminationHandler:
setUserDefaultsSuite:
shouldInstallPackage:
shouldPromptToAcceptBundledLicense
shouldPromptToAcceptBundledLicenseID:currentMarketingVersion:lastAcceptedLicenseID:lastAcceptedMarketingVersion:
standardUserDefaults
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringWithFormat:
stringWithUTF8String:
superclass
synchronouslyClearCacheDirectory:
synchronouslyInstallReturningError:
systemWideAcceptedLicensePlistPath
terminationStatus
userDefaultsSuite
waitUntilExit
writeCurrentProgress:
writeData:
writeToFile:atomically:
zone
@16@0:8
@24@0:8@16
@20@0:8i16
v24@0:8@?16
B24@0:8^@16
v24@0:8@16
v16@0:8
@"NSString"
@"NSFileHandle"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16d24
v36@0:8@16B24@28
v24@0:8@"DVTFirstLaunchPackageInstaller"16
v32@0:8@"DVTFirstLaunchPackageInstaller"16d24
v36@0:8@"DVTFirstLaunchPackageInstaller"16B24@"NSError"28
v20@0:8C16
v20@0:8B16
@"DVTFirstLaunchPackageInstaller"
@"NSError"
@32@0:8@16^@24
B32@0:8@16@24
v32@0:8@16@24
v28@0:8^{AuthorizationOpaqueRef=}16B24
v52@0:8@16i24@28d36d44
@"NSMutableDictionary"
@"PKInstallClient"
@"<DVTPackageInstallerDelegate>"
@"NSArray"
@"PKPackage"
B48@0:8@16@24@32@40
@40@0:8@16@24@32
q16@0:8
v24@0:8q16
@32@0:8@16@24
@"DVTLicenseAgreement"
Unable to read contents of packages directory at %{public}@: %{public}@
Found %lu packages in Packages directory
Unable to get version of bundle at %{public}@
Bundle at %{public}@ has version %{public}@, package has version %{public}@ (%{public}s)
Enumerating bundle components in package %{public}@
Electing to install package %{public}@ because of component %{public}@
Skipping all packages via default: DVTSkipFirstLaunchFrameworkVersionChecking
Showing all packages via default: DVTAlwaysShowAllPackagesToInstall
Won't install %{public}@ because all on-disk content is up-to-date
Will install %{public}@ because some on-disk content is known missing
Tried to install 0 packages
Initiating installation of FLE packages: %{public}@
Installation of FLE packages failed with error: %{public}@
Progress for pkg install %f
Installation of FLE packages completed succcessfully
Install reported success, but not all packages were installed. Remaining: %{public}@
