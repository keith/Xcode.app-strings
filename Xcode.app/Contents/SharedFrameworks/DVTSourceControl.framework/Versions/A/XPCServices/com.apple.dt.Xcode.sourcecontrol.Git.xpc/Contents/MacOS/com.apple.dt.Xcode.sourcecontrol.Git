@(#)PROGRAM:com.apple.dt.Xcode.sourcecontrol.Git  PROJECT:DVTSourceControl-23016
T#,R
_recentRevisionLocationsInWorkingCopy:fileContents:limit:error:
T@"DVTSourceControlAuthenticationStrategy",&,V_currentAuthenticationStrategy
addMockedConfigData:repository:
T@"DVTSourceControlGitXPCService",W,V_xpcService
arrayWithArray:
T@"NSArray",&,N,V_arguments
command
T@"NSError",&,N,V_error
continueOrFinishConflictOperationInWorkingCopy:completionBlock:
T@"NSError",&,V_pushError
enforceTrustedServerFingerprint
T@"NSMutableOrderedSet",&,V_potentialAuthenticationStrategies
forceUpdateWorkingCopy:location:fromRepository:completionBlock:
T@"NSString",&,N,V_dataString
initWithIdentifier:displayName:
T@"NSString",&,N,V_launchPath
logItem
T@"NSString",?,R,C
message
T@"NSString",R,C
T@"NSString",R,N,V_command
release
T@"NSURL",R,N
T@?,C,N,V_standardOutputFeedbackBlock
setEnvironment:
T@?,C,V_transferProgressBlock
setOid:
TQ,V_authRequestCount
setStandardOutputFeedbackBlock:
Tc,N,V_isCancelled
standardizedURL
Tc,R,N,V_representsXcodeServiceHostedRepository
stringByAppendingPathExtension:
Tc,V_noEditor
unlock:
Ti,N,V_terminationStatus
.cxx_destruct
_internalString
T@"DVTSourceControlAuthenticationStrategy",&,N,V_authenticationStrategy
_setConfigAuthor:forRepository:
T@"DVTSourceControlAuthenticationStrategy",&,V_nextAuthenticationStrategy
allKeys
T@"DVTSourceControlRemoteRepository",&,V_repository
bundleForClass:
T@"NSData",&,N,V_data
containsString:
T@"NSError",&,V_authenticationError
dealloc
T@"NSMutableData",R,N,V_errorData
fileURL
T@"NSString",&,N,V_currentDirectoryPath
globalConfigStringForKey:error:
T@"NSString",&,N,V_internalString
isProxy
T@"NSString",&,N,V_trustedServerFingerprint
lowercaseString
T@"NSString",R
mockConfigFiles
T@"NSString",R,N
parents
T@"NSTask",R,N,V_task
removeObserver:
T@?,C,N,V_standardErrorFeedbackBlock
serviceListener
T@?,C,V_sidebandProgressBlock
setIsCancelled:
TQ,R
setSignatureVerificationResult:
Tc,N,V_enforceTrustedServerFingerprint
setWithObjects:
Tc,R,N,V_cancelled
stringByAppendingPathComponent:
Tc,V_flushImmediately
stringByRemovingPercentEncoding
Tc,V_readyToParseData
verifySignature
Tr^{git_oid=[20C]},V_oid
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByDeletingLastPathComponent
URLByStandardizingPath
URLWithString:
UTF8String
_arguments
_authRequestCount
_authenticationError
_authenticationStrategy
_basicAuthenticationForAuthStrategy:allowedTypes:outCredentials:
_cancelled
_cmdCommitToSingleFileLogItemWithNameStatus:workingCopy:lastFilePath:currentFilePath:headRevision:currentRevisionLocation:didMatchHEAD:
_cmd_cloneFromRepository:cloneType:location:localAddress:existingAddress:progressIdentifier:
_cmd_createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:
_cmd_createWorkingCopyFromRepository:location:localAddress:existingAddress:progressIdentifier:
_cmd_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
_command
_configAuthorForRepository:
_configAuthorForRepository:resultBlock:
_configForRepository:block:
_configWithBlock:
_currentAuthenticationStrategy
_currentDirectoryPath
_data
_dataString
_deleteStash:stashIdentifier:completionBlock:
_discardAllChanges:files:inWorkingCopy:completionBlock:
_enforceTrustedServerFingerprint
_enterDownloadSandboxQuarantineState
_error
_errorData
_exportFile:inWorkingCopy:fromRevisionLocation:error:
_exportStashInWorkingCopy:stashIndex:completionBlock:
_filesAndStatusOfWorkingCopy:withRemoteStatus:
_flushImmediately
_gitLaunchPath
_historyOfWorkingCopy:location:fetchesCommitSignatures:progressBlock:completionBlock:
_idesc_stringFromData:
_idesc_stringFromMutableData:
_isCancelled
_iterateBranchesOfGitRepository:type:iterationBlock:error:
_launchPath
_launchPathForTask:
_libgitCommitToLogItem:revision:repository:workingCopy:mailmap:fetchesCommitSignatures:
_libgit_checkoutWorkingCopyLocation:useRevision:localAddress:progressIdentifier:completionBlock:
_libgit_cloneFromRepository:cloneType:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
_libgit_createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:completionBlock:
_libgit_createWorkingCopyFromRepository:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
_libgit_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
_logItemForWorkingCopy:revision:logItemCreationBlock:
_mutableConfigForRepository:
_mutableGlobalConfig
_nextAuthenticationStrategy
_noEditor
_oid
_parentsOfRevision:path:inWorkingCopy:fetchesCommitSignatures:completionBlock:
_performMove:workingCopy:originalFilePath:newFilePath:moveUnversionedFiles:outError:
_potentialAuthenticationStrategies
_pushError
_readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
_readyToParseData
_repository
_representsXcodeServiceHostedRepository
_runGitCloneForRemoteRepository:cloneType:branchName:localURL:standardError:standardOut:feedbackBlock:
_runGitLocalCloneForURL:forRemoteRepository:cloneType:localURL:progressIdentifier:
_setConfigForRepository:block:
_setGlobalConfigWithBlock:
_setStageContents:ofFile:inWorkingCopy:completionBlock:
_sidebandProgressBlock
_sshAgentAuthenticationForAuthStrategy:allwoedTypes:outCredentials:
_sshKeysAuthenticationForAuthStrategy:allowedTypes:outCredentials:
_sshKeysCredentialsForAuthStrategy:outCredentials:
_standardErrorFeedbackBlock
_standardOutputFeedbackBlock
_stashIdentiferFromRevision:workingCopy:completionBlock:
_task
_terminationStatus
_transferProgressBlock
_trustedServerFingerprint
_unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:
_upstreamBranchFromRepository:forBranch:completionBlock:
_waitToParseData
_xpcLastTimeProgressSent
_xpcService
abortCherryPickOperationInWorkingCopy:error:
abortConflictOperationInWorkingCopy:completionBlock:
abortMergeInWorkingCopy:
abortRebaseInRepository:
absoluteString
activeProcessorCount
addBranch:from:toRepository:shouldSwitchToNewBranch:completionBlock:
addFiles:inWorkingCopy:completionBlock:
addMockedConfigData:
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addRemoteRepository:withName:toRepository:completionBlock:
addTag:toRepository:completionBlock:
adjustExportedInterface:
allCurrentLocations:completionBlock:
allValues
appendData:
appendFormat:
applyStashInWorkingCopy:stash:completionBlock:
arguments
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
attributesOfItemAtPath:error:
authRequestCount
authenticateAllowedTypes:outCredentials:
authenticationError
authenticationStrategy
author
authorForWorkingCopy:completionBlock:
autorelease
availableData
beginActivityWithOptions:reason:
blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:
boolValue
branchNameIsValid:
branchesReachableFrom:inWorkingCopy:completionBlock:
buildFileStatuses:
bundleURL
bytes
cStringUsingEncoding:
cancelled
caseInsensitiveCompare:
characterAtIndex:
characterSetWithCharactersInString:
cherryPick:revision:parentRevision:completionBlock:
class
closeFile
code
commitDetails:revisions:progressIdentifier:fetchesCommitSignatures:completionBlock:
commitDetailsWithParents:forRevision:path:fetchesCommitSignatures:completionBlock:
commitFiles:inWorkingCopy:message:amend:forceNoSigning:completionBlock:
commitFiles:inWorkingCopy:message:completionBlock:
commitStagedChangesInWorkingCopy:message:amend:forceNoSigning:completionBlock:
commitToEndConflictsInWorkingCopy:repository:
componentsFromHeadLogLine:invoking:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
configAuthorForRepository:
configBoolForRepository:key:error:
configPathForRepository:key:error:
configSignatureForRepository:error:
configStringForRepository:key:error:
conformsToProtocol:
contents
continueCherryPickInWorkingCopy:error:
continueRebaseInRepository:error:
copy
copyFiles:toFilePaths:inWorkingCopy:completionBlock:
copyItemAtURL:toURL:error:
count
countByEnumeratingWithState:objects:count:
createDirectory:withIntermediateDirectories:attributes:inWorkingCopy:completionBlock:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:completionBlock:
createRepositoryAtFileURL:completionBlock:
createTemporaryFolder:error:
createTreeWriterForURL:repo:error:
createWorkingCopyFromRepository:location:useRevision:localAddress:existingAddress:progressIdentifier:shouldSandboxFiles:completionBlock:
currentAuthenticationStrategy
currentConflictRevisionsForWorkingCopy:upstreamRevision:completionBlock:
currentDirectoryPath
currentHandler
currentLocationOfWorkingCopy:completionBlock:
data
dataString
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:
date
dateFromRef:
dateWithTimeIntervalSince1970:
debugDescription
defaultCenter
defaultManager
deleteStashInWorkingCopy:stash:completionBlock:
description
dictionary
dictionaryNormalizedString
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
diffRepository:fromLocation:againstLocation:completionBlock:
diffStringForWorkingCopy:stagedChanges:completionBlock:
directoryWithGlobSuffix
discardAllChangesInWorkingCopy:completionBlock:
discardChangesInFiles:inWorkingCopy:completionBlock:
displayName
distantPast
doubleValue
downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:
dvtscm_branchNameMinusPrefix
dvtscm_escapedUrlFromString
dvtscm_gitCLINormalizedStringForRepo:
dvtscm_gitCLINormalizedStringForRepository:
dvtscm_gitNormalizedStringForRepo:
dvtscm_gitRemoteURL
dvtscm_isEqualToURLStringIgnoringPercentEncoding:
dvtscm_stashTitle
emails
endActivity:
enumerateLinesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
environment
error
errorData
errorFromCode:gitError:
errorFromCode:gitError:repository:
errorFromCommandLineError:
errorFromCommandLineErrorMessage:
errorFromErrorMessage:
errorWithDomain:code:userInfo:
exportConflictVersionsOfFile:inWorkingCopy:completionBlock:
exportFile:inWorkingCopy:fromRevisionLocation:completionBlock:
exportOID:toRelativePath:repo:error:
exportStashInWorkingCopy:stash:completionBlock:
exportedObjectProtocol
extractDigestAndParseKeyType:
fetchFromRemoteRepository:forLocalRepository:repo:includeTags:prune:error:
fetchFromRemoteRepositoryUsingLibGit:repo:includeTags:prune:error:
fetchStash:index:repo:error:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForReading
fileHandleForWriting
fileHasCumulativeChanges:workingCopy:filePath:
fileName
filePath
fileStatuses
fileSystemRepresentation
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileURLWithPath:
filesAndStatusOfWorkingCopy:sourceBranch:targetBranch:completionBlock:
filesAndStatusOfWorkingCopy:withRemoteStatus:completionBlock:
filteredArrayUsingPredicate:
fingerprintOfCertificate:
firstMatchInString:options:range:
firstObject
flushImmediately
fullyQualifiedName
fullyQualifiedReferenceName
garbageCollectWorkingCopy:withForce:
generateTemporaryPath:withData:error:
gitError_hasPrefix:
gitError_hasSuffix:
gitError_rangeOfString:
gitError_rangeOfTailString:
gitLaunchPath
gitRemoteURL
gitRepository
gitSourceControlSystem
globalConfigAuthor
globalConfigBoolForKey:error:
handleFailureInFunction:file:lineNumber:description:
hasPrefix:
hasSuffix:
hash
headFileURLForWorkingCopy:
headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
headRevisionOfRepository:completionBlock:
headRevisionOfRepository:forFile:completionBlock:
historyOfCommit:includesCommit:inWorkingCopy:completionBlock:
historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:
historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:fetchesCommitSignatures:completionBlock:
historyOfWorkingCopy:fromRevision:toRevision:maximumLogItems:completionBlock:
historyOfWorkingCopy:location:progressIdentifier:fetchesCommitSignatures:completionBlock:
homeDirectoryForCurrentUser
identifier
identifierOfRepositoryForWorkingCopy:completionBlock:
ignoredFilesWithCompletionBlock:
incrementalLogStatus:info:progressIdentifier:
index
init
init:error:
initIncompleteLogItemWithAuthor:revision:date:message:signature:revisionType:
initWithArgs:
initWithAuthor:revision:date:message:currentFilePath:filePath:status:revisionType:signature:
initWithAuthor:revision:date:message:signature:fileStatuses:parents:revisionType:
initWithAuthor:revision:date:message:signature:fileStatuses:revisionType:workingCopy:
initWithAuthor:revision:date:message:signature:revisionType:workingCopy:
initWithBase64EncodedString:options:
initWithBlameItems:error:
initWithBranch:error:
initWithBranchName:primaryBranch:
initWithBranchName:primaryBranch:remoteBranch:
initWithBranchName:primaryBranch:remoteName:
initWithBranchName:primaryBranch:trackingBranch:pullCount:pushCount:
initWithBranches:defaultBranch:error:
initWithBranches:error:
initWithBranches:remoteBranches:error:
initWithBytes:length:encoding:
initWithCapacity:
initWithCharactersNoCopy:length:freeWhenDone:
initWithData:
initWithData:encoding:
initWithDomain:code:userInfo:
initWithError:
initWithFilePath:previousFilePath:revision:status:
initWithFilePath:revision:status:
initWithFileURL:error:
initWithFileURL:parentFileURL:ancestorFileURL:error:
initWithFileURL:repository:
initWithFileURL:unidentifiableRepository:
initWithIdentifier:
initWithLineRange:logItem:
initWithLocalRevision:upstreamRevision:ancestorRevision:error:
initWithLocalStatusPaths:remoteStatusPaths:error:
initWithLocation:error:
initWithLocations:error:
initWithLogItem:error:
initWithLogItem:parentLogItems:error:
initWithLogItem:parentLogItems:fileStatuses:error:
initWithLogItemFiles:error:
initWithLogItems:error:
initWithName:email:error:
initWithNewTagName:message:revision:
initWithPattern:options:error:
initWithPrimaryRemoteRepository:remoteRepositories:error:
initWithRepository:
initWithRepository:error:
initWithResult:error:
initWithRevision:
initWithRevision:defaultBranch:error:
initWithRevision:error:
initWithRevision:hasConflicts:error:
initWithRevision:index:message:author:date:fileStatuses:
initWithSignature:contents:
initWithStagedURL:unmodifiedURL:error:
initWithStash:error:
initWithState:error:
initWithStatusPaths:upstreamStatusPaths:uncommittedStatusPaths:commonAncestorRevision:error:
initWithTag:error:
initWithTagName:
initWithTagName:message:revision:author:
initWithTagName:revision:
initWithTags:branches:stashes:remotes:remoteBranches:currentLocation:recentLocations:primaryRemote:state:error:
initWithTags:error:
initWithURL:identifier:sourceControlSystem:
initWithURL:sourceControlSystem:
initWithUnmodifiedURL:upstreamURL:ancestorURL:error:
initWithUsername:email:
initWithValue:error:
initWithWorkingCopies:error:
initWithWorkingCopy:error:
initialBranchName
initialBranchName:
initialBranchNameOrDefault
insertObject:atIndex:
instanceWithExportedObject:
intValue
integerValue
internalString
invertedSet
isCancelled
isEqual:
isEqualIgnoringPrimaryAndNewStatus:
isEqualTo:
isEqualToString:
isFileURL
isGreaterThan:
isInputLikelyRequestedBasedOnContentsOfString:
isKindOfClass:
isLowPowerModeEnabled
isMemberOfClass:
isNewBranch
isNotEqualTo:
isPlaceholderRevision
isRemoteBranch
isRevisionWithIdentifier:unpushedToBranchWithName:ofWorkingCopy:completionBlock:
isSimilar:
isValidRevisionString:
iterateAuthenticationStrategy
iterateReferencesOfGitRepository:skipBlock:iterationBlock:error:
lastErrorFromCode:
lastErrorFromCode:repository:
lastObject
lastPathComponent
launch
launchPath
length
lengthOfBytesUsingEncoding:
listBranchesOfRepository:completionBlock:
listRemoteBranchesOfRepository:completionBlock:
listRemoteRepositoriesForRepository:completionBlock:
listTagsOfRemoteRepository:completionBlock:
listUnpushedCommitsInBranchWithName:ofWorkingCopy:completionBlock:
loadCompleteStash:stash:completionBlock:
loadCompleteTag:tag:completionBlock:
localStatusPaths
localizedCaseInsensitiveCompare:
localizedCaseInsensitiveContainsString:
localizedDescription
localizedStringForKey:value:table:
lock:
lockURL:
logItemForWorkingCopy:revision:fetchesCommitSignature:completionBlock:
logItems
mainBundle
markAllConflictsAsResolvedInWorkingCopy:
markAsResolvedFiles:inWorkingCopy:completionBlock:
matchesInString:options:range:
mergeBranch:intoWorkingCopy:completionBlock:
mergeInBranchInWorkingCopy:mergeBranch:repository:error:
mockedConfigPathForRepository:
mockedGlobalConfigPath
modificationDate
moveCaseSensitiveItemAtURL:toURL:error:
moveFiles:toFilePaths:inWorkingCopy:moveUnversionedFiles:completionBlock:
moveItemAtURL:toURL:error:
mutableConfigForPath:
mutableCopy
mutableMockedConfigForRepository:
mutableMockedGlobalConfig
name
newlineCharacterSet
nextAuthenticationStrategy
noEditor
numberOfRanges
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
operationsFinished
orderedSetWithArray:
outputLines
outputLinesWithBlock:
parentBranchesOfBranch:inRepository:completionBlock:
parseDataOrGenerateErrorForTask:operation:
parseGitFetchErrorLogs:remote:
password
path
pathDetailsIfRenamed:relativePath:location:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pipe
potentialAuthenticationStrategies
predicateWithBlock:
previousFilePath
primaryRemoteRepository
privateKeyFile
privateKeyPassword
processInfo
progressStatus:info:progressIdentifier:
proxyObject
publicKeyFile
pushError
pushReferenceForStatus:
pushTag:name:remote:completionBlock:
pushTag:name:remote:delete:completionBlock:
rangeAtIndex:
rangeOfCharacterFromSet:options:
rangeOfString:
rangeOfString:options:
readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
readyToParseData
rebaseOntoBranchInRepository:rebaseBranch:error:
rebaseStateForWorkingCopy:completionBlock:
rebaseWorkingCopy:ontoBranch:completionBlock:
receivedLogItems
recentLocationsForWorkingCopy:error:
recentLocationsForWorkingCopy:limit:completionBlock:
recentLocationsForWorkingCopy:limit:error:
referenceFromIdentifier:workingCopy:
regularExpressionWithPattern:options:error:
remoteBranchFromRepository:forBranch:completionBlock:
remoteBranches
remoteName
remoteNameIsValid:completionBlock:
remoteObjectProtocol
remoteRepositories
remoteStatusPaths
removeAllObjects
removeBranch:fromRepository:andRemoteRepository:completionBlock:
removeFiles:inWorkingCopy:completionBlock:
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectAtIndex:
removeObjectsInArray:
removeRemoteRepositoryNamed:fromRepository:completionBlock:
removeTag:fromRepository:andRemoteRepository:completionBlock:
renameBranch:inRepository:toBranchName:checkout:force:completionBlock:
replaceBytesInRange:withBytes:length:
replaceCharactersInRange:withString:
repository
representsXcodeServiceHostedRepository
resetStageContentsOfWorkingCopy:completionBlock:
resolvedFilePath:workingCopy:
respondsToSelector:
resume
retain
retainCount
revertCommit:revision:completionBlock:
revision
revisionOfLocation:inRepository:completionBlock:
runCherryPickCommand:repository:revision:mainline:error:
scanForRepositoryInFolderPath:completionBlock:
scanForWorkingCopiesInPotentialWorkingCopies:completionBlock:
searchBranchesInRepository:query:completionBlock:
searchReferencesInRepository:query:completionBlock:
searchTagsInRepository:query:completionBlock:
self
sendLogItems:progressIdentifier:
sentLogItems
serviceIdentifier
setArguments:
setAuthRequestCount:
setAuthenticationError:
setAuthenticationStrategy:
setAuthenticationStrategy:repository:
setAuthor:forWorkingCopy:completionBlock:
setBranches:
setClasses:forSelector:argumentIndex:ofReply:
setConfigAuthor:forRepository:
setCountStyle:
setCurrentAuthenticationStrategy:
setCurrentDirectoryPath:
setData:
setDataString:
setDate:
setDelegate:
setEnforceTrustedServerFingerprint:
setError:
setFlushImmediately:
setGlobalConfigAuthor:
setGlobalConfigString:forKey:
setIgnoredFiles:completionBlock:
setIncrementalLogStatus:progressValue:progressIdentifier:
setInitialBranchName:
setInitialBranchName:completionBlock:
setInternalString:
setLaunchPath:
setLength:
setLogItem:
setNextAuthenticationStrategy:
setNoEditor:
setObject:forKey:
setObject:forKeyedSubscript:
setParents:
setPotentialAuthenticationStrategies:
setProgressStatus:progressValue:userReadableString:progressIdentifier:
setPushError:
setQualityOfService:
setReadyToParseData:
setRebaseState:forWorkingCopy:completionBlock:
setRepository:
setRevision:
setSidebandProgressBlock:
setStageContents:ofFile:inWorkingCopy:completionBlock:
setStageContentsFromDiskVersionOfAllFilesInWorkingCopy:completionBlock:
setStageContentsFromDiskVersionOfFile:inWorkingCopy:completionBlock:
setStageContentsFromOriginalVersionOfFile:previousFilePath:inWorkingCopy:completionBlock:
setStandardError:
setStandardErrorFeedbackBlock:
setStandardInput:
setStandardOutput:
setTags:
setTerminationStatus:
setTransferProgressBlock:
setTrustedServerFingerprint:
setUpstreamBranchRemoteName:forBranch:repository:completionBlock:
setValue:forKey:
setWaitToParseData:
setXPCService:
setXpcService:
sharedBaseRevision
sharedHeadRevision
sharedInitialRevision
sharedUnversionedLogItem
sharedUnversionedRevision
shouldTrustServer:withFingerprint:userTrustedFingerprint:
shouldUpdateProgress
sidebandProgressBlock
signature
signatureForRevision:inRepository:
signatureFromData:contents:
signatureInvalidResult
signatureValidResult
sortedArrayUsingComparator:
sourceControlSystem
sshAuthenticationAgentEnforceFingerprintKey
sshAuthenticationAgentExecutableURL
sshAuthenticationAgentFingerprintKey
sshAuthenticationAgentPassphraseKey
sshAuthenticationAgentPasswordKey
sshAuthenticationAgentUsernameKey
stageContentsOfFile:includingUnmodified:inWorkingCopy:completionBlock:
standardErrorFeedbackBlock
standardOutputFeedbackBlock
stashChangesOfWorkingCopy:includingUnversioned:message:completionBlock:
stateOfWorkingCopy:completionBlock:
status
string
stringByAppendingString:
stringByExpandingTildeInPath
stringByTrimmingCharactersInSet:
stringFromByteCount:
stringValue
stringWithCString:encoding:
stringWithContentsOfFile:encoding:error:
stringWithContentsOfURL:encoding:error:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subarrayWithRange:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
switchLocation:ofWorkingCopy:completionBlock:
task
tempFilePathBasedOnFileName:outError:
terminationStatus
timeIntervalSince1970
timeIntervalSinceDate:
transferProgressBlock
truncateIdentifier:
trustedServerFingerprint
unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:
unsetInitialBranchName
unsignedIntegerValue
unsignedResult
updateVisualInformationWithOutBranchIdentifiers:splitBranchIdentifiers:inBranchIdentifiers:mergedBranchIdentifiers:commitBranchIdentifier:
updateWorkingCopy:branch:fromRepository:updateStrategy:completionBlock:
uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:
userInfo
username
validateAuthenticationOfRemoteRepository:completionBlock:
validateSignatureForLogItems:
value
verificationFailedResultWithSecTrustError:
verificationFailedResultWithStatus:
verificationForSignature:
verificationResultFromDecoder:withPolicies:
verify
visualLogItemForWorkingCopy:revision:fetchesCommitSignature:completionBlock:
visualLogItemWithParentsForIdentifier:ofWorkingCopy:fetchesCommitSignature:completionBlock:
waitForDataInBackgroundAndNotify
waitForLogItemsReceivedWithTimeout:completionBlock:
waitUntilExit
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
writeData:
writeRelativePath:toFolder:withData:error:
writeToFile:atomically:encoding:error:
writeToURL:atomically:
writeToURL:atomically:encoding:error:
writeToURL:options:error:
xpcService
zone
#DVTSourceControlGitXPC: %s
Method: %s
Authentication: repository: %@, Basic auth selected
-[DVTSourceControlGitRemoteCallbackPayload _basicAuthenticationForAuthStrategy:allowedTypes:outCredentials:]
Authentication: repository: %@, Basic auth: no password provided
No password provided for SSH.
Authentication: repository: %@, Basic auth unavailable. Allowed types are: %u
Authentication: repository: %@, exceeded callback limit
Credentials invalid.
Authentication: repository: %@, SSH Key auth selected
-[DVTSourceControlGitRemoteCallbackPayload _sshKeysAuthenticationForAuthStrategy:allowedTypes:outCredentials:]
Authentication: repository: %@, SSH Key auth unavailable
Authentication: repository: %@, SSH Agent auth selected
-[DVTSourceControlGitRemoteCallbackPayload _sshAgentAuthenticationForAuthStrategy:allwoedTypes:outCredentials:]
Authentication: repository: %@, SSH Agent auth unavailable
Authentication: repository: %@, callback: %lu
-[DVTSourceControlGitRemoteCallbackPayload authenticateAllowedTypes:outCredentials:]
Authentication: repository: %@, unknown strategy: %@
Authentication: repository: %@, no remaining strategies found
Repository provided was not a local repository (%@)
-[DVTSourceControlGitPlugInPrimary(Upload) uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:]
Repository is not a DVTSourceControlRepository
Could not find local libgit repo for %@
NULL gitRepository for %@
Error with libgit operation (%s)
git_repository_head(&localBranch, repo)
%s:refs/heads/%@
git_tag_list(&tagNames, repo)
refs/tags/%s
git_remote_push(remote, &pushRefSpecs, &pushOptions)
%@/%@
Make sure there's a remote entry in your Git configuration for the remote URL '%@'.
The push operation failed because no matching remote could be found.
-[DVTSourceControlGitPlugInPrimary(Author) authorForWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Author) setAuthor:forWorkingCopy:completionBlock:]
-----BEGIN SIGNED MESSAGE-----
-----END SIGNED MESSAGE-----
rev-list
--max-parents=0
HEAD
git_annotated_commit_from_revspec(&annotatedCommit, repo, revspec)
NSString *gitRepositoryIdentifier(git_repository *)
git_commit_lookup(&commit, repo, revisionOID)
git_mailmap_from_repository(&mailmap, repo)
git_remote_list(&remotes, repo)
git_remote *lookupRemote(git_repository *, DVTSourceControlRemoteRepository *__strong, BOOL, NSString *__autoreleasing *, NSError *__autoreleasing *)
git_remote_lookup(&remote, repo, remoteName)
status
--porcelain
-[DVTSourceControlGitPlugInPrimary(Status) _filesAndStatusOfWorkingCopy:withRemoteStatus:]
git_status_list_new(&statusList, repo, &statusOptions)
Silent error with libgit operation (%s)
git_repository_head(&head, repo)
git_branch_upstream(&upstreamBranch, head)
git_merge_base(&mergeBase, repo, git_reference_target(head), git_reference_target(upstreamBranch))
git_commit_lookup(&baseCommit, repo, &mergeBase)
git_commit_tree(&baseTree, baseCommit)
git_reference_peel((git_object **)&upstreamTree, upstreamBranch, GIT_OBJ_TREE)
git_diff_tree_to_tree(&treeDiff, repo, baseTree, upstreamTree, &diffopts)
%@...%@
-[DVTSourceControlGitPlugInPrimary(Status) filesAndStatusOfWorkingCopy:sourceBranch:targetBranch:completionBlock:]
git_reference_lookup(&sourceReference, repo, sourceBranchName)
git_reference_lookup(&targetReference, repo, targetBranchName)
git_reference_name_to_id(&source_tree_oid, repo, source_ref_name)
git_reference_name_to_id(&target_tree_oid, repo, target_ref_name)
git_reference_peel((git_object **)&sourceTree, sourceReference, GIT_OBJ_TREE)
git_reference_peel((git_object **)&targetTree, targetReference, GIT_OBJ_TREE)
diff
--name-status
git_merge_base(&merge_base, repo, &source_tree_oid, &target_tree_oid)
--no-color
--staged
core.excludesfile
c24@?0@8@"NSDictionary"16
~/%@
.gitignore_global
git_config_set_string(levelConfig, "core.excludesfile", ignorePath.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary(Ignore) setIgnoredFiles:completionBlock:]
index.lock
stash
save
-[DVTSourceControlGitPlugInPrimary(Stash) stashChangesOfWorkingCopy:includingUnversioned:message:completionBlock:]
i32@?0Q8r*16r^{git_oid=[20C]}24
gitError
Could not locate stash identifier from revision
v24@?0q8@"NSError"16
-[DVTSourceControlGitPlugInPrimary(Stash) _deleteStash:stashIdentifier:completionBlock:]
git_stash_drop(repo, stashIdentifier)
-[DVTSourceControlGitPlugInPrimary(Stash) _stashIdentiferFromRevision:workingCopy:completionBlock:]
git_stash_foreach(repo, stashCallback, (__bridge void *)stashBlock)
-[DVTSourceControlGitPlugInPrimary(Stash) applyStashInWorkingCopy:stash:completionBlock:]
git_stash_apply(repo, stashIndex, &options)
git_repository_index(&index, repo)
show
%ld.patch
Couldn't create temporary path for stash '%ld'
Couldn't write data to path '%@'
v16@?0@"DVTSourceControlHistoryResultType"8
DVTSourceControlCMSClassErrorCodeKey
CMS Module Error with code %d.
SecTrust could not validate the signing certificate.
Signature is invalid or malformed.
No remote repository specified for fetch.
Specified local repository has no on-disk URL set.
--jobs=%lu
fetch
--atomic
--quiet
--no-recurse-submodules
v16@?0@"NSData"8
debug1
v24@?0@"NSString"8*16
ssh: Could not resolve hostname
Permission denied
Host key verification failed
Could not read from remote repository
Unknown error while fetching remote changes. Make sure the remote is set up correctly and that you have access to it.
git_remote_fetch(remote, NULL, &fetchOptions, NULL)
-[DVTSourceControlGitPlugInPrimary(Update) fetchFromRemoteRepositoryUsingLibGit:repo:includeTags:prune:error:]
Failed to locate remote for URL '%@'
-[DVTSourceControlGitPlugInPrimary(Update) downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Update) updateWorkingCopy:branch:fromRepository:updateStrategy:completionBlock:]
git_branch_lookup(&remoteBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_repository_head(&currentReference, repo)
git_branch_upstream(&remoteBranch, currentReference)
-[DVTSourceControlGitPlugInPrimary(Update) forceUpdateWorkingCopy:location:fromRepository:completionBlock:]
origin
git_remote_lookup(&remote, repo, "origin")
git_branch_upstream(&trackingBranch, currentReference)
git_reference_set_target(&fastForwardedBranch, currentReference, git_reference_target(trackingBranch), NULL)
git_checkout_head(repo, &checkoutOptions)
git_branch_delete(checkoutReference)
git_branch_lookup(&trackingBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_commit_lookup(&target, repo, targetOID)
git_branch_create(&checkoutReference, repo, branch.name.UTF8String, target, 0)
git_branch_set_upstream(checkoutReference, remoteBranchName.UTF8String)
git_checkout_tree(repo, (const git_object *)target, &checkoutOptions)
git_repository_set_head(repo, git_reference_name(checkoutReference))
git_branch_upstream(&trackingBranch, checkoutReference)
git_reference_set_target(&fastForwardedBranch, checkoutReference, git_reference_target(trackingBranch), NULL)
refs/tags/%@
git_reference_name_to_id(&oid, repo, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_tag_lookup(&gitTag, repo, &oid)
git_checkout_tree(repo, (const git_object *)gitTag, &checkoutOptions)
git_repository_set_head_detached(repo, &oid)
No revision provided.
oidFromRevision(&checkoutOID, location.revision, repo)
git_commit_lookup(&target, repo, &checkoutOID)
git_repository_set_head_detached(repo, &checkoutOID)
%@ (%li)
Reference '
' not found
The path '
' does not exist in the given tree
Cannot locate remote-tracking branch '
Object not found - no matching loose object (
Object not found - no match for id (
Object not found - no match for prefix (
Cannot locate local branch '
the requested type does not match the type in the ODB
Cannot push
invalid url, missing path
Malformed URL '
the given reference name 'refs/heads/
' is not valid
Failed to write reference '
': a reference with that name already exists.
(-16)
after resolving the conflicts, mark
The previous cherry-pick is now empty, possibly due to conflict resolution.
you do not have permission
Repository not found
SSL error: error:140E0114
Failed to resolve address for
HTTP status code: 401
Authentication failed
access denied
Failed to authenticate SSH session
HTTP status code: 403
HTTP status code: 404
HTTP status code: 500
could not resolve host
SSL certificate is invalid
SSL certificate problem
Certificate host name check failed
user cancelled certificate check
user rejected certificate
Early EOF
unsupported URL protocol
Permission to
denied to
cross host redirect not allowed
curl error: Failed to connect to
An unknown error occured.
DVTSourceControlTests_MockConfigFiles
dvtsourcecontrolmock
init.defaultBranch
v8@?0
git_config_find_global(&buffer)
-[DVTSourceControlGitPlugInPrimary(Config) mockedGlobalConfigPath]
.gitconfig
git_repository_item_path(&configBuffer, repository, GIT_REPOSITORY_ITEM_CONFIG)
-[DVTSourceControlGitPlugInPrimary(Config) mockedConfigPathForRepository:]
config
git_config_open_ondisk(&result, mockedConfigPath.UTF8String)
-[DVTSourceControlGitPlugInPrimary(Config) mutableConfigForPath:]
%@: Applying global and local mocked config data
-[DVTSourceControlGitPlugInPrimary(Config) addMockedConfigData:repository:]
git_config_add_file_ondisk(config, mockedGlobalConfigPath.UTF8String, GIT_CONFIG_LEVEL_GLOBAL, NULL, 1)
git_config_add_file_ondisk(config, mockedRepositoryConfigPath.UTF8String, GIT_CONFIG_LEVEL_LOCAL, repository, 1)
ERROR: Failed to override config with mocked data: %d
git_config_open_default(&defaultConfig)
-[DVTSourceControlGitPlugInPrimary(Config) _mutableGlobalConfig]
git_config_open_level(&result, defaultConfig, GIT_CONFIG_LEVEL_GLOBAL)
git_repository_config(&defaultConfig, repository)
-[DVTSourceControlGitPlugInPrimary(Config) _mutableConfigForRepository:]
git_config_open_level(&result, defaultConfig, GIT_CONFIG_LEVEL_LOCAL)
git_config_open_default(&config)
-[DVTSourceControlGitPlugInPrimary(Config) _configWithBlock:]
git_config_snapshot(&snapshotConfig, config)
git_repository_config(&config, repository)
-[DVTSourceControlGitPlugInPrimary(Config) _configForRepository:block:]
user.name
user.email
v16@?0^{git_config=}8
v24@?0@"NSString"8@"NSString"16
--auto
-[DVTSourceControlGitPlugInPrimary allCurrentLocations:completionBlock:]
git_reference_iterator_new(&iter, repo)
v16@?0@"DVTSourceControlListRemoteRepositoriesResultType"8
Failed to parse tag '%s'
Failed to lookup remote '%@' to add remote branch '%@'
revert
--no-edit
-[DVTSourceControlGitPlugInPrimary identifierOfRepositoryForWorkingCopy:completionBlock:]
v24@?0@"NSArray"8@"NSError"16
v16@?0@"DVTSourceControlListBranchesResultType"8
v48@?0@"DVTSourceControlRevision"8@"DVTSourceControlBranch"16@"NSArray"24@"NSArray"32@"NSError"40
ls-remote
--heads
--tags
--symref
^(\S+)[\s](\S+)[\s]{0,1}(\S+){0,1}$
ref:
git_odb_new(&odb)
-[DVTSourceControlGitPlugInPrimary _libgit_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:]
git_repository_wrap_odb(&gitRepository, odb)
git_remote_create_anonymous(&remote, gitRepository, remoteRepository.gitRemoteURL.absoluteString.UTF8String)
git_remote_connect(remote, GIT_DIRECTION_FETCH, &remoteCallbacks, &proxyOptions, NULL)
git_remote_ls(&heads, &size, remote)
refs/heads/
refs/tags/
-[DVTSourceControlGitPlugInPrimary _discardAllChanges:files:inWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary commitFiles:inWorkingCopy:message:amend:forceNoSigning:completionBlock:]
v16@?0@"DVTSourceControlWorkingCopyStatusResultType"8
git_index_write(index)
core.ignorecase=false
commit
--author
%@ <%@>
--amend
--no-gpg-sign
git_reference_name_to_id(&headOID, repo, "HEAD")
-[DVTSourceControlGitPlugInPrimary commitStagedChangesInWorkingCopy:message:amend:forceNoSigning:completionBlock:]
v16@?0@"DVTSourceControlFileHistoryResultType"8
--parents
-[DVTSourceControlGitPlugInPrimary commitDetails:revisions:progressIdentifier:fetchesCommitSignatures:completionBlock:]
git_oid_fromstrp(&shortOID, revisionHash)
Revision '%p' for local repository '%@' could not be found
-[DVTSourceControlGitPlugInPrimary _logItemForWorkingCopy:revision:logItemCreationBlock:]
git_reference_name_to_id(&shortOID, repo, revisionHash)
v36@?0{git_oid=[20C]}8^{git_repository=}28
Git Repository Creation Failed
.git
git_repository_init_ext(&repo, URL.fileSystemRepresentation, &opts)
-[DVTSourceControlGitPlugInPrimary createRepositoryAtFileURL:completionBlock:]
.DS_Store
UserInterfaceState.xcuserstate
.git/info/exclude
v16@?0@"DVTSourceControlHeadRevisionResultType"8
-[DVTSourceControlGitPlugInPrimary(Stage) _setStageContents:ofFile:inWorkingCopy:completionBlock:]
git_index_add_all(index, &pathsToAdd, GIT_INDEX_ADD_DEFAULT, NULL, NULL)
Added file to index but fetching index entry returned nil.
GIT_ERROR
git_status_file(&file_status, repo, cStringFilePath)
git_index_remove_bypath(index, cStringFilePath)
git_index_add_from_buffer(index, index_entry, [contentsData bytes], [contentsData length])
git_index_add_bypath(index, cStringFilePath)
-[DVTSourceControlGitPlugInPrimary(Stage) setStageContentsFromOriginalVersionOfFile:previousFilePath:inWorkingCopy:completionBlock:]
oidFromHeadOfRepository(&head_id, repo)
GIT_ENOTFOUND
fileContentsAtCommit(repo, &head_id, self, relativePath, &contentsURL, nil)
GIT_EEXISTS
-[DVTSourceControlGitPlugInPrimary(Stage) setStageContentsFromDiskVersionOfAllFilesInWorkingCopy:completionBlock:]
git_index_add_all(index, &paths, GIT_INDEX_ADD_DEFAULT, NULL, NULL)
reset
/SourcePackages/repositories/
-[DVTSourceControlGitPlugInPrimary(Remote) addRemoteRepository:withName:toRepository:completionBlock:]
git_remote_create(&remote, repo, name.UTF8String, [remoteRepository.URL.absoluteString stringByRemovingPercentEncoding].UTF8String)
-[DVTSourceControlGitPlugInPrimary(Remote) removeRemoteRepositoryNamed:fromRepository:completionBlock:]
git_remote_delete(repo, name.UTF8String)
git_commit_lookup(&commit, repo, &revisionOID)
DVTSourceControlLogItem *bareLogItemInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
DVTSourceControlVisualLogItem *visualHistory_bareLogItemAndCommitInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, BOOL, git_commit **, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
i28@?0i8^{git_commit=}12^{git_tree=}20
DVTSourceControlLogItem *logItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, BOOL, NSError *__autoreleasing *)
git_commit_tree(&tree, commit)
q24@?0@8@16
DVTSourceControlVisualLogItem *visualLogItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, BOOL, NSError *__autoreleasing *)
BOOL rebaseIterate(git_repository *, git_rebase *, git_signature *, NSError *__autoreleasing *)
git_rebase_commit(&commitOid, rebase, NULL, author, NULL, NULL)
git_rebase_finish(rebase, NULL)
git_rebase_open(&rebase, repo, &rebaseOptions)
-[DVTSourceControlGitPlugInPrimary(Rebase) abortRebaseInRepository:]
git_rebase_abort(rebase)
-[DVTSourceControlGitPlugInPrimary(Rebase) continueRebaseInRepository:error:]
git_annotated_commit_from_ref(&annotatedCommit, repo, rebaseBranch)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseOntoBranchInRepository:rebaseBranch:error:]
git_rebase_init(&rebase, repo, NULL, annotatedCommit, NULL, &rebaseOptions)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseWorkingCopy:ontoBranch:completionBlock:]
git_branch_lookup(&rebaseBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseStateForWorkingCopy:completionBlock:]
pull.rebase
-[DVTSourceControlGitPlugInPrimary(Rebase) setRebaseState:forWorkingCopy:completionBlock:]
git_repository_config(&config, repo)
git_config_open_level(&levelConfig, config, GIT_CONFIG_LEVEL_LOCAL)
%@-casesensitive-rename
-[DVTSourceControlGitPlugInPrimary(FileManagement) addFiles:inWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(FileManagement) removeFiles:inWorkingCopy:completionBlock:]
git_index_remove_all(index, &pathsToRemove, NULL, NULL)
v16@?0@"DVTSourceControlXPCResultType"8
git_index_remove_all(index, &sourceDirectoriesArray, NULL, NULL)
-[DVTSourceControlGitPlugInPrimary(FileManagement) _performMove:workingCopy:originalFilePath:newFilePath:moveUnversionedFiles:outError:]
git_index_add_all(index, &targetDirectoriesArray, GIT_INDEX_ADD_DEFAULT, NULL, NULL)
git_index_add(index, &new)
git_index_remove(index, originalCStringFilePath, 0)
git_index_add_bypath(index, newCStringFilePath)
-[DVTSourceControlGitPlugInPrimary(FileManagement) moveFiles:toFilePaths:inWorkingCopy:moveUnversionedFiles:completionBlock:]
git_reference_iterator_new(&iterator, repo)
void _allLocationsOfRepo(git_repository *, const git_oid *, DVTSourceControlRevisionLocation *__strong, const git_oid **, NSDictionary<NSString *,NSArray<DVTSourceControlRevisionLocation *> *> *__autoreleasing *, NSArray<DVTSourceControlRevisionLocation *> *__autoreleasing *)
Failed to parse branch '%s'
DVTSourceControlRevisionLocationResultType *currentLocationOfRepository(DVTSourceControlGitPlugInPrimary *__strong, DVTSourceControlRepository *__strong)
Expected branch but received '%s'
DVTSourceControlBranch *resolveBranch(git_repository *, const git_oid *, git_reference *, DVTSourceControlRevision *__strong)
Failed to get ahead/behind counts for branch '%s' using remote '%s'
Expected the remote branch name to have a minimum length of '%lu' characters, but it had '%lu'
-[DVTSourceControlGitPlugInPrimary(Blame) blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:]
A revision identifier must be supplied.
The revision identifier supplied is nil.
blame
--line-porcelain
^([0-9a-f]{40}) ([0-9]+) ([0-9]+) ?([0-9]*)
author (.*)
author-mail <(.*)>(?:.|
)+?committer-time ([0-9]+)$
0000000000000000000000000000000000000000
Could not load authors for file '%@'
Error: %@
logs/HEAD
-[DVTSourceControlGitPlugInPrimary(Metadata) headFileURLForWorkingCopy:]
The .git/logs/HEAD metadata file failed to parse.
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32*48
([a-f0-9]+)
checkout: moving from (.+) to (.+)
^%@\s+%@.*%@$
-[DVTSourceControlGitPlugInPrimary(Metadata) referenceFromIdentifier:workingCopy:]
git_reference_dwim(&ref, repo, refString)
git_tag_lookup(&tag, repo, ref_oid)
-[DVTSourceControlGitPlugInPrimary(FileLog) _cmdCommitToSingleFileLogItemWithNameStatus:workingCopy:lastFilePath:currentFilePath:headRevision:currentRevisionLocation:didMatchHEAD:]
--format=%H
A file could not be resolved in the working copy.
The file path supplied is not valid (%@).
v24@?0@"DVTSourceControlRevision"8@"NSError"16
v16@?0@"DVTSourceControlRevisionLocationResultType"8
--follow
refs/heads/%@
--topo-order
--format=%@
Couldn't parse entry: %@
-[DVTSourceControlGitPlugInPrimary(FileLog) historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:]_block_invoke
Failed to parse record:
-[DVTSourceControlGitPlugInPrimary(FileLog) historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:]
Failed to find file known to be renamed '%@'
-[DVTSourceControlGitPlugInPrimary(FileLog) resolvedFilePath:workingCopy:]_block_invoke
Logging renamed file '%@', previously named '%@'
-[DVTSourceControlGitPlugInPrimary(Branch) _upstreamBranchFromRepository:forBranch:completionBlock:]
git_branch_lookup(&gitBranch, repo, [branch.name cStringUsingEncoding:NSUTF8StringEncoding], GIT_BRANCH_LOCAL)
git_branch_upstream(&gitUpstreamBranch, gitBranch)
git_branch_name(&nameChar, gitUpstreamBranch)
v24@?0@"DVTSourceControlBranch"8@"NSError"16
git_branch_iterator_new(&branchIterator, repo, branchTypes)
-[DVTSourceControlGitPlugInPrimary(Branch) _iterateBranchesOfGitRepository:type:iterationBlock:error:]
git_branch_next(&gitBranch, &branchType, branchIterator)
c20@?0^{git_reference=}8i16
-[DVTSourceControlGitPlugInPrimary(Branch) listRemoteBranchesOfRepository:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Branch) parentBranchesOfBranch:inRepository:completionBlock:]
git_branch_lookup(&gitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary(Branch) addBranch:from:toRepository:shouldSwitchToNewBranch:completionBlock:]
git_branch_lookup(&ref, repo, startBranch.remoteName?[NSString stringWithFormat:@"%@/%@", startBranch.remoteName, startBranch.name].UTF8String:startBranch.name.UTF8String, GIT_BRANCH_REMOTE)
git_branch_lookup(&ref, repo, startBranch.name.UTF8String, GIT_BRANCH_LOCAL)
git_object_peel((git_object **)&target, (git_object *)gitTag, GIT_OBJ_COMMIT)
git_commit_lookup(&target, repo, &oid)
oidFromRevision(&revisionOID, startLocation.revision, repo)
git_branch_create(&newRef, repo, branch.name.UTF8String, target, 0)
git_repository_set_head(repo, git_reference_name(newRef))
-[DVTSourceControlGitPlugInPrimary(Branch) removeBranch:fromRepository:andRemoteRepository:completionBlock:]
git_remote_lookup(&remote, repo, [branch.remoteName cStringUsingEncoding:NSUTF8StringEncoding])
:refs/heads/%@
-[DVTSourceControlGitPlugInPrimary(Branch) renameBranch:inRepository:toBranchName:checkout:force:completionBlock:]
git_branch_lookup(&oldGitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_branch_move(&newGitBranch, oldGitBranch, newBranchName.UTF8String, force)
git_repository_head(&originalHead, repo)
Repo locked with libgit operation (%s)
git_repository_set_head(repo, git_reference_name(newGitBranch))
git_repository_set_head(repo, git_reference_name(originalHead))
git_repository_set_head_detached(repo, git_reference_target(originalHead))
-[DVTSourceControlGitPlugInPrimary(Branch) setUpstreamBranchRemoteName:forBranch:repository:completionBlock:]
git_branch_lookup(&branchRef, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_branch_set_upstream(branchRef, [[NSString stringWithFormat:@"%@/%@", remoteName, branch.name] UTF8String])
branch
--contains
-[DVTSourceControlGitPlugInPrimary(Branch) searchBranchesInRepository:query:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Branch) listUnpushedCommitsInBranchWithName:ofWorkingCopy:completionBlock:]
git_branch_lookup(&local_branch, repo, [branchName cStringUsingEncoding:NSUTF8StringEncoding], GIT_BRANCH_LOCAL)
git_branch_upstream(&upstream_branch, local_branch)
git_merge_base(&merge_base_id, repo, local_id, upstream_id)
v32@?0@"NSArray"8q16q24
-[DVTSourceControlGitPlugInPrimary(Log) historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:fetchesCommitSignatures:completionBlock:]
git_revwalk_new(&walk, repo)
git_revwalk_push_head(walk)
oidFromRevision(&startOID, firstRevisionToLog, repo)
git_revwalk_push(walk, &startOID)
%@..%@^1
%@..%@
git_revwalk_push_range(walk, (char *)walk_range)
v16@?0@"NSArray"8
-[DVTSourceControlGitPlugInPrimary(Log) _historyOfWorkingCopy:location:fetchesCommitSignatures:progressBlock:completionBlock:]
Could not locate the given reference '%@'
git_revwalk_push(walk, oidToPush)
Error creating log item from %@, skipping.
git_oid_fromstrp(&identifierOID, identifierString)
-[DVTSourceControlGitPlugInPrimary(Log) visualLogItemWithParentsForIdentifier:ofWorkingCopy:fetchesCommitSignature:completionBlock:]
git_mailmap_from_repository(&mailmap, gitRepository)
git_commit_lookup_prefix(&commit, gitRepository, &identifierOID, identifierLength)
git_commit_parent(&parentCommit, commit, commitParentIdx)
-[DVTSourceControlGitPlugInPrimary(Log) historyOfCommit:includesCommit:inWorkingCopy:completionBlock:]
oidFromRevision(&descendantCommitOID, descendantCommit, gitRepository)
oidFromRevision(&ancestorCommitOID, ancestorCommit, gitRepository)
v16@?0@"NSNotification"8
../../../../../../Developer/usr/bin/
No launch path found for %@ task.
/usr/bin/
color.ui=false
core.pager=
core.quotepath=false
--no-pager
en_US.UTF-8
/nonexistent
LANG
DISPLAY
HOME
GIT_PAGER
SSH_ASKPASS
GIT_ASKPASS
-o FingerprintHash=sha256
-o FingerprintHash=sha1
-o FingerprintHash=md5
/usr/bin/ssh -v -F /dev/null -o UserKnownHostsFile=/dev/null %@ -o IdentitiesOnly=yes
GIT_SSH_COMMAND
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null %@ -o IdentitiesOnly=yes
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null %@ -o IdentitiesOnly=yes -i %@
SSH_AUTH_SOCK
true
GIT_EDITOR
password
username
accept
Ran out of file descriptors when trying to launch SCM task
malloc: recording
GuardMalloc
merge
--abort
Merge branch
git_annotated_commit_from_ref(&annotatedCommit, repo, mergeBranch)
-[DVTSourceControlGitPlugInPrimary(Merge) mergeInBranchInWorkingCopy:mergeBranch:repository:error:]
git_merge_analysis(&analysis, &preferences, repo, (const git_annotated_commit **)&annotatedCommit, 1)
git_commit_lookup(&target, repo, git_annotated_commit_id(annotatedCommit))
git_reference_set_target(&fastForwardedBranch, currentReference, git_reference_target(mergeBranch), NULL)
git_merge(repo, (const git_annotated_commit **)&annotatedCommit, 1, &mergeOptions, &checkoutOptions)
-[DVTSourceControlGitPlugInPrimary(Merge) diffRepository:fromLocation:againstLocation:completionBlock:]
oidFromLocation(&startOID, startLocation, repo)
oidFromLocation(&endOID, endLocation, repo)
git_commit_lookup(&startCommit, repo, &startOID)
git_commit_lookup(&endCommit, repo, &endOID)
git_commit_tree(&startTree, startCommit)
git_commit_tree(&endTree, endCommit)
git_diff_tree_to_tree(&diff, repo, startTree, endTree, &diffopts)
-[DVTSourceControlGitPlugInPrimary(Merge) mergeBranch:intoWorkingCopy:completionBlock:]
git_branch_lookup(&mergeBranch, repo, branchName, branchType)
-[DVTSourceControlGitPlugInPrimary(Switch) switchLocation:ofWorkingCopy:completionBlock:]
git_branch_lookup(&ref, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_branch_set_upstream(newRef, remoteBranchName.UTF8String)
git_repository_head(&ref, repo)
git_branch_lookup(&ref, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_repository_set_head(repo, git_reference_name(ref))
oidFromRevision(&oid, location.revision, repo)
core.precomposeunicode
sha1
sha256
-[NSString(KeyDigestHelpers) extractDigestAndParseKeyType:]
NSString+DVTSourceControlGitPlugInPrimary.m
Unsupported key type %@
-[DVTSourceControlGitPlugInPrimary(Conflict) stateOfWorkingCopy:completionBlock:]
NSError *finishIndexConflict(git_repository *)
-[DVTSourceControlGitPlugInPrimary(Conflict) continueOrFinishConflictOperationInWorkingCopy:completionBlock:]
cherry-pick
NSError *abortIndexConflict(git_repository *)
-[DVTSourceControlGitPlugInPrimary(Conflict) abortConflictOperationInWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Conflict) currentConflictRevisionsForWorkingCopy:upstreamRevision:completionBlock:]
oidFromRevision(&upstream, forcedUpstreamRevision, repo)
MERGE_HEAD
ORIG_HEAD
REBASE_HEAD
rebase-merge/current
CHERRY_PICK_HEAD
git_repository_head(&conflictHead, repo)
git_reference_lookup(&conflictHead, repo, conflictRefName)
git_reference_lookup(&originalHead, repo, originalRefName)
git_merge_base(&ancestor, repo, &local, &upstream)
git_commit_lookup(&commit, repo, commitOID)
int fileContentsAtCommit(git_repository *, const git_oid *, DVTSourceControlGitPlugInPrimary *__strong, NSString *__strong, NSURL *__autoreleasing *, NSError *__autoreleasing *)
git_tree_entry_bypath(&treeEntry, tree, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
git_blob_lookup(&blob, repo, git_tree_entry_id(treeEntry))
git_blob_filtered_content(&buffer, blob, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding], true)
git_tree_lookup(&subTree, repo, git_tree_entry_id(treeEntry))
git_tree_walk(subTree, GIT_TREEWALK_PRE, treeCallback, (__bridge void*)treeWriter)
Cannot get a textual representation of this file.
%llX_stage
int fileContentsAsStaged(git_repository *, DVTSourceControlGitPlugInPrimary *__strong, NSString *__strong, NSURL *__autoreleasing *, NSError *__autoreleasing *)
index
git_blob_lookup(&blob, repo, &(indexEntry->id))
git_blob_filtered_content(&buffer, blob, [normalizedRepoPath cStringUsingEncoding:NSUTF8StringEncoding], true)
-[DVTSourceControlGitPlugInPrimary(Export) _unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:]
fileContentsAtCommit(repo, commitOID, self, relativePath, &unmodified, &error)
fileContentsAtCommit(repo, upstreamOID, self, relativePath, &upstream, nil)
git_merge_base(&ancestorOID, repo, commitOID, upstreamOID)
fileContentsAtCommit(repo, &ancestorOID, self, relativePath, &ancestor, nil)
-[DVTSourceControlGitPlugInPrimary(Export) stageContentsOfFile:includingUnmodified:inWorkingCopy:completionBlock:]
stagedGitError
v24@?0@"NSString"8@"DVTSourceControlRevisionLocation"16
v16@?0@"DVTSourceControlExportContentsResultType"8
-[DVTSourceControlGitPlugInPrimary(Export) _exportFile:inWorkingCopy:fromRevisionLocation:error:]
oidAndCommitFromRevision(&commitOID, &commit, revision, repo)
Tree entry unknown.
i24@?0r*8r^{git_tree_entry=}16
git_blob_lookup(&blob, repo, oid)
-[DVTSourceControlGitPlugInPrimary(Export) exportOID:toRelativePath:repo:error:]
-[DVTSourceControlGitPlugInPrimary(Export) exportConflictVersionsOfFile:inWorkingCopy:completionBlock:]
git_index_conflict_get(&ancestor, &our, &their, index, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
-[DVTSourceControlGitPlugInPrimary(Tag) addTag:toRepository:completionBlock:]
oidFromRevision(&revision_oid, tag.revision, repo)
oidAndCommitFromRevision(&revision_oid, &target_obj, tag.revision, repo)
Tag must have a name
git_tag_create(&created_tag_oid, repo, [tag.name UTF8String], ((git_object *)target_obj), author, utf8message, false)
-[DVTSourceControlGitPlugInPrimary(Tag) pushTag:name:remote:delete:completionBlock:]
git_remote_push(remote, &tag_refspec, &pushOptions)
-[DVTSourceControlGitPlugInPrimary(Tag) removeTag:fromRepository:andRemoteRepository:completionBlock:]
git_tag_delete(repo, [tag.name UTF8String])
-[DVTSourceControlGitPlugInPrimary(Tag) loadCompleteTag:tag:completionBlock:]
git_oid_fromstrp(&oid, revisionHash)
git_tag_lookup(&lookup_tag, repo, &oid)
c16@?0^{git_reference=}8
-[DVTSourceControlGitPlugInPrimary(Tag) searchTagsInRepository:query:completionBlock:]
Reusing existing copy.
--bare
--mirror
clone
--local
--progress
--no-checkout
Unable to reuse existing copy. Falling back to a full clone.
remote
set-url
--branch
-[DVTSourceControlGitPlugInPrimary(Clone) _runGitCloneForRemoteRepository:cloneType:branchName:localURL:standardError:standardOut:feedbackBlock:]
DVTSourceControlGitPlugInPrimary+Clone.m
branchName == nil
GIT_CONFIG_NOSYSTEM
GIT_FLUSH
Checking out: %s
Checking out
v32@?0r*8Q16Q24
v20@?0r*8i16
Receiving objects: %@ done
v16@?0r^{git_indexer_progress=IIIIIIQ}8
git_clone(&gitRepository, gitRemoteURL, clonePath, &cloneOptions)
-[DVTSourceControlGitPlugInPrimary(Clone) _libgit_cloneFromRepository:cloneType:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:]
git_repository_config(&cfg, gitRepository)
remote.origin.mirror
git_config_set_bool(cfg, "remote.origin.mirror", true)
remote.origin.fetch
+refs/*:refs/*
git_config_set_string(cfg, "remote.origin.fetch", "+refs/*:refs/*")
Unable to establish identity of repository.
oidFromRevision(&checkoutOID, location.revision, gitRepository)
git_repository_set_head_detached(gitRepository, &checkoutOID)
git_checkout_head(gitRepository, &checkoutOptions)
git_reference_name_to_id(&oid, gitRepository, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_repository_set_head_detached(gitRepository, &oid)
git_repository_open(&gitRepository, fileURL.path.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary(Clone) _libgit_checkoutWorkingCopyLocation:useRevision:localAddress:progressIdentifier:completionBlock:]
Git Clone
v32@?0@"DVTSourceControlWorkingCopy"8@"DVTSourceControlRepository"16@"NSError"24
v24@?0@"DVTSourceControlWorkingCopy"8@"NSError"16
v16@?0@"DVTSourceControlRepositoryResultType"8
((Counting objects:)|(Compressing objects:)|(Receiving objects:)|(Resolving deltas:))[\s]+(([0-9]+)%|([0-9]+,))
Receiving objects:
Compressing objects:
Counting objects:
Resolving deltas:
%@ %li%% done
%@ %li done
v16@?0@"NSString"8
-[DVTSourceControlGitPlugInPrimary(CherryPick) abortCherryPickOperationInWorkingCopy:error:]
-[DVTSourceControlGitPlugInPrimary(CherryPick) continueCherryPickInWorkingCopy:error:]
--continue
-[DVTSourceControlGitPlugInPrimary(CherryPick) cherryPick:revision:parentRevision:completionBlock:]
git_commit_lookup(&headCommit, repo, &headOID)
oidAndCommitFromRevision(&commitOID, &cherryPickCommit, revision, repo)
oidAndCommitFromRevision(&parentOID, &parentCommit, parentRevision, repo)
-[DVTSourceControlGitPlugInPrimary(CherryPick) runCherryPickCommand:repository:revision:mainline:error:]
git_reference_iterator_new(&gitReferenceIterator, repo)
-[DVTSourceControlGitPlugInPrimary(References) iterateReferencesOfGitRepository:skipBlock:iterationBlock:error:]
git_reference_next(&gitReference, gitReferenceIterator)
-[DVTSourceControlGitPlugInPrimary(References) searchReferencesInRepository:query:completionBlock:]
%02X
NSString *fingerprintOfHostKey(git_cert_hostkey *, git_cert_ssh_t)
DVTSourceControlGitRemoteCallbacks.m
Raw key digest not supported
DVTSourceControlGitRemoteCallbackPayload
Upload
Author
Helpers
Status
DVTSourceControlGitCLINormalizedString
Ignore
DVTSourceControlGitPlugInPrimary
Stash
DVTSourceControlCMSSignatureValidationStrategy
DVTSourceControlSignatureValidationStrategy
NSObject
Update
DVTSourceControlError
GitDate
Config
Stage
Remote
Additions
PrivateGit
Rebase
CaseChange
libgit2
FileManagement
Blame
Metadata
FileLog
DVTSourceControlPlugInPrimary
Branch
DVTSourceControlGitTask
DVTSourceControlGitOIDHolder
Merge
Switch
DVTSourceControlPlugInCallbackProtocol
DVTSourceControlPlugInProtocol
DVTSourceControlGitXPCService
GitNormalizedString
GitErrorParsing
GitStashParsing
GitBranchPrefixPruning
KeyDigestHelpers
Conflict
Export
Clone
CherryPick
References
Scanning
@24@0:8@16
v16@0:8
i36@0:8@16i24^^{git_credential}28
i32@0:8@16^^{git_credential}24
i36@0:8@16I24^^{git_credential}28
i28@0:8I16^^{git_credential}20
v24@0:8r*16
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8Q16
@"DVTSourceControlRemoteRepository"
@"DVTSourceControlAuthenticationStrategy"
@"NSError"
@"NSMutableOrderedSet"
v60@0:8@16@24@32c40@44@?52
v32@0:8@16@?24
v40@0:8@16@24@?32
@44@0:8{git_oid=[20C]}16^{git_repository=}36
@32@0:8@16@24
c40@0:8^{git_repository=}16@24@32
v36@0:8@16c24@?28
@28@0:8@16c24
@24@0:8^{git_diff=}16
v48@0:8@16@24@32@?40
@36@0:8^S16Q24c32
S24@0:8Q16
r*16@0:8
@"NSString"
@24@0:8^{git_repository=}16
c24@0:8^{git_repository=}16
v24@0:8^{git_repository=}16
^{git_repository=}16@0:8
v44@0:8@16c24@28@?36
v40@0:8@16q24@?32
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@"_TtC16DVTSourceControl43DVTSourceControlSignatureVerificationResult"24@0:8@"_TtC16DVTSourceControl31DVTSourceControlCommitSignature"16
v24@0:8@"NSArray"16
@32@0:8^{_CMSDecoder=}16^{__CFArray=}24
@20@0:8i16
@24@0:8^{__CFError=}16
@56@0:8@16@24^{git_repository=}32c40c44^@48
@48@0:8@16^{git_repository=}24c32c36^@40
v52@0:8@16@24c32@36@?44
v56@0:8@16@24@32Q40@?48
@32@0:8q16r^{?=*i}24
@40@0:8q16r^{?=*i}24@32
@24@0:8q16
@32@0:8q16@24
@24@0:8^{git_reference=}16
^{git_config=}24@0:8@16
^{git_config=}16@0:8
^{git_config=}24@0:8^{git_repository=}16
v24@0:8^{git_config=}16
v32@0:8^{git_config=}16^{git_repository=}24
@24@0:8@?16
@32@0:8^{git_repository=}16@?24
v32@0:8^{git_repository=}16@?24
@32@0:8@16^{git_repository=}24
c32@0:8@16^@24
@32@0:8@16^@24
c40@0:8^{git_repository=}16@24^@32
@40@0:8^{git_repository=}16@24^@32
^{git_signature=**{git_time=qic}}32@0:8^{git_repository=}16^@24
v28@0:8@16c24
v52@0:8@16@24@32c40@?44
v40@0:8@16c24c28@?32
v44@0:8c16@20@28@?36
v56@0:8@16@24@32c40c44@?48
v48@0:8@16@24c32c36@?40
@40@0:8@16@24@?32
v44@0:8@16@24c32@?36
v32@0:8@16@24
v48@0:8q16d24@32@40
v40@0:8@16d24@32
@"NSDate"
@"DVTSourceControlGitXPCService"
@60@0:8{git_oid=[20C]}16Q36^{git_repository=}44^@52
c32@0:8^{git_repository=}16^@24
c40@0:8^{git_repository=}16^{git_reference=}24^@32
v40@0:8Q16@24@?32
c40@0:8@16@24^@32
c60@0:8^{git_index=}16@24@32@40c48^@52
v52@0:8@16c24@28@36@?44
@40@0:8@16Q24^@32
v40@0:8@16Q24@?32
@48@0:8@16@24Q32^@40
@32@0:8@16@?24
@72@0:8@16@24@32@40@48@56*64
v68@0:8@16@24@32c40q44@52@?60
c44@0:8^{git_repository=}16i24@?28^@36
@72@0:8^{git_commit=}16{git_oid=[20C]}24^{git_repository=}44@52^{git_mailmap=}60c68
v56@0:8@16@24@32q40@?48
v100@0:8@16@24@32Q40q48@56Q64c72c76@80c88@?92
v52@0:8@16@24c32@?36@?44
@48@0:8@16@24^q32@?40
v20@0:8c16
i16@0:8
v20@0:8i16
@"NSTask"
@"NSArray"
@"NSData"
@"NSMutableData"
r^{git_oid=[20C]}16@0:8
v24@0:8r^{git_oid=[20C]}16
r^{git_oid=[20C]}
c48@0:8@16^{git_reference=}24^{git_repository=}32^@40
v40@0:8q16@24@32
v40@0:8@16@24@32
v40@0:8q16@"NSDictionary"24@"NSUUID"32
v40@0:8@"NSArray"16@"NSDictionary"24@"NSUUID"32
v32@0:8@"DVTSourceControlAuthenticationStrategy"16@"DVTSourceControlRemoteRepository"24
v72@0:8@16@24c32@36@44@52c60@?64
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"DVTSourceControlXPCResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlAuthorResultType">24
v40@0:8@"DVTSourceControlAuthor"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v52@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32c40@?<v@?@"DVTSourceControlBlameResultType">44
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlListBranchesResultType">24
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlBranchesResultType">32
v52@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRepository"32c40@?<v@?@"DVTSourceControlBranchResultType">44
v48@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v56@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"NSString"32c40c44@?<v@?@"DVTSourceControlBranchResultType">48
v48@0:8@"NSString"16@"DVTSourceControlBranch"24@"DVTSourceControlRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v40@0:8@"DVTSourceControlRevision"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlBranchesResultType">32
v24@0:8@?<v@?@"DVTSourceControlStringResultType">16
v32@0:8@"NSString"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlBranchesResultType">32
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlHistoryResultType">32
v48@0:8@"NSString"16@"NSString"24@"DVTSourceControlWorkingCopy"32@?<v@?@"DVTSourceControlBoolResultType">40
v40@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlRevisionLocationResultType">32
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32@?<v@?@"DVTSourceControlRevisionConflictsResultType">40
v72@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRevisionLocation"24c32@"NSURL"36@"NSURL"44@"NSUUID"52c60@?<v@?@"DVTSourceControlWorkingCopyResultType">64
v52@0:8@"DVTSourceControlRemoteRepository"16@"NSURL"24c32@"NSUUID"36@?<v@?@"DVTSourceControlRepositoryResultType">44
v32@0:8@"NSURL"16@?<v@?@"DVTSourceControlRepositoryResultType">24
v48@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@"NSString"32@?<v@?@"DVTSourceControlRevisionResultType">40
v56@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@"NSString"32c40c44@?<v@?@"DVTSourceControlRevisionResultType">48
v48@0:8@"DVTSourceControlWorkingCopy"16@"NSString"24c32c36@?<v@?@"DVTSourceControlLogItemResultType">40
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlBoolResultType">24
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlConflictResultType">32
v48@0:8@"DVTSourceControlRepository"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRevisionLocation"32@?<v@?@"DVTSourceControlLogItemFilesResultType">40
v36@0:8@"DVTSourceControlWorkingCopy"16c24@?<v@?@"DVTSourceControlStringResultType">28
v48@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32@?<v@?@"DVTSourceControlExportResultType">40
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlExportResultType">32
v44@0:8@"NSString"16c24@"DVTSourceControlWorkingCopy"28@?<v@?@"DVTSourceControlExportContentsResultType">36
v44@0:8@"NSString"16c24@"DVTSourceControlWorkingCopy"28@?<v@?@"DVTSourceControlExportStageContentsResultType">36
v48@0:8@"NSString"16@"NSString"24@"DVTSourceControlWorkingCopy"32@?<v@?@"DVTSourceControlXPCResultType">40
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v52@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24c32@"NSUUID"36@?<v@?@"DVTSourceControlStringResultType">44
v48@0:8@"NSArray"16@"NSArray"24@"DVTSourceControlWorkingCopy"32@?<v@?@"DVTSourceControlXPCResultType">40
v52@0:8@"NSArray"16@"NSArray"24@"DVTSourceControlWorkingCopy"32c40@?<v@?@"DVTSourceControlXPCResultType">44
v52@0:8@"NSString"16c24@"NSDictionary"28@"DVTSourceControlWorkingCopy"36@?<v@?@"DVTSourceControlXPCResultType">44
v100@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32Q40q48@"NSString"56Q64c72c76@"NSUUID"80c88@?<v@?@"DVTSourceControlHistoryResultType">92
v52@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"NSUUID"32c40@?<v@?@"DVTSourceControlVisualHistoryResultType">44
v68@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32c40q44@"NSUUID"52@?<v@?@"DVTSourceControlFileHistoryResultType">60
v52@0:8@"DVTSourceControlWorkingCopy"16@"NSArray"24@"NSUUID"32c40@?<v@?@"DVTSourceControlHistoryResultType">44
v52@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"NSString"32c40@?<v@?@"DVTSourceControlCommitDetailsResultType">44
v44@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24c32@?<v@?@"DVTSourceControlLogItemResultType">36
v44@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24c32@?<v@?@"DVTSourceControlVisualLogItemResultType">36
v44@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24c32@?<v@?@"DVTSourceControlVisualLogParentsResultType">36
v48@0:8@"DVTSourceControlRevision"16@"DVTSourceControlRevision"24@"DVTSourceControlWorkingCopy"32@?<v@?c@"NSError">40
v24@0:8@?<v@?@"DVTSourceControlStringsResultType">16
v32@0:8@"NSArray"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlWorkingCopy"16Q24@?<v@?@"DVTSourceControlRevisionLocationsResultType">32
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlBoolResultType">32
v60@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24@"DVTSourceControlBranch"32c40@"NSUUID"44@?<v@?@"DVTSourceControlXPCResultType">52
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@?<v@?@"DVTSourceControlBoolResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRebaseStateResultType">24
v40@0:8Q16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlRevisionLocationsResultType">32
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlListRemoteRepositoriesResultType">24
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlBranch"24@?<v@?@"DVTSourceControlBranchResultType">32
v48@0:8@"DVTSourceControlRemoteRepository"16@"NSString"24@"DVTSourceControlRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v40@0:8@"NSString"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlStashResultType">32
v44@0:8@"DVTSourceControlWorkingCopy"16c24@"NSString"28@?<v@?@"DVTSourceControlStashResultType">36
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlBoolResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlExportResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlWorkingCopyLocationsResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRevisionLocationResultType">24
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlHeadRevisionResultType">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlRevisionResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlWorkingCopyStateResultType">24
v36@0:8@"DVTSourceControlWorkingCopy"16c24@?<v@?@"DVTSourceControlWorkingCopyStatusResultType">28
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@"DVTSourceControlBranch"32@?<v@?@"DVTSourceControlFileStatusResultType">40
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlTag"24@?<v@?@"DVTSourceControlTagResultType">32
v40@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlTagResultType">32
v48@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"DVTSourceControlTagsResultType">24
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlTagsResultType">32
v56@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@"DVTSourceControlRemoteRepository"32Q40@?<v@?@"DVTSourceControlBoolResultType">48
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v32@0:8@"NSArray"16@?<v@?@"DVTSourceControlWorkingCopiesResultType">24
v32@0:8@"NSString"16@?<v@?@"DVTSourceControlRepositoryResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlStringResultType">24
{_NSRange=QQ}24@0:8@16
@24@0:8^i16
@48@0:8@16@24@32^@40
@?40@0:8@16^{git_repository=}24^@32
@48@0:8r^{git_oid=[20C]}16@24^{git_repository=}32^@40
c56@0:8@16@24Q32@40@48
@72@0:8@16Q24@32@40^@48^@56@?64
v68@0:8@16@24c32@36@44@52@?60
v76@0:8@16Q24@32c40@44@52@60@?68
c56@0:8@16@24@32@40@48
c44@0:8@16@24c32@36
c64@0:8@16Q24@32@40@48@56
i32@0:8@16^@24
@56@0:8@16^{git_repository=}24@32q40^@48
c48@0:8^{git_repository=}16@?24@?32^@40
@(#)PROGRAM:com.apple.dt.Xcode.sourcecontrol.Git  PROJECT:DVTSourceControl-23016
T#,R
_recentRevisionLocationsInWorkingCopy:fileContents:limit:error:
T@"DVTSourceControlAuthenticationStrategy",&,V_currentAuthenticationStrategy
addMockedConfigData:repository:
T@"DVTSourceControlGitXPCService",W,V_xpcService
arrayWithArray:
T@"NSArray",&,N,V_arguments
command
T@"NSError",&,N,V_error
continueOrFinishConflictOperationInWorkingCopy:completionBlock:
T@"NSError",&,V_pushError
enforceTrustedServerFingerprint
T@"NSMutableOrderedSet",&,V_potentialAuthenticationStrategies
forceUpdateWorkingCopy:location:fromRepository:completionBlock:
T@"NSString",&,N,V_dataString
initWithIdentifier:displayName:
T@"NSString",&,N,V_launchPath
logItem
T@"NSString",?,R,C
message
T@"NSString",R,C
T@"NSString",R,N,V_command
release
T@"NSURL",R,N
T@?,C,N,V_standardOutputFeedbackBlock
setEnvironment:
T@?,C,V_transferProgressBlock
setOid:
TB,N,V_isCancelled
setStandardOutputFeedbackBlock:
TB,R,N,V_representsXcodeServiceHostedRepository
standardizedURL
TB,V_noEditor
stringByAppendingPathExtension:
TQ,R
unlock:
Ti,N,V_terminationStatus
.cxx_destruct
_internalString
T@"DVTSourceControlAuthenticationStrategy",&,N,V_authenticationStrategy
_setConfigAuthor:forRepository:
T@"DVTSourceControlAuthenticationStrategy",&,V_nextAuthenticationStrategy
allKeys
T@"DVTSourceControlRemoteRepository",&,V_repository
bundleForClass:
T@"NSData",&,N,V_data
containsString:
T@"NSError",&,V_authenticationError
dealloc
T@"NSMutableData",R,N,V_errorData
fileURL
T@"NSString",&,N,V_currentDirectoryPath
globalConfigStringForKey:error:
T@"NSString",&,N,V_internalString
isProxy
T@"NSString",&,N,V_trustedServerFingerprint
lowercaseString
T@"NSString",R
mockConfigFiles
T@"NSString",R,N
parents
T@"NSTask",R,N,V_task
removeObserver:
T@?,C,N,V_standardErrorFeedbackBlock
serviceListener
T@?,C,V_sidebandProgressBlock
setIsCancelled:
TB,N,V_enforceTrustedServerFingerprint
setSignatureVerificationResult:
TB,R,N,V_cancelled
setWithObjects:
TB,V_flushImmediately
stringByAppendingPathComponent:
TB,V_readyToParseData
stringByRemovingPercentEncoding
TQ,V_authRequestCount
verifySignature
Tr^{git_oid=[20C]},V_oid
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByDeletingLastPathComponent
URLByStandardizingPath
URLWithString:
UTF8String
_arguments
_authRequestCount
_authenticationError
_authenticationStrategy
_basicAuthenticationForAuthStrategy:allowedTypes:outCredentials:
_cancelled
_cmdCommitToSingleFileLogItemWithNameStatus:workingCopy:lastFilePath:currentFilePath:headRevision:currentRevisionLocation:didMatchHEAD:
_cmd_cloneFromRepository:cloneType:location:localAddress:existingAddress:progressIdentifier:
_cmd_createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:
_cmd_createWorkingCopyFromRepository:location:localAddress:existingAddress:progressIdentifier:
_cmd_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
_command
_configAuthorForRepository:
_configAuthorForRepository:resultBlock:
_configForRepository:block:
_configWithBlock:
_currentAuthenticationStrategy
_currentDirectoryPath
_data
_dataString
_deleteStash:stashIdentifier:completionBlock:
_discardAllChanges:files:inWorkingCopy:completionBlock:
_enforceTrustedServerFingerprint
_enterDownloadSandboxQuarantineState
_error
_errorData
_exportFile:inWorkingCopy:fromRevisionLocation:error:
_exportStashInWorkingCopy:stashIndex:completionBlock:
_filesAndStatusOfWorkingCopy:withRemoteStatus:
_flushImmediately
_gitLaunchPath
_historyOfWorkingCopy:location:fetchesCommitSignatures:progressBlock:completionBlock:
_idesc_stringFromData:
_idesc_stringFromMutableData:
_isCancelled
_iterateBranchesOfGitRepository:type:iterationBlock:error:
_launchPath
_launchPathForTask:
_libgitCommitToLogItem:revision:repository:workingCopy:mailmap:fetchesCommitSignatures:
_libgit_checkoutWorkingCopyLocation:useRevision:localAddress:progressIdentifier:completionBlock:
_libgit_cloneFromRepository:cloneType:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
_libgit_createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:completionBlock:
_libgit_createWorkingCopyFromRepository:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:
_libgit_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
_logItemForWorkingCopy:revision:logItemCreationBlock:
_mutableConfigForRepository:
_mutableGlobalConfig
_nextAuthenticationStrategy
_noEditor
_oid
_parentsOfRevision:path:inWorkingCopy:fetchesCommitSignatures:completionBlock:
_performMove:workingCopy:originalFilePath:newFilePath:moveUnversionedFiles:outError:
_potentialAuthenticationStrategies
_pushError
_readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
_readyToParseData
_repository
_representsXcodeServiceHostedRepository
_runGitCloneForRemoteRepository:cloneType:branchName:localURL:standardError:standardOut:feedbackBlock:
_runGitLocalCloneForURL:forRemoteRepository:cloneType:localURL:progressIdentifier:
_setConfigForRepository:block:
_setGlobalConfigWithBlock:
_setStageContents:ofFile:inWorkingCopy:completionBlock:
_sidebandProgressBlock
_sshAgentAuthenticationForAuthStrategy:allwoedTypes:outCredentials:
_sshKeysAuthenticationForAuthStrategy:allowedTypes:outCredentials:
_sshKeysCredentialsForAuthStrategy:outCredentials:
_standardErrorFeedbackBlock
_standardOutputFeedbackBlock
_stashIdentiferFromRevision:workingCopy:completionBlock:
_task
_terminationStatus
_transferProgressBlock
_trustedServerFingerprint
_unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:
_upstreamBranchFromRepository:forBranch:completionBlock:
_waitToParseData
_xpcLastTimeProgressSent
_xpcService
abortCherryPickOperationInWorkingCopy:error:
abortConflictOperationInWorkingCopy:completionBlock:
abortMergeInWorkingCopy:
abortRebaseInRepository:
absoluteString
activeProcessorCount
addBranch:from:toRepository:shouldSwitchToNewBranch:completionBlock:
addFiles:inWorkingCopy:completionBlock:
addMockedConfigData:
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addRemoteRepository:withName:toRepository:completionBlock:
addTag:toRepository:completionBlock:
adjustExportedInterface:
allCurrentLocations:completionBlock:
allValues
appendData:
appendFormat:
applyStashInWorkingCopy:stash:completionBlock:
arguments
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
attributesOfItemAtPath:error:
authRequestCount
authenticateAllowedTypes:outCredentials:
authenticationError
authenticationStrategy
author
authorForWorkingCopy:completionBlock:
autorelease
availableData
beginActivityWithOptions:reason:
blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:
boolValue
branchNameIsValid:
branchesReachableFrom:inWorkingCopy:completionBlock:
buildFileStatuses:
bundleURL
bytes
cStringUsingEncoding:
cancelled
caseInsensitiveCompare:
characterAtIndex:
characterSetWithCharactersInString:
cherryPick:revision:parentRevision:completionBlock:
class
closeFile
code
commitDetails:revisions:progressIdentifier:fetchesCommitSignatures:completionBlock:
commitDetailsWithParents:forRevision:path:fetchesCommitSignatures:completionBlock:
commitFiles:inWorkingCopy:message:amend:forceNoSigning:completionBlock:
commitFiles:inWorkingCopy:message:completionBlock:
commitStagedChangesInWorkingCopy:message:amend:forceNoSigning:completionBlock:
commitToEndConflictsInWorkingCopy:repository:
componentsFromHeadLogLine:invoking:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
configAuthorForRepository:
configBoolForRepository:key:error:
configPathForRepository:key:error:
configSignatureForRepository:error:
configStringForRepository:key:error:
conformsToProtocol:
contents
continueCherryPickInWorkingCopy:error:
continueRebaseInRepository:error:
copy
copyFiles:toFilePaths:inWorkingCopy:completionBlock:
copyItemAtURL:toURL:error:
count
countByEnumeratingWithState:objects:count:
createDirectory:withIntermediateDirectories:attributes:inWorkingCopy:completionBlock:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createLocalRepositoryFromRepository:localAddress:mirrored:progressIdentifier:completionBlock:
createRepositoryAtFileURL:completionBlock:
createTemporaryFolder:error:
createTreeWriterForURL:repo:error:
createWorkingCopyFromRepository:location:useRevision:localAddress:existingAddress:progressIdentifier:shouldSandboxFiles:completionBlock:
currentAuthenticationStrategy
currentConflictRevisionsForWorkingCopy:upstreamRevision:completionBlock:
currentDirectoryPath
currentHandler
currentLocationOfWorkingCopy:completionBlock:
data
dataString
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:
date
dateFromRef:
dateWithTimeIntervalSince1970:
debugDescription
defaultCenter
defaultManager
deleteStashInWorkingCopy:stash:completionBlock:
description
dictionary
dictionaryNormalizedString
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
diffRepository:fromLocation:againstLocation:completionBlock:
diffStringForWorkingCopy:stagedChanges:completionBlock:
directoryWithGlobSuffix
discardAllChangesInWorkingCopy:completionBlock:
discardChangesInFiles:inWorkingCopy:completionBlock:
displayName
distantPast
doubleValue
downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:
dvtscm_branchNameMinusPrefix
dvtscm_escapedUrlFromString
dvtscm_gitCLINormalizedStringForRepo:
dvtscm_gitCLINormalizedStringForRepository:
dvtscm_gitNormalizedStringForRepo:
dvtscm_gitRemoteURL
dvtscm_isEqualToURLStringIgnoringPercentEncoding:
dvtscm_stashTitle
emails
endActivity:
enumerateLinesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
environment
error
errorData
errorFromCode:gitError:
errorFromCode:gitError:repository:
errorFromCommandLineError:
errorFromCommandLineErrorMessage:
errorFromErrorMessage:
errorWithDomain:code:userInfo:
exportConflictVersionsOfFile:inWorkingCopy:completionBlock:
exportFile:inWorkingCopy:fromRevisionLocation:completionBlock:
exportOID:toRelativePath:repo:error:
exportStashInWorkingCopy:stash:completionBlock:
exportedObjectProtocol
extractDigestAndParseKeyType:
fetchFromRemoteRepository:forLocalRepository:repo:includeTags:prune:error:
fetchFromRemoteRepositoryUsingLibGit:repo:includeTags:prune:error:
fetchStash:index:repo:error:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForReading
fileHandleForWriting
fileHasCumulativeChanges:workingCopy:filePath:
fileName
filePath
fileStatuses
fileSystemRepresentation
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileURLWithPath:
filesAndStatusOfWorkingCopy:sourceBranch:targetBranch:completionBlock:
filesAndStatusOfWorkingCopy:withRemoteStatus:completionBlock:
filteredArrayUsingPredicate:
fingerprintOfCertificate:
firstMatchInString:options:range:
firstObject
flushImmediately
fullyQualifiedName
fullyQualifiedReferenceName
garbageCollectWorkingCopy:withForce:
generateTemporaryPath:withData:error:
gitError_hasPrefix:
gitError_hasSuffix:
gitError_rangeOfString:
gitError_rangeOfTailString:
gitLaunchPath
gitRemoteURL
gitRepository
gitSourceControlSystem
globalConfigAuthor
globalConfigBoolForKey:error:
handleFailureInFunction:file:lineNumber:description:
hasPrefix:
hasSuffix:
hash
headFileURLForWorkingCopy:
headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:
headRevisionOfRepository:completionBlock:
headRevisionOfRepository:forFile:completionBlock:
historyOfCommit:includesCommit:inWorkingCopy:completionBlock:
historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:
historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:fetchesCommitSignatures:completionBlock:
historyOfWorkingCopy:fromRevision:toRevision:maximumLogItems:completionBlock:
historyOfWorkingCopy:location:progressIdentifier:fetchesCommitSignatures:completionBlock:
homeDirectoryForCurrentUser
identifier
identifierOfRepositoryForWorkingCopy:completionBlock:
ignoredFilesWithCompletionBlock:
incrementalLogStatus:info:progressIdentifier:
index
init
init:error:
initIncompleteLogItemWithAuthor:revision:date:message:signature:revisionType:
initWithArgs:
initWithAuthor:revision:date:message:currentFilePath:filePath:status:revisionType:signature:
initWithAuthor:revision:date:message:signature:fileStatuses:parents:revisionType:
initWithAuthor:revision:date:message:signature:fileStatuses:revisionType:workingCopy:
initWithAuthor:revision:date:message:signature:revisionType:workingCopy:
initWithBase64EncodedString:options:
initWithBlameItems:error:
initWithBranch:error:
initWithBranchName:primaryBranch:
initWithBranchName:primaryBranch:remoteBranch:
initWithBranchName:primaryBranch:remoteName:
initWithBranchName:primaryBranch:trackingBranch:pullCount:pushCount:
initWithBranches:defaultBranch:error:
initWithBranches:error:
initWithBranches:remoteBranches:error:
initWithBytes:length:encoding:
initWithCapacity:
initWithCharactersNoCopy:length:freeWhenDone:
initWithData:
initWithData:encoding:
initWithDomain:code:userInfo:
initWithError:
initWithFilePath:previousFilePath:revision:status:
initWithFilePath:revision:status:
initWithFileURL:error:
initWithFileURL:parentFileURL:ancestorFileURL:error:
initWithFileURL:repository:
initWithFileURL:unidentifiableRepository:
initWithIdentifier:
initWithLineRange:logItem:
initWithLocalRevision:upstreamRevision:ancestorRevision:error:
initWithLocalStatusPaths:remoteStatusPaths:error:
initWithLocation:error:
initWithLocations:error:
initWithLogItem:error:
initWithLogItem:parentLogItems:error:
initWithLogItem:parentLogItems:fileStatuses:error:
initWithLogItemFiles:error:
initWithLogItems:error:
initWithName:email:error:
initWithNewTagName:message:revision:
initWithPattern:options:error:
initWithPrimaryRemoteRepository:remoteRepositories:error:
initWithRepository:
initWithRepository:error:
initWithResult:error:
initWithRevision:
initWithRevision:defaultBranch:error:
initWithRevision:error:
initWithRevision:hasConflicts:error:
initWithRevision:index:message:author:date:fileStatuses:
initWithSignature:contents:
initWithStagedURL:unmodifiedURL:error:
initWithStash:error:
initWithState:error:
initWithStatusPaths:upstreamStatusPaths:uncommittedStatusPaths:commonAncestorRevision:error:
initWithTag:error:
initWithTagName:
initWithTagName:message:revision:author:
initWithTagName:revision:
initWithTags:branches:stashes:remotes:remoteBranches:currentLocation:recentLocations:primaryRemote:state:error:
initWithTags:error:
initWithURL:identifier:sourceControlSystem:
initWithURL:sourceControlSystem:
initWithUnmodifiedURL:upstreamURL:ancestorURL:error:
initWithUsername:email:
initWithValue:error:
initWithWorkingCopies:error:
initWithWorkingCopy:error:
initialBranchName
initialBranchName:
initialBranchNameOrDefault
insertObject:atIndex:
instanceWithExportedObject:
intValue
integerValue
internalString
invertedSet
isCancelled
isEqual:
isEqualIgnoringPrimaryAndNewStatus:
isEqualTo:
isEqualToString:
isFileURL
isGreaterThan:
isInputLikelyRequestedBasedOnContentsOfString:
isKindOfClass:
isLowPowerModeEnabled
isMemberOfClass:
isNewBranch
isNotEqualTo:
isPlaceholderRevision
isRemoteBranch
isRevisionWithIdentifier:unpushedToBranchWithName:ofWorkingCopy:completionBlock:
isSimilar:
isValidRevisionString:
iterateAuthenticationStrategy
iterateReferencesOfGitRepository:skipBlock:iterationBlock:error:
lastErrorFromCode:
lastErrorFromCode:repository:
lastObject
lastPathComponent
launch
launchPath
length
lengthOfBytesUsingEncoding:
listBranchesOfRepository:completionBlock:
listRemoteBranchesOfRepository:completionBlock:
listRemoteRepositoriesForRepository:completionBlock:
listTagsOfRemoteRepository:completionBlock:
listUnpushedCommitsInBranchWithName:ofWorkingCopy:completionBlock:
loadCompleteStash:stash:completionBlock:
loadCompleteTag:tag:completionBlock:
localStatusPaths
localizedCaseInsensitiveCompare:
localizedCaseInsensitiveContainsString:
localizedDescription
localizedStringForKey:value:table:
lock:
lockURL:
logItemForWorkingCopy:revision:fetchesCommitSignature:completionBlock:
logItems
mainBundle
markAllConflictsAsResolvedInWorkingCopy:
markAsResolvedFiles:inWorkingCopy:completionBlock:
matchesInString:options:range:
mergeBranch:intoWorkingCopy:completionBlock:
mergeInBranchInWorkingCopy:mergeBranch:repository:error:
mockedConfigPathForRepository:
mockedGlobalConfigPath
modificationDate
moveCaseSensitiveItemAtURL:toURL:error:
moveFiles:toFilePaths:inWorkingCopy:moveUnversionedFiles:completionBlock:
moveItemAtURL:toURL:error:
mutableConfigForPath:
mutableCopy
mutableMockedConfigForRepository:
mutableMockedGlobalConfig
name
newlineCharacterSet
nextAuthenticationStrategy
noEditor
numberOfRanges
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
operationsFinished
orderedSetWithArray:
outputLines
outputLinesWithBlock:
parentBranchesOfBranch:inRepository:completionBlock:
parseDataOrGenerateErrorForTask:operation:
parseGitFetchErrorLogs:remote:
password
path
pathDetailsIfRenamed:relativePath:location:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pipe
potentialAuthenticationStrategies
predicateWithBlock:
previousFilePath
primaryRemoteRepository
privateKeyFile
privateKeyPassword
processInfo
progressStatus:info:progressIdentifier:
proxyObject
publicKeyFile
pushError
pushReferenceForStatus:
pushTag:name:remote:completionBlock:
pushTag:name:remote:delete:completionBlock:
rangeAtIndex:
rangeOfCharacterFromSet:options:
rangeOfString:
rangeOfString:options:
readDataFromFileHandle:intoBuffer:outstandingOperationCounter:dataParsingBlock:
readyToParseData
rebaseOntoBranchInRepository:rebaseBranch:error:
rebaseStateForWorkingCopy:completionBlock:
rebaseWorkingCopy:ontoBranch:completionBlock:
receivedLogItems
recentLocationsForWorkingCopy:error:
recentLocationsForWorkingCopy:limit:completionBlock:
recentLocationsForWorkingCopy:limit:error:
referenceFromIdentifier:workingCopy:
regularExpressionWithPattern:options:error:
remoteBranchFromRepository:forBranch:completionBlock:
remoteBranches
remoteName
remoteNameIsValid:completionBlock:
remoteObjectProtocol
remoteRepositories
remoteStatusPaths
removeAllObjects
removeBranch:fromRepository:andRemoteRepository:completionBlock:
removeFiles:inWorkingCopy:completionBlock:
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectAtIndex:
removeObjectsInArray:
removeRemoteRepositoryNamed:fromRepository:completionBlock:
removeTag:fromRepository:andRemoteRepository:completionBlock:
renameBranch:inRepository:toBranchName:checkout:force:completionBlock:
replaceBytesInRange:withBytes:length:
replaceCharactersInRange:withString:
repository
representsXcodeServiceHostedRepository
resetStageContentsOfWorkingCopy:completionBlock:
resolvedFilePath:workingCopy:
respondsToSelector:
resume
retain
retainCount
revertCommit:revision:completionBlock:
revision
revisionOfLocation:inRepository:completionBlock:
runCherryPickCommand:repository:revision:mainline:error:
scanForRepositoryInFolderPath:completionBlock:
scanForWorkingCopiesInPotentialWorkingCopies:completionBlock:
searchBranchesInRepository:query:completionBlock:
searchReferencesInRepository:query:completionBlock:
searchTagsInRepository:query:completionBlock:
self
sendLogItems:progressIdentifier:
sentLogItems
serviceIdentifier
setArguments:
setAuthRequestCount:
setAuthenticationError:
setAuthenticationStrategy:
setAuthenticationStrategy:repository:
setAuthor:forWorkingCopy:completionBlock:
setBranches:
setClasses:forSelector:argumentIndex:ofReply:
setConfigAuthor:forRepository:
setCountStyle:
setCurrentAuthenticationStrategy:
setCurrentDirectoryPath:
setData:
setDataString:
setDate:
setDelegate:
setEnforceTrustedServerFingerprint:
setError:
setFlushImmediately:
setGlobalConfigAuthor:
setGlobalConfigString:forKey:
setIgnoredFiles:completionBlock:
setIncrementalLogStatus:progressValue:progressIdentifier:
setInitialBranchName:
setInitialBranchName:completionBlock:
setInternalString:
setLaunchPath:
setLength:
setLogItem:
setNextAuthenticationStrategy:
setNoEditor:
setObject:forKey:
setObject:forKeyedSubscript:
setParents:
setPotentialAuthenticationStrategies:
setProgressStatus:progressValue:userReadableString:progressIdentifier:
setPushError:
setQualityOfService:
setReadyToParseData:
setRebaseState:forWorkingCopy:completionBlock:
setRepository:
setRevision:
setSidebandProgressBlock:
setStageContents:ofFile:inWorkingCopy:completionBlock:
setStageContentsFromDiskVersionOfAllFilesInWorkingCopy:completionBlock:
setStageContentsFromDiskVersionOfFile:inWorkingCopy:completionBlock:
setStageContentsFromOriginalVersionOfFile:previousFilePath:inWorkingCopy:completionBlock:
setStandardError:
setStandardErrorFeedbackBlock:
setStandardInput:
setStandardOutput:
setTags:
setTerminationStatus:
setTransferProgressBlock:
setTrustedServerFingerprint:
setUpstreamBranchRemoteName:forBranch:repository:completionBlock:
setValue:forKey:
setWaitToParseData:
setXPCService:
setXpcService:
sharedBaseRevision
sharedHeadRevision
sharedInitialRevision
sharedUnversionedLogItem
sharedUnversionedRevision
shouldTrustServer:withFingerprint:userTrustedFingerprint:
shouldUpdateProgress
sidebandProgressBlock
signature
signatureForRevision:inRepository:
signatureFromData:contents:
signatureInvalidResult
signatureValidResult
sortedArrayUsingComparator:
sourceControlSystem
sshAuthenticationAgentEnforceFingerprintKey
sshAuthenticationAgentExecutableURL
sshAuthenticationAgentFingerprintKey
sshAuthenticationAgentPassphraseKey
sshAuthenticationAgentPasswordKey
sshAuthenticationAgentUsernameKey
stageContentsOfFile:includingUnmodified:inWorkingCopy:completionBlock:
standardErrorFeedbackBlock
standardOutputFeedbackBlock
stashChangesOfWorkingCopy:includingUnversioned:message:completionBlock:
stateOfWorkingCopy:completionBlock:
status
string
stringByAppendingString:
stringByExpandingTildeInPath
stringByTrimmingCharactersInSet:
stringFromByteCount:
stringValue
stringWithCString:encoding:
stringWithContentsOfFile:encoding:error:
stringWithContentsOfURL:encoding:error:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subarrayWithRange:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
switchLocation:ofWorkingCopy:completionBlock:
task
tempFilePathBasedOnFileName:outError:
terminationStatus
timeIntervalSince1970
timeIntervalSinceDate:
transferProgressBlock
truncateIdentifier:
trustedServerFingerprint
unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:
unsetInitialBranchName
unsignedIntegerValue
unsignedResult
updateVisualInformationWithOutBranchIdentifiers:splitBranchIdentifiers:inBranchIdentifiers:mergedBranchIdentifiers:commitBranchIdentifier:
updateWorkingCopy:branch:fromRepository:updateStrategy:completionBlock:
uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:
userInfo
username
validateAuthenticationOfRemoteRepository:completionBlock:
validateSignatureForLogItems:
value
verificationFailedResultWithSecTrustError:
verificationFailedResultWithStatus:
verificationForSignature:
verificationResultFromDecoder:withPolicies:
verify
visualLogItemForWorkingCopy:revision:fetchesCommitSignature:completionBlock:
visualLogItemWithParentsForIdentifier:ofWorkingCopy:fetchesCommitSignature:completionBlock:
waitForDataInBackgroundAndNotify
waitForLogItemsReceivedWithTimeout:completionBlock:
waitUntilExit
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
writeData:
writeRelativePath:toFolder:withData:error:
writeToFile:atomically:encoding:error:
writeToURL:atomically:
writeToURL:atomically:encoding:error:
writeToURL:options:error:
xpcService
zone
#DVTSourceControlGitXPC: %s
Method: %s
Authentication: repository: %@, Basic auth selected
-[DVTSourceControlGitRemoteCallbackPayload _basicAuthenticationForAuthStrategy:allowedTypes:outCredentials:]
Authentication: repository: %@, Basic auth: no password provided
No password provided for SSH.
Authentication: repository: %@, Basic auth unavailable. Allowed types are: %u
Authentication: repository: %@, exceeded callback limit
Credentials invalid.
Authentication: repository: %@, SSH Key auth selected
-[DVTSourceControlGitRemoteCallbackPayload _sshKeysAuthenticationForAuthStrategy:allowedTypes:outCredentials:]
Authentication: repository: %@, SSH Key auth unavailable
Authentication: repository: %@, SSH Agent auth selected
-[DVTSourceControlGitRemoteCallbackPayload _sshAgentAuthenticationForAuthStrategy:allwoedTypes:outCredentials:]
Authentication: repository: %@, SSH Agent auth unavailable
Authentication: repository: %@, callback: %lu
-[DVTSourceControlGitRemoteCallbackPayload authenticateAllowedTypes:outCredentials:]
Authentication: repository: %@, unknown strategy: %@
Authentication: repository: %@, no remaining strategies found
Repository provided was not a local repository (%@)
-[DVTSourceControlGitPlugInPrimary(Upload) uploadCommitsToRemoteRepository:fromLocalRepository:remoteBranch:pushTags:progressIdentifier:completionBlock:]
Repository is not a DVTSourceControlRepository
Could not find local libgit repo for %@
NULL gitRepository for %@
Error with libgit operation (%s)
git_repository_head(&localBranch, repo)
%s:refs/heads/%@
git_tag_list(&tagNames, repo)
refs/tags/%s
git_remote_push(remote, &pushRefSpecs, &pushOptions)
%@/%@
Make sure there's a remote entry in your Git configuration for the remote URL '%@'.
The push operation failed because no matching remote could be found.
-[DVTSourceControlGitPlugInPrimary(Author) authorForWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Author) setAuthor:forWorkingCopy:completionBlock:]
-----BEGIN SIGNED MESSAGE-----
-----END SIGNED MESSAGE-----
rev-list
--max-parents=0
HEAD
git_annotated_commit_from_revspec(&annotatedCommit, repo, revspec)
NSString *gitRepositoryIdentifier(git_repository *)
git_commit_lookup(&commit, repo, revisionOID)
git_mailmap_from_repository(&mailmap, repo)
git_remote_list(&remotes, repo)
git_remote *lookupRemote(git_repository *, DVTSourceControlRemoteRepository *__strong, BOOL, NSString *__autoreleasing *, NSError *__autoreleasing *)
git_remote_lookup(&remote, repo, remoteName)
status
--porcelain
-[DVTSourceControlGitPlugInPrimary(Status) _filesAndStatusOfWorkingCopy:withRemoteStatus:]
git_status_list_new(&statusList, repo, &statusOptions)
Silent error with libgit operation (%s)
git_repository_head(&head, repo)
git_branch_upstream(&upstreamBranch, head)
git_merge_base(&mergeBase, repo, git_reference_target(head), git_reference_target(upstreamBranch))
git_commit_lookup(&baseCommit, repo, &mergeBase)
git_commit_tree(&baseTree, baseCommit)
git_reference_peel((git_object **)&upstreamTree, upstreamBranch, GIT_OBJ_TREE)
git_diff_tree_to_tree(&treeDiff, repo, baseTree, upstreamTree, &diffopts)
%@...%@
-[DVTSourceControlGitPlugInPrimary(Status) filesAndStatusOfWorkingCopy:sourceBranch:targetBranch:completionBlock:]
git_reference_lookup(&sourceReference, repo, sourceBranchName)
git_reference_lookup(&targetReference, repo, targetBranchName)
git_reference_name_to_id(&source_tree_oid, repo, source_ref_name)
git_reference_name_to_id(&target_tree_oid, repo, target_ref_name)
git_reference_peel((git_object **)&sourceTree, sourceReference, GIT_OBJ_TREE)
git_reference_peel((git_object **)&targetTree, targetReference, GIT_OBJ_TREE)
diff
--name-status
git_merge_base(&merge_base, repo, &source_tree_oid, &target_tree_oid)
--no-color
--staged
core.excludesfile
B24@?0@8@"NSDictionary"16
~/%@
.gitignore_global
git_config_set_string(levelConfig, "core.excludesfile", ignorePath.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary(Ignore) setIgnoredFiles:completionBlock:]
index.lock
stash
save
-[DVTSourceControlGitPlugInPrimary(Stash) stashChangesOfWorkingCopy:includingUnversioned:message:completionBlock:]
i32@?0Q8r*16r^{git_oid=[20C]}24
gitError
Could not locate stash identifier from revision
v24@?0q8@"NSError"16
-[DVTSourceControlGitPlugInPrimary(Stash) _deleteStash:stashIdentifier:completionBlock:]
git_stash_drop(repo, stashIdentifier)
-[DVTSourceControlGitPlugInPrimary(Stash) _stashIdentiferFromRevision:workingCopy:completionBlock:]
git_stash_foreach(repo, stashCallback, (__bridge void *)stashBlock)
-[DVTSourceControlGitPlugInPrimary(Stash) applyStashInWorkingCopy:stash:completionBlock:]
git_stash_apply(repo, stashIndex, &options)
git_repository_index(&index, repo)
show
%ld.patch
Couldn't create temporary path for stash '%ld'
Couldn't write data to path '%@'
v16@?0@"DVTSourceControlHistoryResultType"8
DVTSourceControlCMSClassErrorCodeKey
CMS Module Error with code %d.
SecTrust could not validate the signing certificate.
Signature is invalid or malformed.
No remote repository specified for fetch.
Specified local repository has no on-disk URL set.
--jobs=%lu
fetch
--atomic
--quiet
--no-recurse-submodules
v16@?0@"NSData"8
debug1
v24@?0@"NSString"8^B16
ssh: Could not resolve hostname
Permission denied
Host key verification failed
Could not read from remote repository
Unknown error while fetching remote changes. Make sure the remote is set up correctly and that you have access to it.
git_remote_fetch(remote, NULL, &fetchOptions, NULL)
-[DVTSourceControlGitPlugInPrimary(Update) fetchFromRemoteRepositoryUsingLibGit:repo:includeTags:prune:error:]
Failed to locate remote for URL '%@'
-[DVTSourceControlGitPlugInPrimary(Update) downloadUpdatesFromRemoteRepository:toRepository:removeDeletedLocations:progressIdentifier:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Update) updateWorkingCopy:branch:fromRepository:updateStrategy:completionBlock:]
git_branch_lookup(&remoteBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_repository_head(&currentReference, repo)
git_branch_upstream(&remoteBranch, currentReference)
-[DVTSourceControlGitPlugInPrimary(Update) forceUpdateWorkingCopy:location:fromRepository:completionBlock:]
origin
git_remote_lookup(&remote, repo, "origin")
git_branch_upstream(&trackingBranch, currentReference)
git_reference_set_target(&fastForwardedBranch, currentReference, git_reference_target(trackingBranch), NULL)
git_checkout_head(repo, &checkoutOptions)
git_branch_delete(checkoutReference)
git_branch_lookup(&trackingBranch, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_commit_lookup(&target, repo, targetOID)
git_branch_create(&checkoutReference, repo, branch.name.UTF8String, target, 0)
git_branch_set_upstream(checkoutReference, remoteBranchName.UTF8String)
git_checkout_tree(repo, (const git_object *)target, &checkoutOptions)
git_repository_set_head(repo, git_reference_name(checkoutReference))
git_branch_upstream(&trackingBranch, checkoutReference)
git_reference_set_target(&fastForwardedBranch, checkoutReference, git_reference_target(trackingBranch), NULL)
refs/tags/%@
git_reference_name_to_id(&oid, repo, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_tag_lookup(&gitTag, repo, &oid)
git_checkout_tree(repo, (const git_object *)gitTag, &checkoutOptions)
git_repository_set_head_detached(repo, &oid)
No revision provided.
oidFromRevision(&checkoutOID, location.revision, repo)
git_commit_lookup(&target, repo, &checkoutOID)
git_repository_set_head_detached(repo, &checkoutOID)
%@ (%li)
Reference '
' not found
The path '
' does not exist in the given tree
Cannot locate remote-tracking branch '
Object not found - no matching loose object (
Object not found - no match for id (
Object not found - no match for prefix (
Cannot locate local branch '
the requested type does not match the type in the ODB
Cannot push
invalid url, missing path
Malformed URL '
the given reference name 'refs/heads/
' is not valid
Failed to write reference '
': a reference with that name already exists.
(-16)
after resolving the conflicts, mark
The previous cherry-pick is now empty, possibly due to conflict resolution.
you do not have permission
Repository not found
SSL error: error:140E0114
Failed to resolve address for
HTTP status code: 401
Authentication failed
access denied
Failed to authenticate SSH session
HTTP status code: 403
HTTP status code: 404
HTTP status code: 500
could not resolve host
SSL certificate is invalid
SSL certificate problem
Certificate host name check failed
user cancelled certificate check
user rejected certificate
Early EOF
unsupported URL protocol
Permission to
denied to
cross host redirect not allowed
curl error: Failed to connect to
An unknown error occured.
DVTSourceControlTests_MockConfigFiles
dvtsourcecontrolmock
init.defaultBranch
v8@?0
git_config_find_global(&buffer)
-[DVTSourceControlGitPlugInPrimary(Config) mockedGlobalConfigPath]
.gitconfig
git_repository_item_path(&configBuffer, repository, GIT_REPOSITORY_ITEM_CONFIG)
-[DVTSourceControlGitPlugInPrimary(Config) mockedConfigPathForRepository:]
config
git_config_open_ondisk(&result, mockedConfigPath.UTF8String)
-[DVTSourceControlGitPlugInPrimary(Config) mutableConfigForPath:]
%@: Applying global and local mocked config data
-[DVTSourceControlGitPlugInPrimary(Config) addMockedConfigData:repository:]
git_config_add_file_ondisk(config, mockedGlobalConfigPath.UTF8String, GIT_CONFIG_LEVEL_GLOBAL, NULL, 1)
git_config_add_file_ondisk(config, mockedRepositoryConfigPath.UTF8String, GIT_CONFIG_LEVEL_LOCAL, repository, 1)
ERROR: Failed to override config with mocked data: %d
git_config_open_default(&defaultConfig)
-[DVTSourceControlGitPlugInPrimary(Config) _mutableGlobalConfig]
git_config_open_level(&result, defaultConfig, GIT_CONFIG_LEVEL_GLOBAL)
git_repository_config(&defaultConfig, repository)
-[DVTSourceControlGitPlugInPrimary(Config) _mutableConfigForRepository:]
git_config_open_level(&result, defaultConfig, GIT_CONFIG_LEVEL_LOCAL)
git_config_open_default(&config)
-[DVTSourceControlGitPlugInPrimary(Config) _configWithBlock:]
git_config_snapshot(&snapshotConfig, config)
git_repository_config(&config, repository)
-[DVTSourceControlGitPlugInPrimary(Config) _configForRepository:block:]
user.name
user.email
v16@?0^{git_config=}8
v24@?0@"NSString"8@"NSString"16
--auto
-[DVTSourceControlGitPlugInPrimary allCurrentLocations:completionBlock:]
git_reference_iterator_new(&iter, repo)
v16@?0@"DVTSourceControlListRemoteRepositoriesResultType"8
Failed to parse tag '%s'
Failed to lookup remote '%@' to add remote branch '%@'
revert
--no-edit
-[DVTSourceControlGitPlugInPrimary identifierOfRepositoryForWorkingCopy:completionBlock:]
v24@?0@"NSArray"8@"NSError"16
v16@?0@"DVTSourceControlListBranchesResultType"8
v48@?0@"DVTSourceControlRevision"8@"DVTSourceControlBranch"16@"NSArray"24@"NSArray"32@"NSError"40
ls-remote
--heads
--tags
--symref
^(\S+)[\s](\S+)[\s]{0,1}(\S+){0,1}$
ref:
git_odb_new(&odb)
-[DVTSourceControlGitPlugInPrimary _libgit_headRevisionOfRemoteRepository:showBranches:showTags:completionBlock:]
git_repository_wrap_odb(&gitRepository, odb)
git_remote_create_anonymous(&remote, gitRepository, remoteRepository.gitRemoteURL.absoluteString.UTF8String)
git_remote_connect(remote, GIT_DIRECTION_FETCH, &remoteCallbacks, &proxyOptions, NULL)
git_remote_ls(&heads, &size, remote)
refs/heads/
refs/tags/
-[DVTSourceControlGitPlugInPrimary _discardAllChanges:files:inWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary commitFiles:inWorkingCopy:message:amend:forceNoSigning:completionBlock:]
v16@?0@"DVTSourceControlWorkingCopyStatusResultType"8
git_index_write(index)
core.ignorecase=false
commit
--author
%@ <%@>
--amend
--no-gpg-sign
git_reference_name_to_id(&headOID, repo, "HEAD")
-[DVTSourceControlGitPlugInPrimary commitStagedChangesInWorkingCopy:message:amend:forceNoSigning:completionBlock:]
v16@?0@"DVTSourceControlFileHistoryResultType"8
--parents
-[DVTSourceControlGitPlugInPrimary commitDetails:revisions:progressIdentifier:fetchesCommitSignatures:completionBlock:]
git_oid_fromstrp(&shortOID, revisionHash)
Revision '%p' for local repository '%@' could not be found
-[DVTSourceControlGitPlugInPrimary _logItemForWorkingCopy:revision:logItemCreationBlock:]
git_reference_name_to_id(&shortOID, repo, revisionHash)
v36@?0{git_oid=[20C]}8^{git_repository=}28
Git Repository Creation Failed
.git
git_repository_init_ext(&repo, URL.fileSystemRepresentation, &opts)
-[DVTSourceControlGitPlugInPrimary createRepositoryAtFileURL:completionBlock:]
.DS_Store
UserInterfaceState.xcuserstate
.git/info/exclude
v16@?0@"DVTSourceControlHeadRevisionResultType"8
-[DVTSourceControlGitPlugInPrimary(Stage) _setStageContents:ofFile:inWorkingCopy:completionBlock:]
git_index_add_all(index, &pathsToAdd, GIT_INDEX_ADD_DEFAULT, NULL, NULL)
Added file to index but fetching index entry returned nil.
GIT_ERROR
git_status_file(&file_status, repo, cStringFilePath)
git_index_remove_bypath(index, cStringFilePath)
git_index_add_from_buffer(index, index_entry, [contentsData bytes], [contentsData length])
git_index_add_bypath(index, cStringFilePath)
-[DVTSourceControlGitPlugInPrimary(Stage) setStageContentsFromOriginalVersionOfFile:previousFilePath:inWorkingCopy:completionBlock:]
oidFromHeadOfRepository(&head_id, repo)
GIT_ENOTFOUND
fileContentsAtCommit(repo, &head_id, self, relativePath, &contentsURL, nil)
GIT_EEXISTS
-[DVTSourceControlGitPlugInPrimary(Stage) setStageContentsFromDiskVersionOfAllFilesInWorkingCopy:completionBlock:]
git_index_add_all(index, &paths, GIT_INDEX_ADD_DEFAULT, NULL, NULL)
reset
/SourcePackages/repositories/
-[DVTSourceControlGitPlugInPrimary(Remote) addRemoteRepository:withName:toRepository:completionBlock:]
git_remote_create(&remote, repo, name.UTF8String, [remoteRepository.URL.absoluteString stringByRemovingPercentEncoding].UTF8String)
-[DVTSourceControlGitPlugInPrimary(Remote) removeRemoteRepositoryNamed:fromRepository:completionBlock:]
git_remote_delete(repo, name.UTF8String)
git_commit_lookup(&commit, repo, &revisionOID)
DVTSourceControlLogItem *bareLogItemInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
DVTSourceControlVisualLogItem *visualHistory_bareLogItemAndCommitInWorkingCopy(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, BOOL, git_commit **, NSError *__autoreleasing *, DVTSourceControlHistorySearchType, NSString *__strong)
i28@?0i8^{git_commit=}12^{git_tree=}20
DVTSourceControlLogItem *logItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, BOOL, NSError *__autoreleasing *)
git_commit_tree(&tree, commit)
q24@?0@8@16
DVTSourceControlVisualLogItem *visualLogItemInWorkingCopyWithFilePath(DVTSourceControlWorkingCopy *__strong, git_oid, git_repository *, DVTSourceControlHistorySearchType, NSString *__strong, BOOL, NSError *__autoreleasing *)
BOOL rebaseIterate(git_repository *, git_rebase *, git_signature *, NSError *__autoreleasing *)
git_rebase_commit(&commitOid, rebase, NULL, author, NULL, NULL)
git_rebase_finish(rebase, NULL)
git_rebase_open(&rebase, repo, &rebaseOptions)
-[DVTSourceControlGitPlugInPrimary(Rebase) abortRebaseInRepository:]
git_rebase_abort(rebase)
-[DVTSourceControlGitPlugInPrimary(Rebase) continueRebaseInRepository:error:]
git_annotated_commit_from_ref(&annotatedCommit, repo, rebaseBranch)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseOntoBranchInRepository:rebaseBranch:error:]
git_rebase_init(&rebase, repo, NULL, annotatedCommit, NULL, &rebaseOptions)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseWorkingCopy:ontoBranch:completionBlock:]
git_branch_lookup(&rebaseBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary(Rebase) rebaseStateForWorkingCopy:completionBlock:]
pull.rebase
-[DVTSourceControlGitPlugInPrimary(Rebase) setRebaseState:forWorkingCopy:completionBlock:]
git_repository_config(&config, repo)
git_config_open_level(&levelConfig, config, GIT_CONFIG_LEVEL_LOCAL)
%@-casesensitive-rename
-[DVTSourceControlGitPlugInPrimary(FileManagement) addFiles:inWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(FileManagement) removeFiles:inWorkingCopy:completionBlock:]
git_index_remove_all(index, &pathsToRemove, NULL, NULL)
v16@?0@"DVTSourceControlXPCResultType"8
git_index_remove_all(index, &sourceDirectoriesArray, NULL, NULL)
-[DVTSourceControlGitPlugInPrimary(FileManagement) _performMove:workingCopy:originalFilePath:newFilePath:moveUnversionedFiles:outError:]
git_index_add_all(index, &targetDirectoriesArray, GIT_INDEX_ADD_DEFAULT, NULL, NULL)
git_index_add(index, &new)
git_index_remove(index, originalCStringFilePath, 0)
git_index_add_bypath(index, newCStringFilePath)
-[DVTSourceControlGitPlugInPrimary(FileManagement) moveFiles:toFilePaths:inWorkingCopy:moveUnversionedFiles:completionBlock:]
git_reference_iterator_new(&iterator, repo)
void _allLocationsOfRepo(git_repository *, const git_oid *, DVTSourceControlRevisionLocation *__strong, const git_oid **, NSDictionary<NSString *,NSArray<DVTSourceControlRevisionLocation *> *> *__autoreleasing *, NSArray<DVTSourceControlRevisionLocation *> *__autoreleasing *)
Failed to parse branch '%s'
DVTSourceControlRevisionLocationResultType *currentLocationOfRepository(DVTSourceControlGitPlugInPrimary *__strong, DVTSourceControlRepository *__strong)
Expected branch but received '%s'
DVTSourceControlBranch *resolveBranch(git_repository *, const git_oid *, git_reference *, DVTSourceControlRevision *__strong)
Failed to get ahead/behind counts for branch '%s' using remote '%s'
Expected the remote branch name to have a minimum length of '%lu' characters, but it had '%lu'
-[DVTSourceControlGitPlugInPrimary(Blame) blameFile:inWorkingCopy:fromRevisionLocation:ignoreWhitespace:completionBlock:]
A revision identifier must be supplied.
The revision identifier supplied is nil.
blame
--line-porcelain
^([0-9a-f]{40}) ([0-9]+) ([0-9]+) ?([0-9]*)
author (.*)
author-mail <(.*)>(?:.|
)+?committer-time ([0-9]+)$
0000000000000000000000000000000000000000
Could not load authors for file '%@'
Error: %@
logs/HEAD
-[DVTSourceControlGitPlugInPrimary(Metadata) headFileURLForWorkingCopy:]
The .git/logs/HEAD metadata file failed to parse.
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
([a-f0-9]+)
checkout: moving from (.+) to (.+)
^%@\s+%@.*%@$
-[DVTSourceControlGitPlugInPrimary(Metadata) referenceFromIdentifier:workingCopy:]
git_reference_dwim(&ref, repo, refString)
git_tag_lookup(&tag, repo, ref_oid)
-[DVTSourceControlGitPlugInPrimary(FileLog) _cmdCommitToSingleFileLogItemWithNameStatus:workingCopy:lastFilePath:currentFilePath:headRevision:currentRevisionLocation:didMatchHEAD:]
--format=%H
A file could not be resolved in the working copy.
The file path supplied is not valid (%@).
v24@?0@"DVTSourceControlRevision"8@"NSError"16
v16@?0@"DVTSourceControlRevisionLocationResultType"8
--follow
refs/heads/%@
--topo-order
--format=%@
Couldn't parse entry: %@
-[DVTSourceControlGitPlugInPrimary(FileLog) historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:]_block_invoke
Failed to parse record:
-[DVTSourceControlGitPlugInPrimary(FileLog) historyOfFile:inWorkingCopy:fromRevisionLocation:showMergeCommits:maxLogItems:progressIdentifier:completionBlock:]
Failed to find file known to be renamed '%@'
-[DVTSourceControlGitPlugInPrimary(FileLog) resolvedFilePath:workingCopy:]_block_invoke
Logging renamed file '%@', previously named '%@'
-[DVTSourceControlGitPlugInPrimary(Branch) _upstreamBranchFromRepository:forBranch:completionBlock:]
git_branch_lookup(&gitBranch, repo, [branch.name cStringUsingEncoding:NSUTF8StringEncoding], GIT_BRANCH_LOCAL)
git_branch_upstream(&gitUpstreamBranch, gitBranch)
git_branch_name(&nameChar, gitUpstreamBranch)
v24@?0@"DVTSourceControlBranch"8@"NSError"16
git_branch_iterator_new(&branchIterator, repo, branchTypes)
-[DVTSourceControlGitPlugInPrimary(Branch) _iterateBranchesOfGitRepository:type:iterationBlock:error:]
git_branch_next(&gitBranch, &branchType, branchIterator)
B20@?0^{git_reference=}8i16
-[DVTSourceControlGitPlugInPrimary(Branch) listRemoteBranchesOfRepository:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Branch) parentBranchesOfBranch:inRepository:completionBlock:]
git_branch_lookup(&gitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
-[DVTSourceControlGitPlugInPrimary(Branch) addBranch:from:toRepository:shouldSwitchToNewBranch:completionBlock:]
git_branch_lookup(&ref, repo, startBranch.remoteName?[NSString stringWithFormat:@"%@/%@", startBranch.remoteName, startBranch.name].UTF8String:startBranch.name.UTF8String, GIT_BRANCH_REMOTE)
git_branch_lookup(&ref, repo, startBranch.name.UTF8String, GIT_BRANCH_LOCAL)
git_object_peel((git_object **)&target, (git_object *)gitTag, GIT_OBJ_COMMIT)
git_commit_lookup(&target, repo, &oid)
oidFromRevision(&revisionOID, startLocation.revision, repo)
git_branch_create(&newRef, repo, branch.name.UTF8String, target, 0)
git_repository_set_head(repo, git_reference_name(newRef))
-[DVTSourceControlGitPlugInPrimary(Branch) removeBranch:fromRepository:andRemoteRepository:completionBlock:]
git_remote_lookup(&remote, repo, [branch.remoteName cStringUsingEncoding:NSUTF8StringEncoding])
:refs/heads/%@
-[DVTSourceControlGitPlugInPrimary(Branch) renameBranch:inRepository:toBranchName:checkout:force:completionBlock:]
git_branch_lookup(&oldGitBranch, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_branch_move(&newGitBranch, oldGitBranch, newBranchName.UTF8String, force)
git_repository_head(&originalHead, repo)
Repo locked with libgit operation (%s)
git_repository_set_head(repo, git_reference_name(newGitBranch))
git_repository_set_head(repo, git_reference_name(originalHead))
git_repository_set_head_detached(repo, git_reference_target(originalHead))
-[DVTSourceControlGitPlugInPrimary(Branch) setUpstreamBranchRemoteName:forBranch:repository:completionBlock:]
git_branch_lookup(&branchRef, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_branch_set_upstream(branchRef, [[NSString stringWithFormat:@"%@/%@", remoteName, branch.name] UTF8String])
branch
--contains
-[DVTSourceControlGitPlugInPrimary(Branch) searchBranchesInRepository:query:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Branch) listUnpushedCommitsInBranchWithName:ofWorkingCopy:completionBlock:]
git_branch_lookup(&local_branch, repo, [branchName cStringUsingEncoding:NSUTF8StringEncoding], GIT_BRANCH_LOCAL)
git_branch_upstream(&upstream_branch, local_branch)
git_merge_base(&merge_base_id, repo, local_id, upstream_id)
v32@?0@"NSArray"8q16q24
-[DVTSourceControlGitPlugInPrimary(Log) historyOfWorkingCopy:fromRevision:toRevision:inclusionType:maximumLogItems:searchString:searchType:includeFilePaths:showMergeCommits:progressIdentifier:fetchesCommitSignatures:completionBlock:]
git_revwalk_new(&walk, repo)
git_revwalk_push_head(walk)
oidFromRevision(&startOID, firstRevisionToLog, repo)
git_revwalk_push(walk, &startOID)
%@..%@^1
%@..%@
git_revwalk_push_range(walk, (char *)walk_range)
v16@?0@"NSArray"8
-[DVTSourceControlGitPlugInPrimary(Log) _historyOfWorkingCopy:location:fetchesCommitSignatures:progressBlock:completionBlock:]
Could not locate the given reference '%@'
git_revwalk_push(walk, oidToPush)
Error creating log item from %@, skipping.
git_oid_fromstrp(&identifierOID, identifierString)
-[DVTSourceControlGitPlugInPrimary(Log) visualLogItemWithParentsForIdentifier:ofWorkingCopy:fetchesCommitSignature:completionBlock:]
git_mailmap_from_repository(&mailmap, gitRepository)
git_commit_lookup_prefix(&commit, gitRepository, &identifierOID, identifierLength)
git_commit_parent(&parentCommit, commit, commitParentIdx)
-[DVTSourceControlGitPlugInPrimary(Log) historyOfCommit:includesCommit:inWorkingCopy:completionBlock:]
oidFromRevision(&descendantCommitOID, descendantCommit, gitRepository)
oidFromRevision(&ancestorCommitOID, ancestorCommit, gitRepository)
v16@?0@"NSNotification"8
../../../../../../Developer/usr/bin/
No launch path found for %@ task.
/usr/bin/
color.ui=false
core.pager=
core.quotepath=false
--no-pager
en_US.UTF-8
/nonexistent
LANG
DISPLAY
HOME
GIT_PAGER
SSH_ASKPASS
GIT_ASKPASS
-o FingerprintHash=sha256
-o FingerprintHash=sha1
-o FingerprintHash=md5
/usr/bin/ssh -v -F /dev/null -o UserKnownHostsFile=/dev/null %@ -o IdentitiesOnly=yes
GIT_SSH_COMMAND
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null %@ -o IdentitiesOnly=yes
/usr/bin/ssh -v -l %@ -F /dev/null -o UserKnownHostsFile=/dev/null %@ -o IdentitiesOnly=yes -i %@
SSH_AUTH_SOCK
true
GIT_EDITOR
password
username
accept
Ran out of file descriptors when trying to launch SCM task
malloc: recording
GuardMalloc
merge
--abort
Merge branch
git_annotated_commit_from_ref(&annotatedCommit, repo, mergeBranch)
-[DVTSourceControlGitPlugInPrimary(Merge) mergeInBranchInWorkingCopy:mergeBranch:repository:error:]
git_merge_analysis(&analysis, &preferences, repo, (const git_annotated_commit **)&annotatedCommit, 1)
git_commit_lookup(&target, repo, git_annotated_commit_id(annotatedCommit))
git_reference_set_target(&fastForwardedBranch, currentReference, git_reference_target(mergeBranch), NULL)
git_merge(repo, (const git_annotated_commit **)&annotatedCommit, 1, &mergeOptions, &checkoutOptions)
-[DVTSourceControlGitPlugInPrimary(Merge) diffRepository:fromLocation:againstLocation:completionBlock:]
oidFromLocation(&startOID, startLocation, repo)
oidFromLocation(&endOID, endLocation, repo)
git_commit_lookup(&startCommit, repo, &startOID)
git_commit_lookup(&endCommit, repo, &endOID)
git_commit_tree(&startTree, startCommit)
git_commit_tree(&endTree, endCommit)
git_diff_tree_to_tree(&diff, repo, startTree, endTree, &diffopts)
-[DVTSourceControlGitPlugInPrimary(Merge) mergeBranch:intoWorkingCopy:completionBlock:]
git_branch_lookup(&mergeBranch, repo, branchName, branchType)
-[DVTSourceControlGitPlugInPrimary(Switch) switchLocation:ofWorkingCopy:completionBlock:]
git_branch_lookup(&ref, repo, remoteBranchName.UTF8String, GIT_BRANCH_REMOTE)
git_branch_set_upstream(newRef, remoteBranchName.UTF8String)
git_repository_head(&ref, repo)
git_branch_lookup(&ref, repo, branch.name.UTF8String, GIT_BRANCH_LOCAL)
git_repository_set_head(repo, git_reference_name(ref))
oidFromRevision(&oid, location.revision, repo)
core.precomposeunicode
sha1
sha256
-[NSString(KeyDigestHelpers) extractDigestAndParseKeyType:]
NSString+DVTSourceControlGitPlugInPrimary.m
Unsupported key type %@
-[DVTSourceControlGitPlugInPrimary(Conflict) stateOfWorkingCopy:completionBlock:]
NSError *finishIndexConflict(git_repository *)
-[DVTSourceControlGitPlugInPrimary(Conflict) continueOrFinishConflictOperationInWorkingCopy:completionBlock:]
cherry-pick
NSError *abortIndexConflict(git_repository *)
-[DVTSourceControlGitPlugInPrimary(Conflict) abortConflictOperationInWorkingCopy:completionBlock:]
-[DVTSourceControlGitPlugInPrimary(Conflict) currentConflictRevisionsForWorkingCopy:upstreamRevision:completionBlock:]
oidFromRevision(&upstream, forcedUpstreamRevision, repo)
MERGE_HEAD
ORIG_HEAD
REBASE_HEAD
rebase-merge/current
CHERRY_PICK_HEAD
git_repository_head(&conflictHead, repo)
git_reference_lookup(&conflictHead, repo, conflictRefName)
git_reference_lookup(&originalHead, repo, originalRefName)
git_merge_base(&ancestor, repo, &local, &upstream)
git_commit_lookup(&commit, repo, commitOID)
int fileContentsAtCommit(git_repository *, const git_oid *, DVTSourceControlGitPlugInPrimary *__strong, NSString *__strong, NSURL *__autoreleasing *, NSError *__autoreleasing *)
git_tree_entry_bypath(&treeEntry, tree, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
git_blob_lookup(&blob, repo, git_tree_entry_id(treeEntry))
git_blob_filtered_content(&buffer, blob, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding], true)
git_tree_lookup(&subTree, repo, git_tree_entry_id(treeEntry))
git_tree_walk(subTree, GIT_TREEWALK_PRE, treeCallback, (__bridge void*)treeWriter)
Cannot get a textual representation of this file.
%llX_stage
int fileContentsAsStaged(git_repository *, DVTSourceControlGitPlugInPrimary *__strong, NSString *__strong, NSURL *__autoreleasing *, NSError *__autoreleasing *)
index
git_blob_lookup(&blob, repo, &(indexEntry->id))
git_blob_filtered_content(&buffer, blob, [normalizedRepoPath cStringUsingEncoding:NSUTF8StringEncoding], true)
-[DVTSourceControlGitPlugInPrimary(Export) _unmodifiedContentsOfFile:includingUpstream:inWorkingCopy:completionBlock:]
fileContentsAtCommit(repo, commitOID, self, relativePath, &unmodified, &error)
fileContentsAtCommit(repo, upstreamOID, self, relativePath, &upstream, nil)
git_merge_base(&ancestorOID, repo, commitOID, upstreamOID)
fileContentsAtCommit(repo, &ancestorOID, self, relativePath, &ancestor, nil)
-[DVTSourceControlGitPlugInPrimary(Export) stageContentsOfFile:includingUnmodified:inWorkingCopy:completionBlock:]
stagedGitError
v24@?0@"NSString"8@"DVTSourceControlRevisionLocation"16
v16@?0@"DVTSourceControlExportContentsResultType"8
-[DVTSourceControlGitPlugInPrimary(Export) _exportFile:inWorkingCopy:fromRevisionLocation:error:]
oidAndCommitFromRevision(&commitOID, &commit, revision, repo)
Tree entry unknown.
i24@?0r*8r^{git_tree_entry=}16
git_blob_lookup(&blob, repo, oid)
-[DVTSourceControlGitPlugInPrimary(Export) exportOID:toRelativePath:repo:error:]
-[DVTSourceControlGitPlugInPrimary(Export) exportConflictVersionsOfFile:inWorkingCopy:completionBlock:]
git_index_conflict_get(&ancestor, &our, &their, index, [[relativePath dvtscm_gitNormalizedStringForRepo:repo] cStringUsingEncoding:NSUTF8StringEncoding])
-[DVTSourceControlGitPlugInPrimary(Tag) addTag:toRepository:completionBlock:]
oidFromRevision(&revision_oid, tag.revision, repo)
oidAndCommitFromRevision(&revision_oid, &target_obj, tag.revision, repo)
Tag must have a name
git_tag_create(&created_tag_oid, repo, [tag.name UTF8String], ((git_object *)target_obj), author, utf8message, false)
-[DVTSourceControlGitPlugInPrimary(Tag) pushTag:name:remote:delete:completionBlock:]
git_remote_push(remote, &tag_refspec, &pushOptions)
-[DVTSourceControlGitPlugInPrimary(Tag) removeTag:fromRepository:andRemoteRepository:completionBlock:]
git_tag_delete(repo, [tag.name UTF8String])
-[DVTSourceControlGitPlugInPrimary(Tag) loadCompleteTag:tag:completionBlock:]
git_oid_fromstrp(&oid, revisionHash)
git_tag_lookup(&lookup_tag, repo, &oid)
B16@?0^{git_reference=}8
-[DVTSourceControlGitPlugInPrimary(Tag) searchTagsInRepository:query:completionBlock:]
Reusing existing copy.
--bare
--mirror
clone
--local
--progress
--no-checkout
Unable to reuse existing copy. Falling back to a full clone.
remote
set-url
--branch
-[DVTSourceControlGitPlugInPrimary(Clone) _runGitCloneForRemoteRepository:cloneType:branchName:localURL:standardError:standardOut:feedbackBlock:]
DVTSourceControlGitPlugInPrimary+Clone.m
branchName == nil
GIT_CONFIG_NOSYSTEM
GIT_FLUSH
Checking out: %s
Checking out
v32@?0r*8Q16Q24
v20@?0r*8i16
Receiving objects: %@ done
v16@?0r^{git_indexer_progress=IIIIIIQ}8
git_clone(&gitRepository, gitRemoteURL, clonePath, &cloneOptions)
-[DVTSourceControlGitPlugInPrimary(Clone) _libgit_cloneFromRepository:cloneType:location:useRevision:localAddress:existingAddress:progressIdentifier:completionBlock:]
git_repository_config(&cfg, gitRepository)
remote.origin.mirror
git_config_set_bool(cfg, "remote.origin.mirror", true)
remote.origin.fetch
+refs/*:refs/*
git_config_set_string(cfg, "remote.origin.fetch", "+refs/*:refs/*")
Unable to establish identity of repository.
oidFromRevision(&checkoutOID, location.revision, gitRepository)
git_repository_set_head_detached(gitRepository, &checkoutOID)
git_checkout_head(gitRepository, &checkoutOptions)
git_reference_name_to_id(&oid, gitRepository, [NSString stringWithFormat:@"refs/tags/%@", tag.name].UTF8String)
git_repository_set_head_detached(gitRepository, &oid)
git_repository_open(&gitRepository, fileURL.path.fileSystemRepresentation)
-[DVTSourceControlGitPlugInPrimary(Clone) _libgit_checkoutWorkingCopyLocation:useRevision:localAddress:progressIdentifier:completionBlock:]
Git Clone
v32@?0@"DVTSourceControlWorkingCopy"8@"DVTSourceControlRepository"16@"NSError"24
v24@?0@"DVTSourceControlWorkingCopy"8@"NSError"16
v16@?0@"DVTSourceControlRepositoryResultType"8
((Counting objects:)|(Compressing objects:)|(Receiving objects:)|(Resolving deltas:))[\s]+(([0-9]+)%|([0-9]+,))
Receiving objects:
Compressing objects:
Counting objects:
Resolving deltas:
%@ %li%% done
%@ %li done
v16@?0@"NSString"8
-[DVTSourceControlGitPlugInPrimary(CherryPick) abortCherryPickOperationInWorkingCopy:error:]
-[DVTSourceControlGitPlugInPrimary(CherryPick) continueCherryPickInWorkingCopy:error:]
--continue
-[DVTSourceControlGitPlugInPrimary(CherryPick) cherryPick:revision:parentRevision:completionBlock:]
git_commit_lookup(&headCommit, repo, &headOID)
oidAndCommitFromRevision(&commitOID, &cherryPickCommit, revision, repo)
oidAndCommitFromRevision(&parentOID, &parentCommit, parentRevision, repo)
-[DVTSourceControlGitPlugInPrimary(CherryPick) runCherryPickCommand:repository:revision:mainline:error:]
git_reference_iterator_new(&gitReferenceIterator, repo)
-[DVTSourceControlGitPlugInPrimary(References) iterateReferencesOfGitRepository:skipBlock:iterationBlock:error:]
git_reference_next(&gitReference, gitReferenceIterator)
-[DVTSourceControlGitPlugInPrimary(References) searchReferencesInRepository:query:completionBlock:]
%02X
NSString *fingerprintOfHostKey(git_cert_hostkey *, git_cert_ssh_t)
DVTSourceControlGitRemoteCallbacks.m
Raw key digest not supported
DVTSourceControlGitRemoteCallbackPayload
Upload
Author
Helpers
Status
DVTSourceControlGitCLINormalizedString
Ignore
DVTSourceControlGitPlugInPrimary
Stash
DVTSourceControlCMSSignatureValidationStrategy
DVTSourceControlSignatureValidationStrategy
NSObject
Update
DVTSourceControlError
GitDate
Config
Stage
Remote
Additions
PrivateGit
Rebase
CaseChange
libgit2
FileManagement
Blame
Metadata
FileLog
DVTSourceControlPlugInPrimary
Branch
DVTSourceControlGitTask
DVTSourceControlGitOIDHolder
Merge
Switch
DVTSourceControlPlugInCallbackProtocol
DVTSourceControlPlugInProtocol
DVTSourceControlGitXPCService
GitNormalizedString
GitErrorParsing
GitStashParsing
GitBranchPrefixPruning
KeyDigestHelpers
Conflict
Export
Clone
CherryPick
References
Scanning
@24@0:8@16
v16@0:8
i36@0:8@16i24^^{git_credential}28
i32@0:8@16^^{git_credential}24
i36@0:8@16I24^^{git_credential}28
i28@0:8I16^^{git_credential}20
v24@0:8r*16
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8Q16
@"DVTSourceControlRemoteRepository"
@"DVTSourceControlAuthenticationStrategy"
@"NSError"
@"NSMutableOrderedSet"
v60@0:8@16@24@32B40@44@?52
v32@0:8@16@?24
v40@0:8@16@24@?32
@44@0:8{git_oid=[20C]}16^{git_repository=}36
@32@0:8@16@24
B40@0:8^{git_repository=}16@24@32
v36@0:8@16B24@?28
@28@0:8@16B24
@24@0:8^{git_diff=}16
v48@0:8@16@24@32@?40
@36@0:8^S16Q24B32
S24@0:8Q16
r*16@0:8
@"NSString"
@24@0:8^{git_repository=}16
B24@0:8^{git_repository=}16
v24@0:8^{git_repository=}16
^{git_repository=}16@0:8
v44@0:8@16B24@28@?36
v40@0:8@16q24@?32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"_TtC16DVTSourceControl43DVTSourceControlSignatureVerificationResult"24@0:8@"_TtC16DVTSourceControl31DVTSourceControlCommitSignature"16
v24@0:8@"NSArray"16
@32@0:8^{_CMSDecoder=}16^{__CFArray=}24
@20@0:8i16
@24@0:8^{__CFError=}16
@56@0:8@16@24^{git_repository=}32B40B44^@48
@48@0:8@16^{git_repository=}24B32B36^@40
v52@0:8@16@24B32@36@?44
v56@0:8@16@24@32Q40@?48
@32@0:8q16r^{?=*i}24
@40@0:8q16r^{?=*i}24@32
@24@0:8q16
@32@0:8q16@24
@24@0:8^{git_reference=}16
^{git_config=}24@0:8@16
^{git_config=}16@0:8
^{git_config=}24@0:8^{git_repository=}16
v24@0:8^{git_config=}16
v32@0:8^{git_config=}16^{git_repository=}24
@24@0:8@?16
@32@0:8^{git_repository=}16@?24
v32@0:8^{git_repository=}16@?24
@32@0:8@16^{git_repository=}24
B32@0:8@16^@24
@32@0:8@16^@24
B40@0:8^{git_repository=}16@24^@32
@40@0:8^{git_repository=}16@24^@32
^{git_signature=**{git_time=qic}}32@0:8^{git_repository=}16^@24
v28@0:8@16B24
v52@0:8@16@24@32B40@?44
v40@0:8@16B24B28@?32
v44@0:8B16@20@28@?36
v56@0:8@16@24@32B40B44@?48
v48@0:8@16@24B32B36@?40
@40@0:8@16@24@?32
v44@0:8@16@24B32@?36
v32@0:8@16@24
v48@0:8q16d24@32@40
v40@0:8@16d24@32
@"NSDate"
@"DVTSourceControlGitXPCService"
@60@0:8{git_oid=[20C]}16Q36^{git_repository=}44^@52
B32@0:8^{git_repository=}16^@24
B40@0:8^{git_repository=}16^{git_reference=}24^@32
v40@0:8Q16@24@?32
B40@0:8@16@24^@32
B60@0:8^{git_index=}16@24@32@40B48^@52
v52@0:8@16B24@28@36@?44
@40@0:8@16Q24^@32
v40@0:8@16Q24@?32
@48@0:8@16@24Q32^@40
@32@0:8@16@?24
@72@0:8@16@24@32@40@48@56^B64
v68@0:8@16@24@32B40q44@52@?60
B44@0:8^{git_repository=}16i24@?28^@36
@72@0:8^{git_commit=}16{git_oid=[20C]}24^{git_repository=}44@52^{git_mailmap=}60B68
v56@0:8@16@24@32q40@?48
v100@0:8@16@24@32Q40q48@56Q64B72B76@80B88@?92
v52@0:8@16@24B32@?36@?44
@48@0:8@16@24^q32@?40
v20@0:8B16
i16@0:8
v20@0:8i16
@"NSTask"
@"NSArray"
@"NSData"
@"NSMutableData"
r^{git_oid=[20C]}16@0:8
v24@0:8r^{git_oid=[20C]}16
r^{git_oid=[20C]}
B48@0:8@16^{git_reference=}24^{git_repository=}32^@40
v40@0:8q16@24@32
v40@0:8@16@24@32
v40@0:8q16@"NSDictionary"24@"NSUUID"32
v40@0:8@"NSArray"16@"NSDictionary"24@"NSUUID"32
v32@0:8@"DVTSourceControlAuthenticationStrategy"16@"DVTSourceControlRemoteRepository"24
v72@0:8@16@24B32@36@44@52B60@?64
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"DVTSourceControlXPCResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlAuthorResultType">24
v40@0:8@"DVTSourceControlAuthor"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v52@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32B40@?<v@?@"DVTSourceControlBlameResultType">44
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlListBranchesResultType">24
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlBranchesResultType">32
v52@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRepository"32B40@?<v@?@"DVTSourceControlBranchResultType">44
v48@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v56@0:8@"DVTSourceControlBranch"16@"DVTSourceControlRepository"24@"NSString"32B40B44@?<v@?@"DVTSourceControlBranchResultType">48
v48@0:8@"NSString"16@"DVTSourceControlBranch"24@"DVTSourceControlRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v40@0:8@"DVTSourceControlRevision"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlBranchesResultType">32
v24@0:8@?<v@?@"DVTSourceControlStringResultType">16
v32@0:8@"NSString"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlBranchesResultType">32
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlHistoryResultType">32
v48@0:8@"NSString"16@"NSString"24@"DVTSourceControlWorkingCopy"32@?<v@?@"DVTSourceControlBoolResultType">40
v40@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlRevisionLocationResultType">32
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32@?<v@?@"DVTSourceControlRevisionConflictsResultType">40
v72@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRevisionLocation"24B32@"NSURL"36@"NSURL"44@"NSUUID"52B60@?<v@?@"DVTSourceControlWorkingCopyResultType">64
v52@0:8@"DVTSourceControlRemoteRepository"16@"NSURL"24B32@"NSUUID"36@?<v@?@"DVTSourceControlRepositoryResultType">44
v32@0:8@"NSURL"16@?<v@?@"DVTSourceControlRepositoryResultType">24
v48@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@"NSString"32@?<v@?@"DVTSourceControlRevisionResultType">40
v56@0:8@"NSArray"16@"DVTSourceControlWorkingCopy"24@"NSString"32B40B44@?<v@?@"DVTSourceControlRevisionResultType">48
v48@0:8@"DVTSourceControlWorkingCopy"16@"NSString"24B32B36@?<v@?@"DVTSourceControlLogItemResultType">40
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlBoolResultType">24
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlConflictResultType">32
v48@0:8@"DVTSourceControlRepository"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRevisionLocation"32@?<v@?@"DVTSourceControlLogItemFilesResultType">40
v36@0:8@"DVTSourceControlWorkingCopy"16B24@?<v@?@"DVTSourceControlStringResultType">28
v48@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32@?<v@?@"DVTSourceControlExportResultType">40
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlExportResultType">32
v44@0:8@"NSString"16B24@"DVTSourceControlWorkingCopy"28@?<v@?@"DVTSourceControlExportContentsResultType">36
v44@0:8@"NSString"16B24@"DVTSourceControlWorkingCopy"28@?<v@?@"DVTSourceControlExportStageContentsResultType">36
v48@0:8@"NSString"16@"NSString"24@"DVTSourceControlWorkingCopy"32@?<v@?@"DVTSourceControlXPCResultType">40
v40@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v52@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24B32@"NSUUID"36@?<v@?@"DVTSourceControlStringResultType">44
v48@0:8@"NSArray"16@"NSArray"24@"DVTSourceControlWorkingCopy"32@?<v@?@"DVTSourceControlXPCResultType">40
v52@0:8@"NSArray"16@"NSArray"24@"DVTSourceControlWorkingCopy"32B40@?<v@?@"DVTSourceControlXPCResultType">44
v52@0:8@"NSString"16B24@"NSDictionary"28@"DVTSourceControlWorkingCopy"36@?<v@?@"DVTSourceControlXPCResultType">44
v100@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"DVTSourceControlRevision"32Q40q48@"NSString"56Q64B72B76@"NSUUID"80B88@?<v@?@"DVTSourceControlHistoryResultType">92
v52@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"NSUUID"32B40@?<v@?@"DVTSourceControlVisualHistoryResultType">44
v68@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24@"DVTSourceControlRevisionLocation"32B40q44@"NSUUID"52@?<v@?@"DVTSourceControlFileHistoryResultType">60
v52@0:8@"DVTSourceControlWorkingCopy"16@"NSArray"24@"NSUUID"32B40@?<v@?@"DVTSourceControlHistoryResultType">44
v52@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@"NSString"32B40@?<v@?@"DVTSourceControlCommitDetailsResultType">44
v44@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24B32@?<v@?@"DVTSourceControlLogItemResultType">36
v44@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24B32@?<v@?@"DVTSourceControlVisualLogItemResultType">36
v44@0:8@"NSString"16@"DVTSourceControlWorkingCopy"24B32@?<v@?@"DVTSourceControlVisualLogParentsResultType">36
v48@0:8@"DVTSourceControlRevision"16@"DVTSourceControlRevision"24@"DVTSourceControlWorkingCopy"32@?<v@?B@"NSError">40
v24@0:8@?<v@?@"DVTSourceControlStringsResultType">16
v32@0:8@"NSArray"16@?<v@?@"DVTSourceControlXPCResultType">24
v40@0:8@"DVTSourceControlWorkingCopy"16Q24@?<v@?@"DVTSourceControlRevisionLocationsResultType">32
v40@0:8@"DVTSourceControlBranch"16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlBoolResultType">32
v60@0:8@"DVTSourceControlRemoteRepository"16@"DVTSourceControlRepository"24@"DVTSourceControlBranch"32B40@"NSUUID"44@?<v@?@"DVTSourceControlXPCResultType">52
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@?<v@?@"DVTSourceControlBoolResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRebaseStateResultType">24
v40@0:8Q16@"DVTSourceControlWorkingCopy"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlRevisionLocationsResultType">32
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlListRemoteRepositoriesResultType">24
v40@0:8@"DVTSourceControlRepository"16@"DVTSourceControlBranch"24@?<v@?@"DVTSourceControlBranchResultType">32
v48@0:8@"DVTSourceControlRemoteRepository"16@"NSString"24@"DVTSourceControlRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v40@0:8@"NSString"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevision"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlStashResultType">32
v44@0:8@"DVTSourceControlWorkingCopy"16B24@"NSString"28@?<v@?@"DVTSourceControlStashResultType">36
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlXPCResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlBoolResultType">32
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlStash"24@?<v@?@"DVTSourceControlExportResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlWorkingCopyLocationsResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlRevisionLocationResultType">24
v32@0:8@"DVTSourceControlRepository"16@?<v@?@"DVTSourceControlHeadRevisionResultType">24
v40@0:8@"DVTSourceControlRevisionLocation"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlRevisionResultType">32
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlWorkingCopyStateResultType">24
v36@0:8@"DVTSourceControlWorkingCopy"16B24@?<v@?@"DVTSourceControlWorkingCopyStatusResultType">28
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@"DVTSourceControlBranch"32@?<v@?@"DVTSourceControlFileStatusResultType">40
v40@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlTag"24@?<v@?@"DVTSourceControlTagResultType">32
v40@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@?<v@?@"DVTSourceControlTagResultType">32
v48@0:8@"DVTSourceControlTag"16@"DVTSourceControlRepository"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v32@0:8@"DVTSourceControlRemoteRepository"16@?<v@?@"DVTSourceControlTagsResultType">24
v40@0:8@"DVTSourceControlRepository"16@"NSString"24@?<v@?@"DVTSourceControlTagsResultType">32
v56@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlBranch"24@"DVTSourceControlRemoteRepository"32Q40@?<v@?@"DVTSourceControlBoolResultType">48
v48@0:8@"DVTSourceControlWorkingCopy"16@"DVTSourceControlRevisionLocation"24@"DVTSourceControlRemoteRepository"32@?<v@?@"DVTSourceControlXPCResultType">40
v32@0:8@"NSArray"16@?<v@?@"DVTSourceControlWorkingCopiesResultType">24
v32@0:8@"NSString"16@?<v@?@"DVTSourceControlRepositoryResultType">24
v32@0:8@"DVTSourceControlWorkingCopy"16@?<v@?@"DVTSourceControlStringResultType">24
{_NSRange=QQ}24@0:8@16
@24@0:8^i16
@48@0:8@16@24@32^@40
@?40@0:8@16^{git_repository=}24^@32
@48@0:8r^{git_oid=[20C]}16@24^{git_repository=}32^@40
B56@0:8@16@24Q32@40@48
@72@0:8@16Q24@32@40^@48^@56@?64
v68@0:8@16@24B32@36@44@52@?60
v76@0:8@16Q24@32B40@44@52@60@?68
B56@0:8@16@24@32@40@48
B44@0:8@16@24B32@36
B64@0:8@16Q24@32@40@48@56
i32@0:8@16^@24
@56@0:8@16^{git_repository=}24@32q40^@48
B48@0:8^{git_repository=}16@?24@?32^@40
