@(#)PROGRAM:GPUToolsGraphLayout  PROJECT:GPUToolsServices-1
_St20bad_array_new_length
St9bad_alloc
St9exception
St12out_of_range
St11logic_error
St12length_error
NSt3__117bad_function_callE
St19bad_optional_access
St18bad_variant_access
vector
unordered_map::at: key not found
v32@?0@"NSNumber"8@"NSNumber"16*24
gputools.graph_layout
GraphLayout
CGColor
.cxx_destruct
edgeIDToGraphID
T@"NSDictionary",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
valueWithPoint:
.cxx_construct
JSONObjectWithData:options:error:
graphIDToEdgeID
Tr^v,R,N
systemBlueColor
URLByAppendingPathComponent:
_clusterFootprints
_clusterGraph
_layoutAlg
_layoutAttributes
_token
_vertexFootprints
_visualRepresentation
addObject:
array
assignCoordinatesWithAttributes:cancelToken:
bezierPathWithRoundedRect:xRadius:yRadius:
blackColor
blendedColorWithFraction:ofColor:
blueColor
boldSystemFontOfSize:
bounds
brownColor
clusterFootprints
clusterIDToGraphID
clustersUserIDMap
copyPath
countByEnumeratingWithState:objects:count:
cyanColor
darkGrayColor
dataWithBytes:length:
defaultManager
dictionary
dictionaryWithObjects:forKeys:count:
edgeControlPoints
edgeUserIDMap
elementAtIndex:associatedPoints:
elementCount
enumerateKeysAndObjectsUsingBlock:
graphIDToClusterID
graphIDToVertexID
greenColor
init
initWithClusterGraph:
initWithClusterGraph:layoutAttributes:
initWithString:attributes:
initWithTarget:selector:
initWithURL:
initWithVisualRepresentation:
intValue
layoutAttributes
layoutWithCancelToken:
length
lightGrayColor
magentaColor
makeCluster:
makeCluster:inCluster:
makeEdge:from:to:
makeVertex:
makeVertex:inCluster:
methodForSelector:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKeyedSubscript:
orangeColor
pageAtIndex:
purpleColor
redColor
reserveSpace:forVertex:
secondaryLabelColor
setObject:forKeyedSubscript:
stringValue
stringWithFormat:
temporaryDirectory
token
traverseHierarchyWithVisitor:
unsignedLongLongValue
valueWithRect:
vertexFootprints
vertexIDToGraphID
verticesGraphIDMap
verticesUserIDMap
windowBackgroundColor
writeToURL:
yellowColor
GLLTargetSelectorCancelToken
GLLClusterGraph
GLLLayoutAttributes
BezierPathQuartzUtilities
GLLVisualRepresentation
GLLSugiyamaLayout
GLLClusteredLayout
@32@0:8@16:24
^{CancelToken=^^?}16@0:8
v16@0:8
@16@0:8
{unique_ptr<GLL::CancelToken, std::default_delete<GLL::CancelToken>>="__ptr_"{__compressed_pair<GLL::CancelToken *, std::default_delete<GLL::CancelToken>>="__value_"^{CancelToken}}}
v24@0:8Q16
v32@0:8Q16Q24
Q40@0:8Q16Q24Q32
v24@0:8@?16
r^v16@0:8
{unordered_map<unsigned long long, unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>>={__hash_table<std::__hash_value_type<unsigned long long, unsigned long long>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned long long>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>=Q}{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>=f}}}16@0:8
{ClusterGraph="CurrentVertexID"Q"CurrentEdgeID"Q"_allClusterIDs"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}"_allVertexIDs"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}"_vertices"{vector<std::shared_ptr<GLL::Vertex>, std::allocator<std::shared_ptr<GLL::Vertex>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<GLL::Vertex> *, std::allocator<std::shared_ptr<GLL::Vertex>>>="__value_"^v}}"_edges"{vector<std::shared_ptr<GLL::Edge>, std::allocator<std::shared_ptr<GLL::Edge>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<GLL::Edge> *, std::allocator<std::shared_ptr<GLL::Edge>>>="__value_"^v}}"_nestingTree"{NestingTree="CurrentClusterID"Q"_clusters"{vector<std::shared_ptr<GLL::NestingTree::Node>, std::allocator<std::shared_ptr<GLL::NestingTree::Node>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<GLL::NestingTree::Node> *, std::allocator<std::shared_ptr<GLL::NestingTree::Node>>>="__value_"^v}}"_vertices"{vector<std::shared_ptr<GLL::NestingTree::Node>, std::allocator<std::shared_ptr<GLL::NestingTree::Node>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<GLL::NestingTree::Node> *, std::allocator<std::shared_ptr<GLL::NestingTree::Node>>>="__value_"^v}}"_vertexToNestingNodeID"{unordered_map<unsigned long long, unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, unsigned long long>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned long long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}}}
@"NSMutableDictionary"
v40@0:8{CGSize=dd}16Q32
{LayoutAttributes="_vertexSizeMap"{unordered_map<unsigned long long, CGSize, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, CGSize>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, CGSize>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, CGSize>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, CGSize>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, CGSize>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, CGSize>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, CGSize>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_spaceBetweenRanks"f"_spaceAfterEdge"f}
^{CGPath=}16@0:8
@24@0:8{unique_ptr<GLL::VisualRepresentation, std::default_delete<GLL::VisualRepresentation>>={__compressed_pair<GLL::VisualRepresentation *, std::default_delete<GLL::VisualRepresentation>>=^{VisualRepresentation}}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{unique_ptr<GLL::VisualRepresentation, std::default_delete<GLL::VisualRepresentation>>="__ptr_"{__compressed_pair<GLL::VisualRepresentation *, std::default_delete<GLL::VisualRepresentation>>="__value_"^{VisualRepresentation}}}
@32@0:8@16@24
@"GLLClusterGraph"
@"GLLLayoutAttributes"
@24@0:8@16
c24@0:8@16
{unique_ptr<GLL::ClusteredGraphLayout, std::default_delete<GLL::ClusteredGraphLayout>>="__ptr_"{__compressed_pair<GLL::ClusteredGraphLayout *, std::default_delete<GLL::ClusteredGraphLayout>>="__value_"^{ClusteredGraphLayout}}}
Ranking
InsertBorderingNodes
Coord Assignment
Begin
Ordering
@(#)PROGRAM:GPUToolsGraphLayout  PROJECT:GPUToolsServices-1
?St20bad_array_new_length
St9bad_alloc
St9exception
St12out_of_range
St11logic_error
St12length_error
NSt3__117bad_function_callE
St19bad_optional_access
St18bad_variant_access
vector
unordered_map::at: key not found
v32@?0@"NSNumber"8@"NSNumber"16^B24
gputools.graph_layout
GraphLayout
.cxx_destruct
graphIDToEdgeID
Tr^v,R,N
valueWithPoint:
.cxx_construct
edgeIDToGraphID
T@"NSDictionary",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
_clusterFootprints
_clusterGraph
_layoutAlg
_layoutAttributes
_token
_vertexFootprints
_visualRepresentation
addObject:
array
assignCoordinatesWithAttributes:cancelToken:
bounds
clusterFootprints
clusterIDToGraphID
clustersUserIDMap
copyPath
dictionary
edgeControlPoints
edgeUserIDMap
elementAtIndex:associatedPoints:
elementCount
enumerateKeysAndObjectsUsingBlock:
graphIDToClusterID
graphIDToVertexID
init
initWithClusterGraph:
initWithClusterGraph:layoutAttributes:
initWithTarget:selector:
initWithVisualRepresentation:
layoutAttributes
layoutWithCancelToken:
makeCluster:
makeCluster:inCluster:
makeEdge:from:to:
makeVertex:
makeVertex:inCluster:
methodForSelector:
numberWithUnsignedLongLong:
objectForKeyedSubscript:
reserveSpace:forVertex:
setObject:forKeyedSubscript:
token
traverseHierarchyWithVisitor:
unsignedLongLongValue
valueWithRect:
vertexFootprints
vertexIDToGraphID
verticesGraphIDMap
verticesUserIDMap
GLLTargetSelectorCancelToken
GLLClusterGraph
GLLLayoutAttributes
BezierPathQuartzUtilities
GLLVisualRepresentation
GLLSugiyamaLayout
GLLClusteredLayout
@32@0:8@16:24
^{CancelToken=^^?}16@0:8
v16@0:8
@16@0:8
{unique_ptr<GLL::CancelToken, std::default_delete<GLL::CancelToken>>="__ptr_"{__compressed_pair<GLL::CancelToken *, std::default_delete<GLL::CancelToken>>="__value_"^{CancelToken}}}
v24@0:8Q16
v32@0:8Q16Q24
Q40@0:8Q16Q24Q32
v24@0:8@?16
r^v16@0:8
{unordered_map<unsigned long long, unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>>={__hash_table<std::__hash_value_type<unsigned long long, unsigned long long>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned long long>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>=Q}{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>=f}}}16@0:8
{ClusterGraph="CurrentVertexID"Q"CurrentEdgeID"Q"_allClusterIDs"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}"_allVertexIDs"{vector<unsigned long long, std::allocator<unsigned long long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::allocator<unsigned long long>>="__value_"^Q}}"_vertices"{vector<std::shared_ptr<GLL::Vertex>, std::allocator<std::shared_ptr<GLL::Vertex>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<GLL::Vertex> *, std::allocator<std::shared_ptr<GLL::Vertex>>>="__value_"^v}}"_edges"{vector<std::shared_ptr<GLL::Edge>, std::allocator<std::shared_ptr<GLL::Edge>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<GLL::Edge> *, std::allocator<std::shared_ptr<GLL::Edge>>>="__value_"^v}}"_nestingTree"{NestingTree="CurrentClusterID"Q"_clusters"{vector<std::shared_ptr<GLL::NestingTree::Node>, std::allocator<std::shared_ptr<GLL::NestingTree::Node>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<GLL::NestingTree::Node> *, std::allocator<std::shared_ptr<GLL::NestingTree::Node>>>="__value_"^v}}"_vertices"{vector<std::shared_ptr<GLL::NestingTree::Node>, std::allocator<std::shared_ptr<GLL::NestingTree::Node>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<GLL::NestingTree::Node> *, std::allocator<std::shared_ptr<GLL::NestingTree::Node>>>="__value_"^v}}"_vertexToNestingNodeID"{unordered_map<unsigned long long, unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, unsigned long long>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, unsigned long long>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, unsigned long long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, unsigned long long>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}}}
@"NSMutableDictionary"
v40@0:8{CGSize=dd}16Q32
{LayoutAttributes="_vertexSizeMap"{unordered_map<unsigned long long, CGSize, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, CGSize>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, CGSize>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, CGSize>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, CGSize>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, CGSize>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, CGSize>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, CGSize>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, CGSize>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_spaceBetweenRanks"f"_spaceAfterEdge"f}
^{CGPath=}16@0:8
@24@0:8{unique_ptr<GLL::VisualRepresentation, std::default_delete<GLL::VisualRepresentation>>={__compressed_pair<GLL::VisualRepresentation *, std::default_delete<GLL::VisualRepresentation>>=^{VisualRepresentation}}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{unique_ptr<GLL::VisualRepresentation, std::default_delete<GLL::VisualRepresentation>>="__ptr_"{__compressed_pair<GLL::VisualRepresentation *, std::default_delete<GLL::VisualRepresentation>>="__value_"^{VisualRepresentation}}}
@32@0:8@16@24
@"GLLClusterGraph"
@"GLLLayoutAttributes"
@24@0:8@16
B24@0:8@16
{unique_ptr<GLL::ClusteredGraphLayout, std::default_delete<GLL::ClusteredGraphLayout>>="__ptr_"{__compressed_pair<GLL::ClusteredGraphLayout *, std::default_delete<GLL::ClusteredGraphLayout>>="__value_"^{ClusteredGraphLayout}}}
Ranking
Ordering
InsertBorderingNodes
Coord Assignment
Begin
