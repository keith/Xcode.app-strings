@(#)PROGRAM:GPUDebuggerGLSupport  PROJECT:GPUDebugger-33024
@St9exception
St9bad_alloc
St11logic_error
_St12out_of_range
St12length_error
?NSt3__111regex_errorE
St13runtime_error
St20bad_array_new_length
NSt3__117bad_function_callE
APIItem
.cxx_destruct
T@"NSArray",?,R
T#,R
TI,N,V_objectID
T@"<DYFramebuffer>",R,V_frameBufferObject
_attachmentInfo
T@"<DYRasterizationRateMap>",?,R
_buildBoundResourceFilterItems:
T@"<DYResource>",&,V_depthResourceObject
_currentContext
T@"<DYResource>",?,&
_defaultSampler
T@"<GPUShaderEditDocument>",W,N,Vdocument
_editorDocument
T@"<GPUTraceShaderDataProviderDelegate>",W,N,Vdelegate
_format
T@"DVTStackBacktrace",?,R
_modifiedOrOriginalArchivePath:
T@"DYGLExpert",R,V_expert
_outlineTexture
T@"GPUFramebufferAttachmentInfo",&,N,V_attachmentInfo
_rebuildAnnotations:lineOffset:
T@"GPUGLTraceOutline",&,N,V_outline
_runExperiment:
T@"GPUTraceShaderDataItem",W,N,V_dataItem
_stride
T@"IDEEditorDocument",R,N,V_editorDocument
addChildValues:
T@"IDEIndex",R,N,Vindex
allKeys
T@"NSData",R,N
appName
T@"NSMutableDictionary",R
attachmentsDict
T@"NSMutableDictionary",R,V_colorResourceObjects
captureSessionInfoClassWithAPI:
T@"NSNumber",?,R
compactTextMode
T@"NSString",?,R,C
createProgramCentricTreeForGroupedFindings:investigatorFinding:
T@"NSString",R,C,N
decodedFunction
TI,N,V_elementType
discardAndClose
TI,R,N
enabled
TI,R,N,V_objectType
flipped
TI,R,N,V_textureLayer
fragmentProgram
TQ,N,V_retrievalContextID
getSharegroupID
TQ,R,N
handleUpdatedDictionary:forKey:
Tc,?,R,N,GisInstanced
inferiorSession
Tc,?,R,N,GisValid
initForArchive:
Tc,N,GisInstanced,V_instanced
invalidateModel
Tc,N,V_showAsHex
isValid
Tc,R,N
lowercaseString
Ti,N,V_dataOffset
numberOfComponentsForAttribute:
Ti,N,V_elementCount
numberWithChar:
Ti,N,V_minNumberOfVertices
outline
Ti,N,V_primitiveCount
perLineInfoForProgramInfo:atFunctionIndex:fragShader:totalCost:
Ti,N,V_subcomponentOffset
queryResultView
Ti,V_functionIndex
remarks
URLForResource:withExtension:
removedContexts
_CreateProgramTransformFeedbackVaryings:
rootProcessItem
_actionString:
setChildValues:
_addAnnotation:tooltip:lineRange:severity:percentage:
setNumberStyle:
_addBoundFramebuffersToResourceGroup:
setReplayDeviceBackgroundImage:
_addBoundTexturesToResourceGroup:
setStringValue:
_addBoundVertexArraysToResourceGroup:
sourceDidUpdate
_addContext:
summary
_addContextState:toArray:unitIndex:
version
.cxx_construct
T@"<GPUShaderEditDocument>",W,N
GPUAssemblyFileURL
T@"NSArray",R,N
T@"<DYFramebuffer>",R
T^v,R,N
T@"<DYRasterizationRateMap>",?,&
_buffer
T@"<DYResource>",&
_createSubItemsForResourceItem:
T@"<DYResource>",&,V_stencilResourceObject
_defaultProgram
T@"<DYResource>",R
_defaultUniform
T@"<GPUTraceShaderDataProviderDelegate>",W,N
_expert
T@"DVTStackBacktrace",?,&
_fractionDigits
T@"DYGLBufferObject",&,N,V_buffer
_observerTokens
T@"GPUBufferViewerViewController",&,N,V_bufferViewerViewController
_primitiveCount
T@"GPUGLStateMirror",C
_resourceObject
T@"GPUTraceShaderDataItem",W,N
_startLoadingDisplaySetElement:
T@"IDEEditorDocument",R,N
_uniformBuffers
T@"IDEIndex",R,N
alertMessageKey
T@"NSData",&,N,V_data
T@"NSMutableArray",R,N,V_components
archive
T@"NSMutableDictionary",R,N
bundleForClass:
T@"NSMutableDictionary",R,V_contextNameDict
commit:
T@"NSString",&,N,V_name
contextNameDict
T@"NSString",R,C
dealloc
TI,?,R,N
deleteContexts:
TI,N,V_format
divisor
TI,R,N,V_attachment
fileURL
TI,R,N,V_textureCubemapFace
fragmentInfoLog
TI,R,N,V_textureLevel
functionIndices
TQ,R
guestAppSession
Tc,?,R,N,GisIndexed
indexed
Tc,?,R,N,GisPrimitiveRestartEnabled
infoLog
Tc,N,GisIndexed,V_indexed
initWithBuffer:
Tc,N,GisPrimitiveRestartEnabled,V_primitiveRestartEnabled
isProxy
Tc,R
itemDescription
Ti,?,R,N
manager
Ti,N,V_divisor
numberWithBool:
Ti,N,V_maxNumberOfVertices
numberWithLong:
Ti,N,V_objectType
outlineItemUUID
Ti,N,V_stride
pointer
Ti,R,N
release
T{?=QQQ},R,N
removeObserver:
UTF8String
resourceManager
_EnumerateUniformBlockReferencingShaderBits:
_activeUniformBlocks
setElementType:
_addBoundBuffersToResourceGroup:
setOutlineItem:
_addBoundProgramToResourceGroup:
setStateMirror:
_addBoundTransformFeedbackObjectToResourceGroup:
setWithObjects:
_addBuffersToResourceGroup:
specificSection
_addContextState:toArray:
updateReportWithTargetFrameRate
_addEnumState:toArray:
_addExtensions:forContext:
_addFunction:
_addObjectToParent:objectID:objectInternalID:target:attachment:indexType:context:prefix:annotations:
_addProgramForDisplayableItem:
_addProgramsToResourceGroup:
_addRenderbuffersToResourceGroup:
_addShadersToResourceGroup:
_addStateValue:withName:toArray:
_addTextureObject:toParent:textureObjectID:layerIndex:attachment:context:prefix:
_addTexturesToResourceGroup:
_addTransformFeedbackObjectsToResourceGroup:
_addVariableNodeFromDataValue:type:recipientArray:
_addVertexArraysToResourceGroup:
_analyzerVisitor
_annotateAndProcessBinding:withBlock:prefix:
_annotateBufferBinding:
_annotateRenderbufferBinding:
_annotateResourceBinding:
_annotateTextureBinding:
_appendProfilerResultToInfoLog:programItem:
_attachment
_attributes
_bIsMultiAPI
_bIsMultiContextOrThread
_beginAnalysis
_beginEditor
_beginExperiment
_blendFactorString:
_bufferViewerViewController
_buildInfoLogWithDictionary:
_captureSessionInfo
_captureStream
_captureStreamIter
_changedShaderSourceDocument
_checkForDeviceDifferences
_classifyMatrix:
_clearInvestigatorRunningBackgroundImage
_colorResourceObjects
_comparisonStateMirror
_components
_configureInvestigatorWithCaseConfigData:
_connectElementResourceToDisplaySet:resourceObject:
_connectWireframeTextureToDisplaySet:
_connectedDisplaySetElementResource:
_context
_contextGroupList
_contextGroupListDict
_contextInfo
_contextNameDict
_convertEnumString:
_createGPUTraceResourceItemWithParent:object:objectID:labelTarget:context:prefix:suffix:type:
_createGPUTraceResourceItemWithParent:object:objectID:labelTarget:context:prefix:type:
_createProgramHeader:
_createProgramInfoDict:
_createResourceCentricTreeForGroupedFindings:investigatorFinding:
_createShaderResourcesForProgramItem:forProgram:
_createSourceCodeAndURL
_cullString:
_currentContextInfoFromOutlineItem:
_currentDisplayFunctionIndex
_currentExperimentInBlock
_currentFrameIndex
_currentFunctionIndex
_currentMarkerDepth
_currentPhaseInBlock
_currentPhaseWeight
_currentQueue
_currentThread
_currentWeightCounter
_data
_dataAvailable
_dataItem
_dataOffset
_defaultAttachment
_defaultBuffer
_defaultCtx
_defaultFramebuffer
_defaultPipeline
_defaultQuery
_defaultRenderbuffer
_defaultShader
_defaultSync
_defaultTex
_defaultTexLayer
_defaultTransformFeedback
_defaultUniformBlock
_defaultVAO
_depthResourceObject
_derivedStateMirrorFromStateMirror:forFunctionIndex:fromFunctionIndex:
_displaySetLoadIsComplete:
_divisor
_drawCallFootprintIsAvailable
_elementAttribute
_elementCount
_elementType
_endExperiment
_experimentPlaybackEnded
_experimentsArray
_expertCase
_frameBufferObject
_funcString:
_funcWordString:
_functionIndex
_generateActiveAttribContent:location:
_generateBufferContent:bufferID:usingContext:
_generateFrameStatsContent:
_generateFramebufferAttachmentContent:usingAttachment:usingContext:
_generateFramebufferContent:framebufferID:usingContext:
_generateProgramContent:programID:usingContext:withPrefix:
_generateProgramPerformanceContent:separable:usingContext:
_generateProgramPipelineContent:pipelineID:usingContext:
_generateQueryContent:queryID:usingContext:
_generateRenderbufferContent:renderbufferID:usingContext:
_generateSamplerContent:samplerID:usingContext:
_generateShaderContent:usingContext:
_generateSyncContent:usingContext:
_generateTextureContent:textureID:usingContext:
_generateTextureLayerContent:target:level:layer:createSubgroup:usingContext:
_generateTextureUnitContent:usingContext:
_generateTransformFeedbackContent:transformFeedbackID:usingContext:
_generateUniformBlockContent:index:comparisonUniformBlock:functionalityLevel:isProgramUsedInDraw:
_generateVAOArrayContent:vaoID:usingContext:usingVAOArrayListIndex:usingIndex:
_generateVAOContent:vaoID:usingContext:
_getAnnotatedTextureName:usingContext:
_getCondensedActiveSummaryFromContext:
_getCondensedAlphaTestSummaryFromContext:
_getCondensedBlendResultForChannel:isAlphaChannel:
_getCondensedBlendSummaryFromContext:
_getCondensedClipDistanceSummaryFromContext:
_getCondensedClipPlaneSummaryFromContext:
_getCondensedColorSummaryFromContext:
_getCondensedCullingSummaryFromContext:
_getCondensedDepthSummaryFromContext:
_getCondensedErrorStatusSummaryFromContext:
_getCondensedFixedCurrentVertexSummaryFromContext:
_getCondensedFogSummaryFromContext:
_getCondensedLightModelSummaryFromContext:
_getCondensedLightSummaryFromContext:
_getCondensedMaterialSummaryFromContext:
_getCondensedMatrixSummaryFromContext:
_getCondensedMultisamplingSummaryFromContext:
_getCondensedPerClipPlaneSummaryFromContext:index:
_getCondensedPerLightSummaryFromContext:index:
_getCondensedPerUnitTexEnvSummaryFromContext:unitIndex:
_getCondensedPointParamsSummaryFromContext:
_getCondensedPolygonOffsetSummaryFromContext:
_getCondensedScissorSummaryFromContext:
_getCondensedStateGroupSummary:fromContext:
_getCondensedStencilSummaryForSide:
_getCondensedStencilSummaryFromContext:
_getCondensedTexEnvChannelSummary:channelSetup:isRGBA:
_getCondensedTexEnvSummaryFromContext:
_getCondensedViewportSummaryFromContext:
_getStateElement:usingIndex:forStateGroup:usingContext:returningString:
_getTargetFrameRateFromDisplayLinkInfo:
_getTexEnvSrcString:operand:isRGBA:
_handleExtendedDrawCommand:
_handlePopGroupMarker:
_handlePresentRenderbuffer:
_handlePushGroupMarker:
_identifierForObject:context:target:prefix:suffix:
_indexed
_inferiorSessionUpdatedResourcesDictObserver
_infoLog
_instanced
_investigatorReadyObserver
_isAssembly
_isDefaultObjectInUse:
_isDisassemblerAvailable
_isHigginsEnabled
_launchSession
_logAtLogLevel:withFormat:
_makeAnnotationsWithInfoLog:
_manager
_mapFindingToViewNeedingMCS
_maxNumberOfVertices
_minNumberOfVertices
_modifiedCaptureArchive
_modifiedOrOriginalArchivePath
_mutableAnnotations
_name
_numberOfExperimentsInBlock
_numberOfPhasesInBlock
_objectID
_objectType
_onDisassemblyUpdated
_onProgramInfoDictUpdated
_onShaderEditContinueResourcesUpdated
_openFilenames:archive:filesArray:
_outline
_overviewSampleArray
_overviewSamplesObserver
_passCompletedExperiments
_performPostShaderEditContinueActions
_primitiveRestartEnabled
_processFramebufferAttachmentsWithBlock:fromFramebufferBinding:withPrefix:
_programInfoDict
_programObject
_renderedImage:showDepth:
_reportEditor
_resourceTypeToViewMaptable
_retrievalContextID
_runInvestigator
_sendInvestigatorRunningBackgroundImage
_sentExperimentBackgroundImage
_shaderDisassembly
_shaderItem
_sharedByteFormatter
_showAsHex
_solidTexture
_sourceCode
_sourceHeader
_sourceURL
_spResMgr
_startLoadingDisplaySet
_startLoadingWireframeTexture
_stateMirror
_stateMirrorLock
_statemirror
_stencilFuncString:
_stencilResourceObject
_streamArchiveWithPath:notifyOnQueue:handler:
_stringFromEnum:showFalseAsNone:
_subcomponentOffset
_textureCubemapFace
_textureLayer
_textureLevel
_totalPhaseWeight
_unarchiveReports
_updateFilteredListForAllObjects
_updateFilteredListForAuto
_updateFilteredListForBoundObjects
_updateFilteredListForContext
_updateFilteredListForContextInfo
_updateProgram
_updateProgramInfoDict
_updateStateNameAndValue:forBindPoint:
_updateUniformBlockValuesWithBuffer:
_updateUniformValueAtIndex:parentValue:buffer:offset:
_valueStringForBufferEnum:buffer:
_wireframeTexture
abort
acceptCaptureVisitor:
addAnalyzerFindings:toSection:forFinding:areRedFlags:
addAutoCancelledObject:
addAutoInvalidatedObject:
addBufferContent:forBinding:fromContext:toArray:
addBufferContent:forTarget:fromContext:toArray:
addBufferContent:fromContext:toArray:
addChildValue:
addChildViewController:
addDetailsToSection:forRecommendationSection:fromFinding:
addDisplayLinks:
addDisplayableItem:
addEntriesFromDictionary:
addFindingToReport:
addFrameStatsContent:toArray:
addFramebufferContent:forBinding:fromContext:toArray:
addFramebufferContent:fromContext:toArray:
addMinAvgMaxPerItemToList:withTitle:timingTimeMin:timingTimeMax:timingTimeAverage:andCount:andDYPStateCreationBlock:
addMinAvgMaxToList:withTitle:timingTimeMin:timingTimeMax:timingTimeAverage:timingPercentageMin:timingPercentageMax:timingPercentageAverage:andDYPStateCreationBlock:
addNewDisplayableItem:
addObject:
addObjectContent:forType:fromContext:toArray:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addOriginalResource:container:
addPipelinePerformanceContent:fromContext:toArray:
addProgramContent:fromContext:toArray:
addProgramPerformanceContent:fromContext:toArray:
addProgramPipelineContent:fromContext:toArray:
addQueryContent:fromContext:toArray:
addRedFlagsToReport:withLevel:
addRenderbufferContent:fromContext:toArray:
addSamplerContent:fromContext:toArray:
addScopeChoice:tag:
addShaderContent:fromContext:toArray:
addSubview:
addSyncContent:fromContext:toArray:
addTextureContent:fromContext:toArray:
addTextureUnitContent:fromContext:toArray:
addTopSectionTreeNodeForObject:first:
addTraceProfileData:
addTransformFeedbackContent:fromContext:toArray:
addTreeNodeForObject:withChildren:toParent:
addTreeNodeForObject:withChildren:toParent:asFirstChild:
addUpdatedResource:container:
addVAOContent:fromContext:toArray:
additionalData
additionalFindings
additionalShaderBinaryKeys
alertInfoKey
allAPIItems
allDiassemblyInfoForShaderBinaryKey:baseData:
allDiassemblyInfoForShaderType:baseData:
allDisplayableItems
allMarkerItems
allPrograms
allTraceItems
allocateAndReadDataForFilenameBuffer:outSize:error:
analyzeStoredCaptureArchive
analyzerFindings
annotationDidUpdate
apiCallCount
apiItemForTrueFunctionIndex:
apiItemForTrueFunctionIndex:subCommandIndex:
apiItemFromDisplayIndex:
apiItemFromFunctionIndex:
appArguments
appFrameRate
appendFormat:
appendString:
applyInputContentRegion:
applyModifiersToArchive:modifiers:
archiveData:withKey:replaceData:error:
archiveReports
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayBuffer
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
assertionBehaviorAfterEndOfEventForSelector:
assertionBehaviorForKeyValueObservationsAtEndOfEvent
assetBundle
associatedDisplayableItem
attachment
attachmentForAttachmentID:
attachmentInfo
attachments
attribDivisor:
attributeCount
attributeFormat:forComponent:
attributeName:
attributeName:forComponent:
attributeType
attributes
autorelease
baselineTotalFrameTime
beginAnalysis
beginPhase:
beginPhaseBlockWithNumPhases:andTotalWeight:
bitCounts
blockBinding
boolForKey:
boolResult
boolValue
bounds
bubbleUpChangeStatusHighlighting:
buffer
bufferBindings
bufferLength
bufferObjectFromBufferID:
bufferViewerViewController
bytes
cStringUsingEncoding:
cachingCost
callstackForShaderType:
cancel
cancelAnalysis
captureArchive
captureArchiveForURL:
captureArchivePath
captureArchiveURL
captureDeviceInfo
captureGPUTraceFromBreakpoint:
captureSessionInfo
captureSessionInfoWithCaptureStore:
characterSetWithCharactersInString:
childNodes
childValues
children
class
clientDataOffset
clientDataURL
code
colorResourceObjects
compare:
compareName:
comparisonMode
complete
components
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
configData
conformsToProtocol:
constructTraceLineWithFunction:arguments:
constructTraceLinesWithFunction:arguments:
containerID
contextInfoForContext:
contextStateMirror
contextsInfo
controller
copy
copyAdjunctDataForFilename:error:
copyMutableData:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countForTypeAlias:
createArchiveInTemporaryDirectoryWithName:deleteOnClose:error:
createArgument:forFunction:withValue:
createFullObjectWithFunctionStream:dataResolver:
createInvestigatorReportProvider:
createModelFactory
createProgramPerformanceReportProvider:
createRenderJobsForDisplaySetWithRenderTargetArrayIndex:
createReportWithCompletionBlock:
creationBacktrace
currentDisplayableFrameBuffer
currentFunctionIndex
currentMainEditorItem
currentProgramBinding
currentProgramPipelineBinding
currentTime
currentTotalFrameTime
currentTraceSession
customSamplePositions
data
dataAtIndex:
dataItem
dataOffset
dataType
dataWithBytesNoCopy:length:freeWhenDone:
dataWithContentsOfURL:options:error:
date
debugDescription
debugLabel
debuggerController
defaultCenter
defaultManager
delegate
depth
depthResourceObject
description
determineTextureUnitLimitsForRendererAtIndex:limits:
deviceInfo
dictionary
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didChangeValueForKey:
displayElementName
displayIndex
displaySet
displayableCallCount
displayableCallIndex
document
domain
doubleValue
drawCallInfoIndices
drawCallInfoList
drawCallInfoWithFunctionIndex:
drawableObjectForDrawableID:
dumpInstructions
dvt_newObserverForKeyPath:options:owner:withHandlerBlock:
dvt_newObserverForKeyPath:options:withHandlerBlock:
editable:
editorDocument
elementArrayBuffer
elementCount
elementIDs
elementIndex:
elementType
enableGPUFrameCaptureMode
enableSingleFrameMode
encodeWithCoder:
endPhase:
endPhaseBlock
engine
enumerateBufferTargets:
enumerateFramebufferAttachments:
enumerateFramebufferDrawBuffers:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateTextureTargets:
error
errorWithDomain:code:userInfo:
establishResource:
establishResource:forProgramChildren:containerID:
evidence
expert
extensions
externalSourceData
extractCandidateLayoutsForElementArrayBufferWithItem:dataStructs:dataBuffer:preferredDataStruct:bufferType:
extractCandidateLayoutsForUniformBufferWithItem:dataStructs:dataBuffer:preferredDataStruct:bufferType:
extractUniformBlockDataLayout:dataStructs:bufferOffset:
fileExistsAtPath:
fileURLWithPath:
filteredArrayUsingPredicate:
findingDescription
findingPool
findingStatisticsKeyToResourceTypeMap
findings
firstValidTextureImage
floatValue
format
formatPerfDescription:timingPercentageAverage:timingBaseTimeAverage:resultsUpdated:
formattedAttributeData:forComponent:forIndex:
formattedDataAtIndex:
formattedDataAtIndex:packedComponentIdx:
fragmentCount
fragmentCountPercentage
fragmentShaderInfo
fragmentSource
fragmentTiming
frameBufferObject
functionEnum
functionIndex
functionStreamModifiers
future
futureWithResult:error:
generalSection
generateAllResourcesGroupForAPIItem:boundOnly:
generateArrayVariable:ForArgument:
generateLabel
generateModelIncludingUnusedResources:error:
generateProgramGroup:isPipeline:withParent:
generateProgramPerformanceTree
getAttributes
getBindPointForResourceItem:
getCastForArgument:inFunction:
getDeviceOrientation
getDisplayLinkInfo
getElementAttribute
getGenericFormatForGLFormat:type:format:
getMarker:markerText:
getMarkerStackDepth
getParameter:ofTexture:
getParameterAsGLuint4:ofTexture:
glTypeToStructTypeOutputFormatTypeAlias:
globalStateManager
glslVersion
gpuNameForAPIItem:
gpuVendorForAPIItem:
gtShaderProfilerResult
handleAppSessionTransportMessage:
handleCaptureSessionFinalization:
handleDocumentChanged:shaderItem:
handleFindingsOnQueue:handler:
handleNotification:
hasBeenLinked
hasPrefix:
hasResourceStreamer
hasStateMirror
hash
height
hexStringWithLength:
iconNameForNodeType:
identifier
image
imageForNode:
imageIconNamed:ofSize:
imageToExportToFile
imageToUseInDefaultQuickLookForNode:
imagesFromProperties:
index
infoDictForProgram:container:
init
initBuffer:context:target:offset:size:internalID:
initNSUnarchiverClassTranslationMappings
initProgramWithController:parent:programID:isPipeline:stateMirrorObject:containerID:sharegroupID:identifier:
initRenderbuffer:context:internalID:
initShaderWithParent:shaderType:infoLog:identifier:sharegroupID:
initTexture:context:target:internalID:
initUpdateWithType:objectID:containerID:changes:
initWithAdaptors:preferredAdaptor:apiItem:typeNameProvider:
initWithAppleInternalContextFilter
initWithArchive:fileSuffix:copyDataFiles:
initWithAttachmentEnum:stateMirror:
initWithBlockBinding:
initWithBuffer:apiItem:typeNameProvider:
initWithCapacity:
initWithCaptureDeviceInfo:appName:appArguments:analyzerFindings:
initWithCaptureStore:
initWithCaptureStore:resourceStreamer:
initWithCaptureStore:resourceStreamer:deviceInfo:platformSDK:
initWithCoder:
initWithConfigData:withPlaybackDeviceInfo:
initWithContext:program:shaderType:source:
initWithContextStateMirror:andContextInfo:
initWithController:parent:
initWithController:parent:functionIndex:displayIndex:
initWithController:parent:functionIndex:displayIndex:displayableType:
initWithController:parent:identifier:groupType:functionIndex:descText:
initWithController:parent:objectID:stateMirrorObject:containerID:sharegroupID:identifier:type:
initWithController:variablesViewContentProviderClass:pluginFactory:
initWithDataItem:
initWithDataValue:type:
initWithDebuggerController:
initWithDelegate:withCase:withAnalyzerEngine:
initWithFBO:
initWithFilterStrings:andType:andSource:
initWithGuestApp:device:deferLaunch:
initWithIdentifier:andWorkspaceUIState:
initWithInvestigatorCaseConfigData:controller:
initWithItem:resource:overlayResources:modelFactory:textureImageGroupComponent:
initWithLinkedSource:shaderType:context:
initWithLocation:objectType:objectID:internalID:textureLevel:textureLayer:cubemapFace:
initWithName:dataStruct:dataBuffers:combinedView:geometryParams:markers:
initWithProperties:
initWithQueue:block:
initWithReportEditor:
initWithRepresentedObject:
initWithResource:
initWithResource:level:layer:textureImageGroupComponent:
initWithResource:modelFactory:attachment:overlayResources:attachmentInfo:
initWithResource:overlayResources:modelFactory:textureImageGroupComponent:
initWithText:badgeType:
initWithUniformType:offset:matrixStride:isRowMajor:
initialize
initiateReplaySession:
installNewRootFromChildrenOnceExpandedChildrenAreLoaded:
instanced
instantiateControllerWithIdentifier:
intValue
integerValue
internalFormat
internalID
invalidOverrides
invalidate
invalidateDeviceCache
invalidateWithReason:
invalidationBacktrace
investigationProgress
investigatorCase
investigatorConfigForDeviceInfo:
investigatorFinding
investigatorReportResourceWithResourceType:objectID:analyzerFinding:investigatorFinding:
irSourceForFile:shaderType:
irSourceForShaderType:
isActive
isAttachmentWritable:
isClosed
isDepthDisplayElement
isDeviceBusy
isDisassemblerAvailable
isEqual:
isEqualToString:
isFragmentShaderMostExpensive
isFramebufferAttachment:
isGroupMarkerCall
isIndexed
isInstanced
isInvestigatorReady
isKindOfClass:
isLegacyDevice
isMemberOfClass:
isPipeline
isPresentFrameEnabled
isPrimitiveRestartEnabled
isResourceItemBoundAt:resourceItem:
isRowMajor
isRuntimeOSAppleInternal
isSimulatorDevice
isStatic
isStencilDisplayElement
isTopLevelNode
isViewLoaded
itemForUUID:
kase
keyForResourceWithID:type:containerID:
keyWithSharegroupID:
kind
label
labelForBufferTarget:bufferName:apiLabel:
labelForImageResource:
labelForObject:context:target:
labelForQueueID:
labelForThreadID:
languageIdentifier
lastDisplayableItem
lastObject
launchParameters
launchSession
layerIndex
length
limits
lineNumber
linked
loadCaptureStoreData:
loadClientDataBufferFromArchive:offset:functionIndex:
loadDeviceResource:sharegroup:functionIndex:
loadOutlineImageWithContainerID:functionIndex:
loadOutlineImageWithContainerID:functionIndex:subCommandIndex:
loadResourceItem:subCommandIndex:resolution:options:
loadResourceItem:withResolution:
loadResourceItem:withResolution:subCommandIndex:
loadResourceItem:withStateMirror:
loadResourceItem:withStateMirror:options:
loadResourceWithPixel:pixelFormat:
loadResourceWithType:containerID:stateMirrorObject:functionIndex:
loadSolidImageWithContainerID:functionIndex:
loadSolidImageWithContainerID:functionIndex:subCommandIndex:
loadStringForURL:variableName:bufferType:
loadTextureImageBackingStore:creationClass:
loadTexturesWithDescriptors:
loadThumbnailBatchWithContainerID:resourceInfo:
loadThumbnailImageWithResourceInfo:
loadView
loadWireframeImageWithContainerID:functionIndex:
loadWireframeImageWithContainerID:functionIndex:subCommandIndex:
localizedStringForKey:value:table:
localizedStringWithKey:andComment:
locateDisplayableItemToDraw:
location
logAspect
logAspectWithName:
longLongValue
longValue
magFilter
mainBundle
mainDrawableID
mapTableWithKeyOptions:valueOptions:
matrixStride
maxLengthStringForFormat:
maxNumExperiments
maxNumberOfVertices
messageHandler
minFilter
minNumberOfVertices
mipmapLevel
modelFactory
modelFuture
modifiedCaptureArchive
mutableChildNodes
mutableCopy
mutableCopyWithZone:
name
nameForType:rows:components:decorative:
nameForVariable:
navigableItem_name
newDataProviderForShaderDataItem:
newGuestAppSessionWithGuestApp:device:deferLaunch:error:
newShaderProfilerWithDelegate:
newSourceWithQueue:
node
notifyOnQueue:handler:
notifyUnusedResourcesStreamAvailable
numElements
numSamples
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectID
objectPayload
objectType
offset
onShaderEditContinueBegin
onShaderEditContinueEndWithCompleted:
openFileWithFilename:error:
openGLAPI
outlineItem
outlineSupportsShaderProfiling
outlineTexture
overviewSamplePeriod
overviewSamplesAreReady
parent
path
perLineSourceInfoDictForShaderBinary:baseData:
perLineSourceInfoDictForShaderType:baseData:
performPreCaptureVisitActions
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performUpdateWithResource:
playWithExperiments:
playbackDeviceInfo
plistPayload
populateObjectFromResource:
postNotificationName:object:userInfo:
preamble
predicateWithBlock:
prepareCaptureArchive:withDestinationName:
presentError:
previousDisplayableItem
primitiveCount
primitiveInvalidate
primitiveRestartEnabled
processAllBoundObjectsForFunction:withBlock:
processAllObjectsOfType:withBlock:
processBoundBuffersForFunction:withBlock:
processBoundFramebuffersWithBlock:
processBoundProgramWithBlock:
processBoundTexturesWithBlock:
processBoundTransformFeedbackObjectWithBlock:
processBoundVertexArraysWithBlock:
processFunction:functionIndex:
productType
profilingFlags
profilingSendPeriod
programInfoWithId:
programItem
programObjectFromProgramItem:shaderType:
programPerformanceTotalItem
programPipelineInfoWithId:
properties
provideScopeChoices:
purgeResources
queueTraceSessionEstablishedJobWithId:queue:handler:
rasterSampleCount
rasterizationRateMap
readGLTransformFeedbackVaryings:containerStruct:dataBuffers:
readGLVertexAttribute:containerStruct:dataBuffers:
readGLVertexAttributes:containerStruct:dataBuffers:
realFunctionIndexForIndex:
recommendation
recordError:
recordShaderEdit:
redFlagAnalyzerFindings
refreshShaderAnnotations
registerDefaults:
releaseEditorDocument:
relinquishAutomatedDebugState
removeAllObjects
removeItemAtURL:error:
removeLastObject
removeObject:
renderBufferObjectFromInternalID:
renderJobClass
renderer
renderers
renderingAttributes
replaceChildValueAtIndex:withValue:
replaceDataOfFile:withData:error:
replayController
replaySession
replayToFunctionIndex:withFutureResult:
replayWithExperiment:baseCaptureArchivePath:playbackMessageHandler:
reportBufferViewerTypeUsage:
reportData
reportDataSetObject:forKey:
reportExperimentResults:
reportFatalError:
reportItem
reportResults
representedObject
requestAutomatedDebugState:
requestProfilerData
requestWorkspaceIndex
resetDebuggerTraceSession
resetEmbeddedReplaySession
resetReportEditorStateThatDependsOnTheInvestigatorCase
resetResourceManagerWithResourceStreamer:
resolution
resource
resourceInfoForResource:
resourceInfoForResource:level:layer:
resourceItemOfType:resourceID:forFunctionIndex:
resourceObject
resourceObjectWithCompletionHandler:
resourceType
respondsToSelector:
result
resume
retain
retainCount
retrievalContextID
retrieveArchivedDataForKey:error:
rewriteArgument:
rewriteReceiver:
rewriteURL:
rewriteVariable:receiver:
runShaderProfiler:
sampleInfoForShaderType:baseData:
selectedScopeTag
self
separable
setAllowedUnits:
setAllowsNonnumericFormatting:
setAnalyzerFindings:
setApiCallCount:
setAttachmentInfo:
setBaselineTotalFrameTime:
setBuffer:
setBufferViewerViewController:
setCaptureSessionInfo:
setCheckGLErrors:
setCompact:
setConfigData:
setCountStyle:
setCreationBacktrace:
setCurrentAutomaticItem:
setCurrentTotalFrameTime:
setData:
setDataItem:
setDataOffset:
setDecodedFunctionPointer:
setDefaultShaderItem:
setDelegate:
setDepthResourceObject:
setDifference:
setDisplayableCallCount:
setDivisor:
setDocument:
setDrawFunctionIndex:
setElementCount:
setEmitFunctionComments:
setEmitHiddenReceiverArgument:
setEmitTypeSuffixes:
setError:
setExpand:
setExtensions:
setFenumsWithErrors:
setFormat:
setFrame:
setFunctionIndex:
setGenerateBoundResourceFilterItems:
setIdentifier:
setIncludeDriverEventsInTrace:
setIncludesCount:
setIncludesUnit:
setIndexed:
setInfoDictForProgram:dict:container:
setInstanced:
setInvalid:
setInvalidReason:
setInvestigationPhaseDescription:
setInvestigationProgress:
setInvestigatorCase:
setInvestigatorCaseConfigData:
setIsInvestigatorReady:
setItemDescription:
setItemDescriptionHasChanged:
setLabel:
setLastActiveTimestamp:
setLine:
setMaxNumberOfVertices:
setMaximumFractionDigits:
setMaximumFrameTime:
setMessage:
setMessageHandler:
setMinNumberOfVertices:
setMinWarningLevel:
setMinimumFractionDigits:
setModelFactory:
setName:
setNode:
setObject:forIntKey:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectID:
setObjectType:
setOutline:
setOutlineTexture:
setPercentage:
setPercentage:forMonitor:
setPercentage:forMonitor:withMessage:
setPlaybackRunning:
setPrependReceiverArgument:
setPreviousDisplayableItem:
setPrimitiveCount:
setPrimitiveRestartEnabled:
setProfilingFlags:
setProfilingSendPeriod:
setQuickLookData:
setRasterizationRateMap:
setReportItem:
setRepresentedObject:
setResourceManager:
setResult:
setRetrievalContext:
setRetrievalContextID:
setRunning:
setSelectedLayer:
setSelectedMipmapLevel:
setSeverity:
setShadersUpdatable:
setSharedUIStateObj:
setShowAsHex:
setSolidTexture:
setStateValue:withName:withType:withItemDescription:
setStencilResourceObject:
setStride:
setSubcomponentOffset:
setTargetFPS:
setTimestamp:
setTotalCompletedExperiments:
setTotalFramePercent:
setTraceMode:
setType:
setUpdatedResourcesDict:
setUsesGroupingSeparator:
setValue:
setValueHasChanged:
setView:
setWireframeTexture:
setupCaptureSession:
setupCaptureSessionInfoWithArchive:
setupChildrenForAllResourceGroup:resourceType:
setupChildrenForBoundResourceGroup:resourceType:
setupGuestAppSession:
shaderAnalyzerResultForShaderType:baseData:
shaderAnnotations
shaderBinaryCostForFile:shaderType:
shaderBinaryCostForShaderType:
shaderCyclesForShaderType:
shaderItem
shaderPrecisionsFormats
shaderProfilerResults
shaderProfilerResultsBase
shaderProfilerResultsHaveBeenUpdated
shaderReloadProgressDigest
shaderSourceChanged:
shaderSourceForProgramInfo:atFunctionIndex:
shaderTimingForShaderType:
shaderType
shaderTypeForShaderBinaryKey:baseData:
sharedArchiveManager
sharedManager
sharedTrace
sharedUIStateObj
sharegroupID
sharegroupIdentifier
sharegroupResourceDictionaryForSharegroupID:
showAsHex
showResource:
size
solidTexture
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
source
sourceCode
sourcePath
standardUserDefaults
start
stateMirror
stateMirrorForTraceItem:
stateMirrorObject
statistics
stencilResourceObject
storeAdjunctData:filename:error:
storyboardWithName:bundle:
streamDictAtFunctionIndex:
stride
string
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringFromNumber:
stringValue
stringWithCString:encoding:
stringWithCapacity:
stringWithContentsOfFile:encoding:error:
stringWithContentsOfURL:encoding:error:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subcomponentOffset
subeditorClassForResourceItem:
substringFromIndex:
superclass
supportsInvalidationPrevention
supportsInvestigator
supportsSecureCoding
synchronousJobQueue
synopsis
tabUIModeIsADebuggerMode
target
text
textMode
textureCubemapFace
textureImageForMipmapLevel:layer:
textureImageKeyForLevel:layer:
textureLayer
textureLevel
textureObjectFromInternalID:
timing
toolsInfo
totalCompletedExperiments
totalDisplayableCount
totalFrameRateArray
traceFunction:error:
traceMode
traceSession
traceSessionEstablishedWithNewArchive:
tracer
transport
type
typeOutputFormatTypeAliasForGLFormat:numComponents:
typeStringForArgumentType:
uint32Result
unarchiveDictionaryForKey:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
uniformType
unloadStringForURL:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateCurrentLocation:
updateDisplayedFindingsWithMCSInfo:
updateFilteredList
updateInvalidView
updateProgress
updateReportWithAdditionalInfo
updateReportWithCPUAndGPUActiveTimes
updateReportWithCaseData:
updateReportWithRedFlagAnalyzerFindings
updateReportWithResultAndFindingsInfo
updateReportWithSectionForCaseData:
updateReportWithSessionInfo
updateResource:sharegroup:
updateShaders
updatedResourceWithType:objectID:containerID:changes:
updatedResources
updatedResourcesDict
userInfo
usingModifiedArchive
valid
value
valueForKey:
valueForLimit:
variablesView
vendor
vertexCount
vertexCountPercentage
vertexInfoLog
vertexProgram
vertexShaderInfo
vertexSource
vertexTiming
view
viewDidLoad
viewWillLayout
visitCaptureArchive:
visitFunctionStreamFile:
wantsDerivedCounters
warningLevel
weight
weightSegStart
width
willChangeValueForKey:
wireframeTexture
wrapR
wrapS
wrapT
writeToURL:atomically:encoding:error:
zone
isDisassemblerAvailable
-[GPUGLTraceOutline initWithDebuggerController:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLTraceOutline.mm
((archive)) != nil
%@ should not be nil.
(archive)
v32@?0@"GPUTraceProgramGroup"8Q16*24
children
v8@?0
-[GPUGLTraceOutline _openFilenames:archive:filesArray:]
((filename)) != nil
(filename)
-[GPUGLTraceOutline visitFunctionStreamFile:]
((streamData)) != nil
(streamData)
_captureStream == nullptr
-[GPUGLTraceOutline _handlePushGroupMarker:]
function.core.arguments[2].sem_type == Argument::Type::CString
marker parameter is not a string
@"NSSet"8@?0
v24@?0r^{GPUGLBindPoint=IIiiII@}8r*16
Context %lu
Thread %lu
%@ | %@
 - %s
-[GPUGLTraceOutline _derivedStateMirrorFromStateMirror:forFunctionIndex:fromFunctionIndex:]
If we've reached this point, something is very wrong
shareGroups
OpenGL 2.1
OpenGL 3.2 Core Profile
OpenGL ES 1.1
OpenGL ES 2.0
OpenGL ES 3.0
fenum 0x%x: reached end of stream within open association chain
fenum 0x%x: function stream is corrupted
vector
GPUGLVAOEditor
GPUGLVBOEditor
GPUImageSubEditor
GPUQueryEditor
GPUTraceGLSourceSubEditor
DYGLExpertFinding
GPUGLRenderJob
-[GPUGLModelFactory programObjectFromProgramItem:shaderType:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLModelFactory.mm
shaderEnum == 0x8B31 || shaderEnum == 0x8B30
Unexpected shader type
v16@?0@"<DYResource>"8
-[GPUGLModelFactory establishResource:forProgramChildren:containerID:]
false
Unsupported shader type
Name
Format
Width
Height
Number of Samples
Min Filter
Mag Filter
Wrap S
Wrap T
Wrap R
Internal Format
%llu
Depth
GPUDebuggerExpert
OpenGLES
target fps
overviewSamplesAreReady
v32@?0@8@"NSDictionary"16*24
overviewSamples
appFrameRate
inferiorSession.updatedResourcesChangeCount
guestAppSession Settings: %llx, %llu, %u
invalidated
running
v20@?0i8@12
v32@?0@"NSData"8Q16*24
identifier
timestamp
Overview Trace profile data received.
-[GPUGLDebuggerController analyzeStoredCaptureArchive]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLDebuggerController.mm
DYFKReportExtensionsUsed
-[GPUGLDebuggerController analyzeStoredCaptureArchive]_block_invoke
(strongSelf) != nil
strongSelf
v16@?0@"DYAnalyzerFinding"8
-[GPUGLDebuggerController handleCaptureSessionFinalization:]
contextsInfo != nullptr
CaptureBezel_2only_@2x
ipad
~ipad
Background Image sent to replayer
GPU Frame Debugger has encountered a problem while preparing to investigate your bottleneck.
v16@?0@"DYTransportMessage"8
-[GPUGLDebuggerController _runExperiment:]_block_invoke_3
Received nil message from replayer
__objc_no
Called DVTWarn
c24@?0@"DYTransportMessage"8@"NSError"16
expert.case: %@, _expertCase: %@, 
expert.kase.configData: %@, 
_expertCaseConfigData:%@ 
capturedeviceInfo: %@, 
playbackdeviceInfo: %@:
runExpert
v16@?0@"GPUInferiorSession"8
-[GPUGLDebuggerController _beginAnalysis]
GPUExpert analysis requested but replayer is not running or is not ready
-[GPUGLDebuggerController _beginAnalysis]_block_invoke_2
failed to initiate replay session when attempting to analyze
Replay Controller ready to replay experiments.
expert setup: case: %@, 
configData: %@, 
capturedeviceInfo: %@, 
playbackdeviceInfo: %@:
 (updateProgress) curph<%d> numphases<%d> cw<%d> tw<%d> fouter<%f> fupw<%f> fspc<%f> fip<%f> fprog<%f>
 (_beginExperiment) currentExperimentInBlock<%d>
 (_endExperiment) currentExperimentInBlock(preinc)<%d>
 (beginPhaseBlockWithNumPhases) numphases<%d>
 (endPhaseBlock)
Finished Expert!
 (beginPhase) index<%d> desc<%@>
 (endPhase) index<%d> desc<%@>
c24@?0@8@"NSDictionary"16
-[GPUGLDebuggerController reportFatalError:]_block_invoke
expert controller: error received: %@
kGPUGLDebugMenuUpdateShadersNotification
Unknown
Reloading Shaders
Reloading Shaders: Failed
Reloading Shaders: Reloading resources
%@vec%lu
%@mat%lu
%@mat%lux%lu
Invalid
uint8
int8
uint8Normalized
u8Norm
int8Normalized
i8Norm
hex8
bool
uint16
int16
uint16Normalized
u16Norm
int16Normalized
i16Norm
hex16
half
uint32
int32
uint32Normalized
uNorm
int32Normalized
iNorm
hex32
float
uint64
int64
uint64Normalized
u64Norm
int64Normalized
i64Norm
hex64
double
uint10101012
int10101012
float111110
float9995
uint
uint4444
Index Buffer
GPUBufferViewerViewController
GLES: Vertex Buffer Object
GPUBufferViewerAdaptorDataSourceProvider
GPUBufferViewerBasicAdaptor
GLES: Element Array Buffer
Index
Line
Triangle
 (16 bit)
 (32 bit)
 (8 bit)
GLES: Uniform Buffer Object
basic_string
 Total
Program Performance total label
q24@?0@"GPUTraceProgramGroup"8@"GPUTraceProgramGroup"16
v32@?0@8Q16*24
GL_MAX_VERTEX_ATTRIBS
context
objectID
label
target
minFilter
magFilter
wrapS
wrapT
wrapR
generateMipmap
baseLevel
maxLevel
maxAnisotropy
compareMode
compareFunc
swizzleR
swizzleG
swizzleB
swizzleA
minLod
maxLod
immutableFormat
immutableLevels
maxLevelSpecified
internalID
images
mipLevelsUsed
level
layerIndex
border
internalFormat
width
height
format
type
offset
engineFormat
engineType
genericFormat
backing store
separable
infoLog
linkStatus
vertexSource
fragmentSource
vertexInfoLog
fragmentInfoLog
hasBeenLinked
activeProgram
vertexShader
fragmentShader
validateStatus
shaderType
compileStatus
currentSourceIsCompiled
compiledSource
source
size
usage
data
readBuffer
v12@?0I8
attachments
GL_MAX_DRAW_BUFFERS
drawBuffers
elementArrayBuffer
attributes
index
attributeType
dataType
stride
pointer
arrayBuffer
clientDataOffset
clientDataURL
normalized
integer
divisor
paused
active
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
bufferBindings
buffer
resultAvailable
result
isClientData
GLES: Vertex Array Object
container
Vertex Attributes
GLES: No data
GLES: Transform Feedback
Transform Feedback
OpenGL ES errors
serious performance issues
these
an OpenGL ES error
a serious performance issue
this
The captured frame of OpenGL ES contained %@. You should correct %@ before analyzing performance to receive accurate results.
v32@?0@8@16*24
-[GPUGLInvestigatorReportProvider updateDisplayedFindingsWithMCSInfo:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLInvestigatorReportProvider.mm
[_mapFindingToViewNeedingMCS count] > 0
The program with the most costly fragment shader is:
most costly shader header
v32@?0q8@16*24
ARRAY_BUFFER
ATOMIC_COUNTER_BUFFER
COPY_READ_BUFFER
COPY_WRITE_BUFFER
DRAW_INDIRECT_BUFFER
DISPATCH_INDIRECT_BUFFER
ELEMENT_ARRAY_BUFFER
PIXEL_PACK_BUFFER
PIXEL_UNPACK_BUFFER
SHADER_STORAGE_BUFFER
TRANSFORM_FEEDBACK_BUFFER
UNIFORM_BUFFER
%@ (Buffer Name: %@)
4294967295
-2147483648
-32767
65535
-128
-3.402823e+38
-6.550400e+04
-32767.999994
1024.000000
 -512.000000
Unknown buffer format.
inv.fmt
-[GPUGLVertexAttributes populateObjectFromResource:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLGeometryBufferCommon.mm
((pContext)) != nil
(pContext)
Element
Texture[%d]
Attrib[%d]
-[GPUGLTransformFeedbackVaryings populateObjectFromResource:]
[%d]
position
texcoord
normal
color
weight
matrixindex
pointsize
generic
x[%d]
y[%d]
z[%d]
w[%d]
Xcode.SourceCodeLanguage.GLSL
Xcode.GPUDebuggerFoundation.invalidFunctionSourceURLMessage.GL
programInfoDict
shaderProfilerResults
v16@?0@"NSNotification"8
Xcode.GPUDebuggerFoundation.kGPUProgramLinkNeverAttempted
%@%@
vert
frag
totalCost
perLineCost
COST: %u:1: %.1f, %.1f
v32@?0@"NSNumber"8@"NSNumber"16*24
(ERROR|WARNING|COST): (([[:digit:]]+):([[:digit:]]+): )?(.*)
WARNING
ERROR
COST
%.1f%%
Cost for all draws = %.1f%%
Cost for this draw = %.1f%%
Disassembly not available!
.vss
.fss
Path: %@
Xcode.GPUDebuggerFoundation.kGPUProgramLinkedHeader
Xcode.GPUDebuggerFoundation.kGPUProgramUnlinkedHeader
Result: Not Available (Currently running)
Result: %s
%u %@
<data>
"%@"
%@: _displayableCallIndex: %d
q24@?0@8@16
v32@?0@"NSNumber"8Q16*24
-[GPUGLTraceDisplayableItem _startLoadingDisplaySet]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLTraceDisplayableItem.mm
Couldn't get current FBO
-[GPUGLTraceDisplayableItem _startLoadingDisplaySetElement:]
Unimplemented resourceRealize for attachment type: %u
NSBundle *_GPUDebuggerIOSSupportBundle()
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUDebuggerGLSupportBundleAdditions.mm
((bundle)) != nil
(bundle)
bundle != [NSBundle mainBundle]
Draw 
Read 
Stencil
Color %u
%s%@
Xcode.GPUDebugger.VertexProgramPrefix
Xcode.GPUDebugger.FragmentProgramPrefix
Offset: 0x%llx
, %llu samples
%s #%llu
%s (#%llu)
Xcode.GPUDebugger.BufferPrefix
Xcode.GPUDebugger.TexturePrefix
Xcode.GPUDebugger.RenderbufferPrefix
Xcode.GPUDebugger.VAOPrefix
Xcode.GPUDebugger.XFBPrefix
Xcode.GPUDebugger.ProgramPrefix
Xcode.GPUDebugger.ShaderPrefix
%s %@ %s
%@ Disassembly
Program Pipeline
Program
(Depth)
(Stencil)
-[GPUGLStateMirror _addObjectToParent:objectID:objectInternalID:target:attachment:indexType:context:prefix:annotations:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLStateMirror.mm
Unknown target %d
-[GPUGLStateMirror _currentContextInfoFromOutlineItem:]
currentContextInfo != nullptr
Context not found
-[GPUGLStateMirror setupChildrenForAllResourceGroup:resourceType:]
Unknown resource type
-[GPUGLStateMirror setupChildrenForBoundResourceGroup:resourceType:]
v20@?0I8^i12
Texture
Renderbuffer
decoded function has unknown context or drawable ID, unable to process in state mirror: index=%d, fenum=%s, context=%llu, drawable=%llu, internal=%u
unexpected command
unknown or unsupported uniform component type: %s (%d)
v24@?0^v8^v16
 Attachment
%@: %@
Error Status
Color
Blending
Alpha Test
Multisampling
Active Texture Unit
Texture Environment
Vertex Attribute Values
Matrix
Culling
Viewport
Scissor
Clip Distance
Clip Plane
Polygon Offset
Light Model
Lights
Material
Point Params
PixelStore
Misc
Depth Range
Active Texture
Client Active Texture
Test Enable
Clear Value
Function
Value Mask
Ref Value
Fail Action
Depth Fail Action
Depth Pass Action
Write Mask
Back Function
Back Value Mask
Back Ref Value
Back Fail Action
Back Depth Fail Action
Back Depth Pass Action
Back Write Mask
Blend Enable
Source function (RGB)
Dest function (RGB)
Equation (RGB)
Source function (A)
Dest function (A)
Equation (A)
Blend Color
Cull face
Cull face mode
Front face
Line width
Dithering
Rasterizer Discard
Primitive Restart Fixed Index
Mipmap Hint
Fragment Shader Derivative Hint
Unpack Row Length
Unpack Skip Rows
Unpack Skip Pixels
Unpack Alignment
Unpack Image Height
Unpack Skip Images
Pack Row Length
Pack Skip Rows
Pack Skip Pixels
Pack Alignment
Factor
Units
Offset Fill Enable
Enable Alpha To Coverage
Coverage
Coverage Value
Enable Coverage Invert
Scissor Test
Scissor Box
Vertex Attribute
Alpha Test Enable
Alpha Test Func
Alpha Test Ref
Clip Plane Enable
Clip Plane Value
Clip Distance Enable
Fog Mode
Fog Density
Fog Start
Fog End
Fog Color
Fog Hint
Light Enable
Ambient Color
Diffuse Color
Specular Color
Emissive Color
Light Position
Spot Direction
Spot Exponent
Spot Cutoff
Constant Attenuation
Linear Attenuation
Quadratic Attenuation
Two Sided Lighting Flag
Global Ambient Light
Shininess
Color Material
Projection Matrix
Modelview Matrix
Texture Matrix
Matrix Palette Enable
Current Palette Matrix
Matrix Palette Entry
Point Sprite Enable
Current Point Size
Point Size Min
Point Size Max
Point Size Threshold Size
Point Size Distance Attenuation
Texture 2D
Texture Environment Mode
Texture Environment Color
RGB Combine Operation
Alpha Combine Operation
Source 0 RGB
Source 1 RGB
Source 2 RGB
Source 0 Alpha
Source 1 Alpha
Source 2 Alpha
Operand 0 RGB
Operand 1 RGB
Operand 2 RGB
Operand 0 Alpha
Operand 1 Alpha
Operand 2 Alpha
RGB Output Scale
RGB Alpha Scale
Point Sprite Coord Replace
Texture Level of Detail Bias
Current Color
Current Normal
Current Texture Coord
Uniform Binding
Uniform Block Data Size
Shader Bitmask
Type
Num Components
Immutable Format
Immutable Levels
Texture Wrap S
Texture Wrap T
Texture Wrap R
Texture Swizzle R
Texture Swizzle G
Texture Swizzle B
Texture Swizzle A
Min LOD
Max LOD
Max Anisotropy
Base Level
Max Level
Mipmap Generation Flag
Texture Compare Mode
Texture Compare Func
Compressed Data Size
Size
Usage
Access Flags
Is Buffer Mapped
Mapped Offset
Mapped Length
Buffer Map Pointer
Samples
Retained Backing
Layer Backing
Attachment Object Type
Attachment Object Name
Attachment Texture Level
Attachment Cube Map Face
Attachment Texture Layer
Shader Type
Delete Status
Compile Status
Link Status
Program Binary Retrievable Hint
Transform Feedback Buffer Mode
Transform Feedback Varyings
Separable Program Flag
Transform Feedback Paused
Transform Feedback Active
Transform Feedback Buffer Binding
Target
Result
Result Available Flag
Status
Condition
Flags
Element Array Buffer Binding
Array Buffer Binding
Copy Read Buffer Binding
Copy Write Buffer Binding
Pixel Pack Buffer Binding
Pixel Unpack Buffer Binding
Enabled
Normalized
Stride
Integer
Divisor
Pointer
Buffer Binding
Vertex Attrib
Vertex
Normal
Texture Coord
Point Size
Matrix Index
Weight
NSMutableArray *_GetUniformQuickLookData(const GPUGLSMTypes::Uniform *)
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLVariablesViewContentProvider.mm
Data for %ix%i uniform (%s) should be %i, but is %lu
Unavailable
Location (%d)
GPUShaderProfilerHarvestDrawCallFootprint
None
GL_NONE
Unknown Enum (%d)
Never
Always
Less
LessEqual
Greater
GreaterEqual
Equal
NotEqual
Subtract
RvsSubtract
Linear
Exp^2
Keep
Zero
IncW
DecW
SrcColor
(1 - SrcColor)
DstColor
(1 - DstColor)
SrcAlpha
Saturate(SrcAlpha)
(1 - SrcAlpha)
DstAlpha
(1 - DstAlpha)
BlendColor
(1 - BlendColor)
BlendAlpha
(1 - BlendAlpha)
Front
Back
Front And Back
%s - %s
Texture Unit %d
%@0x%02x
 (0x%02x)
 - WriteMask(0x%02x)
%@%@ - (%@, %@, %@) %@
( %@ )/( %@ )
(SrcAlpha*%@)
(SrcColor*%@)
(DstAlpha*%@)
(DstColor*%@)
%@ + %@
%@ - %@
Min(%@, %@)
Max(%@, %@)
%@ ? %@
Result.rgba = %@, Color%s
Result.rgb = %@, Result.a = %@, Color%s
Disabled
%@, Write %@, Clear (%f)
%@, %@
Write (%@%@%@%@%@), Clear %s
On, Factor(%f), Units(%f)
Coverage(%f%@%@)
, Inverted
, Alpha
Default Coverage
On, %s
No GL Error
Invalid Enum
Invalid Value
Invalid Operation
Stack Underflow
Stack Overflow
Out Of Memory
Unknown Error
On, %@%.3f
No Clip Planes Enabled
%d Clip Plane%s Enabled
On, Degenerate (%f, %f, %f, %f)
On, Normal (%f, %f, %f), Dist (%f)
No Clip Distances Enabled
%d Clip Distance%s Enabled
On, %@, Range (%f - %f), Color (%0.2f, %0.2f, %0.2f, %0.2f)
On, %@, Density (%f), Color (%0.2f, %0.2f, %0.2f, %0.2f)
On, No Lights Enabled
On, %d Light%s Enabled
Directional(%f, %f, %f)
On, %@
%@, Am(%0.2f, %0.2f, %0.2f, %0.2f)
Two-Sided
Single-Sided
Am (%0.2f, %0.2f, %0.2f, %0.2f), Df (%0.2f, %0.2f, %0.2f, %0.2f), Sp (%0.2f, %0.2f, %0.2f, %0.2f), Em (%0.2f, %0.2f, %0.2f, %0.2f), Sh (%0.2f)
Perspective Projection
Degenerate
Identity
Scale
%@, Scale
Reflection
%@, Reflection
Rotation
%@, Rotation
Translation
%@, Translation
Project onto Line
Project onto Plane
Affine
Projection (%@)
%@, Modelview (%@)
%@, Texture%d (%@)
%@, Palette%d (%@)
Sprite (%@), Size (%0.3f), Range (%0.3f - %0.3f), Fade (%0.3f)
%@, Atten (%0.3f, %0.3f, %0.3f)
.rgb
.rgba
tex[%d]
envColor
primColor
prev
(1 - %@%@)
%@.a
(1 - %@.a)
%@ * %@
%@ + %@ - 0.5
mix(%@, %@, %@)
dot(2.0 * (%@ - 0.5), 2.0 * (%@ - 0.5))
(%@) * %0.1f
out.rgba = %@
out.rgb = %@, out.a = %@
%@, envColor (%0.2f, %0.2f, %0.2f, %0.2f)
%@, LODBias (%0.3f)
%@, CoordReplace - On
No Texture Units Enabled
%d Texture Unit%s Enabled
Normal (%0.3f, %0.3f, %0.3f)
%@, Color (%0.2f, %0.2f, %0.2f, %0.2f)
%@ TexCoord%d (%0.2f, %0.2f, %0.2f, %0.2f)
GL_ZERO
GL_ONE
GL_NO_ERROR
NoError
GL_POINTS
Points
GL_LINES
Lines
-[GPUGLVariablesViewContentProvider _addContextState:toArray:unitIndex:]
((pCtx)) != nil
(pCtx)
((pStateGroupInfo)) != nil
(pStateGroupInfo)
%@[%d]
%@%d
Clip Plane 
GL_CLIP_PLANE
Clip Distance 
GL_CLIP_DISTANCE
Extensions
int32_t bindingForTarget(int32_t)
code which should be unreachable has been reached
q24@?0@"NSNumber"8@"NSNumber"16
Binding: %d
v16@?0I8I12
i12@?0I8
%s[%d]
Does not exist.
Layer #%d
"%@" (#%d)
Texture #%d
Does not exist
Parameters
Level #%d
%s:%d
Sampler:%d
Sampler #%d
Transform Feedback Object #%d
Start
Active
Paused
Buffer #%d
Renderbuffer #%d
Depth Attachment
Stencil Attachment
Color Attachment %d
Renderbuffer #%d "%@"
Texture #%d "%@", Level %d
Texture #%d, Level %d
Framebuffer #%d
Draw Buffers
%u Active
Shader #%d
Program #%d Performance
Vertex Shading
Fragment Shading
Program Duration
@"<DYPVariablesViewGPUStateValue>"8@?0
Draw #%i Duration
%.1f
Fragments:Vertices
Draw #%i Fragments:Vertices
Shader Duration
%i (%.1f%%)
Fragments Shaded
Time per Fragment
Draw #%i Fragments Shaded
Vertices Processed
Time per Vertex
Draw #%i Vertices Processed
%@Program #%d
Program #%d
Active Uniforms
%u Uniform%s
Active Uniform Blocks
%d Uniform Block%s
Active Attributes
%d Attribute%s
Location(%d)
Attribute Bindings
%lu Binding%s
Program Pipeline #%d
Vertex 
Fragment 
Active 
Vertex Array Object #%d
0x%08llx
Warning: There are no enabled vertex arrays.
Query: #%d
"%@" - %@
Sync: #%d
Sync: "%@" (#%d)
Frame Statistics
%u Draws
%.1ffps
Frame Rate
Draws
Vertices
Fragments
%d Varying%s
Uniform Buffers
Global Binding
GL_MAX_UNIFORM_BUFFER_BINDINGS
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
Program Pipeline Objects
%lu Object%s
Program Objects
Shader Objects
Framebuffer Objects
Renderbuffer Objects
Buffer Objects
Vertex Array Objects
Query Objects
Sync Objects
Texture Objects
Sampler Objects
Transform Feedback Objects
Context (%llu)
Vendor
Renderer
Version
GLSL Version
Limits
unknown
GL_COMPRESSED_TEXTURE_FORMATS
{%@}
GL_MAX_SERVER_WAIT_TIMEOUT
Fragment bit depths
v16@?0@"NSString"8
GL_RED_BITS
GL_GREEN_BITS
GL_BLUE_BITS
GL_ALPHA_BITS
GL_DEPTH_BITS
GL_STENCIL_BITS
Shader precision formats
Range %@, Precision %@
range
precision
v32@?0@"NSString"8@"NSString"16@"NSMutableArray"24
GL_VERTEX_SHADER
GL_LOW_FLOAT
GL_MEDIUM_FLOAT
GL_HIGH_FLOAT
GL_LOW_INT
GL_MEDIUM_INT
GL_HIGH_INT
GL_FRAGMENT_SHADER
Auto
GL Context
Bound GL Objects
All GL Objects
Context Info
Common_GLType_VertexArrayObject
Common_Type_TextureObject
Common_Type_BufferObject
Common_GLType_RenderbufferObject
Common_GLType_FramebufferObject
Common_GLType_QueryObject
Common_GLType_ShaderObject
Common_GLType_ProgramObject
Common_GLType_ProgramPipelineObject
Common_GLType_SyncObject
Common_Type_SamplerObject
Common_GLType_TransformFeedbackObject
TraceOutline_Performance
RuntimeIssue
Uniforms
GPUStateValue *_CreateUniformStateValues(const T *, const T *, uint32_t, DYPComparisonMode, DYPTextMode, DYOpenGLFunctionalityLevel, const size_t, bool, int32_t (^__strong)(uint32_t)) [T = GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>]
((pUniform)) != nil
(pUniform)
%@[%@]
%@[%i]
GPUStateValue *_CreateUniformStateValues(const T *, const T *, uint32_t, DYPComparisonMode, DYPTextMode, DYOpenGLFunctionalityLevel, const size_t, bool, int32_t (^__strong)(uint32_t)) [T = GPUTools::SM::GL::ProgramObject<GPUGLSMObjectTypes>]
GPUGLTraceOutline
DYRenderBuffer
DYResource
NSObject
NSSecureCoding
NSCoding
DYCacheableResource
GPUGLModelFactory
GPUGLDebuggerController
DYGLExpertDelegate
GPUBufferViewerAdaptorGLTypeNameProvider
GPUBufferViewerAdaptorTypeNameProvider
GPUGLVBOEditor
GPUGLProgramPerformanceReportProvider
GPUProgramPerformanceReportProvider
GPUGLResourceManager
DYPResourceManager
Private
GPUGLVAOEditor
GPUGLInvestigatorReportProvider
GPUInvestigatorReportProvider
DVTInvalidation
GPUGLBufferUtilities
GPUGLVertexAttributeComponent
GPUGLVertexAttribute
GPUGLVertexAttributes
GPUGLVertexAttributesProtocol
GPUGLTransformFeedbackVaryings
GPUGLShaderDataProvider
GPUTraceShaderDataProvider
GPUQueryEditor
GPUGLTraceStateItem
DYFunctionTracerDelegate
GPUGLStateMirrorInterface
GPUGLTraceDisplayableItem
GPUGLTraceFramebuffer
GPUTraceFramebuffer
GPUTraceDisplaySet
_GPUDebuggerIOSSupportBundlePrivateClassForFindingBundle
GPUGLBindingResolver
GPUGLStateMirror
NSCopying
GPUFramebufferAttachmentInfo
GPUGLRenderJob
GPUGLVariablesViewContentProvider
@24@0:8@16
v16@0:8
v24@0:8@16
c40@0:8@16@24@32
v24@0:8^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
@24@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
@32@0:8@16I24I28
@16@0:8
@"GPUGLStateMirror"
@"IDELaunchSession"
@"NSMutableDictionary"
@"NSMutableArray"
{shared_ptr<GPUTools::FD::TFunctionStream<GPUTools::FD::Function>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
{_Iterator<GPUTools::FD::Function>="_function"{Function="core"{CoreFunction="fenum"I"flags"I"padding"S"argument_count"S""(?="context_id"Q"receiver_id"Q)"return_value"{Argument="value"^v"core_type"I"sem_type"I"size"I"length"S"flags"S}"arguments"[16{Argument="value"^v"core_type"I"sem_type"I"size"I"length"S"flags"S}]"fbuf_size"I"internal_buffer_size"I"fbuf"^v"internal_buffer"^v}"timestamp"Q"duration"Q"backtrace"^Q"backtrace_length"S"gl_error"S"events_type"i"events"^v"events_size"I"queue_width"I"queue_id"Q"thread_id"Q"next_associated"^{Function}"sm_context"^v}"_encbuf"^v"_next"^v"_end"^v"_decoder"^{IFunctionDecoder}"_fast_size"B}
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8I16Q20Q28@36
I16@0:8
{?=QQQ}16@0:8
@36@0:8Q16I24Q28
@24@0:8Q16
@32@0:8@16@?24
@44@0:8I16Q20Q28@"NSDictionary"36
@"NSMutableDictionary"16@0:8
@"NSString"36@0:8Q16I24Q28
@"NSString"24@0:8Q16
@"NSDictionary"24@0:8Q16
@32@0:8@"DYFunctionStream"16@?<@"NSData"@?*>24
i16@0:8
@"NSData"16@0:8
#20@0:8I16
@40@0:8@16#24@32
#24@0:8@16
c28@0:8c16^@20
@20@0:8I16
@24@0:8I16i20
@28@0:8@16c24
@28@0:8@16I24
v40@0:8@16@24Q32
@32@0:8I16Q20I28
@32@0:8@16i24i28
@"NSMapTable"
@"GPUGLTraceOutline"
v24@0:8I16I20
v24@0:8@"DYGLExpertPhase"16
v24@0:8@"NSArray"16
v24@0:8@"NSError"16
@"DYCaptureArchive"16@0:8
v24@0:8@?16
@44@0:8@16@24c32^@36
v32@0:8@16@24
v40@0:8@16@24@?32
v20@0:8c16
@20@0:8i16
@"DYGLExpertCase"
@"DVTObservingToken"
@"DYAnalyzerArchiveVisitor"
@"DYCaptureArchive"
@"<GPUShaderEditDocument>"
@"NSArray"
@"DYGLExpert"
@44@0:8Q16Q24Q32c40
@"NSString"44@0:8Q16Q24Q32c40
v56@0:8@16^v24^{Buffer=*IQ^{__CFString}}32^i40^@48
v40@0:8r^v16^v24Q32
{TypeOutputFormatTypeAlias=iii}20@0:8I16
@"GPUBufferViewerViewController"
@24@0:8@"GPUReportEditor"16
@"GPUReportTotalItem"16@0:8
@"NSMutableArray"16@0:8
@"GPUReportEditor"
I20@0:8I16
@32@0:8@16@24
@48@0:8@16{?=QQQ}24
@52@0:8@16{?=QQQ}24i48
@40@0:8@16@24@32
@60@0:8@16i24{?=QQQ}28@52
@28@0:8Q16I24
@32@0:8Q16I24i28
@32@0:8Q16@24
@48@0:8@16@24@32@40
@32@0:8@16Q24
@32@0:8@"<DYCaptureStore>"16@"DYResourceStreamer"24
@"DYFuture"48@0:8@"<DYPResourceItem>"16{?=QQQ}24
@"DYFuture"52@0:8@"<DYPResourceItem>"16{?=QQQ}24i48
@"DYFuture"40@0:8@"<DYPResourceItem>"16@"<DYPStateMirror>"24@"NSDictionary"32
@"DYFuture"60@0:8@"<DYPResourceItem>"16i24{?=QQQ}28@"NSDictionary"52
@"DYFuture"32@0:8@"<DYPResourceItem>"16@"<DYPStateMirror>"24
@"DYFuture"28@0:8Q16I24
@"DYFuture"32@0:8Q16I24i28
@"DYFuture"24@0:8@"NSDictionary"16
@"DYFuture"32@0:8Q16@"NSArray"24
@"DYFuture"24@0:8@"<DYResource>"16
@"DYFuture"24@0:8@"NSArray"16
@"<DYResource>"44@0:8I16Q20Q28@"NSDictionary"36
@48@0:8@"<DYCaptureStore>"16@"DYResourceStreamer"24@"DYDeviceInfo"32@"<DYPlatformSDK>"40
@"<DYResource>"32@0:8@"NSData"16Q24
@40@0:8I16Q20r^v28I36
@36@0:8@16q24I32
{unique_ptr<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>, std::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>>="__ptr_"{__compressed_pair<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes> *, std::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>>="__value_"^v}}
@"DYGLCaptureSessionInfo"
v40@0:8@16^v24^v32
{TypeOutputFormatTypeAlias=iii}28@0:8I16Q20
Q24@0:8:16
v24@0:8@"<DVTInvalidation>"16
v24@0:8@"<DVTCancellable>"16
@"DVTStackBacktrace"16@0:8
v24@0:8@"DVTStackBacktrace"16
v20@0:8i16
v24@0:8@"DYInvestigatorFinding"16
v24@0:8@"GPUInvestigatorReportResource"16
@"NSString"32@0:8@"NSString"16@"NSString"24
@"GPUTreeNode"32@0:8@"NSArray"16@"DYInvestigatorFinding"24
@"NSDictionary"16@0:8
v28@0:8@16i24
@"DYIntKeyedDictionary"
@32@0:8I16I20@24
I20@0:8i16
@24@0:8i16i20
v20@0:8I16
@"NSData"
@"NSString"
@"DYGLBufferObject"
i20@0:8i16
I24@0:8i16i20
@28@0:8i16i20i24
@"NSString"20@0:8i16
@"NSString"24@0:8i16i20
@"NSString"28@0:8i16i20i24
@"GPUGLVertexAttributeComponent"
q16@0:8
c24@0:8^@16
f20@0:8I16
@24@0:8I16c20
I28@0:8@16c24
d20@0:8I16
d28@0:8@16I24
@"NSArray"16@0:8
@"NSDictionary"24@0:8I16c20
@"NSArray"24@0:8I16c20
@"NSArray"20@0:8I16
I28@0:8@"NSString"16c24
@"<DYPShaderSampleInfo>"24@0:8I16c20
@"DYShaderAnalyzerResult"24@0:8I16c20
v24@0:8@"<GPUShaderEditDocument>"16
@"NSString"20@0:8I16
@"NSDictionary"28@0:8@"NSString"16c24
@"NSArray"28@0:8@"NSString"16c24
d28@0:8@"NSString"16I24
@"NSString"28@0:8@"NSString"16I24
@"NSURL"16@0:8
@"<GPUTraceShaderDataProviderDelegate>"16@0:8
v24@0:8@"<GPUTraceShaderDataProviderDelegate>"16
@"<GPUShaderEditDocument>"16@0:8
@"GPUTraceShaderDataItem"16@0:8
v24@0:8@"GPUTraceShaderDataItem"16
@"IDEEditorDocument"16@0:8
@"IDEIndex"16@0:8
v56@0:8@16@24{_NSRange=QQ}32I48f52
v32@0:8@16q24
@"GPUTraceShaderItem"
@"GPUTraceShaderDataItem"
@"<DYResource>"
@"DYGLProgramObject"
@"NSURL"
@"NSDictionary"
@"<GPUTraceShaderDataProviderDelegate>"
@"IDEIndex"
@"IDEEditorDocument"
@"NSTextField"
@24@0:8r*16
@40@0:8r^{Argument=^vIIISS}16r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}24@32
@32@0:8r^{Argument=^vIIISS}16r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}24
@24@0:8r^{Argument=^vIIISS}16
@32@0:8r*16Q24
@32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@24
@32@0:8@16r^{Argument=^vIIISS}24
@"NSString"24@0:8r*16
@"NSString"40@0:8r^{Argument=^vIIISS}16r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}24@"NSString"32
@"NSString"32@0:8r^{Argument=^vIIISS}16r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}24
@"NSString"24@0:8r^{Argument=^vIIISS}16
@"NSString"32@0:8r*16Q24
@"NSMutableString"32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@"NSArray"24
@"NSMutableArray"32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@"NSArray"24
@"NSString"40@0:8@"NSString"16@"NSString"24@"NSString"32
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16r^{Argument=^vIIISS}24
@"GPUGLStateMirror"16@0:8
v24@0:8@"GPUGLStateMirror"16
v32@0:8Q16@24
@24@0:8@"<DYFramebuffer>"16
@"<DYFramebuffer>"16@0:8
@"<DYResource>"16@0:8
v24@0:8@"<DYResource>"16
@"<DYRasterizationRateMap>"16@0:8
@"NSNumber"16@0:8
v24@0:8@"<DYRasterizationRateMap>"16
@"<DYFramebuffer>"
@36@0:8Q16r^v24I32
@32@0:8r^v16@24
v28@0:8I16@?20
v32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@?24
v36@0:8@?16I24r*28
c20@0:8i16
v24@0:8^{GPUGLBindPoint=IIiiII@}16
v40@0:8^{GPUGLBindPoint=IIiiII@}16@?24r*32
@"DYContextInfo"
@24@0:8^{_NSZone=}16
^v16@0:8
I28@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24
v24@0:8Q16
r^v20@0:8i16
r^v16@0:8
@52@0:8Q16r^v24I32r*36r*44
v32@0:8@16r^v24
@60@0:8@16r^v24I32I36r^v40r*48I56
@68@0:8@16r^v24I32I36r^v40r*48r*56I64
@68@0:8@16I24I28I32i36I40r^v44r*52@60
@60@0:8r^v16@24I32I36I40r^v44r*52
v28@0:8@16I24
c28@0:8i16^@20
r^v24@0:8Q16
c20@0:8I16
{?=[4I]}24@0:8I16i20
{GPUGLBindPoint=IIiiII@}24@0:8@16
c56@0:8{GPUGLBindPoint=IIiiII@}16@48
{StateMirrorManager<GPUGLSMObjectTypes>="_contextStateMirrorMap"{unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_sharegroupStateMirrorMap"{unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_drawableInfoMap"{ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>, unsigned long long>="mInternalIDMap"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_passthrough"{PassthroughBase="LoadURLData"{function<void *(const char *, unsigned long *)>="__f_"{__value_func<void *(const char *, unsigned long *)>="__buf_"{type="__lx"[32C]}"__f_"^v}}}"_surfaceBoundsDrawableID"Q"_deviceOrientation"i"_lastFunctionIndex"i}
@28@0:8I16@20
@56@0:8@16@24@32@40Q48
@52@0:8@16@24I32@36@44
@"GPUFramebufferAttachmentInfo"
v48@0:8Q16@24@32q40
@24@0:8i16B20
@24@0:8^v16
@24@0:8^{StencilSideSetup=IIIIIII}16
@28@0:8^{BlendChannelSetup=III}16c24
@28@0:8^v16i24
@24@0:8^{?=[4[4f]]}16
@28@0:8I16I20B24
@36@0:8^v16^{TexEnvChannelSetup=IIIIIIIf}24B32
@28@0:8i16^v20
B44@0:8i16i20i24^v28^v36
v40@0:8@16@24@32
v28@0:8i16@20
v32@0:8i16@20i28
v32@0:8@16^v24
v40@0:8I16i20^v24@32
v40@0:8Q16^v24@32
v44@0:8Q16I24^v28@36
v32@0:8^v16@24
v28@0:8I16@20
@44@0:8r^v16I24r^v28i36B40
@28@0:8r^v16i24
@48@0:8r^v16I24i28i32B36^v40
@28@0:8I16^v20
@36@0:8r^v16I24^v28
@32@0:8r^{ObjectStateEnum=i@iB}16r^v24
@32@0:8I16c20^v24
@44@0:8r^v16I24^v28@36
@44@0:8r^v16I24^v28I36I40
@24@0:8r^v16
{ContextStateMirror<GPUGLSMObjectTypes>="_mOpenGLAPIVersion"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mOpenGLFunctionalityLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mActiveTexture"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mAlphaTestFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mAlphaTestRef"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mBlendColor"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mBlendEquationRGB"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendEquationAlpha"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendSrcRGB"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendSrcAlpha"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendDstRGB"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendDstAlpha"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mClearColor"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mClearDepth"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mClearStencil"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mClientActiveTexture"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mCurrentColor"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mColorWritemask"{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<int, 4U>="mData"[4i]}}"_mCullFaceMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mCurrentPaletteMatrix"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mDepthFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mDepthMask"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mDepthRange"{DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 2U>="mData"[2f]}}"_mFrontFace"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mLineWidth"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mLogicOp"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mMatrixMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mCurrentNormal"{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 3U>="mData"[3f]}}"_mPointSize"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPolygonOffsetFactor"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPolygonOffsetUnits"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mSampleCoverageValue"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mSampleCoverageInvert"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mScissorBox"{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<int, 4U>="mData"[4i]}}"_mShadeModel"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilRef"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mStencilValueMask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mStencilWritemask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mStencilFail"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilPassDepthFail"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilPassDepthPass"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilBackFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilBackRef"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mStencilBackValueMask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mStencilBackWritemask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mStencilBackFail"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilBackPassDepthFail"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilBackPassDepthPass"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mViewport"{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<int, 4U>="mData"[4i]}}"_mImplementationColorReadFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mImplementationColorReadType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mCurrentTextureCoords"[32{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mCurrentVertexAttrib"[16{DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<double, 4U>="mData"[4d]}}]"_mCurrentVertexAttribType"[16{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mAlphaTest"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mBlend"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mColorLogicOp"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mColorMaterial"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mCullFace"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mDepthTest"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mDither"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mFog"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mLighting"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mLineSmooth"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mMatrixPalette"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mMultiSample"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mNormalize"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPointSmooth"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPolygonOffsetFill"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mRescaleNormal"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mSampleAlphaToCoverage"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mSampleAlphaToOne"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mSampleCoverage"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mScissorTest"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mStencilTest"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPointSprite"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPrimitiveRestartFixedIndex"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mRasterizerDiscard"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mClipPlane"[8{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mLight"[8{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mTexture2D"[32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mFogMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mFogDensity"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mFogStart"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mFogEnd"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mFogColor"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mFogHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mGenerateMipmapHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mLineSmoothHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mPerspectiveCorrectionHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mShaderDerivativeHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mPointSmoothHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mLightModelTwoSide"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLightModelAmbient"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mPackRowLength"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackImageHeight"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackSkipPixels"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackSkipRows"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackSkipImages"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackAlignment"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackRowLength"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackImageHeight"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackSkipPixels"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackSkipRows"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackSkipImages"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackAlignment"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPointSizeMin"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPointSizeMax"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPointFadeThresholdSize"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPointDistanceAttenuation"{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 3U>="mData"[3f]}}"_mLightAmbient"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightDiffuse"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightSpecular"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightEmission"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightPosition"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightSpotDirection"[8{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 3U>="mData"[3f]}}]"_mLightSpotExponent"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mLightSpotCutoff"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mLightConstantAttenuation"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mLightLinearAttenuation"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mLightQuadraticAttenuation"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mClipPlaneValue"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mMaterialAmbient"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mMaterialDiffuse"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mMaterialSpecular"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mMaterialEmission"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mMaterialShininess"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mTextureEnvMode"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mTextureEnvColor"[32{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mCombineRGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mCombineAlpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc0RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc1RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc2RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc0Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc1Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc2Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand0RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand1RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand2RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand0Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand1Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand2Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mRGBScale"[32{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mAlphaScale"[32{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mCoordReplace"[32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mTextureLODBias"[32{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mModelviewMatrix"{DYStateElement<std::vector<DYMtx>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<DYMtx, std::allocator<DYMtx>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<DYMtx *, std::allocator<DYMtx>>="__value_"^{?}}}}"_mProjectionMatrix"{DYStateElement<std::vector<DYMtx>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<DYMtx, std::allocator<DYMtx>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<DYMtx *, std::allocator<DYMtx>>="__value_"^{?}}}}"_mTextureMatrix"[32{DYStateElement<std::vector<DYMtx>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<DYMtx, std::allocator<DYMtx>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<DYMtx *, std::allocator<DYMtx>>="__value_"^{?}}}}]"_mPaletteMatrix"[16{DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis>="mStateVal"{?="m"[4[4f]]}}]"_mUniformBufferStart"[64{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mUniformBufferSize"[64{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mTextureBinding2D"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTextureBindingCubemap"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTextureBinding2DArray"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTextureBinding3D"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mCopyReadBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mCopyWriteBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mPixelPackBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mPixelUnpackBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mTransformFeedbackBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mUniformBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mUniformBufferBindingIndexed"[64{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mRenderbufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mDrawFramebufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mReadFramebufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mCurrentProgram"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mProgramPipelineBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mVertexArrayBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mSamplerBinding"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTransformFeedbackBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mQueryAnySamplesPassedBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mQueryAnySamplesPassedConservativeBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mQueryTransformFeedbackPrimitivesWrittenBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mCurrentEventMarker"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mGroupMarkerStack"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mFlushLastTimestamp"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mDrawLastTimestamp"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mGLErrorStatus"{DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis>="mStateVal"{StateErrorStatus="_stateEnum"i}}"_mVertexArrayObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mQueryObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mSyncObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mTransformFeedbackObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mContextTextureObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mSharegroupID"Q"_mSharegroupMirror"^v"_mManager"^v"_mContextID"Q}
{ProgramUniform<GPUGLSMObjectTypes>="_mUniformName"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mUniformValue"{DYStateElement<std::vector<double>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}}"_mUniformData"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mUniformDataOffset"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mUniformCallType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mUniformScalarCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformArrayElementIndex"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformLocStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformBlockIndex"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mUniformBlockOffset"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformMatrixStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformIsRowMajor"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mUniformShaderBitmask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}}
{TextureLayer<GPUGLSMObjectTypes>="_mTextureInternalFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureWidth"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureHeight"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTexData"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mTexDataFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTexDataType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureCompressedImageSize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mEngineTexDataFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mEngineTexDataType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTexDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mTexIOSurface"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mTexIOSurfacePlane"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mTexIOSurfaceYCBCRMatrix"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mTexIOSurfacePixelFormat"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mTexIOSurfaceColorPrimaries"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mTexIOSurfaceTransferFunction"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}}
{TextureObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"displayAttributes"{objc_wrapper<id>="_object"@}"mRefCount"i"_mTextureMinFilter"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureMagFilter"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureWrapS"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureWrapT"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureWrapR"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mGenerateMipmap"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTextureMaxAnisotropy"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mTextureMaxLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureCompressed"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTextureTarget"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mMaxLevelSpecified"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mHasGeneratedMipmaps"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mTextureCompareMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureCompareFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureCropRect"{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<int, 4U>="mData"[4i]}}"_mTextureBaseLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureImmutableFormat"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTextureSwizzleRed"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureSwizzleGreen"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureSwizzleBlue"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureSwizzleAlpha"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureMinLod"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureMaxLod"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureImmutableLevels"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureLevels"{unordered_map<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}}
{SamplerObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mSamplerMinFilter"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerMagFilter"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerWrapS"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerWrapT"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerWrapR"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerMaxAnisotropy"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mSamplerMinLod"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mSamplerMaxLod"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mSamplerCompareMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerCompareFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}}
{TransformFeedbackObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mTransformFeedbackBufferBindingIndexed"[4{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTransformFeedbackBufferStart"[4{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mTransformFeedbackBufferSize"[4{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mTransformFeedbackPaused"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTransformFeedbackActive"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}}
{BufferObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mBufferSize"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mBufferUsage"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBufferData"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mBufferTarget"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBufferAccessFlags"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mBufferMapped"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mBufferMapOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mBufferMapLength"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mBufferMapPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}}
{RenderbufferObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mRenderbufferSamples"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mRenderbufferInternalFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mRenderbufferWidth"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mRenderbufferHeight"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mDrawableRetainedBacking"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mDrawableLayerBacking"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mDrawablePointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}}
{FramebufferAttachment<GPUGLSMObjectTypes>="_mFramebufferAttachmentObjectType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mFramebufferAttachmentObjectName"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mFramebufferAttachmentTextureLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFramebufferAttachmentTextureLayer"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFramebufferAttachmentTextureCubeMapFace"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}}
{FramebufferObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mReadBuffer"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mDrawBuffers"[16{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mAttachments"[18{FramebufferAttachment<GPUGLSMObjectTypes>="_mFramebufferAttachmentObjectType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mFramebufferAttachmentObjectName"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mFramebufferAttachmentTextureLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFramebufferAttachmentTextureLayer"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFramebufferAttachmentTextureCubeMapFace"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}}]}
{ShaderObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mShaderType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mDeleteStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mCompiledShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mCompiledShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mCompileStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mCurrentSourceIsCompiled"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mAttachCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}}
{ProgramObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"mUniformMap"{unordered_map<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mAttribMap"{unordered_map<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mUniformBlockMap"{unordered_map<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mTransformFeedbackVaryingMap"{unordered_map<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"_attribLocationBindingMap"{unordered_map<std::string, int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, int>>>="__table_"{__hash_table<std::__hash_value_type<std::string, int>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, int>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, int>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, int>, std::hash<std::string>, std::equal_to<std::string>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, int>, std::equal_to<std::string>, std::hash<std::string>>>="__value_"f}}}"_mAttachedFragmentShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mAttachedVertexShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mLinkedFragmentShader"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLinkedVertexShader"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLinkedFragmentShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mLinkedVertexShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mLinkedFragmentShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLinkedVertexShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLinkedProgramBinaryFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mLinkedProgramBinary"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mFragmentShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mVertexShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mFragmentShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mVertexShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFragmentShaderInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mVertexShaderInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mProgramBinaryFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mProgramBinary"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mProgramSeparable"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mLinkStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mDeleteStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mAttachCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mHasBeenLinked"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mProgramBinaryRetrievableHint"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTransformFeedbackBufferMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBuiltinsUsed"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}}
{ProgramUniformBlock<GPUGLSMObjectTypes>="mUniforms"{vector<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes> *, std::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>="__value_"^v}}"_mUniformBlockBinding"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mUniformBlockName"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mUniformBlockDataSize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformBlockShaderBitmask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}}
{ProgramPipelineObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mActiveProgram"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mVertexShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mGeometryShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mFragmentShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mTessControlShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mTessEvaluationShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mValidateStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}}
{VertexArrayObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mColorArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mColorArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mColorArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mColorArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mColorArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mMatrixIndexArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mMatrixIndexArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mMatrixIndexArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mMatrixIndexArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mMatrixIndexArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mNormalArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mNormalArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mNormalArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mNormalArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mPointSizeArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mPointSizeArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPointSizeArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mPointSizeArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mVertexArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mVertexArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mVertexArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mVertexArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mVertexArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mWeightArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mWeightArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mWeightArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mWeightArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mWeightArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mTextureCoordArraySize"[32{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mTextureCoordArrayType"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mTextureCoordArrayStride"[32{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mTextureCoordArrayPointer"[32{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mTextureCoordArrayBufferBinding"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mVertexAttribArraySize"[16{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mVertexAttribArrayType"[16{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mVertexAttribArrayNormalized"[16{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mVertexAttribArrayStride"[16{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mVertexAttribArrayPointer"[16{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mVertexAttribArrayBufferBinding"[16{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mVertexAttribArrayDivisor"[16{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}]"_mVertexAttribArrayInteger"[16{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mElementArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mColorArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mMatrixIndexArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mNormalArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPointSizeArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mVertexArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mWeightArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTextureCoordArray"[32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mVertexAttribArrayEnabled"[16{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mColorArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mMatrixIndexArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mNormalArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mPointSizeArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mVertexArratDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mWeightArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mTextureCoordArrayDataURL"[32{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}]"_mVertexAttribArrayDataURL"[16{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}]"_mColorArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mMatrixIndexArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mNormalArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mPointSizeArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mVertexArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mWeightArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mTextureCoordArrayDataOffset"[32{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}]"_mVertexAttribArrayDataOffset"[16{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}]"_mColorArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mMatrixIndexArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mNormalArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mPointSizeArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mVertexArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mWeightArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mTextureCoordArrayVAPointerOffset"[32{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}]"_mVertexAttribArrayVAPointerOffset"[16{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}]"_mVARangeURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mVARangeOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}}
{QueryObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mQueryTarget"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mQueryResult"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mQueryResultAvailable"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}"_mQueryActive"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}}
{SyncObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mSyncObjectType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSyncCondition"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSyncFlags"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__r"{__raw="__words"[3Q]})}}}}}
@"NSMutableSet"
@(#)PROGRAM:GPUDebuggerGLSupport  PROJECT:GPUDebugger-33024
St9bad_alloc
!&+05
;@EJO
RW\afk
FVTTTH=?A
8:CEGttttttttIKMOQS
DFHJLNPR
psvy|
?BEH
St12out_of_range
`ehmpux
BEHK???????NQTWZ]`cf
psvy|
?BEH
9<?B
psvy|
?BEH
psvy|
?BEH
psvy|
?BEH
psvy|
?BEH
St12length_error

GUcq
>CAJC
_NSt3__111regex_errorE
St13runtime_error
BFO4>
PV]f
psvy|
?BEH
psvy|
?BEH
9<?B
`ehmpux
BEHK???????NQTWZ]`cf
`ehmpux
BEHK???????NQTWZ]`cf
`ehmpux
BEHK???????NQTWZ]`cf
JJJJJJJJJJJJJJJJJJJJJ
& ++
*********************
*$**
**&* 
NNNNNNNNNNNNNNNNNNNNN
&&&
psvy|
?BEH
psvy|
?BEH
!&).
(+.5
St20bad_array_new_length
St9exception
St11logic_error
NSt3__117bad_function_callE
+.14
!&).
(+.5
0cccH-
/258;>
"%(+
$*06
<BHNTZ`flrx
 $(,0
AEpppppIMQpppppUY]pppppaei
ffffNPRfT
Z]_cfmp
@BDGI
LNQTWZ]`c
`ehmpux
BEHK???????NQTWZ]`cf
psvy|
?BEH
BFO4>
9<?B
psvy|
?BEH
psvy|
?BEH
psvy|
?BEH
psvy|
?BEH
APIItem
.cxx_destruct
T@"NSArray",?,R
T#,R
TI,N,V_objectID
T@"<DYFramebuffer>",R,V_frameBufferObject
_attachmentInfo
T@"<DYRasterizationRateMap>",?,R
_buildBoundResourceFilterItems:
T@"<DYResource>",&,V_depthResourceObject
_currentContext
T@"<DYResource>",?,&
_defaultSampler
T@"<GPUShaderEditDocument>",W,N,Vdocument
_editorDocument
T@"<GPUTraceShaderDataProviderDelegate>",W,N,Vdelegate
_format
T@"DVTStackBacktrace",?,R
_modifiedOrOriginalArchivePath:
T@"DYGLExpert",R,V_expert
_outlineTexture
T@"GPUFramebufferAttachmentInfo",&,N,V_attachmentInfo
_rebuildAnnotations:lineOffset:
T@"GPUGLTraceOutline",&,N,V_outline
_runExperiment:
T@"GPUTraceShaderDataItem",W,N,V_dataItem
_stride
T@"IDEEditorDocument",R,N,V_editorDocument
addChildValues:
T@"IDEIndex",R,N,Vindex
allKeys
T@"NSData",R,N
appName
T@"NSMutableDictionary",R
attachmentsDict
T@"NSMutableDictionary",R,V_colorResourceObjects
captureSessionInfoClassWithAPI:
T@"NSNumber",?,R
compactTextMode
T@"NSString",?,R,C
createProgramCentricTreeForGroupedFindings:investigatorFinding:
T@"NSString",R,C,N
decodedFunction
TB,?,R,N,GisInstanced
discardAndClose
TB,?,R,N,GisValid
enabled
TB,N,GisInstanced,V_instanced
flipped
TB,N,V_showAsHex
fragmentProgram
TB,R,N
getSharegroupID
TI,N,V_elementType
handleUpdatedDictionary:forKey:
TI,R,N
inferiorSession
TI,R,N,V_objectType
initForArchive:
TI,R,N,V_textureLayer
invalidateModel
TQ,N,V_retrievalContextID
isValid
TQ,R,N
lowercaseString
Ti,N,V_dataOffset
numberOfComponentsForAttribute:
Ti,N,V_elementCount
numberWithChar:
Ti,N,V_minNumberOfVertices
outline
Ti,N,V_primitiveCount
perLineInfoForProgramInfo:atFunctionIndex:fragShader:totalCost:
Ti,N,V_subcomponentOffset
queryResultView
Ti,V_functionIndex
remarks
URLForResource:withExtension:
removedContexts
_CreateProgramTransformFeedbackVaryings:
rootProcessItem
_actionString:
setChildValues:
_addAnnotation:tooltip:lineRange:severity:percentage:
setNumberStyle:
_addBoundFramebuffersToResourceGroup:
setReplayDeviceBackgroundImage:
_addBoundTexturesToResourceGroup:
setStringValue:
_addBoundVertexArraysToResourceGroup:
sourceDidUpdate
_addContext:
summary
_addContextState:toArray:unitIndex:
version
.cxx_construct
T@"<GPUShaderEditDocument>",W,N
GPUAssemblyFileURL
T@"NSArray",R,N
T@"<DYFramebuffer>",R
T^v,R,N
T@"<DYRasterizationRateMap>",?,&
_buffer
T@"<DYResource>",&
_createSubItemsForResourceItem:
T@"<DYResource>",&,V_stencilResourceObject
_defaultProgram
T@"<DYResource>",R
_defaultUniform
T@"<GPUTraceShaderDataProviderDelegate>",W,N
_expert
T@"DVTStackBacktrace",?,&
_fractionDigits
T@"DYGLBufferObject",&,N,V_buffer
_observerTokens
T@"GPUBufferViewerViewController",&,N,V_bufferViewerViewController
_primitiveCount
T@"GPUGLStateMirror",C
_resourceObject
T@"GPUTraceShaderDataItem",W,N
_startLoadingDisplaySetElement:
T@"IDEEditorDocument",R,N
_uniformBuffers
T@"IDEIndex",R,N
alertMessageKey
T@"NSData",&,N,V_data
T@"NSMutableArray",R,N,V_components
archive
T@"NSMutableDictionary",R,N
bundleForClass:
T@"NSMutableDictionary",R,V_contextNameDict
commit:
T@"NSString",&,N,V_name
contextNameDict
T@"NSString",R,C
dealloc
TB,?,R,N,GisIndexed
deleteContexts:
TB,?,R,N,GisPrimitiveRestartEnabled
divisor
TB,N,GisIndexed,V_indexed
fileURL
TB,N,GisPrimitiveRestartEnabled,V_primitiveRestartEnabled
fragmentInfoLog
TB,R
functionIndices
TI,?,R,N
guestAppSession
TI,N,V_format
indexed
TI,R,N,V_attachment
infoLog
TI,R,N,V_textureCubemapFace
initWithBuffer:
TI,R,N,V_textureLevel
isProxy
TQ,R
itemDescription
Ti,?,R,N
manager
Ti,N,V_divisor
numberWithBool:
Ti,N,V_maxNumberOfVertices
numberWithLong:
Ti,N,V_objectType
outlineItemUUID
Ti,N,V_stride
pointer
Ti,R,N
release
T{?=QQQ},R,N
removeObserver:
UTF8String
resourceManager
_EnumerateUniformBlockReferencingShaderBits:
_activeUniformBlocks
setElementType:
_addBoundBuffersToResourceGroup:
setOutlineItem:
_addBoundProgramToResourceGroup:
setStateMirror:
_addBoundTransformFeedbackObjectToResourceGroup:
setWithObjects:
_addBuffersToResourceGroup:
specificSection
_addContextState:toArray:
updateReportWithTargetFrameRate
_addEnumState:toArray:
_addExtensions:forContext:
_addFunction:
_addObjectToParent:objectID:objectInternalID:target:attachment:indexType:context:prefix:annotations:
_addProgramForDisplayableItem:
_addProgramsToResourceGroup:
_addRenderbuffersToResourceGroup:
_addShadersToResourceGroup:
_addStateValue:withName:toArray:
_addTextureObject:toParent:textureObjectID:layerIndex:attachment:context:prefix:
_addTexturesToResourceGroup:
_addTransformFeedbackObjectsToResourceGroup:
_addVariableNodeFromDataValue:type:recipientArray:
_addVertexArraysToResourceGroup:
_analyzerVisitor
_annotateAndProcessBinding:withBlock:prefix:
_annotateBufferBinding:
_annotateRenderbufferBinding:
_annotateResourceBinding:
_annotateTextureBinding:
_appendProfilerResultToInfoLog:programItem:
_attachment
_attributes
_bIsMultiAPI
_bIsMultiContextOrThread
_beginAnalysis
_beginEditor
_beginExperiment
_blendFactorString:
_bufferViewerViewController
_buildInfoLogWithDictionary:
_captureSessionInfo
_captureStream
_captureStreamIter
_changedShaderSourceDocument
_checkForDeviceDifferences
_classifyMatrix:
_clearInvestigatorRunningBackgroundImage
_colorResourceObjects
_comparisonStateMirror
_components
_configureInvestigatorWithCaseConfigData:
_connectElementResourceToDisplaySet:resourceObject:
_connectWireframeTextureToDisplaySet:
_connectedDisplaySetElementResource:
_context
_contextGroupList
_contextGroupListDict
_contextInfo
_contextNameDict
_convertEnumString:
_createGPUTraceResourceItemWithParent:object:objectID:labelTarget:context:prefix:suffix:type:
_createGPUTraceResourceItemWithParent:object:objectID:labelTarget:context:prefix:type:
_createProgramHeader:
_createProgramInfoDict:
_createResourceCentricTreeForGroupedFindings:investigatorFinding:
_createShaderResourcesForProgramItem:forProgram:
_createSourceCodeAndURL
_cullString:
_currentContextInfoFromOutlineItem:
_currentDisplayFunctionIndex
_currentExperimentInBlock
_currentFrameIndex
_currentFunctionIndex
_currentMarkerDepth
_currentPhaseInBlock
_currentPhaseWeight
_currentQueue
_currentThread
_currentWeightCounter
_data
_dataAvailable
_dataItem
_dataOffset
_defaultAttachment
_defaultBuffer
_defaultCtx
_defaultFramebuffer
_defaultPipeline
_defaultQuery
_defaultRenderbuffer
_defaultShader
_defaultSync
_defaultTex
_defaultTexLayer
_defaultTransformFeedback
_defaultUniformBlock
_defaultVAO
_depthResourceObject
_derivedStateMirrorFromStateMirror:forFunctionIndex:fromFunctionIndex:
_displaySetLoadIsComplete:
_divisor
_drawCallFootprintIsAvailable
_elementAttribute
_elementCount
_elementType
_endExperiment
_experimentPlaybackEnded
_experimentsArray
_expertCase
_frameBufferObject
_funcString:
_funcWordString:
_functionIndex
_generateActiveAttribContent:location:
_generateBufferContent:bufferID:usingContext:
_generateFrameStatsContent:
_generateFramebufferAttachmentContent:usingAttachment:usingContext:
_generateFramebufferContent:framebufferID:usingContext:
_generateProgramContent:programID:usingContext:withPrefix:
_generateProgramPerformanceContent:separable:usingContext:
_generateProgramPipelineContent:pipelineID:usingContext:
_generateQueryContent:queryID:usingContext:
_generateRenderbufferContent:renderbufferID:usingContext:
_generateSamplerContent:samplerID:usingContext:
_generateShaderContent:usingContext:
_generateSyncContent:usingContext:
_generateTextureContent:textureID:usingContext:
_generateTextureLayerContent:target:level:layer:createSubgroup:usingContext:
_generateTextureUnitContent:usingContext:
_generateTransformFeedbackContent:transformFeedbackID:usingContext:
_generateUniformBlockContent:index:comparisonUniformBlock:functionalityLevel:isProgramUsedInDraw:
_generateVAOArrayContent:vaoID:usingContext:usingVAOArrayListIndex:usingIndex:
_generateVAOContent:vaoID:usingContext:
_getAnnotatedTextureName:usingContext:
_getCondensedActiveSummaryFromContext:
_getCondensedAlphaTestSummaryFromContext:
_getCondensedBlendResultForChannel:isAlphaChannel:
_getCondensedBlendSummaryFromContext:
_getCondensedClipDistanceSummaryFromContext:
_getCondensedClipPlaneSummaryFromContext:
_getCondensedColorSummaryFromContext:
_getCondensedCullingSummaryFromContext:
_getCondensedDepthSummaryFromContext:
_getCondensedErrorStatusSummaryFromContext:
_getCondensedFixedCurrentVertexSummaryFromContext:
_getCondensedFogSummaryFromContext:
_getCondensedLightModelSummaryFromContext:
_getCondensedLightSummaryFromContext:
_getCondensedMaterialSummaryFromContext:
_getCondensedMatrixSummaryFromContext:
_getCondensedMultisamplingSummaryFromContext:
_getCondensedPerClipPlaneSummaryFromContext:index:
_getCondensedPerLightSummaryFromContext:index:
_getCondensedPerUnitTexEnvSummaryFromContext:unitIndex:
_getCondensedPointParamsSummaryFromContext:
_getCondensedPolygonOffsetSummaryFromContext:
_getCondensedScissorSummaryFromContext:
_getCondensedStateGroupSummary:fromContext:
_getCondensedStencilSummaryForSide:
_getCondensedStencilSummaryFromContext:
_getCondensedTexEnvChannelSummary:channelSetup:isRGBA:
_getCondensedTexEnvSummaryFromContext:
_getCondensedViewportSummaryFromContext:
_getStateElement:usingIndex:forStateGroup:usingContext:returningString:
_getTargetFrameRateFromDisplayLinkInfo:
_getTexEnvSrcString:operand:isRGBA:
_handleExtendedDrawCommand:
_handlePopGroupMarker:
_handlePresentRenderbuffer:
_handlePushGroupMarker:
_identifierForObject:context:target:prefix:suffix:
_indexed
_inferiorSessionUpdatedResourcesDictObserver
_infoLog
_instanced
_investigatorReadyObserver
_isAssembly
_isDefaultObjectInUse:
_isDisassemblerAvailable
_isHigginsEnabled
_launchSession
_logAtLogLevel:withFormat:
_makeAnnotationsWithInfoLog:
_manager
_mapFindingToViewNeedingMCS
_maxNumberOfVertices
_minNumberOfVertices
_modifiedCaptureArchive
_modifiedOrOriginalArchivePath
_mutableAnnotations
_name
_numberOfExperimentsInBlock
_numberOfPhasesInBlock
_objectID
_objectType
_onDisassemblyUpdated
_onProgramInfoDictUpdated
_onShaderEditContinueResourcesUpdated
_openFilenames:archive:filesArray:
_outline
_overviewSampleArray
_overviewSamplesObserver
_passCompletedExperiments
_performPostShaderEditContinueActions
_primitiveRestartEnabled
_processFramebufferAttachmentsWithBlock:fromFramebufferBinding:withPrefix:
_programInfoDict
_programObject
_renderedImage:showDepth:
_reportEditor
_resourceTypeToViewMaptable
_retrievalContextID
_runInvestigator
_sendInvestigatorRunningBackgroundImage
_sentExperimentBackgroundImage
_shaderDisassembly
_shaderItem
_sharedByteFormatter
_showAsHex
_solidTexture
_sourceCode
_sourceHeader
_sourceURL
_spResMgr
_startLoadingDisplaySet
_startLoadingWireframeTexture
_stateMirror
_stateMirrorLock
_statemirror
_stencilFuncString:
_stencilResourceObject
_streamArchiveWithPath:notifyOnQueue:handler:
_stringFromEnum:showFalseAsNone:
_subcomponentOffset
_textureCubemapFace
_textureLayer
_textureLevel
_totalPhaseWeight
_unarchiveReports
_updateFilteredListForAllObjects
_updateFilteredListForAuto
_updateFilteredListForBoundObjects
_updateFilteredListForContext
_updateFilteredListForContextInfo
_updateProgram
_updateProgramInfoDict
_updateStateNameAndValue:forBindPoint:
_updateUniformBlockValuesWithBuffer:
_updateUniformValueAtIndex:parentValue:buffer:offset:
_valueStringForBufferEnum:buffer:
_wireframeTexture
abort
acceptCaptureVisitor:
addAnalyzerFindings:toSection:forFinding:areRedFlags:
addAutoCancelledObject:
addAutoInvalidatedObject:
addBufferContent:forBinding:fromContext:toArray:
addBufferContent:forTarget:fromContext:toArray:
addBufferContent:fromContext:toArray:
addChildValue:
addChildViewController:
addDetailsToSection:forRecommendationSection:fromFinding:
addDisplayLinks:
addDisplayableItem:
addEntriesFromDictionary:
addFindingToReport:
addFrameStatsContent:toArray:
addFramebufferContent:forBinding:fromContext:toArray:
addFramebufferContent:fromContext:toArray:
addMinAvgMaxPerItemToList:withTitle:timingTimeMin:timingTimeMax:timingTimeAverage:andCount:andDYPStateCreationBlock:
addMinAvgMaxToList:withTitle:timingTimeMin:timingTimeMax:timingTimeAverage:timingPercentageMin:timingPercentageMax:timingPercentageAverage:andDYPStateCreationBlock:
addNewDisplayableItem:
addObject:
addObjectContent:forType:fromContext:toArray:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addOriginalResource:container:
addPipelinePerformanceContent:fromContext:toArray:
addProgramContent:fromContext:toArray:
addProgramPerformanceContent:fromContext:toArray:
addProgramPipelineContent:fromContext:toArray:
addQueryContent:fromContext:toArray:
addRedFlagsToReport:withLevel:
addRenderbufferContent:fromContext:toArray:
addSamplerContent:fromContext:toArray:
addScopeChoice:tag:
addShaderContent:fromContext:toArray:
addSubview:
addSyncContent:fromContext:toArray:
addTextureContent:fromContext:toArray:
addTextureUnitContent:fromContext:toArray:
addTopSectionTreeNodeForObject:first:
addTraceProfileData:
addTransformFeedbackContent:fromContext:toArray:
addTreeNodeForObject:withChildren:toParent:
addTreeNodeForObject:withChildren:toParent:asFirstChild:
addUpdatedResource:container:
addVAOContent:fromContext:toArray:
additionalData
additionalFindings
additionalShaderBinaryKeys
alertInfoKey
allAPIItems
allDiassemblyInfoForShaderBinaryKey:baseData:
allDiassemblyInfoForShaderType:baseData:
allDisplayableItems
allMarkerItems
allPrograms
allTraceItems
allocateAndReadDataForFilenameBuffer:outSize:error:
analyzeStoredCaptureArchive
analyzerFindings
annotationDidUpdate
apiCallCount
apiItemForTrueFunctionIndex:
apiItemForTrueFunctionIndex:subCommandIndex:
apiItemFromDisplayIndex:
apiItemFromFunctionIndex:
appArguments
appFrameRate
appendFormat:
appendString:
applyInputContentRegion:
applyModifiersToArchive:modifiers:
archiveData:withKey:replaceData:error:
archiveReports
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayBuffer
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
assertionBehaviorAfterEndOfEventForSelector:
assertionBehaviorForKeyValueObservationsAtEndOfEvent
assetBundle
associatedDisplayableItem
attachment
attachmentForAttachmentID:
attachmentInfo
attachments
attribDivisor:
attributeCount
attributeFormat:forComponent:
attributeName:
attributeName:forComponent:
attributeType
attributes
autorelease
baselineTotalFrameTime
beginAnalysis
beginPhase:
beginPhaseBlockWithNumPhases:andTotalWeight:
bitCounts
blockBinding
boolForKey:
boolResult
boolValue
bounds
bubbleUpChangeStatusHighlighting:
buffer
bufferBindings
bufferLength
bufferObjectFromBufferID:
bufferViewerViewController
bytes
cStringUsingEncoding:
cachingCost
callstackForShaderType:
cancel
cancelAnalysis
captureArchive
captureArchiveForURL:
captureArchivePath
captureArchiveURL
captureDeviceInfo
captureGPUTraceFromBreakpoint:
captureSessionInfo
captureSessionInfoWithCaptureStore:
characterSetWithCharactersInString:
childNodes
childValues
children
class
clientDataOffset
clientDataURL
code
colorResourceObjects
compare:
compareName:
comparisonMode
complete
components
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
configData
conformsToProtocol:
constructTraceLineWithFunction:arguments:
constructTraceLinesWithFunction:arguments:
containerID
contextInfoForContext:
contextStateMirror
contextsInfo
controller
copy
copyAdjunctDataForFilename:error:
copyMutableData:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countForTypeAlias:
createArchiveInTemporaryDirectoryWithName:deleteOnClose:error:
createArgument:forFunction:withValue:
createFullObjectWithFunctionStream:dataResolver:
createInvestigatorReportProvider:
createModelFactory
createProgramPerformanceReportProvider:
createRenderJobsForDisplaySetWithRenderTargetArrayIndex:
createReportWithCompletionBlock:
creationBacktrace
currentDisplayableFrameBuffer
currentFunctionIndex
currentMainEditorItem
currentProgramBinding
currentProgramPipelineBinding
currentTime
currentTotalFrameTime
currentTraceSession
customSamplePositions
data
dataAtIndex:
dataItem
dataOffset
dataType
dataWithBytesNoCopy:length:freeWhenDone:
dataWithContentsOfURL:options:error:
date
debugDescription
debugLabel
debuggerController
defaultCenter
defaultManager
delegate
depth
depthResourceObject
description
determineTextureUnitLimitsForRendererAtIndex:limits:
deviceInfo
dictionary
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didChangeValueForKey:
displayElementName
displayIndex
displaySet
displayableCallCount
displayableCallIndex
document
domain
doubleValue
drawCallInfoIndices
drawCallInfoList
drawCallInfoWithFunctionIndex:
drawableObjectForDrawableID:
dumpInstructions
dvt_newObserverForKeyPath:options:owner:withHandlerBlock:
dvt_newObserverForKeyPath:options:withHandlerBlock:
editable:
editorDocument
elementArrayBuffer
elementCount
elementIDs
elementIndex:
elementType
enableGPUFrameCaptureMode
enableSingleFrameMode
encodeWithCoder:
endPhase:
endPhaseBlock
engine
enumerateBufferTargets:
enumerateFramebufferAttachments:
enumerateFramebufferDrawBuffers:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateTextureTargets:
error
errorWithDomain:code:userInfo:
establishResource:
establishResource:forProgramChildren:containerID:
evidence
expert
extensions
externalSourceData
extractCandidateLayoutsForElementArrayBufferWithItem:dataStructs:dataBuffer:preferredDataStruct:bufferType:
extractCandidateLayoutsForUniformBufferWithItem:dataStructs:dataBuffer:preferredDataStruct:bufferType:
extractUniformBlockDataLayout:dataStructs:bufferOffset:
fileExistsAtPath:
fileURLWithPath:
filteredArrayUsingPredicate:
findingDescription
findingPool
findingStatisticsKeyToResourceTypeMap
findings
firstValidTextureImage
floatValue
format
formatPerfDescription:timingPercentageAverage:timingBaseTimeAverage:resultsUpdated:
formattedAttributeData:forComponent:forIndex:
formattedDataAtIndex:
formattedDataAtIndex:packedComponentIdx:
fragmentCount
fragmentCountPercentage
fragmentShaderInfo
fragmentSource
fragmentTiming
frameBufferObject
functionEnum
functionIndex
functionStreamModifiers
future
futureWithResult:error:
generalSection
generateAllResourcesGroupForAPIItem:boundOnly:
generateArrayVariable:ForArgument:
generateLabel
generateModelIncludingUnusedResources:error:
generateProgramGroup:isPipeline:withParent:
generateProgramPerformanceTree
getAttributes
getBindPointForResourceItem:
getCastForArgument:inFunction:
getDeviceOrientation
getDisplayLinkInfo
getElementAttribute
getGenericFormatForGLFormat:type:format:
getMarker:markerText:
getMarkerStackDepth
getParameter:ofTexture:
getParameterAsGLuint4:ofTexture:
glTypeToStructTypeOutputFormatTypeAlias:
globalStateManager
glslVersion
gpuNameForAPIItem:
gpuVendorForAPIItem:
gtShaderProfilerResult
handleAppSessionTransportMessage:
handleCaptureSessionFinalization:
handleDocumentChanged:shaderItem:
handleFindingsOnQueue:handler:
handleNotification:
hasBeenLinked
hasPrefix:
hasResourceStreamer
hasStateMirror
hash
height
hexStringWithLength:
iconNameForNodeType:
identifier
image
imageForNode:
imageIconNamed:ofSize:
imageToExportToFile
imageToUseInDefaultQuickLookForNode:
imagesFromProperties:
index
infoDictForProgram:container:
init
initBuffer:context:target:offset:size:internalID:
initNSUnarchiverClassTranslationMappings
initProgramWithController:parent:programID:isPipeline:stateMirrorObject:containerID:sharegroupID:identifier:
initRenderbuffer:context:internalID:
initShaderWithParent:shaderType:infoLog:identifier:sharegroupID:
initTexture:context:target:internalID:
initUpdateWithType:objectID:containerID:changes:
initWithAdaptors:preferredAdaptor:apiItem:typeNameProvider:
initWithAppleInternalContextFilter
initWithArchive:fileSuffix:copyDataFiles:
initWithAttachmentEnum:stateMirror:
initWithBlockBinding:
initWithBuffer:apiItem:typeNameProvider:
initWithCapacity:
initWithCaptureDeviceInfo:appName:appArguments:analyzerFindings:
initWithCaptureStore:
initWithCaptureStore:resourceStreamer:
initWithCaptureStore:resourceStreamer:deviceInfo:platformSDK:
initWithCoder:
initWithConfigData:withPlaybackDeviceInfo:
initWithContext:program:shaderType:source:
initWithContextStateMirror:andContextInfo:
initWithController:parent:
initWithController:parent:functionIndex:displayIndex:
initWithController:parent:functionIndex:displayIndex:displayableType:
initWithController:parent:identifier:groupType:functionIndex:descText:
initWithController:parent:objectID:stateMirrorObject:containerID:sharegroupID:identifier:type:
initWithController:variablesViewContentProviderClass:pluginFactory:
initWithDataItem:
initWithDataValue:type:
initWithDebuggerController:
initWithDelegate:withCase:withAnalyzerEngine:
initWithFBO:
initWithFilterStrings:andType:andSource:
initWithGuestApp:device:deferLaunch:
initWithIdentifier:andWorkspaceUIState:
initWithInvestigatorCaseConfigData:controller:
initWithItem:resource:overlayResources:modelFactory:textureImageGroupComponent:
initWithLinkedSource:shaderType:context:
initWithLocation:objectType:objectID:internalID:textureLevel:textureLayer:cubemapFace:
initWithName:dataStruct:dataBuffers:combinedView:geometryParams:markers:
initWithProperties:
initWithQueue:block:
initWithReportEditor:
initWithRepresentedObject:
initWithResource:
initWithResource:level:layer:textureImageGroupComponent:
initWithResource:modelFactory:attachment:overlayResources:attachmentInfo:
initWithResource:overlayResources:modelFactory:textureImageGroupComponent:
initWithText:badgeType:
initWithUniformType:offset:matrixStride:isRowMajor:
initialize
initiateReplaySession:
installNewRootFromChildrenOnceExpandedChildrenAreLoaded:
instanced
instantiateControllerWithIdentifier:
intValue
integerValue
internalFormat
internalID
invalidOverrides
invalidate
invalidateDeviceCache
invalidateWithReason:
invalidationBacktrace
investigationProgress
investigatorCase
investigatorConfigForDeviceInfo:
investigatorFinding
investigatorReportResourceWithResourceType:objectID:analyzerFinding:investigatorFinding:
irSourceForFile:shaderType:
irSourceForShaderType:
isActive
isAttachmentWritable:
isClosed
isDepthDisplayElement
isDeviceBusy
isDisassemblerAvailable
isEqual:
isEqualToString:
isFragmentShaderMostExpensive
isFramebufferAttachment:
isGroupMarkerCall
isIndexed
isInstanced
isInvestigatorReady
isKindOfClass:
isLegacyDevice
isMemberOfClass:
isPipeline
isPresentFrameEnabled
isPrimitiveRestartEnabled
isResourceItemBoundAt:resourceItem:
isRowMajor
isRuntimeOSAppleInternal
isSimulatorDevice
isStatic
isStencilDisplayElement
isTopLevelNode
isViewLoaded
itemForUUID:
kase
keyForResourceWithID:type:containerID:
keyWithSharegroupID:
kind
label
labelForBufferTarget:bufferName:apiLabel:
labelForImageResource:
labelForObject:context:target:
labelForQueueID:
labelForThreadID:
languageIdentifier
lastDisplayableItem
lastObject
launchParameters
launchSession
layerIndex
length
limits
lineNumber
linked
loadCaptureStoreData:
loadClientDataBufferFromArchive:offset:functionIndex:
loadDeviceResource:sharegroup:functionIndex:
loadOutlineImageWithContainerID:functionIndex:
loadOutlineImageWithContainerID:functionIndex:subCommandIndex:
loadResourceItem:subCommandIndex:resolution:options:
loadResourceItem:withResolution:
loadResourceItem:withResolution:subCommandIndex:
loadResourceItem:withStateMirror:
loadResourceItem:withStateMirror:options:
loadResourceWithPixel:pixelFormat:
loadResourceWithType:containerID:stateMirrorObject:functionIndex:
loadSolidImageWithContainerID:functionIndex:
loadSolidImageWithContainerID:functionIndex:subCommandIndex:
loadStringForURL:variableName:bufferType:
loadTextureImageBackingStore:creationClass:
loadTexturesWithDescriptors:
loadThumbnailBatchWithContainerID:resourceInfo:
loadThumbnailImageWithResourceInfo:
loadView
loadWireframeImageWithContainerID:functionIndex:
loadWireframeImageWithContainerID:functionIndex:subCommandIndex:
localizedStringForKey:value:table:
localizedStringWithKey:andComment:
locateDisplayableItemToDraw:
location
logAspect
logAspectWithName:
longLongValue
longValue
magFilter
mainBundle
mainDrawableID
mapTableWithKeyOptions:valueOptions:
matrixStride
maxLengthStringForFormat:
maxNumExperiments
maxNumberOfVertices
messageHandler
minFilter
minNumberOfVertices
mipmapLevel
modelFactory
modelFuture
modifiedCaptureArchive
mutableChildNodes
mutableCopy
mutableCopyWithZone:
name
nameForType:rows:components:decorative:
nameForVariable:
navigableItem_name
newDataProviderForShaderDataItem:
newGuestAppSessionWithGuestApp:device:deferLaunch:error:
newShaderProfilerWithDelegate:
newSourceWithQueue:
node
notifyOnQueue:handler:
notifyUnusedResourcesStreamAvailable
numElements
numSamples
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectID
objectPayload
objectType
offset
onShaderEditContinueBegin
onShaderEditContinueEndWithCompleted:
openFileWithFilename:error:
openGLAPI
outlineItem
outlineSupportsShaderProfiling
outlineTexture
overviewSamplePeriod
overviewSamplesAreReady
parent
path
perLineSourceInfoDictForShaderBinary:baseData:
perLineSourceInfoDictForShaderType:baseData:
performPreCaptureVisitActions
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performUpdateWithResource:
playWithExperiments:
playbackDeviceInfo
plistPayload
populateObjectFromResource:
postNotificationName:object:userInfo:
preamble
predicateWithBlock:
prepareCaptureArchive:withDestinationName:
presentError:
previousDisplayableItem
primitiveCount
primitiveInvalidate
primitiveRestartEnabled
processAllBoundObjectsForFunction:withBlock:
processAllObjectsOfType:withBlock:
processBoundBuffersForFunction:withBlock:
processBoundFramebuffersWithBlock:
processBoundProgramWithBlock:
processBoundTexturesWithBlock:
processBoundTransformFeedbackObjectWithBlock:
processBoundVertexArraysWithBlock:
processFunction:functionIndex:
productType
profilingFlags
profilingSendPeriod
programInfoWithId:
programItem
programObjectFromProgramItem:shaderType:
programPerformanceTotalItem
programPipelineInfoWithId:
properties
provideScopeChoices:
purgeResources
queueTraceSessionEstablishedJobWithId:queue:handler:
rasterSampleCount
rasterizationRateMap
readGLTransformFeedbackVaryings:containerStruct:dataBuffers:
readGLVertexAttribute:containerStruct:dataBuffers:
readGLVertexAttributes:containerStruct:dataBuffers:
realFunctionIndexForIndex:
recommendation
recordError:
recordShaderEdit:
redFlagAnalyzerFindings
refreshShaderAnnotations
registerDefaults:
releaseEditorDocument:
relinquishAutomatedDebugState
removeAllObjects
removeItemAtURL:error:
removeLastObject
removeObject:
renderBufferObjectFromInternalID:
renderJobClass
renderer
renderers
renderingAttributes
replaceChildValueAtIndex:withValue:
replaceDataOfFile:withData:error:
replayController
replaySession
replayToFunctionIndex:withFutureResult:
replayWithExperiment:baseCaptureArchivePath:playbackMessageHandler:
reportBufferViewerTypeUsage:
reportData
reportDataSetObject:forKey:
reportExperimentResults:
reportFatalError:
reportItem
reportResults
representedObject
requestAutomatedDebugState:
requestProfilerData
requestWorkspaceIndex
resetDebuggerTraceSession
resetEmbeddedReplaySession
resetReportEditorStateThatDependsOnTheInvestigatorCase
resetResourceManagerWithResourceStreamer:
resolution
resource
resourceInfoForResource:
resourceInfoForResource:level:layer:
resourceItemOfType:resourceID:forFunctionIndex:
resourceObject
resourceObjectWithCompletionHandler:
resourceType
respondsToSelector:
result
resume
retain
retainCount
retrievalContextID
retrieveArchivedDataForKey:error:
rewriteArgument:
rewriteReceiver:
rewriteURL:
rewriteVariable:receiver:
runShaderProfiler:
sampleInfoForShaderType:baseData:
selectedScopeTag
self
separable
setAllowedUnits:
setAllowsNonnumericFormatting:
setAnalyzerFindings:
setApiCallCount:
setAttachmentInfo:
setBaselineTotalFrameTime:
setBuffer:
setBufferViewerViewController:
setCaptureSessionInfo:
setCheckGLErrors:
setCompact:
setConfigData:
setCountStyle:
setCreationBacktrace:
setCurrentAutomaticItem:
setCurrentTotalFrameTime:
setData:
setDataItem:
setDataOffset:
setDecodedFunctionPointer:
setDefaultShaderItem:
setDelegate:
setDepthResourceObject:
setDifference:
setDisplayableCallCount:
setDivisor:
setDocument:
setDrawFunctionIndex:
setElementCount:
setEmitFunctionComments:
setEmitHiddenReceiverArgument:
setEmitTypeSuffixes:
setError:
setExpand:
setExtensions:
setFenumsWithErrors:
setFormat:
setFrame:
setFunctionIndex:
setGenerateBoundResourceFilterItems:
setIdentifier:
setIncludeDriverEventsInTrace:
setIncludesCount:
setIncludesUnit:
setIndexed:
setInfoDictForProgram:dict:container:
setInstanced:
setInvalid:
setInvalidReason:
setInvestigationPhaseDescription:
setInvestigationProgress:
setInvestigatorCase:
setInvestigatorCaseConfigData:
setIsInvestigatorReady:
setItemDescription:
setItemDescriptionHasChanged:
setLabel:
setLastActiveTimestamp:
setLine:
setMaxNumberOfVertices:
setMaximumFractionDigits:
setMaximumFrameTime:
setMessage:
setMessageHandler:
setMinNumberOfVertices:
setMinWarningLevel:
setMinimumFractionDigits:
setModelFactory:
setName:
setNode:
setObject:forIntKey:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectID:
setObjectType:
setOutline:
setOutlineTexture:
setPercentage:
setPercentage:forMonitor:
setPercentage:forMonitor:withMessage:
setPlaybackRunning:
setPrependReceiverArgument:
setPreviousDisplayableItem:
setPrimitiveCount:
setPrimitiveRestartEnabled:
setProfilingFlags:
setProfilingSendPeriod:
setQuickLookData:
setRasterizationRateMap:
setReportItem:
setRepresentedObject:
setResourceManager:
setResult:
setRetrievalContext:
setRetrievalContextID:
setRunning:
setSelectedLayer:
setSelectedMipmapLevel:
setSeverity:
setShadersUpdatable:
setSharedUIStateObj:
setShowAsHex:
setSolidTexture:
setStateValue:withName:withType:withItemDescription:
setStencilResourceObject:
setStride:
setSubcomponentOffset:
setTargetFPS:
setTimestamp:
setTotalCompletedExperiments:
setTotalFramePercent:
setTraceMode:
setType:
setUpdatedResourcesDict:
setUsesGroupingSeparator:
setValue:
setValueHasChanged:
setView:
setWireframeTexture:
setupCaptureSession:
setupCaptureSessionInfoWithArchive:
setupChildrenForAllResourceGroup:resourceType:
setupChildrenForBoundResourceGroup:resourceType:
setupGuestAppSession:
shaderAnalyzerResultForShaderType:baseData:
shaderAnnotations
shaderBinaryCostForFile:shaderType:
shaderBinaryCostForShaderType:
shaderCyclesForShaderType:
shaderItem
shaderPrecisionsFormats
shaderProfilerResults
shaderProfilerResultsBase
shaderProfilerResultsHaveBeenUpdated
shaderReloadProgressDigest
shaderSourceChanged:
shaderSourceForProgramInfo:atFunctionIndex:
shaderTimingForShaderType:
shaderType
shaderTypeForShaderBinaryKey:baseData:
sharedArchiveManager
sharedManager
sharedTrace
sharedUIStateObj
sharegroupID
sharegroupIdentifier
sharegroupResourceDictionaryForSharegroupID:
showAsHex
showResource:
size
solidTexture
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
source
sourceCode
sourcePath
standardUserDefaults
start
stateMirror
stateMirrorForTraceItem:
stateMirrorObject
statistics
stencilResourceObject
storeAdjunctData:filename:error:
storyboardWithName:bundle:
streamDictAtFunctionIndex:
stride
string
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringFromNumber:
stringValue
stringWithCString:encoding:
stringWithCapacity:
stringWithContentsOfFile:encoding:error:
stringWithContentsOfURL:encoding:error:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subcomponentOffset
subeditorClassForResourceItem:
substringFromIndex:
superclass
supportsInvalidationPrevention
supportsInvestigator
supportsSecureCoding
synchronousJobQueue
synopsis
tabUIModeIsADebuggerMode
target
text
textMode
textureCubemapFace
textureImageForMipmapLevel:layer:
textureImageKeyForLevel:layer:
textureLayer
textureLevel
textureObjectFromInternalID:
timing
toolsInfo
totalCompletedExperiments
totalDisplayableCount
totalFrameRateArray
traceFunction:error:
traceMode
traceSession
traceSessionEstablishedWithNewArchive:
tracer
transport
type
typeOutputFormatTypeAliasForGLFormat:numComponents:
typeStringForArgumentType:
uint32Result
unarchiveDictionaryForKey:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
uniformType
unloadStringForURL:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateCurrentLocation:
updateDisplayedFindingsWithMCSInfo:
updateFilteredList
updateInvalidView
updateProgress
updateReportWithAdditionalInfo
updateReportWithCPUAndGPUActiveTimes
updateReportWithCaseData:
updateReportWithRedFlagAnalyzerFindings
updateReportWithResultAndFindingsInfo
updateReportWithSectionForCaseData:
updateReportWithSessionInfo
updateResource:sharegroup:
updateShaders
updatedResourceWithType:objectID:containerID:changes:
updatedResources
updatedResourcesDict
userInfo
usingModifiedArchive
valid
value
valueForKey:
valueForLimit:
variablesView
vendor
vertexCount
vertexCountPercentage
vertexInfoLog
vertexProgram
vertexShaderInfo
vertexSource
vertexTiming
view
viewDidLoad
viewWillLayout
visitCaptureArchive:
visitFunctionStreamFile:
wantsDerivedCounters
warningLevel
weight
weightSegStart
width
willChangeValueForKey:
wireframeTexture
wrapR
wrapS
wrapT
writeToURL:atomically:encoding:error:
zone
isDisassemblerAvailable
-[GPUGLTraceOutline initWithDebuggerController:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLTraceOutline.mm
((archive)) != nil
%@ should not be nil.
(archive)
v32@?0@"GPUTraceProgramGroup"8Q16^B24
children
v8@?0
-[GPUGLTraceOutline _openFilenames:archive:filesArray:]
((filename)) != nil
(filename)
-[GPUGLTraceOutline visitFunctionStreamFile:]
((streamData)) != nil
(streamData)
_captureStream == nullptr
-[GPUGLTraceOutline _handlePushGroupMarker:]
function.core.arguments[2].sem_type == Argument::Type::CString
marker parameter is not a string
@"NSSet"8@?0
v24@?0r^{GPUGLBindPoint=IIiiII@}8r*16
Context %lu
Thread %lu
%@ | %@
 - %s
-[GPUGLTraceOutline _derivedStateMirrorFromStateMirror:forFunctionIndex:fromFunctionIndex:]
If we've reached this point, something is very wrong
shareGroups
OpenGL 2.1
OpenGL 3.2 Core Profile
OpenGL ES 1.1
OpenGL ES 2.0
OpenGL ES 3.0
fenum 0x%x: reached end of stream within open association chain
fenum 0x%x: function stream is corrupted
vector
GPUGLVAOEditor
GPUGLVBOEditor
GPUImageSubEditor
GPUQueryEditor
GPUTraceGLSourceSubEditor
DYGLExpertFinding
GPUGLRenderJob
-[GPUGLModelFactory programObjectFromProgramItem:shaderType:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLModelFactory.mm
shaderEnum == 0x8B31 || shaderEnum == 0x8B30
Unexpected shader type
v16@?0@"<DYResource>"8
-[GPUGLModelFactory establishResource:forProgramChildren:containerID:]
false
Unsupported shader type
Name
Format
Width
Height
Number of Samples
Min Filter
Mag Filter
Wrap S
Wrap T
Wrap R
Internal Format
%llu
Depth
GPUDebuggerExpert
OpenGLES
target fps
overviewSamplesAreReady
v32@?0@8@"NSDictionary"16^B24
overviewSamples
appFrameRate
inferiorSession.updatedResourcesChangeCount
guestAppSession Settings: %llx, %llu, %u
invalidated
running
v20@?0i8@12
v32@?0@"NSData"8Q16^B24
identifier
timestamp
Overview Trace profile data received.
-[GPUGLDebuggerController analyzeStoredCaptureArchive]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLDebuggerController.mm
DYFKReportExtensionsUsed
-[GPUGLDebuggerController analyzeStoredCaptureArchive]_block_invoke
(strongSelf) != nil
strongSelf
v16@?0@"DYAnalyzerFinding"8
-[GPUGLDebuggerController handleCaptureSessionFinalization:]
contextsInfo != nullptr
CaptureBezel_2only_@2x
ipad
~ipad
Background Image sent to replayer
GPU Frame Debugger has encountered a problem while preparing to investigate your bottleneck.
v16@?0@"DYTransportMessage"8
-[GPUGLDebuggerController _runExperiment:]_block_invoke_3
Received nil message from replayer
__objc_no
Called DVTWarn
B24@?0@"DYTransportMessage"8@"NSError"16
expert.case: %@, _expertCase: %@, 
expert.kase.configData: %@, 
_expertCaseConfigData:%@ 
capturedeviceInfo: %@, 
playbackdeviceInfo: %@:
runExpert
v16@?0@"GPUInferiorSession"8
-[GPUGLDebuggerController _beginAnalysis]
GPUExpert analysis requested but replayer is not running or is not ready
-[GPUGLDebuggerController _beginAnalysis]_block_invoke_2
failed to initiate replay session when attempting to analyze
Replay Controller ready to replay experiments.
expert setup: case: %@, 
configData: %@, 
capturedeviceInfo: %@, 
playbackdeviceInfo: %@:
 (updateProgress) curph<%d> numphases<%d> cw<%d> tw<%d> fouter<%f> fupw<%f> fspc<%f> fip<%f> fprog<%f>
 (_beginExperiment) currentExperimentInBlock<%d>
 (_endExperiment) currentExperimentInBlock(preinc)<%d>
 (beginPhaseBlockWithNumPhases) numphases<%d>
 (endPhaseBlock)
Finished Expert!
 (beginPhase) index<%d> desc<%@>
 (endPhase) index<%d> desc<%@>
B24@?0@8@"NSDictionary"16
-[GPUGLDebuggerController reportFatalError:]_block_invoke
expert controller: error received: %@
kGPUGLDebugMenuUpdateShadersNotification
Unknown
Reloading Shaders
Reloading Shaders: Failed
Reloading Shaders: Reloading resources
%@vec%lu
%@mat%lu
%@mat%lux%lu
Invalid
uint8
int8
uint8Normalized
u8Norm
int8Normalized
i8Norm
hex8
bool
uint16
int16
uint16Normalized
u16Norm
int16Normalized
i16Norm
hex16
half
uint32
int32
uint32Normalized
uNorm
int32Normalized
iNorm
hex32
float
uint64
int64
uint64Normalized
u64Norm
int64Normalized
i64Norm
hex64
double
uint10101012
int10101012
float111110
float9995
uint
uint4444
Index Buffer
GPUBufferViewerViewController
GLES: Vertex Buffer Object
GPUBufferViewerAdaptorDataSourceProvider
GPUBufferViewerBasicAdaptor
GLES: Element Array Buffer
Index
Line
Triangle
 (16 bit)
 (32 bit)
 (8 bit)
GLES: Uniform Buffer Object
basic_string
 Total
Program Performance total label
q24@?0@"GPUTraceProgramGroup"8@"GPUTraceProgramGroup"16
v32@?0@8Q16^B24
GL_MAX_VERTEX_ATTRIBS
context
objectID
label
target
minFilter
magFilter
wrapS
wrapT
wrapR
generateMipmap
baseLevel
maxLevel
maxAnisotropy
compareMode
compareFunc
swizzleR
swizzleG
swizzleB
swizzleA
minLod
maxLod
immutableFormat
immutableLevels
maxLevelSpecified
internalID
images
mipLevelsUsed
level
layerIndex
border
internalFormat
width
height
format
type
offset
engineFormat
engineType
genericFormat
backing store
separable
infoLog
linkStatus
vertexSource
fragmentSource
vertexInfoLog
fragmentInfoLog
hasBeenLinked
activeProgram
vertexShader
fragmentShader
validateStatus
shaderType
compileStatus
currentSourceIsCompiled
compiledSource
source
size
usage
data
readBuffer
v12@?0I8
attachments
GL_MAX_DRAW_BUFFERS
drawBuffers
elementArrayBuffer
attributes
index
attributeType
dataType
stride
pointer
arrayBuffer
clientDataOffset
clientDataURL
normalized
integer
divisor
paused
active
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
bufferBindings
buffer
resultAvailable
result
isClientData
GLES: Vertex Array Object
container
Vertex Attributes
GLES: No data
GLES: Transform Feedback
Transform Feedback
OpenGL ES errors
serious performance issues
these
an OpenGL ES error
a serious performance issue
this
The captured frame of OpenGL ES contained %@. You should correct %@ before analyzing performance to receive accurate results.
v32@?0@8@16^B24
-[GPUGLInvestigatorReportProvider updateDisplayedFindingsWithMCSInfo:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLInvestigatorReportProvider.mm
[_mapFindingToViewNeedingMCS count] > 0
The program with the most costly fragment shader is:
most costly shader header
v32@?0q8@16^B24
ARRAY_BUFFER
ATOMIC_COUNTER_BUFFER
COPY_READ_BUFFER
COPY_WRITE_BUFFER
DRAW_INDIRECT_BUFFER
DISPATCH_INDIRECT_BUFFER
ELEMENT_ARRAY_BUFFER
PIXEL_PACK_BUFFER
PIXEL_UNPACK_BUFFER
SHADER_STORAGE_BUFFER
TRANSFORM_FEEDBACK_BUFFER
UNIFORM_BUFFER
%@ (Buffer Name: %@)
4294967295
-2147483648
-32767
65535
-128
-3.402823e+38
-6.550400e+04
-32767.999994
1024.000000
 -512.000000
Unknown buffer format.
inv.fmt
-[GPUGLVertexAttributes populateObjectFromResource:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLGeometryBufferCommon.mm
((pContext)) != nil
(pContext)
Element
Texture[%d]
Attrib[%d]
-[GPUGLTransformFeedbackVaryings populateObjectFromResource:]
[%d]
position
texcoord
normal
color
weight
matrixindex
pointsize
generic
x[%d]
y[%d]
z[%d]
w[%d]
Xcode.SourceCodeLanguage.GLSL
Xcode.GPUDebuggerFoundation.invalidFunctionSourceURLMessage.GL
programInfoDict
shaderProfilerResults
v16@?0@"NSNotification"8
Xcode.GPUDebuggerFoundation.kGPUProgramLinkNeverAttempted
%@%@
vert
frag
totalCost
perLineCost
COST: %u:1: %.1f, %.1f
v32@?0@"NSNumber"8@"NSNumber"16^B24
(ERROR|WARNING|COST): (([[:digit:]]+):([[:digit:]]+): )?(.*)
WARNING
ERROR
COST
%.1f%%
Cost for all draws = %.1f%%
Cost for this draw = %.1f%%
Disassembly not available!
.vss
.fss
Path: %@
Xcode.GPUDebuggerFoundation.kGPUProgramLinkedHeader
Xcode.GPUDebuggerFoundation.kGPUProgramUnlinkedHeader
Result: Not Available (Currently running)
Result: %s
%u %@
<data>
"%@"
%@: _displayableCallIndex: %d
q24@?0@8@16
v32@?0@"NSNumber"8Q16^B24
-[GPUGLTraceDisplayableItem _startLoadingDisplaySet]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLTraceDisplayableItem.mm
Couldn't get current FBO
-[GPUGLTraceDisplayableItem _startLoadingDisplaySetElement:]
Unimplemented resourceRealize for attachment type: %u
NSBundle *_GPUDebuggerIOSSupportBundle()
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUDebuggerGLSupportBundleAdditions.mm
((bundle)) != nil
(bundle)
bundle != [NSBundle mainBundle]
Draw 
Read 
Stencil
Color %u
%s%@
Xcode.GPUDebugger.VertexProgramPrefix
Xcode.GPUDebugger.FragmentProgramPrefix
Offset: 0x%llx
, %llu samples
%s #%llu
%s (#%llu)
Xcode.GPUDebugger.BufferPrefix
Xcode.GPUDebugger.TexturePrefix
Xcode.GPUDebugger.RenderbufferPrefix
Xcode.GPUDebugger.VAOPrefix
Xcode.GPUDebugger.XFBPrefix
Xcode.GPUDebugger.ProgramPrefix
Xcode.GPUDebugger.ShaderPrefix
%s %@ %s
%@ Disassembly
Program Pipeline
Program
(Depth)
(Stencil)
-[GPUGLStateMirror _addObjectToParent:objectID:objectInternalID:target:attachment:indexType:context:prefix:annotations:]
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLStateMirror.mm
Unknown target %d
-[GPUGLStateMirror _currentContextInfoFromOutlineItem:]
currentContextInfo != nullptr
Context not found
-[GPUGLStateMirror setupChildrenForAllResourceGroup:resourceType:]
Unknown resource type
-[GPUGLStateMirror setupChildrenForBoundResourceGroup:resourceType:]
v20@?0I8^i12
Texture
Renderbuffer
decoded function has unknown context or drawable ID, unable to process in state mirror: index=%d, fenum=%s, context=%llu, drawable=%llu, internal=%u
unexpected command
unknown or unsupported uniform component type: %s (%d)
v24@?0^v8^v16
 Attachment
%@: %@
Error Status
Color
Blending
Alpha Test
Multisampling
Active Texture Unit
Texture Environment
Vertex Attribute Values
Matrix
Culling
Viewport
Scissor
Clip Distance
Clip Plane
Polygon Offset
Light Model
Lights
Material
Point Params
PixelStore
Misc
Depth Range
Active Texture
Client Active Texture
Test Enable
Clear Value
Function
Value Mask
Ref Value
Fail Action
Depth Fail Action
Depth Pass Action
Write Mask
Back Function
Back Value Mask
Back Ref Value
Back Fail Action
Back Depth Fail Action
Back Depth Pass Action
Back Write Mask
Blend Enable
Source function (RGB)
Dest function (RGB)
Equation (RGB)
Source function (A)
Dest function (A)
Equation (A)
Blend Color
Cull face
Cull face mode
Front face
Line width
Dithering
Rasterizer Discard
Primitive Restart Fixed Index
Mipmap Hint
Fragment Shader Derivative Hint
Unpack Row Length
Unpack Skip Rows
Unpack Skip Pixels
Unpack Alignment
Unpack Image Height
Unpack Skip Images
Pack Row Length
Pack Skip Rows
Pack Skip Pixels
Pack Alignment
Factor
Units
Offset Fill Enable
Enable Alpha To Coverage
Coverage
Coverage Value
Enable Coverage Invert
Scissor Test
Scissor Box
Vertex Attribute
Alpha Test Enable
Alpha Test Func
Alpha Test Ref
Clip Plane Enable
Clip Plane Value
Clip Distance Enable
Fog Mode
Fog Density
Fog Start
Fog End
Fog Color
Fog Hint
Light Enable
Ambient Color
Diffuse Color
Specular Color
Emissive Color
Light Position
Spot Direction
Spot Exponent
Spot Cutoff
Constant Attenuation
Linear Attenuation
Quadratic Attenuation
Two Sided Lighting Flag
Global Ambient Light
Shininess
Color Material
Projection Matrix
Modelview Matrix
Texture Matrix
Matrix Palette Enable
Current Palette Matrix
Matrix Palette Entry
Point Sprite Enable
Current Point Size
Point Size Min
Point Size Max
Point Size Threshold Size
Point Size Distance Attenuation
Texture 2D
Texture Environment Mode
Texture Environment Color
RGB Combine Operation
Alpha Combine Operation
Source 0 RGB
Source 1 RGB
Source 2 RGB
Source 0 Alpha
Source 1 Alpha
Source 2 Alpha
Operand 0 RGB
Operand 1 RGB
Operand 2 RGB
Operand 0 Alpha
Operand 1 Alpha
Operand 2 Alpha
RGB Output Scale
RGB Alpha Scale
Point Sprite Coord Replace
Texture Level of Detail Bias
Current Color
Current Normal
Current Texture Coord
Uniform Binding
Uniform Block Data Size
Shader Bitmask
Type
Num Components
Immutable Format
Immutable Levels
Texture Wrap S
Texture Wrap T
Texture Wrap R
Texture Swizzle R
Texture Swizzle G
Texture Swizzle B
Texture Swizzle A
Min LOD
Max LOD
Max Anisotropy
Base Level
Max Level
Mipmap Generation Flag
Texture Compare Mode
Texture Compare Func
Compressed Data Size
Size
Usage
Access Flags
Is Buffer Mapped
Mapped Offset
Mapped Length
Buffer Map Pointer
Samples
Retained Backing
Layer Backing
Attachment Object Type
Attachment Object Name
Attachment Texture Level
Attachment Cube Map Face
Attachment Texture Layer
Shader Type
Delete Status
Compile Status
Link Status
Program Binary Retrievable Hint
Transform Feedback Buffer Mode
Transform Feedback Varyings
Separable Program Flag
Transform Feedback Paused
Transform Feedback Active
Transform Feedback Buffer Binding
Target
Result
Result Available Flag
Status
Condition
Flags
Element Array Buffer Binding
Array Buffer Binding
Copy Read Buffer Binding
Copy Write Buffer Binding
Pixel Pack Buffer Binding
Pixel Unpack Buffer Binding
Enabled
Normalized
Stride
Integer
Divisor
Pointer
Buffer Binding
Vertex Attrib
Vertex
Normal
Texture Coord
Point Size
Matrix Index
Weight
NSMutableArray *_GetUniformQuickLookData(const GPUGLSMTypes::Uniform *)
GPUDebugger/GPUDebugger/GPUDebuggerGLSupport/GPUGLVariablesViewContentProvider.mm
Data for %ix%i uniform (%s) should be %i, but is %lu
Unavailable
Location (%d)
GPUShaderProfilerHarvestDrawCallFootprint
None
GL_NONE
Unknown Enum (%d)
Never
Always
Less
LessEqual
Greater
GreaterEqual
Equal
NotEqual
Subtract
RvsSubtract
Linear
Exp^2
Keep
Zero
IncW
DecW
SrcColor
(1 - SrcColor)
DstColor
(1 - DstColor)
SrcAlpha
Saturate(SrcAlpha)
(1 - SrcAlpha)
DstAlpha
(1 - DstAlpha)
BlendColor
(1 - BlendColor)
BlendAlpha
(1 - BlendAlpha)
Front
Back
Front And Back
%s - %s
Texture Unit %d
%@0x%02x
 (0x%02x)
 - WriteMask(0x%02x)
%@%@ - (%@, %@, %@) %@
( %@ )/( %@ )
(SrcAlpha*%@)
(SrcColor*%@)
(DstAlpha*%@)
(DstColor*%@)
%@ + %@
%@ - %@
Min(%@, %@)
Max(%@, %@)
%@ ? %@
Result.rgba = %@, Color%s
Result.rgb = %@, Result.a = %@, Color%s
Disabled
%@, Write %@, Clear (%f)
%@, %@
Write (%@%@%@%@%@), Clear %s
On, Factor(%f), Units(%f)
Coverage(%f%@%@)
, Inverted
, Alpha
Default Coverage
On, %s
No GL Error
Invalid Enum
Invalid Value
Invalid Operation
Stack Underflow
Stack Overflow
Out Of Memory
Unknown Error
On, %@%.3f
No Clip Planes Enabled
%d Clip Plane%s Enabled
On, Degenerate (%f, %f, %f, %f)
On, Normal (%f, %f, %f), Dist (%f)
No Clip Distances Enabled
%d Clip Distance%s Enabled
On, %@, Range (%f - %f), Color (%0.2f, %0.2f, %0.2f, %0.2f)
On, %@, Density (%f), Color (%0.2f, %0.2f, %0.2f, %0.2f)
On, No Lights Enabled
On, %d Light%s Enabled
Directional(%f, %f, %f)
On, %@
%@, Am(%0.2f, %0.2f, %0.2f, %0.2f)
Two-Sided
Single-Sided
Am (%0.2f, %0.2f, %0.2f, %0.2f), Df (%0.2f, %0.2f, %0.2f, %0.2f), Sp (%0.2f, %0.2f, %0.2f, %0.2f), Em (%0.2f, %0.2f, %0.2f, %0.2f), Sh (%0.2f)
Perspective Projection
Degenerate
Identity
Scale
%@, Scale
Reflection
%@, Reflection
Rotation
%@, Rotation
Translation
%@, Translation
Project onto Line
Project onto Plane
Affine
Projection (%@)
%@, Modelview (%@)
%@, Texture%d (%@)
%@, Palette%d (%@)
Sprite (%@), Size (%0.3f), Range (%0.3f - %0.3f), Fade (%0.3f)
%@, Atten (%0.3f, %0.3f, %0.3f)
.rgb
.rgba
tex[%d]
envColor
primColor
prev
(1 - %@%@)
%@.a
(1 - %@.a)
%@ * %@
%@ + %@ - 0.5
mix(%@, %@, %@)
dot(2.0 * (%@ - 0.5), 2.0 * (%@ - 0.5))
(%@) * %0.1f
out.rgba = %@
out.rgb = %@, out.a = %@
%@, envColor (%0.2f, %0.2f, %0.2f, %0.2f)
%@, LODBias (%0.3f)
%@, CoordReplace - On
No Texture Units Enabled
%d Texture Unit%s Enabled
Normal (%0.3f, %0.3f, %0.3f)
%@, Color (%0.2f, %0.2f, %0.2f, %0.2f)
%@ TexCoord%d (%0.2f, %0.2f, %0.2f, %0.2f)
GL_ZERO
GL_ONE
GL_NO_ERROR
NoError
GL_POINTS
Points
GL_LINES
Lines
-[GPUGLVariablesViewContentProvider _addContextState:toArray:unitIndex:]
((pCtx)) != nil
(pCtx)
((pStateGroupInfo)) != nil
(pStateGroupInfo)
%@[%d]
%@%d
Clip Plane 
GL_CLIP_PLANE
Clip Distance 
GL_CLIP_DISTANCE
Extensions
int32_t bindingForTarget(int32_t)
code which should be unreachable has been reached
q24@?0@"NSNumber"8@"NSNumber"16
Binding: %d
v16@?0I8I12
i12@?0I8
%s[%d]
Does not exist.
Layer #%d
"%@" (#%d)
Texture #%d
Does not exist
Parameters
Level #%d
%s:%d
Sampler:%d
Sampler #%d
Transform Feedback Object #%d
Start
Active
Paused
Buffer #%d
Renderbuffer #%d
Depth Attachment
Stencil Attachment
Color Attachment %d
Renderbuffer #%d "%@"
Texture #%d "%@", Level %d
Texture #%d, Level %d
Framebuffer #%d
Draw Buffers
%u Active
Shader #%d
Program #%d Performance
Vertex Shading
Fragment Shading
Program Duration
@"<DYPVariablesViewGPUStateValue>"8@?0
Draw #%i Duration
%.1f
Fragments:Vertices
Draw #%i Fragments:Vertices
Shader Duration
%i (%.1f%%)
Fragments Shaded
Time per Fragment
Draw #%i Fragments Shaded
Vertices Processed
Time per Vertex
Draw #%i Vertices Processed
%@Program #%d
Program #%d
Active Uniforms
%u Uniform%s
Active Uniform Blocks
%d Uniform Block%s
Active Attributes
%d Attribute%s
Location(%d)
Attribute Bindings
%lu Binding%s
Program Pipeline #%d
Vertex 
Fragment 
Active 
Vertex Array Object #%d
0x%08llx
Warning: There are no enabled vertex arrays.
Query: #%d
"%@" - %@
Sync: #%d
Sync: "%@" (#%d)
Frame Statistics
%u Draws
%.1ffps
Frame Rate
Draws
Vertices
Fragments
%d Varying%s
Uniform Buffers
Global Binding
GL_MAX_UNIFORM_BUFFER_BINDINGS
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
Program Pipeline Objects
%lu Object%s
Program Objects
Shader Objects
Framebuffer Objects
Renderbuffer Objects
Buffer Objects
Vertex Array Objects
Query Objects
Sync Objects
Texture Objects
Sampler Objects
Transform Feedback Objects
Context (%llu)
Vendor
Renderer
Version
GLSL Version
Limits
unknown
GL_COMPRESSED_TEXTURE_FORMATS
{%@}
GL_MAX_SERVER_WAIT_TIMEOUT
Fragment bit depths
v16@?0@"NSString"8
GL_RED_BITS
GL_GREEN_BITS
GL_BLUE_BITS
GL_ALPHA_BITS
GL_DEPTH_BITS
GL_STENCIL_BITS
Shader precision formats
Range %@, Precision %@
range
precision
v32@?0@"NSString"8@"NSString"16@"NSMutableArray"24
GL_VERTEX_SHADER
GL_LOW_FLOAT
GL_MEDIUM_FLOAT
GL_HIGH_FLOAT
GL_LOW_INT
GL_MEDIUM_INT
GL_HIGH_INT
GL_FRAGMENT_SHADER
Auto
GL Context
Bound GL Objects
All GL Objects
Context Info
Common_GLType_VertexArrayObject
Common_Type_TextureObject
Common_Type_BufferObject
Common_GLType_RenderbufferObject
Common_GLType_FramebufferObject
Common_GLType_QueryObject
Common_GLType_ShaderObject
Common_GLType_ProgramObject
Common_GLType_ProgramPipelineObject
Common_GLType_SyncObject
Common_Type_SamplerObject
Common_GLType_TransformFeedbackObject
TraceOutline_Performance
RuntimeIssue
Uniforms
GPUStateValue *_CreateUniformStateValues(const T *, const T *, uint32_t, DYPComparisonMode, DYPTextMode, DYOpenGLFunctionalityLevel, const size_t, bool, int32_t (^__strong)(uint32_t)) [T = GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>]
((pUniform)) != nil
(pUniform)
%@[%@]
%@[%i]
GPUStateValue *_CreateUniformStateValues(const T *, const T *, uint32_t, DYPComparisonMode, DYPTextMode, DYOpenGLFunctionalityLevel, const size_t, bool, int32_t (^__strong)(uint32_t)) [T = GPUTools::SM::GL::ProgramObject<GPUGLSMObjectTypes>]
GPUGLTraceOutline
DYRenderBuffer
DYResource
NSObject
NSSecureCoding
NSCoding
DYCacheableResource
GPUGLModelFactory
GPUGLDebuggerController
DYGLExpertDelegate
GPUBufferViewerAdaptorGLTypeNameProvider
GPUBufferViewerAdaptorTypeNameProvider
GPUGLVBOEditor
GPUGLProgramPerformanceReportProvider
GPUProgramPerformanceReportProvider
GPUGLResourceManager
DYPResourceManager
Private
GPUGLVAOEditor
GPUGLInvestigatorReportProvider
GPUInvestigatorReportProvider
DVTInvalidation
GPUGLBufferUtilities
GPUGLVertexAttributeComponent
GPUGLVertexAttribute
GPUGLVertexAttributes
GPUGLVertexAttributesProtocol
GPUGLTransformFeedbackVaryings
GPUGLShaderDataProvider
GPUTraceShaderDataProvider
GPUQueryEditor
GPUGLTraceStateItem
DYFunctionTracerDelegate
GPUGLStateMirrorInterface
GPUGLTraceDisplayableItem
GPUGLTraceFramebuffer
GPUTraceFramebuffer
GPUTraceDisplaySet
_GPUDebuggerIOSSupportBundlePrivateClassForFindingBundle
GPUGLBindingResolver
GPUGLStateMirror
NSCopying
GPUFramebufferAttachmentInfo
GPUGLRenderJob
GPUGLVariablesViewContentProvider
@24@0:8@16
v16@0:8
v24@0:8@16
B40@0:8@16@24@32
v24@0:8^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
@24@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16
@32@0:8@16I24I28
@16@0:8
@"GPUGLStateMirror"
@"IDELaunchSession"
@"NSMutableDictionary"
@"NSMutableArray"
{shared_ptr<GPUTools::FD::TFunctionStream<GPUTools::FD::Function>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
{_Iterator<GPUTools::FD::Function>="_function"{Function="core"{CoreFunction="fenum"I"flags"I"padding"S"argument_count"S""(?="context_id"Q"receiver_id"Q)"return_value"{Argument="value"^v"core_type"I"sem_type"I"size"I"length"S"flags"S}"arguments"[16{Argument="value"^v"core_type"I"sem_type"I"size"I"length"S"flags"S}]"fbuf_size"I"internal_buffer_size"I"fbuf"^v"internal_buffer"^v}"timestamp"Q"duration"Q"backtrace"^Q"backtrace_length"S"gl_error"S"events_type"i"events"^v"events_size"I"queue_width"I"queue_id"Q"thread_id"Q"next_associated"^{Function}"sm_context"^v}"_encbuf"^v"_next"^v"_end"^v"_decoder"^{IFunctionDecoder}"_fast_size"B}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8I16Q20Q28@36
I16@0:8
{?=QQQ}16@0:8
@36@0:8Q16I24Q28
@24@0:8Q16
@32@0:8@16@?24
@44@0:8I16Q20Q28@"NSDictionary"36
@"NSMutableDictionary"16@0:8
@"NSString"36@0:8Q16I24Q28
@"NSString"24@0:8Q16
@"NSDictionary"24@0:8Q16
@32@0:8@"DYFunctionStream"16@?<@"NSData"@?*>24
i16@0:8
@"NSData"16@0:8
#20@0:8I16
@40@0:8@16#24@32
#24@0:8@16
B28@0:8B16^@20
@20@0:8I16
@24@0:8I16i20
@28@0:8@16B24
@28@0:8@16I24
v40@0:8@16@24Q32
@32@0:8I16Q20I28
@32@0:8@16i24i28
@"NSMapTable"
@"GPUGLTraceOutline"
v24@0:8I16I20
v24@0:8@"DYGLExpertPhase"16
v24@0:8@"NSArray"16
v24@0:8@"NSError"16
@"DYCaptureArchive"16@0:8
v24@0:8@?16
@44@0:8@16@24B32^@36
v32@0:8@16@24
v40@0:8@16@24@?32
v20@0:8B16
@20@0:8i16
@"DYGLExpertCase"
@"DVTObservingToken"
@"DYAnalyzerArchiveVisitor"
@"DYCaptureArchive"
@"<GPUShaderEditDocument>"
@"NSArray"
@"DYGLExpert"
@44@0:8Q16Q24Q32B40
@"NSString"44@0:8Q16Q24Q32B40
v56@0:8@16^v24^{Buffer=*IQ^{__CFString}}32^i40^@48
v40@0:8r^v16^v24Q32
{TypeOutputFormatTypeAlias=iii}20@0:8I16
@"GPUBufferViewerViewController"
@24@0:8@"GPUReportEditor"16
@"GPUReportTotalItem"16@0:8
@"NSMutableArray"16@0:8
@"GPUReportEditor"
I20@0:8I16
@32@0:8@16@24
@48@0:8@16{?=QQQ}24
@52@0:8@16{?=QQQ}24i48
@40@0:8@16@24@32
@60@0:8@16i24{?=QQQ}28@52
@28@0:8Q16I24
@32@0:8Q16I24i28
@32@0:8Q16@24
@48@0:8@16@24@32@40
@32@0:8@16Q24
@32@0:8@"<DYCaptureStore>"16@"DYResourceStreamer"24
@"DYFuture"48@0:8@"<DYPResourceItem>"16{?=QQQ}24
@"DYFuture"52@0:8@"<DYPResourceItem>"16{?=QQQ}24i48
@"DYFuture"40@0:8@"<DYPResourceItem>"16@"<DYPStateMirror>"24@"NSDictionary"32
@"DYFuture"60@0:8@"<DYPResourceItem>"16i24{?=QQQ}28@"NSDictionary"52
@"DYFuture"32@0:8@"<DYPResourceItem>"16@"<DYPStateMirror>"24
@"DYFuture"28@0:8Q16I24
@"DYFuture"32@0:8Q16I24i28
@"DYFuture"24@0:8@"NSDictionary"16
@"DYFuture"32@0:8Q16@"NSArray"24
@"DYFuture"24@0:8@"<DYResource>"16
@"DYFuture"24@0:8@"NSArray"16
@"<DYResource>"44@0:8I16Q20Q28@"NSDictionary"36
@48@0:8@"<DYCaptureStore>"16@"DYResourceStreamer"24@"DYDeviceInfo"32@"<DYPlatformSDK>"40
@"<DYResource>"32@0:8@"NSData"16Q24
@40@0:8I16Q20r^v28I36
@36@0:8@16q24I32
{unique_ptr<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>, std::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>>="__ptr_"{__compressed_pair<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes> *, std::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>>="__value_"^v}}
@"DYGLCaptureSessionInfo"
v40@0:8@16^v24^v32
{TypeOutputFormatTypeAlias=iii}28@0:8I16Q20
Q24@0:8:16
v24@0:8@"<DVTInvalidation>"16
v24@0:8@"<DVTCancellable>"16
@"DVTStackBacktrace"16@0:8
v24@0:8@"DVTStackBacktrace"16
v20@0:8i16
v24@0:8@"DYInvestigatorFinding"16
v24@0:8@"GPUInvestigatorReportResource"16
@"NSString"32@0:8@"NSString"16@"NSString"24
@"GPUTreeNode"32@0:8@"NSArray"16@"DYInvestigatorFinding"24
@"NSDictionary"16@0:8
v28@0:8@16i24
@"DYIntKeyedDictionary"
@32@0:8I16I20@24
I20@0:8i16
@24@0:8i16i20
v20@0:8I16
@"NSData"
@"NSString"
@"DYGLBufferObject"
i20@0:8i16
I24@0:8i16i20
@28@0:8i16i20i24
@"NSString"20@0:8i16
@"NSString"24@0:8i16i20
@"NSString"28@0:8i16i20i24
@"GPUGLVertexAttributeComponent"
q16@0:8
B24@0:8^@16
f20@0:8I16
@24@0:8I16B20
I28@0:8@16B24
d20@0:8I16
d28@0:8@16I24
@"NSArray"16@0:8
@"NSDictionary"24@0:8I16B20
@"NSArray"24@0:8I16B20
@"NSArray"20@0:8I16
I28@0:8@"NSString"16B24
@"<DYPShaderSampleInfo>"24@0:8I16B20
@"DYShaderAnalyzerResult"24@0:8I16B20
v24@0:8@"<GPUShaderEditDocument>"16
@"NSString"20@0:8I16
@"NSDictionary"28@0:8@"NSString"16B24
@"NSArray"28@0:8@"NSString"16B24
d28@0:8@"NSString"16I24
@"NSString"28@0:8@"NSString"16I24
@"NSURL"16@0:8
@"<GPUTraceShaderDataProviderDelegate>"16@0:8
v24@0:8@"<GPUTraceShaderDataProviderDelegate>"16
@"<GPUShaderEditDocument>"16@0:8
@"GPUTraceShaderDataItem"16@0:8
v24@0:8@"GPUTraceShaderDataItem"16
@"IDEEditorDocument"16@0:8
@"IDEIndex"16@0:8
v56@0:8@16@24{_NSRange=QQ}32I48f52
v32@0:8@16q24
@"GPUTraceShaderItem"
@"GPUTraceShaderDataItem"
@"<DYResource>"
@"DYGLProgramObject"
@"NSURL"
@"NSDictionary"
@"<GPUTraceShaderDataProviderDelegate>"
@"IDEIndex"
@"IDEEditorDocument"
@"NSTextField"
@24@0:8r*16
@40@0:8r^{Argument=^vIIISS}16r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}24@32
@32@0:8r^{Argument=^vIIISS}16r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}24
@24@0:8r^{Argument=^vIIISS}16
@32@0:8r*16Q24
@32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@24
@32@0:8@16r^{Argument=^vIIISS}24
@"NSString"24@0:8r*16
@"NSString"40@0:8r^{Argument=^vIIISS}16r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}24@"NSString"32
@"NSString"32@0:8r^{Argument=^vIIISS}16r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}24
@"NSString"24@0:8r^{Argument=^vIIISS}16
@"NSString"32@0:8r*16Q24
@"NSMutableString"32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@"NSArray"24
@"NSMutableArray"32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@"NSArray"24
@"NSString"40@0:8@"NSString"16@"NSString"24@"NSString"32
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16r^{Argument=^vIIISS}24
@"GPUGLStateMirror"16@0:8
v24@0:8@"GPUGLStateMirror"16
v32@0:8Q16@24
@24@0:8@"<DYFramebuffer>"16
@"<DYFramebuffer>"16@0:8
@"<DYResource>"16@0:8
v24@0:8@"<DYResource>"16
@"<DYRasterizationRateMap>"16@0:8
@"NSNumber"16@0:8
v24@0:8@"<DYRasterizationRateMap>"16
@"<DYFramebuffer>"
@36@0:8Q16r^v24I32
@32@0:8r^v16@24
v28@0:8I16@?20
v32@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16@?24
v36@0:8@?16I24r*28
B20@0:8i16
v24@0:8^{GPUGLBindPoint=IIiiII@}16
v40@0:8^{GPUGLBindPoint=IIiiII@}16@?24r*32
@"DYContextInfo"
@24@0:8^{_NSZone=}16
^v16@0:8
I28@0:8r^{Function={CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}QQ^QSSi^vIIQQ^{Function}^v}16i24
v24@0:8Q16
r^v20@0:8i16
r^v16@0:8
@52@0:8Q16r^v24I32r*36r*44
v32@0:8@16r^v24
@60@0:8@16r^v24I32I36r^v40r*48I56
@68@0:8@16r^v24I32I36r^v40r*48r*56I64
@68@0:8@16I24I28I32i36I40r^v44r*52@60
@60@0:8r^v16@24I32I36I40r^v44r*52
v28@0:8@16I24
B28@0:8i16^@20
r^v24@0:8Q16
B20@0:8I16
{?=[4I]}24@0:8I16i20
{GPUGLBindPoint=IIiiII@}24@0:8@16
B56@0:8{GPUGLBindPoint=IIiiII@}16@48
{StateMirrorManager<GPUGLSMObjectTypes>="_contextStateMirrorMap"{unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_sharegroupStateMirrorMap"{unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes> *>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"_drawableInfoMap"{ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>, unsigned long long>="mInternalIDMap"{unordered_map<unsigned long long, int, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, int>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>, std::allocator<std::__hash_value_type<unsigned long long, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::hash<unsigned long long>, std::equal_to<unsigned long long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, int>, std::equal_to<unsigned long long>, std::hash<unsigned long long>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_passthrough"{PassthroughBase="LoadURLData"{function<void *(const char *, unsigned long *)>="__f_"{__value_func<void *(const char *, unsigned long *)>="__buf_"{type="__lx"[24C]}"__f_"^v}}}"_surfaceBoundsDrawableID"Q"_deviceOrientation"i"_lastFunctionIndex"i}
@28@0:8I16@20
@56@0:8@16@24@32@40Q48
@52@0:8@16@24I32@36@44
@"GPUFramebufferAttachmentInfo"
v48@0:8Q16@24@32q40
@24@0:8i16B20
@24@0:8^v16
@24@0:8^{StencilSideSetup=IIIIIII}16
@28@0:8^{BlendChannelSetup=III}16B24
@28@0:8^v16i24
@24@0:8^{?=[4[4f]]}16
@28@0:8I16I20B24
@36@0:8^v16^{TexEnvChannelSetup=IIIIIIIf}24B32
@28@0:8i16^v20
B44@0:8i16i20i24^v28^v36
v40@0:8@16@24@32
v28@0:8i16@20
v32@0:8i16@20i28
v32@0:8@16^v24
v40@0:8I16i20^v24@32
v40@0:8Q16^v24@32
v44@0:8Q16I24^v28@36
v32@0:8^v16@24
v28@0:8I16@20
@44@0:8r^v16I24r^v28i36B40
@28@0:8r^v16i24
@48@0:8r^v16I24i28i32B36^v40
@28@0:8I16^v20
@36@0:8r^v16I24^v28
@32@0:8r^{ObjectStateEnum=i@iB}16r^v24
@32@0:8I16B20^v24
@44@0:8r^v16I24^v28@36
@44@0:8r^v16I24^v28I36I40
@24@0:8r^v16
{ContextStateMirror<GPUGLSMObjectTypes>="_mOpenGLAPIVersion"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mOpenGLFunctionalityLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mActiveTexture"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mAlphaTestFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mAlphaTestRef"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mBlendColor"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mBlendEquationRGB"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendEquationAlpha"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendSrcRGB"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendSrcAlpha"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendDstRGB"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBlendDstAlpha"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mClearColor"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mClearDepth"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mClearStencil"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mClientActiveTexture"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mCurrentColor"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mColorWritemask"{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<int, 4U>="mData"[4i]}}"_mCullFaceMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mCurrentPaletteMatrix"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mDepthFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mDepthMask"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mDepthRange"{DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 2U>="mData"[2f]}}"_mFrontFace"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mLineWidth"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mLogicOp"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mMatrixMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mCurrentNormal"{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 3U>="mData"[3f]}}"_mPointSize"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPolygonOffsetFactor"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPolygonOffsetUnits"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mSampleCoverageValue"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mSampleCoverageInvert"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mScissorBox"{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<int, 4U>="mData"[4i]}}"_mShadeModel"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilRef"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mStencilValueMask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mStencilWritemask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mStencilFail"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilPassDepthFail"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilPassDepthPass"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilBackFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilBackRef"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mStencilBackValueMask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mStencilBackWritemask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mStencilBackFail"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilBackPassDepthFail"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mStencilBackPassDepthPass"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mViewport"{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<int, 4U>="mData"[4i]}}"_mImplementationColorReadFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mImplementationColorReadType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mCurrentTextureCoords"[32{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mCurrentVertexAttrib"[16{DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<double, 4U>="mData"[4d]}}]"_mCurrentVertexAttribType"[16{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mAlphaTest"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mBlend"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mColorLogicOp"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mColorMaterial"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mCullFace"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mDepthTest"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mDither"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mFog"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mLighting"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mLineSmooth"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mMatrixPalette"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mMultiSample"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mNormalize"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPointSmooth"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPolygonOffsetFill"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mRescaleNormal"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mSampleAlphaToCoverage"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mSampleAlphaToOne"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mSampleCoverage"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mScissorTest"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mStencilTest"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPointSprite"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPrimitiveRestartFixedIndex"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mRasterizerDiscard"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mClipPlane"[8{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mLight"[8{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mTexture2D"[32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mFogMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mFogDensity"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mFogStart"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mFogEnd"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mFogColor"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mFogHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mGenerateMipmapHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mLineSmoothHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mPerspectiveCorrectionHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mShaderDerivativeHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mPointSmoothHint"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mLightModelTwoSide"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLightModelAmbient"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mPackRowLength"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackImageHeight"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackSkipPixels"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackSkipRows"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackSkipImages"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPackAlignment"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackRowLength"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackImageHeight"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackSkipPixels"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackSkipRows"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackSkipImages"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUnpackAlignment"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPointSizeMin"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPointSizeMax"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPointFadeThresholdSize"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mPointDistanceAttenuation"{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 3U>="mData"[3f]}}"_mLightAmbient"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightDiffuse"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightSpecular"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightEmission"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightPosition"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mLightSpotDirection"[8{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 3U>="mData"[3f]}}]"_mLightSpotExponent"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mLightSpotCutoff"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mLightConstantAttenuation"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mLightLinearAttenuation"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mLightQuadraticAttenuation"[8{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mClipPlaneValue"[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mMaterialAmbient"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mMaterialDiffuse"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mMaterialSpecular"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mMaterialEmission"{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}"_mMaterialShininess"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mTextureEnvMode"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mTextureEnvColor"[32{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<float, 4U>="mData"[4f]}}]"_mCombineRGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mCombineAlpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc0RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc1RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc2RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc0Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc1Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mSrc2Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand0RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand1RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand2RGB"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand0Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand1Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mOperand2Alpha"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mRGBScale"[32{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mAlphaScale"[32{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mCoordReplace"[32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mTextureLODBias"[32{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}]"_mModelviewMatrix"{DYStateElement<std::vector<DYMtx>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<DYMtx, std::allocator<DYMtx>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<DYMtx *, std::allocator<DYMtx>>="__value_"^{?}}}}"_mProjectionMatrix"{DYStateElement<std::vector<DYMtx>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<DYMtx, std::allocator<DYMtx>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<DYMtx *, std::allocator<DYMtx>>="__value_"^{?}}}}"_mTextureMatrix"[32{DYStateElement<std::vector<DYMtx>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<DYMtx, std::allocator<DYMtx>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<DYMtx *, std::allocator<DYMtx>>="__value_"^{?}}}}]"_mPaletteMatrix"[16{DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis>="mStateVal"{?="m"[4[4f]]}}]"_mUniformBufferStart"[64{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mUniformBufferSize"[64{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mTextureBinding2D"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTextureBindingCubemap"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTextureBinding2DArray"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTextureBinding3D"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mCopyReadBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mCopyWriteBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mPixelPackBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mPixelUnpackBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mTransformFeedbackBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mUniformBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mUniformBufferBindingIndexed"[64{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mRenderbufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mDrawFramebufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mReadFramebufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mCurrentProgram"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mProgramPipelineBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mVertexArrayBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mSamplerBinding"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTransformFeedbackBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mQueryAnySamplesPassedBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mQueryAnySamplesPassedConservativeBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mQueryTransformFeedbackPrimitivesWrittenBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mCurrentEventMarker"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mGroupMarkerStack"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mFlushLastTimestamp"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mDrawLastTimestamp"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mGLErrorStatus"{DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis>="mStateVal"{StateErrorStatus="_stateEnum"i}}"_mVertexArrayObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mQueryObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mSyncObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mTransformFeedbackObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mContextTextureObjectMap"{ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>, int>="mInternalIDMap"{unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>>="__table_"{__hash_table<std::__hash_value_type<int, int>, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, int>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, int>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mObjectMap"{unordered_map<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>>="__table_"{__hash_table<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, std::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mNextFreeInternalID"i}"_mSharegroupID"Q"_mSharegroupMirror"^v"_mManager"^v"_mContextID"Q}
{ProgramUniform<GPUGLSMObjectTypes>="_mUniformName"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mUniformValue"{DYStateElement<std::vector<double>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}}"_mUniformData"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mUniformDataOffset"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mUniformCallType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mUniformScalarCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformArrayElementIndex"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformLocStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformBlockIndex"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mUniformBlockOffset"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformMatrixStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformIsRowMajor"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mUniformShaderBitmask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}}
{TextureLayer<GPUGLSMObjectTypes>="_mTextureInternalFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureWidth"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureHeight"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTexData"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mTexDataFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTexDataType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureCompressedImageSize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mEngineTexDataFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mEngineTexDataType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTexDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mTexIOSurface"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mTexIOSurfacePlane"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mTexIOSurfaceYCBCRMatrix"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mTexIOSurfacePixelFormat"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mTexIOSurfaceColorPrimaries"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mTexIOSurfaceTransferFunction"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}}
{TextureObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"displayAttributes"{objc_wrapper<id>="_object"@}"mRefCount"i"_mTextureMinFilter"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureMagFilter"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureWrapS"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureWrapT"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureWrapR"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mGenerateMipmap"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTextureMaxAnisotropy"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mTextureMaxLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureCompressed"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTextureTarget"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mMaxLevelSpecified"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mHasGeneratedMipmaps"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mTextureCompareMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureCompareFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureCropRect"{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>="mStateVal"{VecN<int, 4U>="mData"[4i]}}"_mTextureBaseLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureImmutableFormat"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTextureSwizzleRed"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureSwizzleGreen"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureSwizzleBlue"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureSwizzleAlpha"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mTextureMinLod"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureMaxLod"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureImmutableLevels"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mTextureLevels"{unordered_map<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}}
{SamplerObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mSamplerMinFilter"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerMagFilter"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerWrapS"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerWrapT"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerWrapR"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerMaxAnisotropy"{DYStateElement<float, GPUTools::CStateBaseAnalysis>="mStateVal"f}"_mSamplerMinLod"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mSamplerMaxLod"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mSamplerCompareMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSamplerCompareFunc"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}}
{TransformFeedbackObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mTransformFeedbackBufferBindingIndexed"[4{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mTransformFeedbackBufferStart"[4{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mTransformFeedbackBufferSize"[4{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mTransformFeedbackPaused"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTransformFeedbackActive"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}}
{BufferObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mBufferSize"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mBufferUsage"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBufferData"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mBufferTarget"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBufferAccessFlags"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mBufferMapped"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mBufferMapOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mBufferMapLength"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mBufferMapPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}}
{RenderbufferObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mRenderbufferSamples"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mRenderbufferInternalFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mRenderbufferWidth"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mRenderbufferHeight"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mDrawableRetainedBacking"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mDrawableLayerBacking"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mDrawablePointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}}
{FramebufferAttachment<GPUGLSMObjectTypes>="_mFramebufferAttachmentObjectType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mFramebufferAttachmentObjectName"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mFramebufferAttachmentTextureLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFramebufferAttachmentTextureLayer"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFramebufferAttachmentTextureCubeMapFace"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}}
{FramebufferObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mReadBuffer"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mDrawBuffers"[16{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mAttachments"[18{FramebufferAttachment<GPUGLSMObjectTypes>="_mFramebufferAttachmentObjectType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mFramebufferAttachmentObjectName"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mFramebufferAttachmentTextureLevel"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFramebufferAttachmentTextureLayer"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFramebufferAttachmentTextureCubeMapFace"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}}]}
{ShaderObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mShaderType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mDeleteStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mCompiledShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mCompiledShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mCompileStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mCurrentSourceIsCompiled"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mAttachCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}}
{ProgramObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"mUniformMap"{unordered_map<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mAttribMap"{unordered_map<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mUniformBlockMap"{unordered_map<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"mTransformFeedbackVaryingMap"{unordered_map<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>>="__table_"{__hash_table<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>, std::allocator<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::hash<int>, std::equal_to<int>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::equal_to<int>, std::hash<int>>>="__value_"f}}}"_attribLocationBindingMap"{unordered_map<std::string, int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, int>>>="__table_"{__hash_table<std::__hash_value_type<std::string, int>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, int>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, int>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, int>, std::hash<std::string>, std::equal_to<std::string>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, int>, std::equal_to<std::string>, std::hash<std::string>>>="__value_"f}}}"_mAttachedFragmentShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mAttachedVertexShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mLinkedFragmentShader"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLinkedVertexShader"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLinkedFragmentShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mLinkedVertexShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mLinkedFragmentShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLinkedVertexShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mLinkedProgramBinaryFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mLinkedProgramBinary"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mFragmentShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mVertexShaderData"{DYStateElement<std::vector<std::string>, GPUTools::CStateBaseAnalysis>="mStateVal"{vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}}"_mFragmentShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mVertexShaderCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mFragmentShaderInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mVertexShaderInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mProgramBinaryFormat"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mProgramBinary"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mProgramSeparable"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mLinkStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mDeleteStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mAttachCount"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mHasBeenLinked"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mProgramBinaryRetrievableHint"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTransformFeedbackBufferMode"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mBuiltinsUsed"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}}
{ProgramUniformBlock<GPUGLSMObjectTypes>="mUniforms"{vector<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes> *, std::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>="__value_"^v}}"_mUniformBlockBinding"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mUniformBlockName"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mUniformBlockDataSize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mUniformBlockShaderBitmask"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}}
{ProgramPipelineObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mActiveProgram"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mVertexShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mGeometryShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mFragmentShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mTessControlShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mTessEvaluationShader"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mValidateStatus"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mInfoLog"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}}
{VertexArrayObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mColorArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mColorArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mColorArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mColorArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mColorArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mMatrixIndexArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mMatrixIndexArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mMatrixIndexArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mMatrixIndexArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mMatrixIndexArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mNormalArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mNormalArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mNormalArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mNormalArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mPointSizeArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mPointSizeArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mPointSizeArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mPointSizeArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mVertexArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mVertexArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mVertexArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mVertexArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mVertexArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mWeightArraySize"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mWeightArrayType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mWeightArrayStride"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mWeightArrayPointer"{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}"_mWeightArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mTextureCoordArraySize"[32{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mTextureCoordArrayType"[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mTextureCoordArrayStride"[32{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mTextureCoordArrayPointer"[32{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mTextureCoordArrayBufferBinding"[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mVertexAttribArraySize"[16{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mVertexAttribArrayType"[16{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}]"_mVertexAttribArrayNormalized"[16{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mVertexAttribArrayStride"[16{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}]"_mVertexAttribArrayPointer"[16{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>="mStateVal"Q}]"_mVertexAttribArrayBufferBinding"[16{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}]"_mVertexAttribArrayDivisor"[16{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}]"_mVertexAttribArrayInteger"[16{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mElementArrayBufferBinding"{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>="mStateVal"{BindingPoint="mExtID"i"mIntID"i}}"_mColorArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mMatrixIndexArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mNormalArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mPointSizeArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mVertexArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mWeightArray"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mTextureCoordArray"[32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mVertexAttribArrayEnabled"[16{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}]"_mColorArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mMatrixIndexArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mNormalArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mPointSizeArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mVertexArratDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mWeightArrayDataURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mTextureCoordArrayDataURL"[32{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}]"_mVertexAttribArrayDataURL"[16{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}]"_mColorArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mMatrixIndexArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mNormalArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mPointSizeArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mVertexArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mWeightArrayDataOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mTextureCoordArrayDataOffset"[32{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}]"_mVertexAttribArrayDataOffset"[16{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}]"_mColorArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mMatrixIndexArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mNormalArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mPointSizeArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mVertexArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mWeightArrayVAPointerOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mTextureCoordArrayVAPointerOffset"[32{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}]"_mVertexAttribArrayVAPointerOffset"[16{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}]"_mVARangeURL"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mVARangeOffset"{DYStateElement<long long, GPUTools::CStateBaseAnalysis>="mStateVal"q}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}}
{QueryObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mQueryTarget"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mQueryResult"{DYStateElement<int, GPUTools::CStateBaseAnalysis>="mStateVal"i}"_mQueryResultAvailable"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_mQueryActive"{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>="mStateVal"{StateBool="_stateEnum"i}}}
{SyncObject<GPUGLSMObjectTypes>="_functionIndex"i"_objectID"i"_internalID"i"mRefCount"i"_mSyncObjectType"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSyncCondition"{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>="mStateVal"{StateEnum="_stateEnum"i}}"_mSyncFlags"{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>="mStateVal"I}"_mObjectLabel"{DYStateElement<std::string, GPUTools::CStateBaseAnalysis>="mStateVal"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}}
@"NSMutableSet"
