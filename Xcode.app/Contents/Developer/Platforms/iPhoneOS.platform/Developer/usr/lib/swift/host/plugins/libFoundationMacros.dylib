@(#)PROGRAM:FoundationMacros  PROJECT:FoundationMacros-3038.1.101
33333
FoundationMacros
ShorthandArgumentIdentifierDetector
PredicateSyntaxRewriter
OptionalChainRewriter
PredicateQueryRewriter
PredicateMacro
ExpressionMacro
ExpansionKind
FunctionStructure
Argument
PredicateExpansionDiagnostic
Kind
$s16FoundationMacros23PredicateSyntaxRewriter33_D2F56A478D58136EB8BC40AC83390E68LLP
5lower_AA5uppert
7oldNode_AA03newB0t
_ABtG
SaySSG
ySSG
SSSg
$ss33ExpressibleByUnicodeScalarLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss26ExpressibleByStringLiteralP
$ss32ExpressibleByStringInterpolationP
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6835ShorthandArgumentIdentifierDetector
found
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6821OptionalChainRewriter
withinValidChainingTreeStart
withinChainingTree
optionalInput
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6822PredicateQueryRewriter
indentWidth
indentLevel
validOptionalChainingTree
diagnostics
kind
FoundationMacros.PredicateQueryRewriter
init(viewMode:)
Do statement is not supported here in this 
Catch clauses are not supported in this 
Declarations are not supported in this 
Repeat-while loops are not supported in this 
Do statements are not supported in this 
For-in loops are not supported in this 
While loops are not supported in this 
PredicateExpressions.build_Conditional(
This list of conditionals is unsupported in this 
These types of conditions
 are not supported in this 
Mixing optional bindings with other conditions is not supported in this 
Matching pattern conditions
Availability conditions
Switch expressions are not supported in this 
PredicateExpressions.build_Arg(
PredicateExpressions.
FoundationMacros/PredicateMacro.swift
Fatal error
Unexpected question/exclamation mark token kind
PredicateExpressions.TypeCheck<_, 
PredicateExpressions.Variable<
Tuples are not supported in this 
Member access without an explicit base is not supported in this 
PredicateExpressions.build_KeyPath(
PredicateExpressions.build_NilLiteral()
PredicateExpressions.build_ForcedUnwrap(
Optional chaining is not supported here in this 
. Use the flatMap(_:) function explicitly instead.
' operator is not supported in this 
PredicateExpressions.build_Range(
PredicateExpressions.build_ClosedRange(
PredicateExpressions.build_NilCoalesce(
PredicateExpressions.build_Remainder(
PredicateExpressions.build_Division(
PredicateExpressions.build_Arithmetic(
PredicateExpressions.build_Conjunction(
PredicateExpressions.build_Disjunction(
PredicateExpressions.build_Comparison(
op: .greaterThanOrEqual
op: .greaterThan
op: .lessThanOrEqual
PredicateExpressions.build_NotEqual(
PredicateExpressions.build_Equal(
PredicateExpressions.build_UnaryMinus(
PredicateExpressions.build_Negation(
If expressions without an else expression are not supported in this 
This if expression else body is not supported in this 
This if expression body is not supported in this 
This optional binding condition is not supported in this 
PredicateExpressions.build_flatMap(
 body may only contain one expression
Global functions are not supported in this 
 function is not supported in this 
PredicateDiagnostic
PredicateExpressions.build_
This key path is not supported here in this 
. Use an explicit closure instead.
localizedCaseInsensitiveContains
localizedStandardContains
localizedCaseInsensitiveCompare
localizedCompare
localizedStandardCompare
caseInsensitiveCompare
PredicateExpressions.build_Arg(
 macro expansion requires a trailing closure
Use a trailing closure instead of a function parameter
future reported an error, but wait cannot throw
swift_task_escalate
_Z19voucher_needs_adoptP9voucher_s
__tsan_acquire
__tsan_release
'%s' failed with error '%s'(%d)
pthread_cond_init(&condition, nullptr)
pthread_cond_destroy(&condition)
pthread_cond_signal(&condition)
pthread_cond_broadcast(&condition)
pthread_cond_wait(&condition, &mutex)
pthread_mutexattr_init(&attr)
pthread_mutexattr_settype(&attr, kind)
pthread_mutex_init(&mutex, &attr)
pthread_mutexattr_destroy(&attr)
pthread_mutex_destroy(&mutex)
pthread_mutex_lock(&mutex)
pthread_mutex_unlock(&mutex)
pthread_mutex_trylock(&mutex)
pthread_rwlock_init(&rwlock, nullptr)
pthread_rwlock_destroy(&rwlock)
pthread_rwlock_rdlock(&rwlock)
pthread_rwlock_tryrdlock(&rwlock)
pthread_rwlock_wrlock(&rwlock)
pthread_rwlock_trywrlock(&rwlock)
pthread_rwlock_unlock(&rwlock)
EINVAL
EPERM
EDEADLK
ENOMEM
EAGAIN
EBUSY
<unknown>
swift_task_enterThreadLocalContext
swift_task_exitThreadLocalContext
found
withinValidChainingTreeStart
withinChainingTree
optionalInput
indentWidth
indentLevel
validOptionalChainingTree
diagnostics
kind
predicate
expression
message
severity
diagnosticID
label
name
arguments
hasTrailingClosure
UnicodeScalarLiteralType
ExtendedGraphemeClusterLiteralType
StringLiteralType
StringInterpolation
standard
closure
pack
where
default
with
with
@(#)PROGRAM:FoundationMacros  PROJECT:FoundationMacros-3038.1.101
33333
FoundationMacros
ShorthandArgumentIdentifierDetector
PredicateSyntaxRewriter
OptionalChainRewriter
PredicateQueryRewriter
PredicateMacro
ExpressionMacro
ExpansionKind
FunctionStructure
Argument
PredicateExpansionDiagnostic
Kind
$s16FoundationMacros23PredicateSyntaxRewriter33_D2F56A478D58136EB8BC40AC83390E68LLP
5lower_AA5uppert
7oldNode_AA03newB0t
_ABtG
SaySSG
ySSG
SSSg
$ss33ExpressibleByUnicodeScalarLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss26ExpressibleByStringLiteralP
$ss32ExpressibleByStringInterpolationP
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6835ShorthandArgumentIdentifierDetector
found
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6821OptionalChainRewriter
withinValidChainingTreeStart
withinChainingTree
optionalInput
_TtC16FoundationMacrosP33_D2F56A478D58136EB8BC40AC83390E6822PredicateQueryRewriter
indentWidth
indentLevel
validOptionalChainingTree
diagnostics
kind
FoundationMacros.PredicateQueryRewriter
init(viewMode:)
Do statement is not supported here in this 
Catch clauses are not supported in this 
Declarations are not supported in this 
Repeat-while loops are not supported in this 
Do statements are not supported in this 
For-in loops are not supported in this 
While loops are not supported in this 
PredicateExpressions.build_Conditional(
This list of conditionals is unsupported in this 
These types of conditions
 are not supported in this 
Mixing optional bindings with other conditions is not supported in this 
Matching pattern conditions
Availability conditions
Switch expressions are not supported in this 
PredicateExpressions.build_Arg(
PredicateExpressions.
FoundationMacros/PredicateMacro.swift
Fatal error
Unexpected question/exclamation mark token kind
PredicateExpressions.TypeCheck<_, 
PredicateExpressions.Variable<
Tuples are not supported in this 
Member access without an explicit base is not supported in this 
PredicateExpressions.build_KeyPath(
PredicateExpressions.build_NilLiteral()
PredicateExpressions.build_ForcedUnwrap(
Optional chaining is not supported here in this 
. Use the flatMap(_:) function explicitly instead.
' operator is not supported in this 
PredicateExpressions.build_Range(
PredicateExpressions.build_ClosedRange(
PredicateExpressions.build_NilCoalesce(
PredicateExpressions.build_Remainder(
PredicateExpressions.build_Division(
PredicateExpressions.build_Arithmetic(
PredicateExpressions.build_Conjunction(
PredicateExpressions.build_Disjunction(
PredicateExpressions.build_Comparison(
op: .greaterThanOrEqual
op: .greaterThan
op: .lessThanOrEqual
PredicateExpressions.build_NotEqual(
PredicateExpressions.build_Equal(
PredicateExpressions.build_UnaryMinus(
PredicateExpressions.build_Negation(
If expressions without an else expression are not supported in this 
This if expression else body is not supported in this 
This if expression body is not supported in this 
This optional binding condition is not supported in this 
PredicateExpressions.build_flatMap(
 body may only contain one expression
Global functions are not supported in this 
 function is not supported in this 
PredicateDiagnostic
PredicateExpressions.build_
This key path is not supported here in this 
. Use an explicit closure instead.
localizedCaseInsensitiveContains
localizedStandardContains
localizedCaseInsensitiveCompare
localizedCompare
localizedStandardCompare
caseInsensitiveCompare
PredicateExpressions.build_Arg(
 macro expansion requires a trailing closure
Use a trailing closure instead of a function parameter
future reported an error, but wait cannot throw
swift_task_escalate
_Z19voucher_needs_adoptP9voucher_s
__tsan_acquire
__tsan_release
'%s' failed with error '%s'(%d)
pthread_cond_init(&condition, nullptr)
pthread_cond_destroy(&condition)
pthread_cond_signal(&condition)
pthread_cond_broadcast(&condition)
pthread_cond_wait(&condition, &mutex)
pthread_mutexattr_init(&attr)
pthread_mutexattr_settype(&attr, kind)
pthread_mutex_init(&mutex, &attr)
pthread_mutexattr_destroy(&attr)
pthread_mutex_destroy(&mutex)
pthread_mutex_lock(&mutex)
pthread_mutex_unlock(&mutex)
pthread_mutex_trylock(&mutex)
pthread_rwlock_init(&rwlock, nullptr)
pthread_rwlock_destroy(&rwlock)
pthread_rwlock_rdlock(&rwlock)
pthread_rwlock_tryrdlock(&rwlock)
pthread_rwlock_wrlock(&rwlock)
pthread_rwlock_trywrlock(&rwlock)
pthread_rwlock_unlock(&rwlock)
EINVAL
EPERM
EDEADLK
ENOMEM
EAGAIN
EBUSY
<unknown>
swift_task_enterThreadLocalContext
swift_task_exitThreadLocalContext
found
withinValidChainingTreeStart
withinChainingTree
optionalInput
indentWidth
indentLevel
validOptionalChainingTree
diagnostics
kind
predicate
expression
message
severity
diagnosticID
label
name
arguments
hasTrailingClosure
UnicodeScalarLiteralType
ExtendedGraphemeClusterLiteralType
StringLiteralType
StringInterpolation
standard
closure
pack
where
default
with
with
