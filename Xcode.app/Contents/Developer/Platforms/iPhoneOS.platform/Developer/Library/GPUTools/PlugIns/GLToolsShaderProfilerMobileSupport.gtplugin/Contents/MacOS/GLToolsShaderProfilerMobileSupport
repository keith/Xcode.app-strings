DYGLShaderProfilerMobileSupport
1D!1
DYShaderAnalyzerNextGPU
binaryRangeInfo
.cxx_destruct
.cxx_construct
setPerFileCost:
UTF8String
_ProcessLineList:forFileCostMap:forDebugInfo:andCost:forAddr:andDrawIndex:andTargetIndex:withDefaultDisassemblyInfo:withALUInstructionType:
_calculatePerDrawCallCostWithSampleData:targetIndex:
_calculatePerDrawCallWithGRCSampleData:targetIndex:
_calculatePerLineCostWithSampleData:binary:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
_createPerFileCostDictionaryWith:lineOffset:
_createPerLineCostDictionaryWith:lineOffset:
_getAddressAndLineTableForDebugInfo:
_getDebugInfoForBinary:withTextSegment:forTargetIndex:forKey:
_isForInternalTool
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
_mutex
_parallelQueue
_platformShaderAnalyzer
_processPerLineCostDataForLineTable:withFileCost:withDebugInfo:andAllDrawCost:withKey:withShaderSourcePath:withDrawCost:
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
addDependency:
addObject:
addOperation:
allValues
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
blockOperationWithBlock:
bytes
callStackInfo
characterSetWithCharactersInString:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
cost
count
countByEnumeratingWithState:objects:count:
dataWithData:
dataWithJSONObject:options:error:
defaultManager
diassemblyString
dictionary
dictionaryWithCapacity:
disassembledLineInfo
doubleValue
enumerateKeysAndObjectsUsingBlock:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
initWithData:encoding:
initWithDelegate:
invertedSet
irString
isDisassemblerAvailable
isForInternalTool
isFramebufferFetchWithEvents:type:
isRenderBeginWithEvents:type:
isRenderEndWithEvents:type:
lastPathComponent
length
metalPlugin
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
objectAtIndexedSubscript:
objectForKeyedSubscript:
offset
opCode
opCodeSubType
opCodeType
path
perFileCost
platformShaderAnalyzer
removeItemAtURL:error:
setBinaryDisassemblyInfo:
setBinaryRangeInfo:
setCallStackInfo:
setCost:
setCostPercentage:
setDirectory:
setDisasmSource:
setDisassembledLineInfo:
setDrawCallCost:
setDrawCallPerLineCost:
setFile:
setFunction:
setIrSource:
setLineIndex:
setName:
setObject:forKeyedSubscript:
setOffset:
setOpcode:
setOpcodeSubType:
setOpcodeType:
setSourceInfo:
setSourcePath:
setTotalCost:
setTotalPerLineCost:
setupForAnalysis
setupShaderInstructionInfoForBinary:forTargetIndex:
shaderAnalyzer
shaderAnalyzerDyson
shaderInstructionInfoFromBinary:withStartOffset:forLength:targetIndex:
shaderInstructionInfoWithStartOffset:endOffset:
stringByDeletingPathExtension
stringByStandardizingPath
stringWithUTF8String:
supportRendererType:
waitUntilFinished
writeToFile:atomically:encoding:error:
writeToURL:atomically:
c28@0:8^v16I24
c20@0:8i16
c16@0:8
@24@0:8@16
v16@0:8
@72@0:8@16@24i32@36@44@52I60@64
@60@0:8@16@24i32@36@44r^v52
@52@0:8@16@24i32@36@44
@28@0:8@16i24
d28@0:8@16I24
d36@0:8@16I24@28
{DebugInfo={vector<DebugInfo::LineEntry, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}{unordered_map<std::string, unsigned int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int>>>={__hash_table<std::__hash_value_type<std::string, unsigned int>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, unsigned int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>>>=f}}}{vector<std::string, std::allocator<std::string>>=^v^v{__compressed_pair<std::string *, std::allocator<std::string>>=^v}}IIIII}44@0:8@16@24i32@36
{pair<std::vector<unsigned int>, std::vector<std::vector<DebugInfo::LineEntry *>>>={vector<unsigned int, std::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::allocator<unsigned int>>=^I}}{vector<std::vector<DebugInfo::LineEntry *>, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v^v{__compressed_pair<std::vector<DebugInfo::LineEntry *> *, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v}}}24@0:8^v16
v72@0:8^v16^v24^v32d40I48I52i56r^{LineDisassemblyInfo=@@dIIII}60B68
@72@0:8^v16^v24^v32d40@48@56^v64
@28@0:8r^v16I24
@16@0:8
@"<DYPShaderAnalyzer>"
@"NSOperationQueue"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
MbP?
L>St12length_error
St11logic_error
St9exception
St20bad_array_new_length
St9bad_alloc
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.ParallelQueue
v8@?0
GlobalLoad
v32@?0@8@"NSNumber"16*24
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/com.apple.gputools.profiling/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
source
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %u %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
    %d %s [%u %u] %.1f %.2f%%
    %d %s [%u %u]
binaryDisassemblyInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
perDrawCall
/program_source
Offset
GlobalStore
Sample
LocalLoad
LocalStore
totalCost
perLineCost
16777235-0
::air.vertexFetchFunction()
vector
basic_string
DYGLShaderProfilerMobileSupport
1D!1
DYShaderAnalyzerNextGPU
binaryRangeInfo
.cxx_destruct
.cxx_construct
setPerFileCost:
UTF8String
_ProcessLineList:forFileCostMap:forDebugInfo:andCost:forAddr:andDrawIndex:andTargetIndex:withDefaultDisassemblyInfo:withALUInstructionType:
_calculatePerDrawCallCostWithSampleData:targetIndex:
_calculatePerDrawCallWithGRCSampleData:targetIndex:
_calculatePerLineCostWithSampleData:binary:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
_createPerFileCostDictionaryWith:lineOffset:
_createPerLineCostDictionaryWith:lineOffset:
_getAddressAndLineTableForDebugInfo:
_getDebugInfoForBinary:withTextSegment:forTargetIndex:forKey:
_isForInternalTool
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
_mutex
_parallelQueue
_platformShaderAnalyzer
_processPerLineCostDataForLineTable:withFileCost:withDebugInfo:andAllDrawCost:withKey:withShaderSourcePath:withDrawCost:
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
addDependency:
addObject:
addOperation:
allValues
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:withALUBlocks:
blockOperationWithBlock:
bytes
callStackInfo
characterSetWithCharactersInString:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
cost
count
countByEnumeratingWithState:objects:count:
dataWithData:
dataWithJSONObject:options:error:
defaultManager
diassemblyString
dictionary
dictionaryWithCapacity:
disassembledLineInfo
doubleValue
enumerateKeysAndObjectsUsingBlock:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
initWithData:encoding:
initWithDelegate:
invertedSet
irString
isDisassemblerAvailable
isForInternalTool
isFramebufferFetchWithEvents:type:
isRenderBeginWithEvents:type:
isRenderEndWithEvents:type:
lastPathComponent
length
metalPlugin
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
objectAtIndexedSubscript:
objectForKeyedSubscript:
offset
opCode
opCodeSubType
opCodeType
path
perFileCost
platformShaderAnalyzer
removeItemAtURL:error:
setBinaryDisassemblyInfo:
setBinaryRangeInfo:
setCallStackInfo:
setCost:
setCostPercentage:
setDirectory:
setDisasmSource:
setDisassembledLineInfo:
setDrawCallCost:
setDrawCallPerLineCost:
setFile:
setFunction:
setIrSource:
setLineIndex:
setName:
setObject:forKeyedSubscript:
setOffset:
setOpcode:
setOpcodeSubType:
setOpcodeType:
setSourceInfo:
setSourcePath:
setTotalCost:
setTotalPerLineCost:
setupForAnalysis
setupShaderInstructionInfoForBinary:forTargetIndex:
shaderAnalyzer
shaderAnalyzerDyson
shaderInstructionInfoFromBinary:withStartOffset:forLength:targetIndex:
shaderInstructionInfoWithStartOffset:endOffset:
stringByDeletingPathExtension
stringByStandardizingPath
stringWithUTF8String:
supportRendererType:
waitUntilFinished
writeToFile:atomically:encoding:error:
writeToURL:atomically:
B28@0:8^v16I24
B20@0:8i16
B16@0:8
@24@0:8@16
v16@0:8
@72@0:8@16@24i32@36@44@52I60@64
@60@0:8@16@24i32@36@44r^v52
@52@0:8@16@24i32@36@44
@28@0:8@16i24
d28@0:8@16I24
d36@0:8@16I24@28
{DebugInfo={vector<DebugInfo::LineEntry, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}{unordered_map<std::string, unsigned int, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int>>>={__hash_table<std::__hash_value_type<std::string, unsigned int>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, unsigned int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int>, std::hash<std::string>, std::equal_to<std::string>>>=Q}{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int>, std::equal_to<std::string>, std::hash<std::string>>>=f}}}{vector<std::string, std::allocator<std::string>>=^v^v{__compressed_pair<std::string *, std::allocator<std::string>>=^v}}IIIII}44@0:8@16@24i32@36
{pair<std::vector<unsigned int>, std::vector<std::vector<DebugInfo::LineEntry *>>>={vector<unsigned int, std::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::allocator<unsigned int>>=^I}}{vector<std::vector<DebugInfo::LineEntry *>, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v^v{__compressed_pair<std::vector<DebugInfo::LineEntry *> *, std::allocator<std::vector<DebugInfo::LineEntry *>>>=^v}}}24@0:8^v16
v72@0:8^v16^v24^v32d40I48I52i56r^{LineDisassemblyInfo=@@dIIII}60B68
@72@0:8^v16^v24^v32d40@48@56^v64
@28@0:8r^v16I24
@16@0:8
@"<DYPShaderAnalyzer>"
@"NSOperationQueue"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
MbP?
ouSt12length_error
St11logic_error
St9exception
St20bad_array_new_length
St9bad_alloc
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.ParallelQueue
v8@?0
GlobalLoad
v32@?0@8@"NSNumber"16^B24
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/com.apple.gputools.profiling/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
source
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %u %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
    %d %s [%u %u] %.1f %.2f%%
    %d %s [%u %u]
binaryDisassemblyInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
perDrawCall
/program_source
Offset
GlobalStore
Sample
LocalLoad
LocalStore
totalCost
perLineCost
16777235-0
::air.vertexFetchFunction()
vector
basic_string
