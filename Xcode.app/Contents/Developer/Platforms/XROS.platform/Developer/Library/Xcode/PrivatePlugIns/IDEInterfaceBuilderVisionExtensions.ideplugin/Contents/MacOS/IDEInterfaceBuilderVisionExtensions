@(#)PROGRAM:IDEInterfaceBuilderVisionExtensions  PROJECT:IDEInterfaceBuilderVisionSupport-23012
vision
IBVisionIdiom
IBAgent-iOS
IBDesignablesAgent-iOS
ipad
iOS.CocoaTouch.Vision
-[IBVisionIdiom supportsSimRuntime:]
IDEInterfaceBuilderVisionSupport/IDEInterfaceBuilderVisionExtensions/IBVisionIdiom.m
The DVT runtime platform is missing for idiom %@ (%@). Available Platforms: %@
__objc_no
Called DVTWarn
com.apple.CoreSimulator.SimDeviceType.Apple-Vision-Pro
-[IBVisionIdiom simDeviceTypeForToolDescription:error:]
!___localError
A method claimed to have succeeded but provided an error! (%@)
com.apple.CoreSimulator.SimDeviceType.RealityDevice
v8@?0
xros
xrOS_iOS
+[IBVisionDocumentDependencyVersionProvider versions]_block_invoke_2
IDEInterfaceBuilderVisionSupport/IDEInterfaceBuilderVisionExtensions/IBVisionDocumentDependencyVersionProvider.m
mappediOSVersion.length >= 2 && mappediOSVersion.length <= 6
unexpected iOS version format '%@' for xrOS version '%@'
number
label
visionOS %@ and Later
marketingVersion
@8@?0
IBVisionPlatform
visionOS
xrsimulator
iphone
Xcode.InterfaceBuilderKit.iOSIntegration.DocumentDependency.xrOSVersion
Developer/Library/Xcode/Overlays
Developer/Library/PrivateFrameworks
Compiling Interface Builder products for visionOS will not be supported in a future version of Xcode.
-[IBVisionPlatformToolDescription targetRuntime]
IDEInterfaceBuilderVisionSupport/IDEInterfaceBuilderVisionExtensions/IBVisionPlatformToolDescription.m
castedInstance
%s should be an instance inheriting from %@, but it is nil
[castedInstance isKindOfClass:[IBVisionTargetRuntime class]]
%s should be an instance inheriting from %@, but it is %@
-[IBVisionPlatformToolDescription toolProxyManager]
[castedInstance isKindOfClass:[IBCocoaTouchToolManager class]]
v32@?0@"SimRuntime"8Q16*24
No available runtime found from: [
    %@ ==> not available: %@,
    %@ ==> %@ does not support runtime,
 when matching for %@, idiom=%@ runtime=%@
Could not find any supported simulator runtimes
Failed to find newest available Simulator runtime
com.apple.dt.IDEInterfaceBuilder
-[IBVisionPlatformToolDescription newestAvailableAndSupportedRuntimeReturningError:]
!(({ NSError *effectiveError = (localError); NSString *effectiveFailureReason = (((void *)0)); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"Failed to find newest available Simulator runtime"]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
A method claimed to have succeeded but provided an error!
(({ NSError *effectiveError = (localError); NSString *effectiveFailureReason = (((void *)0)); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"Failed to find newest available Simulator runtime"]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
A method claimed to have failed but provided no error!
-[IBVisionPlatformToolDescription preferredDeviceTypeReturningError:]
IBVisionRuntimePlatformTransformer
Source runtime %@ must be an instance of IBCocoaTouchTargetRuntime
Destination platform family not supported: %@
@"IBVisionTargetRuntime"8@?0
-[IBVisionToolManager contextForLaunchingToolWithDescription:error:]
IDEInterfaceBuilderVisionSupport/IDEInterfaceBuilderVisionExtensions/IBVisionToolManager.m
[castedInstance isKindOfClass:[IBCocoaTouchPlatformToolDescription class]]
No overlay tool named "%@" found in the platform "%@"
Failed to find launch context for tool description %@
(({ NSError *effectiveError = (((void *)0)); NSString *effectiveFailureReason = (localFailureReason); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"Failed to find launch context for tool description %@", description]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
backingPlatform
T#,R
isProxy
T@"NSString",R,C
setWithObjects:
.cxx_destruct
bundleForClass:
T@"NSString",?,R,C
release
TQ,R
_sharedExecutionContext
addObject:
allInstances
allInstancesForScope:
allPlatforms
appendFormat:
appendString:
archiveIdentifier
array
arrayWithObjects:count:
assertOnExecutionQueue
autorelease
available
buildSystemPlatformIdentifier
buildSystemPlatformName
buildSystemTargetDeviceIdentifier
buildSystemTargetDeviceIdentifierAliases
class
cocoaTouchOSVersion
cocoaTouchToolName
code
conformsToProtocol:
contextForLaunchingToolWithDescription:error:
convertTargetRuntime:toPlatformFamily:error:
copy
count
countByEnumeratingWithState:objects:count:
debugDescription
defaultTargetRuntime
defaultTargetRuntimeForArchiving
defaultToolDescriptionWithRole:deviceTypeDescription:
defaultToolProxyManager
description
descriptionForTargetRuntime:role:deviceTypeDescription:
descriptionWithScaleFactor:toolManagerClass:renderMode:
designablesAgentName
dictionary
dictionaryWithObjects:forKeys:count:
didRegisterSharedInstance
documentDependencyVersionWithDictionary:
documentDependencyWithIdentifier:
domain
enumerateObjectsWithOptions:usingBlock:
errorWithDomain:code:userInfo:
frameworkSearchPathsForOverlayTools
hash
ib_errorWithLocalizedDescription:
ib_errorWithLocalizedDescriptionFormat:
ib_objectForKey:inDictionaryForKey:creatingIfNecessaryWithBlock:
ide_initializeWithOptions:error:
identifier
idiom
idiomClass
idiomName
initWithDescription:launchPath:frameworkSearchPaths:
initWithIdiom:andOSVersion:
instanceWithIdentifier:
isAvailableWithError:
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
issueWithType:message:forDocument:source:affectedObjects:
length
localizedStringForKey:value:table:
newestAvailableAndSupportedRuntimeReturningError:
numberWithUnsignedInt:
objectForKey:
objectForKeyedSubscript:
operatingSystemName
pathString
pathToOverlayToolNamed:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
platform
platformForIdentifier:
platformForName:
platformIdentifier
platformPath
populateGlobalIssues:inDocument:
preferredDeviceTypeReturningError:
respondsToSelector:
retain
retainCount
scanHexInt:
scannerWithString:
sdkForCanonicalName:
self
setObject:forKey:
sharedInstance
simDeviceTypeForToolDescription:error:
singletonForClass:
singletonForIdentifier:scope:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
stringWithString:
superclass
supportedDeviceTypesByIdentifier
supportedRuntimes
supportedTargetDevices
supportsSimRuntime:
systemDocumentDependency
targetRuntime
targetRuntimeForIdiom:andOSVersion:
targetRuntimeForIdiom:andUserInterfaceEra:
toolDescriptionForAutolayoutOperationsWithRole:deviceTypeDescription:
toolDescriptionForCompilingDocument:
toolDescriptionForSceneUpdatesWithRole:deviceTypeDescription:
toolProxyManager
valueForKey:
versionMap
versions
zone
IBVisionIdiom
IBVisionInitializer
IDEInitialization
IBVisionDocumentDependencyVersionProvider
IBDocumentDependencyVersionProvider
NSObject
IBVisionPlatform
IBVisionPlatformToolDescription
IBVisionRuntimePlatformTransformer
IBScopedSingleton
IBRuntimePlatformTransformer
IBVisionTargetRuntime
IBVisionToolManager
@16@0:8
c24@0:8@16
@32@0:8@16^@24
c32@0:8Q16^@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"16@0:8
@24@0:8@16
v32@0:8@16@24
@24@0:8^@16
v16@0:8
@"NSSet"16@0:8
@24@0:8@"NSString"16
@40@0:8@16@24^@32
@"IBTargetRuntime"40@0:8@"IBTargetRuntime"16@"DVTPlatformFamily"24^@32
@32@0:8@16@24
@32@0:8q16@24
@"IBPlatformToolDVTTaskExecutionContext"
@(#)PROGRAM:IDEInterfaceBuilderVisionExtensions  PROJECT:IDEInterfaceBuilderVisionSupport-23012
vision
IBVisionIdiom
IBAgent-iOS
IBDesignablesAgent-iOS
ipad
iOS.CocoaTouch.Vision
-[IBVisionIdiom supportsSimRuntime:]
IDEInterfaceBuilderVisionSupport/IDEInterfaceBuilderVisionExtensions/IBVisionIdiom.m
The DVT runtime platform is missing for idiom %@ (%@). Available Platforms: %@
__objc_no
Called DVTWarn
com.apple.CoreSimulator.SimDeviceType.Apple-Vision-Pro
-[IBVisionIdiom simDeviceTypeForToolDescription:error:]
!___localError
A method claimed to have succeeded but provided an error! (%@)
com.apple.CoreSimulator.SimDeviceType.RealityDevice
v8@?0
xros
xrOS_iOS
+[IBVisionDocumentDependencyVersionProvider versions]_block_invoke_2
IDEInterfaceBuilderVisionSupport/IDEInterfaceBuilderVisionExtensions/IBVisionDocumentDependencyVersionProvider.m
mappediOSVersion.length >= 2 && mappediOSVersion.length <= 6
unexpected iOS version format '%@' for xrOS version '%@'
number
label
visionOS %@ and Later
marketingVersion
@8@?0
IBVisionPlatform
visionOS
xrsimulator
iphone
Xcode.InterfaceBuilderKit.iOSIntegration.DocumentDependency.xrOSVersion
Developer/Library/Xcode/Overlays
Developer/Library/PrivateFrameworks
Compiling Interface Builder products for visionOS will not be supported in a future version of Xcode.
-[IBVisionPlatformToolDescription targetRuntime]
IDEInterfaceBuilderVisionSupport/IDEInterfaceBuilderVisionExtensions/IBVisionPlatformToolDescription.m
castedInstance
%s should be an instance inheriting from %@, but it is nil
[castedInstance isKindOfClass:[IBVisionTargetRuntime class]]
%s should be an instance inheriting from %@, but it is %@
-[IBVisionPlatformToolDescription toolProxyManager]
[castedInstance isKindOfClass:[IBCocoaTouchToolManager class]]
v32@?0@"SimRuntime"8Q16^B24
No available runtime found from: [
    %@ ==> not available: %@,
    %@ ==> %@ does not support runtime,
 when matching for %@, idiom=%@ runtime=%@
Could not find any supported simulator runtimes
Failed to find newest available Simulator runtime
com.apple.dt.IDEInterfaceBuilder
-[IBVisionPlatformToolDescription newestAvailableAndSupportedRuntimeReturningError:]
!(({ NSError *effectiveError = (localError); NSString *effectiveFailureReason = (((void *)0)); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"Failed to find newest available Simulator runtime"]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
A method claimed to have succeeded but provided an error!
(({ NSError *effectiveError = (localError); NSString *effectiveFailureReason = (((void *)0)); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"Failed to find newest available Simulator runtime"]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
A method claimed to have failed but provided no error!
-[IBVisionPlatformToolDescription preferredDeviceTypeReturningError:]
IBVisionRuntimePlatformTransformer
Source runtime %@ must be an instance of IBCocoaTouchTargetRuntime
Destination platform family not supported: %@
@"IBVisionTargetRuntime"8@?0
-[IBVisionToolManager contextForLaunchingToolWithDescription:error:]
IDEInterfaceBuilderVisionSupport/IDEInterfaceBuilderVisionExtensions/IBVisionToolManager.m
[castedInstance isKindOfClass:[IBCocoaTouchPlatformToolDescription class]]
No overlay tool named "%@" found in the platform "%@"
Failed to find launch context for tool description %@
(({ NSError *effectiveError = (((void *)0)); NSString *effectiveFailureReason = (localFailureReason); if (effectiveError || effectiveFailureReason) { NSString *localizedDescription = ([NSString stringWithFormat:@"Failed to find launch context for tool description %@", description]); NSMutableDictionary *userInfo = [NSMutableDictionary dictionary]; [userInfo setObject:localizedDescription forKey:NSLocalizedDescriptionKey]; if (effectiveError) { [userInfo setObject:effectiveError forKey:NSUnderlyingErrorKey]; } if (effectiveFailureReason) { [userInfo setObject:effectiveFailureReason forKey:NSLocalizedFailureReasonErrorKey]; } NSString *domain = [effectiveError domain] ?: @"com.apple.dt.IDEInterfaceBuilder"; NSInteger code = (effectiveError) ? [effectiveError code] : -1; effectiveError = [NSError errorWithDomain:domain code:code userInfo:userInfo]; } effectiveError; }))
backingPlatform
T#,R
isProxy
T@"NSString",R,C
setWithObjects:
.cxx_destruct
bundleForClass:
T@"NSString",?,R,C
release
TQ,R
_sharedExecutionContext
addObject:
allInstances
allInstancesForScope:
allPlatforms
appendFormat:
appendString:
archiveIdentifier
array
arrayWithObjects:count:
assertOnExecutionQueue
autorelease
available
buildSystemPlatformIdentifier
buildSystemPlatformName
buildSystemTargetDeviceIdentifier
buildSystemTargetDeviceIdentifierAliases
class
cocoaTouchOSVersion
cocoaTouchToolName
code
conformsToProtocol:
contextForLaunchingToolWithDescription:error:
convertTargetRuntime:toPlatformFamily:error:
copy
count
countByEnumeratingWithState:objects:count:
debugDescription
defaultTargetRuntime
defaultTargetRuntimeForArchiving
defaultToolDescriptionWithRole:deviceTypeDescription:
defaultToolProxyManager
description
descriptionForTargetRuntime:role:deviceTypeDescription:
descriptionWithScaleFactor:toolManagerClass:renderMode:
designablesAgentName
dictionary
dictionaryWithObjects:forKeys:count:
didRegisterSharedInstance
documentDependencyVersionWithDictionary:
documentDependencyWithIdentifier:
domain
enumerateObjectsWithOptions:usingBlock:
errorWithDomain:code:userInfo:
frameworkSearchPathsForOverlayTools
hash
ib_errorWithLocalizedDescription:
ib_errorWithLocalizedDescriptionFormat:
ib_objectForKey:inDictionaryForKey:creatingIfNecessaryWithBlock:
ide_initializeWithOptions:error:
identifier
idiom
idiomClass
idiomName
initWithDescription:launchPath:frameworkSearchPaths:
initWithIdiom:andOSVersion:
instanceWithIdentifier:
isAvailableWithError:
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
issueWithType:message:forDocument:source:affectedObjects:
length
localizedStringForKey:value:table:
newestAvailableAndSupportedRuntimeReturningError:
numberWithUnsignedInt:
objectForKey:
objectForKeyedSubscript:
operatingSystemName
pathString
pathToOverlayToolNamed:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
platform
platformForIdentifier:
platformForName:
platformIdentifier
platformPath
populateGlobalIssues:inDocument:
preferredDeviceTypeReturningError:
respondsToSelector:
retain
retainCount
scanHexInt:
scannerWithString:
sdkForCanonicalName:
self
setObject:forKey:
sharedInstance
simDeviceTypeForToolDescription:error:
singletonForClass:
singletonForIdentifier:scope:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
stringWithString:
superclass
supportedDeviceTypesByIdentifier
supportedRuntimes
supportedTargetDevices
supportsSimRuntime:
systemDocumentDependency
targetRuntime
targetRuntimeForIdiom:andOSVersion:
targetRuntimeForIdiom:andUserInterfaceEra:
toolDescriptionForAutolayoutOperationsWithRole:deviceTypeDescription:
toolDescriptionForCompilingDocument:
toolDescriptionForSceneUpdatesWithRole:deviceTypeDescription:
toolProxyManager
valueForKey:
versionMap
versions
zone
IBVisionIdiom
IBVisionInitializer
IDEInitialization
IBVisionDocumentDependencyVersionProvider
IBDocumentDependencyVersionProvider
NSObject
IBVisionPlatform
IBVisionPlatformToolDescription
IBVisionRuntimePlatformTransformer
IBScopedSingleton
IBRuntimePlatformTransformer
IBVisionTargetRuntime
IBVisionToolManager
@16@0:8
B24@0:8@16
@32@0:8@16^@24
B32@0:8Q16^@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"16@0:8
@24@0:8@16
v32@0:8@16@24
@24@0:8^@16
v16@0:8
@"NSSet"16@0:8
@24@0:8@"NSString"16
@40@0:8@16@24^@32
@"IBTargetRuntime"40@0:8@"IBTargetRuntime"16@"DVTPlatformFamily"24^@32
@32@0:8@16@24
@32@0:8q16@24
@"IBPlatformToolDVTTaskExecutionContext"
