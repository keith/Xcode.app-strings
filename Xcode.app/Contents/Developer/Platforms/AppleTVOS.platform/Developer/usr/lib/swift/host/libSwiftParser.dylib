v8@?0
swift_getFunctionTypeMetadataGlobalActor
swift_getFunctionTypeMetadataGlobalActorStandalone
future reported an error, but wait cannot throw
swift_task_escalate
_Z19voucher_needs_adoptP9voucher_s
__tsan_acquire
__tsan_release
not all allocations are deallocated
freed pointer was not the last allocation
'%s' failed with error '%s'(%d)
pthread_cond_init(&condition, nullptr)
pthread_cond_destroy(&condition)
pthread_cond_signal(&condition)
pthread_cond_broadcast(&condition)
pthread_cond_wait(&condition, &mutex)
pthread_mutexattr_init(&attr)
pthread_mutexattr_settype(&attr, kind)
pthread_mutex_init(&mutex, &attr)
pthread_mutexattr_destroy(&attr)
pthread_mutex_destroy(&mutex)
pthread_mutex_lock(&mutex)
pthread_mutex_unlock(&mutex)
pthread_mutex_trylock(&mutex)
pthread_rwlock_init(&rwlock, nullptr)
pthread_rwlock_destroy(&rwlock)
pthread_rwlock_rdlock(&rwlock)
pthread_rwlock_tryrdlock(&rwlock)
pthread_rwlock_wrlock(&rwlock)
pthread_rwlock_trywrlock(&rwlock)
pthread_rwlock_unlock(&rwlock)
EINVAL
EPERM
EDEADLK
ENOMEM
EAGAIN
EBUSY
<unknown>
swift_task_enterThreadLocalContext
swift_task_exitThreadLocalContext
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/TokenSpec.swift
To create a TokenSpec for a keyword use the initializer that takes a keyword
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/TokenConsumer.swift
visibility
metadata
<#declaration#>
Fatal error
AnyObject
elif
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/ParseSourceFile.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Expressions.swift
elements must have an even number of elements
Couldn't be a trailing closure
SwiftParser/Expressions.swift
Postfix #if should only have one element
SwiftParser/IncrementalParseTransition.swift
ConcurrentEdits created by translateSequentialEditsToConcurrentEdits do not satisfy ConcurrentEdits requirements
A single edit doesn't satisfy the ConcurrentEdits requirements?
_TtC19CompilerSwiftParser26IncrementalParseTransition
previousIncrementalParseResult
edits
reusedNodeCallback
Edits passed to ConcurrentEdits(concurrent:) does not satisfy the requirements posed by ConcurrentEdits
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/IncrementalParseTransition.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Lookahead.swift
If tokenKind has a defaultText, the prefix needs to match it
not checking a brace?
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Names.swift
_TtC19CompilerSwiftParser21LookaheadTrackerOwner
lookaheadTracker
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Parser.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Specifiers.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Statements.swift
SwiftParser/StringLiteralRepresentedLiteralValue.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/StringLiteralRepresentedLiteralValue.swift
appendUnescapedLiteralValue relies on properly parsed literals
_TtC19CompilerSwiftParserP33_78149DB072C20084E7D780D86E26C3AF41StringLiteralExpressionIndentationChecker
expectedIndentation
arena
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/StringLiterals.swift
String segment produced by the lexer should not have unexpected text or trivia because we would drop it during post-processing
SwiftParser/StringLiterals.swift
The lexer should only add trailing trivia to a string segment if the newline is escaped by a backslash
SwiftParser/TokenPrecedence.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Lexer/Cursor.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/TriviaParser.swift
Caller must handle newlines in non-multiline
Use Result.keyword instead
sourceLocation
else
elseif
endif
available
unavailable
Unexpected start
not a hex literal
not at a hex float exponent?!
Unexpected start of escaped identifier
unexpected operator start
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Lexer/LexemeSequence.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Lexer/RegexLiteralLexer.swift
Should have lexed this?
lexing before the operator?
AccessLevelModifier
DeclarationAttributeWithSpecialSyntax
AvailabilityArgumentKind
LabelText
OperatorDeclIntroducer
DeclAttributes
AccessorIntroducer
ExpectedTokenKind
IfConfigContinuationClauseStartKeyword
CollectionKind
ExpectedTokenKind
CompilerSwiftParser
IncrementalParseTransition
ConcurrentEdits
SyntaxCursor
IncrementalParseLookup
ConcurrentEditsError
CompilerSwiftParser
IdentifierCheckContext
BracketedTokens
SkippingState
Lookahead
CompilerSwiftParser
LoopProgressCondition
AccessLevelModifier
CompilerSwiftParser
NominalTypeDeclarationTrait
PrimaryOrGenerics
CompilerSwiftParser
RawParameterTrait
RawParameterListTrait
ParameterSyntax
RawParameterClauseTrait
Parameters
ParameterNames
CompilerSwiftParser
Parser
LookaheadTracker
LookaheadTrackerOwner
LookaheadRanges
CompilerSwiftParser
IncrementalParseResult
PatternOnlyExpectedTokens
CompilerSwiftParser
TokenSpec
PrepareForKeywordMatch
CompilerSwiftParser
TokenSpecSet
DeclarationStart
PostfixOperatorLike
BinaryOperatorLike
OperatorLike
EffectSpecifiers
AccessorModifier
ParameterModifier
PrimaryExpressionStart
ExpressionStart
CanBeStatementStart
SingleValueStatementExpression
ExpressionPrefixOperator
ExpressionModifierKeyword
PureMatchingPatternStart
SwitchCaseStart
Operator
DeclarationModifier
PureDeclarationKeyword
EitherTokenSpecSet
ContextualDeclKeyword
TypeAttribute
CompilerSwiftParser
RecoveryConsumptionHandle
CompilerSwiftParser
AsyncEffectSpecifier
ThrowsEffectSpecifier
EffectSpecifier
RawMisplacedEffectSpecifiersTrait
MisspelledAsyncTokenKinds CorrectAsyncTokenKinds MisspelledThrowsTokenKinds CorrectThrowsTokenKinds
RawEffectSpecifiersTrait
MisspelledThrowsTokenKinds
MisspelledAsyncTokenKinds
CorrectThrowsTokenKinds
CorrectAsyncTokenKinds
NotReturnExprStart
StatementLabel
BindingKind
CompilerSwiftParser
StringLiteralExpressionIndentationChecker
SwiftVersion
CompilerSwiftParser
UnexpectedNodesCombinable
CompilerSwiftParser
TokenConsumer
Token
TokenConsumptionHandle
CompilerSwiftParser
TokenPrecedence
CompilerSwiftParser
TriviaParser
TypeBaseStart
ExperimentalFeatures
CompilerSwiftParser
SyntaxParseable
CompilerSwiftParser
AccessorSpecifierOptions
QuestionOrExclamationMarkOptions
AvailabilityKeywordOptions
LabelOptions
LiteralOptions
SpecifierOptions
DetailOptions
FirstNameOptions
SecondNameOptions
NameOptions
ConsumeKeywordOptions
BaseNameOptions
ArgumentOptions
KindSpecifierOptions
AsyncSpecifierOptions
IdentifierOptions
PoundKeywordOptions
ImportKindSpecifierOptions
OptionalMarkOptions
LayoutSpecifierOptions
ParameterOptions
MetatypeSpecifierOptions
FixitySpecifierOptions
BindingSpecifierOptions
ValueOptions
HigherThanOrLowerThanLabelOptions
EqualOptions
OpeningQuoteOptions
ClosingQuoteOptions
SomeOrAnySpecifierOptions
ThrowsSpecifierOptions
CompilerSwiftParser
StringLiteralKind
Cursor
UnknownCharactersClassification
TriviaResult
Result
EscapedCharacterLex
CharacterLex
State
StateTransition
LexingDiagnostic
StateStack
NewlinePresence
Position
TriviaLexingMode
Lexeme
Flags
LexemeSequence
CompilerSwiftParser
Lexer
CompilerSwiftParser
RegexLiteralLexer
Builder
Element
RegexLiteralLexemes
Kind
Sg_ABt
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
$ss12CaseIterableP
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handletSg
G4spec_
6handletSg
G4spec_
6handlet
G5match_
6handletSg
G5match_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
4spec_
6handletSg
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
8operator_AASg3rhstSg
_AASgt
8operator_AASg3rhst
4spec_
6handlet
4spec_
6handlet
4spec_
6handletSg
4spec_
6handletSg
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
_AAt
4spec_
6handletSg
4spec_
6handlet
4spec_
6handlet
_AAtSg
_AAt
3key_
Sg21unexpectedBeforeColon
5colonAA5valuet
G4spec_
6handletSg
G4spec_
6handlet
Si6offset_
7elementt
Si6offset_
7elementtSg
$s19CompilerSwiftParser13TokenConsumerP
4spec_
6handlet
4spec_
6handlet
4spec_
6handletSg
4spec_
6handlet
5start_t
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
5match_
6handletSg
5match_
6handlet
5match_
6handletSg
5match_
6handlet
$s19CompilerSwiftParser27NominalTypeDeclarationTraitP
$s19CompilerSwiftParser21RawParameterListTraitP
$s19CompilerSwiftParser23RawParameterClauseTraitP
$s19CompilerSwiftParser17RawParameterTraitP
15ParameterSyntax
10Parameters
4spec_
6handlet
4spec_
6handletSg
4spec_
6handlet
Sg_ABt
_Sit
G4spec_
6handletSg
G4spec_
6handlet
$s19CompilerSwiftParser12TokenSpecSetP
yxq_GG
$s19CompilerSwiftParser33RawMisplacedEffectSpecifiersTraitP
22CorrectAsyncTokenKinds
23CorrectThrowsTokenKinds
25MisspelledAsyncTokenKinds
26MisspelledThrowsTokenKinds
$s19CompilerSwiftParser24RawEffectSpecifiersTraitP
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
4spec_
6handletSg
5match_
6handlet
4spec_
6handletSg
4spec_
6handlet
G28unexpectedBeforeOpeningQuote_AA07openingD0Say
G8segmentsAB0ab7ClosingD0AA07closingD0t
Si6offset_
7elementt
Si6offset_
7elementtSg
Sg_ABt
$s19CompilerSwiftParser25UnexpectedNodesCombinableP
16closingDelimiter_t
10specifiers_
10attributest
10specifiers_
10attributestSg
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handletSg
4spec_
6handlet
4spec_
6handlet
4spec_
6handleypXmT13matchedSubsettSg
ypXmTt
4spec_
6handleypXmT13matchedSubsett
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handletSg
5match_
6handlet
5match_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handletSg
5match_
6handlet
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
$ss9OptionSetP
$ss10SetAlgebraP
$sSY
$ss25ExpressibleByArrayLiteralP
$s19CompilerSwiftParser15SyntaxParseableP
5index_
7lexemest
8newState_t
Si15delimiterLength_t
4kind_Si15delimiterLengtht
Sb11isRawString_t
17stringLiteralKind_t
17stringLiteralKind_Si10parenCountt
5index_SPy
G7lexemest
5error_t
SaySSG
ySSG
ySiG
$sSt
$sST
$sSl
$sSK
$sSk
8slashEnd_Si9numPoundstSg
SiSg
5IndexSlQzz_x_SlRz
7ElementSTRtzlXX
_alignment
_backDeploy
_cdecl
_documentation
_dynamicReplacement
_effects
_expose
_implements
_nonSendable
_objcImplementation
_objcRuntimeName
_optimize
_originallyDefinedIn
_private
_projectedValueProperty
_semantics
_specialize
_spi
_spi_available
_swift_native_objc_runtime_base
_typeEraser
_unavailableFromAsync
rethrows
attached
available
backDeployed
derivative
differentiable
exclusivity
freestanding
inline
objc
Sendable
transpose
private
fileprivate
internal
public
open
AllCases
message
renamed
introduced
deprecated
obsoleted
unavailable
noasync
star
identifier
AllCases
colon
binaryOperator
postfixOperator
prefixOperator
attributes
modifier
kind
unexpectedBeforeToken
token
modifiers
unexpectedBeforeFixity
fixity
unexpectedBeforeOperatorKeyword
operatorKeyword
associativity
assignment
higherThan
lowerThan
AllCases
poundElseif
poundElse
pound
AllCases
binaryOperator
infixQuestionMark
equal
async
arrow
throws
dictionary
array
AllCases
previousIncrementalParseResult
edits
reusedNodeCallback
editsNotConcurrent
transition
cursor
node
finished
viewMode
variableName
memberAccess
Token
skipSinglePost
skipUntil
skipSingle
leftParen
leftBrace
leftSquare
poundIf
poundElse
poundElseif
lexemes
currentToken
tokensConsumed
swiftVersion
experimentalFeatures
AllCases
currentToken
private
fileprivate
internal
public
AllCases
PrimaryOrGenerics
ParameterSyntax
Parameters
unexpectedBeforeFirstName
firstName
unexpectedBeforeSecondName
secondName
Token
arena
lexemes
currentToken
nestingLevel
maximumNestingLevel
parseLookup
lookaheadRanges
lookaheadTrackerOwner
swiftVersion
experimentalFeatures
_emptyRawMultipleTrailingClosureElementListSyntax
_emptyRawDeclModifierListSyntax
_emptyRawAttributeListSyntax
_emptyRawTypeSpecifierListSyntax
furthestOffset
lookaheadTracker
tree
lookaheadRanges
leftParen
wildcard
identifier
dollarIdentifier
AllCases
rawTokenKind
keyword
remapping
recoveryPrecedence
allowAtStartOfLine
isAtStartOfLine
_local
_noMetadata
_opaqueReturnTypeOf
async
autoclosure
convention
differentiable
escaping
noDerivative
noescape
preconcurrency
retroactive
Sendable
unchecked
isolated
__consuming
_compilerInitialized
_const
actor
convenience
distributed
dynamic
final
indirect
infix
lazy
mutating
nonisolated
nonmutating
package
open
optional
override
postfix
prefix
required
unowned
weak
associatedtype
case
class
deinit
enum
extension
func
import
init
macro
operator
precedencegroup
protocol
struct
subscript
typealias
pound
__setter_access
borrowing
consuming
fileprivate
internal
private
public
reasync
rethrows
sending
static
transferring
_resultDependsOn
_resultDependsOnSelf
binaryOperator
postfixOperator
prefixOperator
default
await
_move
_borrow
consume
copy
repeat
each
backslash
prefixAmpersand
switch
break
continue
defer
fallthrough
discard
guard
return
then
throw
while
yield
awaitTryMove
expressionPrefixOperator
primaryExpressionStart
singleValueStatement
atSign
Self
dollarIdentifier
false
floatLiteral
identifier
integerLiteral
leftBrace
leftParen
leftSquare
period
poundAvailable
poundUnavailable
regexSlash
extendedRegexDelimiter
self
super
true
wildcard
rawStringDelimiter
stringQuote
multilineStringQuote
singleQuote
throws
binaryOperatorLike
postfixOperatorLike
infixQuestionMark
equal
arrow
exclamationMark
postfixQuestionMark
declarationModifier
declarationKeyword
AllCases
unexpectedTokens
tokenConsumptionHandle
AllCases
MisspelledAsyncTokenKinds
CorrectAsyncTokenKinds
MisspelledThrowsTokenKinds
CorrectThrowsTokenKinds
async
await
reasync
rethrows
throw
throws
asyncSpecifier
throwsSpecifier
pattern
optional
label
colon
rightBrace
case
default
semicolon
poundIf
poundEndif
poundElse
poundElseif
endOfFile
AllCases
expectedIndentation
arena
spec
tokenIsMissing
weakBracketed
openingBrace
unknownToken
identifierLike
exprKeyword
weakPunctuator
mediumPunctuator
weakBracketClose
stmtKeyword
strongPunctuator
closingBrace
declKeyword
openingPoundIf
closingPoundIf
Self
identifier
leftParen
leftSquare
wildcard
AllCases
Element
RawValue
ArrayLiteralElement
rawValue
AllCases
didSet
willSet
unsafeAddress
addressWithOwner
addressWithNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
_read
_modify
init
postfixQuestionMark
exclamationMark
poundAvailable
poundUnavailable
message
renamed
introduced
obsoleted
deprecated
true
false
_version
_underlyingVersion
weak
unowned
safe
unsafe
identifier
wildcard
_move
consume
__consuming
__setter_access
_const
_local
actor
async
borrowing
class
consuming
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
mutating
nonisolated
nonmutating
open
optional
override
package
postfix
prefix
private
public
reasync
_resultDependsOnSelf
required
static
transferring
sending
self
Self
deinit
subscript
dollarIdentifier
binaryOperator
integerLiteral
_forward
reverse
_linear
visibility
metadata
prefixOperator
postfixOperator
poundIf
poundElseif
poundElse
typealias
struct
enum
protocol
func
inout
target
availability
exported
kind
spiModule
_Trivial
_TrivialAtMost
_UnknownLayout
_RefCountedObject
_NativeRefCountedObject
_Class
_NativeClass
_BridgeObject
_TrivialStride
Type
Protocol
_mutating
_borrowing
_consuming
left
right
none
higherThan
lowerThan
stringQuote
multilineStringQuote
__shared
__owned
_resultDependsOn
some
singleQuote
throws
rethrows
singleLine
multiLine
singleQuote
position
previousTokenKind
previousLexemeTrailingNewlinePresence
previousKeyword
stateStack
input
previous
absent
present
topState
kind
push
pushRegexLexemes
replace
afterRawStringDelimiter
inStringLiteral
afterStringLiteral
inStringInterpolationStart
inStringInterpolation
inRegexLiteral
normal
preferRegexOverBinaryOperator
afterClosingStringQuote
success
validatedEscapeSequence
error
endOfString
tokenKind
flags
stateTransition
trailingTriviaLexingMode
keywordKind
trailingNewlinePresence
newlinePresence
trivia
lexemeContents
noNewlines
escapedNewlineInMultiLineStringLiteral
Element
RawValue
ArrayLiteralElement
rawTokenKind
flags
diagnostic
start
leadingTriviaByteLength
textByteLength
trailingTriviaByteLength
cursor
rawValue
Element
Iterator
sourceBufferStart
cursor
nextToken
lexerStateAllocator
lookaheadTracker
Element
Iterator
Index
SubSequence
Indices
numOpenPounds
patternByteLength
numClosePounds
_startInput
_patternErrorOffset
_patternErrorKind
_startPrevious
lexemeCount
cursor
mustBeRegex
firstNewline
groupDepth
customCharacterClassDepth
lastUnespacedSpaceOrTab
lastNewlineEnd
candidateCloseSlashEnd
builder
kind
error
openingPounds
openingSlash
pattern
closingSlash
closingPounds
RawValue
03+Y@3+
 !"#$%&
 !"#$%
v8@?0
swift_getFunctionTypeMetadataGlobalActor
swift_getFunctionTypeMetadataGlobalActorStandalone
future reported an error, but wait cannot throw
swift_task_escalate
_Z19voucher_needs_adoptP9voucher_s
__tsan_acquire
__tsan_release
not all allocations are deallocated
freed pointer was not the last allocation
'%s' failed with error '%s'(%d)
pthread_cond_init(&condition, nullptr)
pthread_cond_destroy(&condition)
pthread_cond_signal(&condition)
pthread_cond_broadcast(&condition)
pthread_cond_wait(&condition, &mutex)
pthread_mutexattr_init(&attr)
pthread_mutexattr_settype(&attr, kind)
pthread_mutex_init(&mutex, &attr)
pthread_mutexattr_destroy(&attr)
pthread_mutex_destroy(&mutex)
pthread_mutex_lock(&mutex)
pthread_mutex_unlock(&mutex)
pthread_mutex_trylock(&mutex)
pthread_rwlock_init(&rwlock, nullptr)
pthread_rwlock_destroy(&rwlock)
pthread_rwlock_rdlock(&rwlock)
pthread_rwlock_tryrdlock(&rwlock)
pthread_rwlock_wrlock(&rwlock)
pthread_rwlock_trywrlock(&rwlock)
pthread_rwlock_unlock(&rwlock)
EINVAL
EPERM
EDEADLK
ENOMEM
EAGAIN
EBUSY
<unknown>
swift_task_enterThreadLocalContext
swift_task_exitThreadLocalContext
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/TokenSpec.swift
To create a TokenSpec for a keyword use the initializer that takes a keyword
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/TokenConsumer.swift
visibility
metadata
<#declaration#>
Fatal error
AnyObject
elif
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/ParseSourceFile.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Expressions.swift
elements must have an even number of elements
Couldn't be a trailing closure
SwiftParser/Expressions.swift
Postfix #if should only have one element
SwiftParser/IncrementalParseTransition.swift
ConcurrentEdits created by translateSequentialEditsToConcurrentEdits do not satisfy ConcurrentEdits requirements
A single edit doesn't satisfy the ConcurrentEdits requirements?
_TtC19CompilerSwiftParser26IncrementalParseTransition
previousIncrementalParseResult
edits
reusedNodeCallback
Edits passed to ConcurrentEdits(concurrent:) does not satisfy the requirements posed by ConcurrentEdits
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/IncrementalParseTransition.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Lookahead.swift
If tokenKind has a defaultText, the prefix needs to match it
not checking a brace?
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Names.swift
_TtC19CompilerSwiftParser21LookaheadTrackerOwner
lookaheadTracker
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Parser.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Specifiers.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Statements.swift
SwiftParser/StringLiteralRepresentedLiteralValue.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/StringLiteralRepresentedLiteralValue.swift
appendUnescapedLiteralValue relies on properly parsed literals
_TtC19CompilerSwiftParserP33_78149DB072C20084E7D780D86E26C3AF41StringLiteralExpressionIndentationChecker
expectedIndentation
arena
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/StringLiterals.swift
String segment produced by the lexer should not have unexpected text or trivia because we would drop it during post-processing
SwiftParser/StringLiterals.swift
The lexer should only add trailing trivia to a string segment if the newline is escaped by a backslash
SwiftParser/TokenPrecedence.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Lexer/Cursor.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/TriviaParser.swift
Caller must handle newlines in non-multiline
Use Result.keyword instead
sourceLocation
else
elseif
endif
available
unavailable
Unexpected start
not a hex literal
not at a hex float exponent?!
Unexpected start of escaped identifier
unexpected operator start
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Lexer/LexemeSequence.swift
/Library/Caches/com.apple.xbs/Sources/swiftlang/swift-syntax/Sources/SwiftParser/Lexer/RegexLiteralLexer.swift
Should have lexed this?
lexing before the operator?
!$'*-0369<?BEHKNQTWZ]`c
AccessLevelModifier
DeclarationAttributeWithSpecialSyntax
,/e
AvailabilityArgumentKind
!mmmmmmmmmmmmmmmmm+mmmmmmmmmmL
LabelText
OperatorDeclIntroducer
DeclAttributes
AccessorIntroducer
ExpectedTokenKind
IfConfigContinuationClauseStartKeyword
CollectionKind
ExpectedTokenKind
CompilerSwiftParser
IncrementalParseTransition
ConcurrentEdits
SyntaxCursor
IncrementalParseLookup
ConcurrentEditsError
CompilerSwiftParser
IdentifierCheckContext
BracketedTokens
SkippingState
Lookahead
CompilerSwiftParser
LoopProgressCondition
AccessLevelModifier
CompilerSwiftParser
NominalTypeDeclarationTrait
PrimaryOrGenerics
CompilerSwiftParser
RawParameterTrait
RawParameterListTrait
ParameterSyntax
RawParameterClauseTrait
Parameters
ParameterNames
CompilerSwiftParser
Parser
LookaheadTracker
LookaheadTrackerOwner
LookaheadRanges
CompilerSwiftParser
IncrementalParseResult
PatternOnlyExpectedTokens
CompilerSwiftParser
TokenSpec
PrepareForKeywordMatch
;>ADGJMPS
!$'*-0369<?BEHK
!$'*-0369<?BEHKNQTWZ]`cf
!$'*
CompilerSwiftParser
TokenSpecSet
DeclarationStart
PostfixOperatorLike
BinaryOperatorLike
OperatorLike
EffectSpecifiers
AccessorModifier
ParameterModifier
PrimaryExpressionStart
ExpressionStart
CanBeStatementStart
SingleValueStatementExpression
ExpressionPrefixOperator
ExpressionModifierKeyword
PureMatchingPatternStart
SwitchCaseStart
Operator
DeclarationModifier
PureDeclarationKeyword
EitherTokenSpecSet
ContextualDeclKeyword
TypeAttribute
CompilerSwiftParser
RecoveryConsumptionHandle
CompilerSwiftParser
AsyncEffectSpecifier
ThrowsEffectSpecifier
EffectSpecifier
RawMisplacedEffectSpecifiersTrait
MisspelledAsyncTokenKinds CorrectAsyncTokenKinds MisspelledThrowsTokenKinds CorrectThrowsTokenKinds
RawEffectSpecifiersTrait
MisspelledThrowsTokenKinds
MisspelledAsyncTokenKinds
CorrectThrowsTokenKinds
CorrectAsyncTokenKinds
NotReturnExprStart
StatementLabel
BindingKind
CompilerSwiftParser
StringLiteralExpressionIndentationChecker
SwiftVersion
CompilerSwiftParser
UnexpectedNodesCombinable
CompilerSwiftParser
TokenConsumer
Token
TokenConsumptionHandle
0!%)
CompilerSwiftParser
TokenPrecedence
CompilerSwiftParser
TriviaParser
TypeBaseStart
ExperimentalFeatures
CompilerSwiftParser
SyntaxParseable
 #Pg~
#&),
CompilerSwiftParser
AccessorSpecifierOptions
QuestionOrExclamationMarkOptions
AvailabilityKeywordOptions
LabelOptions
LiteralOptions
SpecifierOptions
DetailOptions
FirstNameOptions
SecondNameOptions
NameOptions
ConsumeKeywordOptions
BaseNameOptions
ArgumentOptions
KindSpecifierOptions
AsyncSpecifierOptions
IdentifierOptions
PoundKeywordOptions
ImportKindSpecifierOptions
OptionalMarkOptions
LayoutSpecifierOptions
ParameterOptions
MetatypeSpecifierOptions
FixitySpecifierOptions
BindingSpecifierOptions
ValueOptions
HigherThanOrLowerThanLabelOptions
EqualOptions
OpeningQuoteOptions
ClosingQuoteOptions
SomeOrAnySpecifierOptions
ThrowsSpecifierOptions
CompilerSwiftParser
StringLiteralKind
Cursor
UnknownCharactersClassification
TriviaResult
Result
EscapedCharacterLex
CharacterLex
State
StateTransition
LexingDiagnostic
StateStack
NewlinePresence
Position
TriviaLexingMode
Lexeme
Flags
LexemeSequence
CompilerSwiftParser
Lexer
CompilerSwiftParser
RegexLiteralLexer
Builder
Element
RegexLiteralLexemes
Kind
222222222222
222222222222222222222222222222
22222222222222222222222222222
Sg_ABt
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
$ss12CaseIterableP
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handletSg
G4spec_
6handletSg
G4spec_
6handlet
G5match_
6handletSg
G5match_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
4spec_
6handletSg
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
8operator_AASg3rhstSg
_AASgt
8operator_AASg3rhst
4spec_
6handlet
4spec_
6handlet
4spec_
6handletSg
4spec_
6handletSg
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
_AAt
4spec_
6handletSg
4spec_
6handlet
4spec_
6handlet
_AAtSg
_AAt
3key_
Sg21unexpectedBeforeColon
5colonAA5valuet
G4spec_
6handletSg
G4spec_
6handlet
Si6offset_
7elementt
Si6offset_
7elementtSg
$s19CompilerSwiftParser13TokenConsumerP
4spec_
6handlet
4spec_
6handlet
4spec_
6handletSg
4spec_
6handlet
5start_t
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
5match_
6handletSg
5match_
6handlet
5match_
6handletSg
5match_
6handlet
$s19CompilerSwiftParser27NominalTypeDeclarationTraitP
$s19CompilerSwiftParser21RawParameterListTraitP
$s19CompilerSwiftParser23RawParameterClauseTraitP
$s19CompilerSwiftParser17RawParameterTraitP
15ParameterSyntax
10Parameters
4spec_
6handlet
4spec_
6handletSg
4spec_
6handlet
Sg_ABt
_Sit
G4spec_
6handletSg
G4spec_
6handlet
$s19CompilerSwiftParser12TokenSpecSetP
yxq_GG
$s19CompilerSwiftParser33RawMisplacedEffectSpecifiersTraitP
22CorrectAsyncTokenKinds
23CorrectThrowsTokenKinds
25MisspelledAsyncTokenKinds
26MisspelledThrowsTokenKinds
$s19CompilerSwiftParser24RawEffectSpecifiersTraitP
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
4spec_
6handletSg
5match_
6handlet
4spec_
6handletSg
4spec_
6handlet
G28unexpectedBeforeOpeningQuote_AA07openingD0Say
G8segmentsAB0ab7ClosingD0AA07closingD0t
Si6offset_
7elementt
Si6offset_
7elementtSg
Sg_ABt
$s19CompilerSwiftParser25UnexpectedNodesCombinableP
16closingDelimiter_t
10specifiers_
10attributest
10specifiers_
10attributestSg
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handletSg
4spec_
6handlet
4spec_
6handlet
4spec_
6handleypXmT13matchedSubsettSg
ypXmTt
4spec_
6handleypXmT13matchedSubsett
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handletSg
5match_
6handlet
5match_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handletSg
5match_
6handlet
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
4spec_
6handlet
5match_
6handletSg
5match_
6handlet
4spec_
6handlet
4spec_
6handlet
$ss9OptionSetP
$ss10SetAlgebraP
$sSY
$ss25ExpressibleByArrayLiteralP
$s19CompilerSwiftParser15SyntaxParseableP
5index_
7lexemest
8newState_t
Si15delimiterLength_t
4kind_Si15delimiterLengtht
Sb11isRawString_t
17stringLiteralKind_t
17stringLiteralKind_Si10parenCountt
5index_SPy
G7lexemest
5error_t
SaySSG
ySSG
ySiG
$sSt
$sST
$sSl
$sSK
$sSk
8slashEnd_Si9numPoundstSg
SiSg
5IndexSlQzz_x_SlRz
7ElementSTRtzlXX
_alignment
_backDeploy
_cdecl
_documentation
_dynamicReplacement
_effects
_expose
_implements
_nonSendable
_objcImplementation
_objcRuntimeName
_optimize
_originallyDefinedIn
_private
_projectedValueProperty
_semantics
_specialize
_spi
_spi_available
_swift_native_objc_runtime_base
_typeEraser
_unavailableFromAsync
rethrows
attached
available
backDeployed
derivative
differentiable
exclusivity
freestanding
inline
objc
Sendable
transpose
private
fileprivate
internal
public
open
AllCases
message
renamed
introduced
deprecated
obsoleted
unavailable
noasync
star
identifier
AllCases
colon
binaryOperator
postfixOperator
prefixOperator
attributes
modifier
kind
unexpectedBeforeToken
token
modifiers
unexpectedBeforeFixity
fixity
unexpectedBeforeOperatorKeyword
operatorKeyword
associativity
assignment
higherThan
lowerThan
AllCases
poundElseif
poundElse
pound
AllCases
binaryOperator
infixQuestionMark
equal
async
arrow
throws
dictionary
array
AllCases
previousIncrementalParseResult
edits
reusedNodeCallback
editsNotConcurrent
transition
cursor
node
finished
viewMode
variableName
memberAccess
Token
skipSinglePost
skipUntil
skipSingle
leftParen
leftBrace
leftSquare
poundIf
poundElse
poundElseif
lexemes
currentToken
tokensConsumed
swiftVersion
experimentalFeatures
AllCases
currentToken
private
fileprivate
internal
public
AllCases
PrimaryOrGenerics
ParameterSyntax
Parameters
unexpectedBeforeFirstName
firstName
unexpectedBeforeSecondName
secondName
Token
arena
lexemes
currentToken
nestingLevel
maximumNestingLevel
parseLookup
lookaheadRanges
lookaheadTrackerOwner
swiftVersion
experimentalFeatures
_emptyRawMultipleTrailingClosureElementListSyntax
_emptyRawDeclModifierListSyntax
_emptyRawAttributeListSyntax
_emptyRawTypeSpecifierListSyntax
furthestOffset
lookaheadTracker
tree
lookaheadRanges
leftParen
wildcard
identifier
dollarIdentifier
AllCases
rawTokenKind
keyword
remapping
recoveryPrecedence
allowAtStartOfLine
isAtStartOfLine
_local
_noMetadata
_opaqueReturnTypeOf
async
autoclosure
convention
differentiable
escaping
noDerivative
noescape
preconcurrency
retroactive
Sendable
unchecked
isolated
__consuming
_compilerInitialized
_const
actor
convenience
distributed
dynamic
final
indirect
infix
lazy
mutating
nonisolated
nonmutating
package
open
optional
override
postfix
prefix
required
unowned
weak
associatedtype
case
class
deinit
enum
extension
func
import
init
macro
operator
precedencegroup
protocol
struct
subscript
typealias
pound
__setter_access
borrowing
consuming
fileprivate
internal
private
public
reasync
rethrows
sending
static
transferring
_resultDependsOn
_resultDependsOnSelf
binaryOperator
postfixOperator
prefixOperator
default
await
_move
_borrow
consume
copy
repeat
each
backslash
prefixAmpersand
switch
break
continue
defer
fallthrough
discard
guard
return
then
throw
while
yield
awaitTryMove
expressionPrefixOperator
primaryExpressionStart
singleValueStatement
atSign
Self
dollarIdentifier
false
floatLiteral
identifier
integerLiteral
leftBrace
leftParen
leftSquare
period
poundAvailable
poundUnavailable
regexSlash
extendedRegexDelimiter
self
super
true
wildcard
rawStringDelimiter
stringQuote
multilineStringQuote
singleQuote
throws
binaryOperatorLike
postfixOperatorLike
infixQuestionMark
equal
arrow
exclamationMark
postfixQuestionMark
declarationModifier
declarationKeyword
AllCases
unexpectedTokens
tokenConsumptionHandle
AllCases
MisspelledAsyncTokenKinds
CorrectAsyncTokenKinds
MisspelledThrowsTokenKinds
CorrectThrowsTokenKinds
async
await
reasync
rethrows
throw
throws
asyncSpecifier
throwsSpecifier
pattern
optional
label
colon
rightBrace
case
default
semicolon
poundIf
poundEndif
poundElse
poundElseif
endOfFile
AllCases
expectedIndentation
arena
spec
tokenIsMissing
weakBracketed
openingBrace
unknownToken
identifierLike
exprKeyword
weakPunctuator
mediumPunctuator
weakBracketClose
stmtKeyword
strongPunctuator
closingBrace
declKeyword
openingPoundIf
closingPoundIf
Self
identifier
leftParen
leftSquare
wildcard
AllCases
Element
RawValue
ArrayLiteralElement
rawValue
AllCases
didSet
willSet
unsafeAddress
addressWithOwner
addressWithNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
_read
_modify
init
postfixQuestionMark
exclamationMark
poundAvailable
poundUnavailable
message
renamed
introduced
obsoleted
deprecated
true
false
_version
_underlyingVersion
weak
unowned
safe
unsafe
identifier
wildcard
_move
consume
__consuming
__setter_access
_const
_local
actor
async
borrowing
class
consuming
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
mutating
nonisolated
nonmutating
open
optional
override
package
postfix
prefix
private
public
reasync
_resultDependsOnSelf
required
static
transferring
sending
self
Self
deinit
subscript
dollarIdentifier
binaryOperator
integerLiteral
_forward
reverse
_linear
visibility
metadata
prefixOperator
postfixOperator
poundIf
poundElseif
poundElse
typealias
struct
enum
protocol
func
inout
target
availability
exported
kind
spiModule
_Trivial
_TrivialAtMost
_UnknownLayout
_RefCountedObject
_NativeRefCountedObject
_Class
_NativeClass
_BridgeObject
_TrivialStride
Type
Protocol
_mutating
_borrowing
_consuming
left
right
none
higherThan
lowerThan
stringQuote
multilineStringQuote
__shared
__owned
_resultDependsOn
some
singleQuote
throws
rethrows
singleLine
multiLine
singleQuote
position
previousTokenKind
previousLexemeTrailingNewlinePresence
previousKeyword
stateStack
input
previous
absent
present
topState
kind
push
pushRegexLexemes
replace
afterRawStringDelimiter
inStringLiteral
afterStringLiteral
inStringInterpolationStart
inStringInterpolation
inRegexLiteral
normal
preferRegexOverBinaryOperator
afterClosingStringQuote
success
validatedEscapeSequence
error
endOfString
tokenKind
flags
stateTransition
trailingTriviaLexingMode
keywordKind
trailingNewlinePresence
newlinePresence
trivia
lexemeContents
noNewlines
escapedNewlineInMultiLineStringLiteral
Element
RawValue
ArrayLiteralElement
rawTokenKind
flags
diagnostic
start
leadingTriviaByteLength
textByteLength
trailingTriviaByteLength
cursor
rawValue
Element
Iterator
sourceBufferStart
cursor
nextToken
lexerStateAllocator
lookaheadTracker
Element
Iterator
Index
SubSequence
Indices
numOpenPounds
patternByteLength
numClosePounds
_startInput
_patternErrorOffset
_patternErrorKind
_startPrevious
lexemeCount
cursor
mustBeRegex
firstNewline
groupDepth
customCharacterClassDepth
lastUnespacedSpaceOrTab
lastNewlineEnd
candidateCloseSlashEnd
builder
kind
error
openingPounds
openingSlash
pattern
closingSlash
closingPounds
RawValue
 !"#$%&
 !"#$%
