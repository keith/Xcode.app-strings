@(#)PROGRAM:traitsutil  PROJECT:EmbeddedDeviceTraits-83
ArtworkDeviceIdiom
idiom=%s
ArtworkHostedIdioms
hostedidioms=%s
ArtworkScaleFactor
scale=%s
ArtworkDeviceSubtype
subtype=%s
ArtworkDisplayGamut
display-gamut=%s
DevicePerformanceMemoryClass
memory=%s
GraphicsFeatureSetClass
graphicsclass=%s
GraphicsFeatureSetFallbacks
graphicsclassfallbacks=%s
ArtworkDynamicDisplayMode
1080pSDR
scale=1
display-gamut=sRGB
%10s = %s
Target
target=%s
TargetType
target-type=%s
TargetVariant
variant=%s
Platform
platform=%s
ProductType
product=%s
ProductDescription
product-description=%s
CompatibleDeviceFallback
compatible-device=%s
DeviceTraitSet
trait-set=%s
%s Unknown has_arg value %d
int getopt_longopts_tostring(const struct option *, char *, size_t)
version
device-traitset-id
device
deployment-target-name
table-format
format
compare-with
devicetraitset-for-comparison
specs-filepath
synthesize-target-archs-db
usage: traitsutil
[-sdtV] [--version] [--device-traitset-id 'device-set-id'] [--device 'device name'] [--deployment-target-name 'deployment target name'] [--table-format] [path to device_traits.db]
[--device-traitset-id] lookup the values based on device traitset id
[--device] lookup the values based on device name
[--deployment-target-name] lookup the values based on the display name of deployment target
[--format=format] format can be one of short,table,command-line, if no format isn't given then prints the values in table form, in short form graphicsclassfallbacks and hostedidioms are skipped
[--compare-with=<path to other db>] comparison with another device_traits.db
[--devicetraitset-for-comparison] use device-trait-set id for comparison
[--specs-filepath] filepath to the architecture specs (.xcspecs) file
[--synthesize-target-archs-db] synthesize target_architectures.db based on architecture specs (.xcspecs) file specified with --specs-filepath
traitsutil: version: %.1f
traitsutil: can't give option -s or --device-traitset-id manytimes
traitsutil: can't give option -d or --device manytimes
traitsutil: can't give option -n or --deployment-target-name manytimes
short
table
command-line
traitsuitls: doesn't understand --format=%s, only short,table,command-line are valid
traitsutil: can't give option -c or --compare-with many times
traitsutil: must specify option -c or --compare-with before -e or --devicetraitset-for-comparison
traitsutil: can't give option -l or --specs-files many times
traitsutil: can't give option -y or --synthesize-target-archs-db many times
traitsutil: unknown option '%c'
%s/../../../usr/standalone/device_traits.db
SDKROOT
traitsutil: must specify one of the options --device-traitset-id, --device, --deployment-target-name, --compare-with, OR --synthesize-target-archs-db
Input file:
traitsutil: must specify --specs-filepath
traitsutil: can't open sqlite db '%s' : %s
SELECT ArtworkDeviceIdiom AS idiom,ArtworkHostedIdioms AS hosted,ArtworkScaleFactor AS scale,ArtworkDeviceSubtype AS subtype,ArtworkDisplayGamut AS gamut,ArtworkDynamicDisplayMode AS display_mode,DevicePerformanceMemoryClass AS memory,GraphicsFeatureSetClass AS graphics,GraphicsFeatureSetFallbacks AS fallbacks FROM DeviceTraits WHERE DeviceTraitSetID = %d
SELECT ArtworkDeviceIdiom,ArtworkHostedIdioms,ArtworkScaleFactor,ArtworkDeviceSubtype,ArtworkDisplayGamut,ArtworkDynamicDisplayMode,DevicePerformanceMemoryClass,GraphicsFeatureSetClass,GraphicsFeatureSetFallbacks, GPUArchName FROM DeviceTraits WHERE DeviceTraitSetID = %d
SELECT ArtworkDeviceIdiom AS idiom,ArtworkHostedIdioms AS hosted,ArtworkScaleFactor AS scale,ArtworkDeviceSubtype AS subtype,ArtworkDisplayGamut as gamut,ArtworkDynamicDisplayMode AS display_mode,DevicePerformanceMemoryClass AS memory,GraphicsFeatureSetClass AS graphics,GraphicsFeatureSetFallbacks AS fallbacks, DeviceTraitSetID AS traitset FROM Devices, DeviceTraits WHERE DeviceTraitSetID = DeviceTraitSet AND TargetType = '%s'
SELECT ArtworkDeviceIdiom,ArtworkHostedIdioms,ArtworkScaleFactor,ArtworkDeviceSubtype,ArtworkDisplayGamut,ArtworkDynamicDisplayMode,DevicePerformanceMemoryClass,GraphicsFeatureSetClass,GraphicsFeatureSetFallbacks,DeviceTraitSetID FROM Devices, DeviceTraits WHERE DeviceTraitSetID = DeviceTraitSet AND TargetType = '%s'
SELECT Target, TargetType, ProductType, ProductDescription, DeviceTraitSet FROM Devices WHERE Devices.Target in (SELECT DeploymentVariant.DeviceTarget FROM DeploymentVariant INNER JOIN DeploymentTarget ON DeploymentVariant.DeploymentTarget = DeploymentTarget.TargetVersion WHERE DeploymentTarget.DisplayName = '%s')
Executing the following query:
traitsutil: can't execute SQL statement '%s' error '%s'
traitsutil: can't find any records related to --device = '%s'
traitsutil: can't find any records related to --device-traitset-id = '%d'
traitsutil: can't find any records related to --deployment-target-name = '%s'
traitsutil: must give path to device_traits.db
Unexpected data type in specs file.
Failed to open db at path %s (error: %s)
Type
Architecture
Identifier
DeploymentTargetRange
CompatibilityArchitectures
MinimumDeploymentTarget
INSERT INTO TargetArchitectures ( TargetArchitecture, CompatibleArchitecture, MinimumDeploymentTarget, MaximumDeploymentTarget ) VALUES ( '%@', '%@', '%@', '%@' );
INSERT INTO TargetArchitectures ( TargetArchitecture, CompatibleArchitecture, MinimumDeploymentTarget ) VALUES ( '%@', '%@', '%@' );
INSERT INTO TargetArchitectures ( TargetArchitecture, MinimumDeploymentTarget, MaximumDeploymentTarget ) VALUES ( '%@', '%@', '%@' );
INSERT INTO TargetArchitectures ( TargetArchitecture, MinimumDeploymentTarget ) VALUES ( '%@', '%@' );
Failed to execute SQL statement: %s
Inserted %d records into %s
[Target=%@, TargetType=%@,TargetVariant=%@,Platform=%@, ProductType=%@, ProductDescription=%@, CompatibleDeviceFallback=%@,DeviceTraitSet=%lu]
[DeviceTraitSetID=%lu, PreferredArchitecture=%@, ArtworkDeviceIdiom=%@, ArtworkHostedIdiom=%@, ArtworkScaleFactor=%@, ArtworkDeviceSubtype=%@, ArtworkDisplayGamut=%@, ArtworkDynamicDisplayMode=%@, PerformanceMemory=%lu, GraphicsFeatureSetClass=%@, GraphicsFeatureSetFallbacks=%@, GPUArchName=%@]
[TargetVersion=%@, DeploymentTarget=%lu, DisplayName=%@, HasSwiftRuntime=%lu]
[DeploymentTarget=%@, DeviceTarget=%@, DeviceTraitSet=%lu]
query_devices_table
compare.m
SELECT * FROM Devices
Failed to read table 'Devices' at: %s. [Error: %s]
query_device_traits_table
SELECT * FROM DeviceTraits
Failed to read table 'DeviceTraits' at: %s. [Error: %s]
query_deployment_variant_table
SELECT * FROM DeploymentVariant
Failed to read table 'DeploymentVariant' at: %s. [Error: %s]
query_deployment_target_table
SELECT * FROM DeploymentTarget
Failed to read table 'DeploymentTarget' at: %s
Comparing records in table '%s'
LHS: %lu records
RHS: %lu records
Intersection: %lu
LHS diff: %lu
RHS diff: %lu
Performing comparison between the following two device traits databases:
Cannot open database at: %s
__read_devices_table
colName
__read_device_traits_table
DeviceTraitSetID
PreferredArchitecture
ArtworkHostedIdiom
PerformanceMemory
GPUArchName
__read_deployment_variant_table
DeploymentTarget
DeviceTarget
__read_deployment_target_table
TargetVersion
DisplayName
HasSwiftRuntime
DeviceTraitsEntity
Devices
DeviceTraits
DeploymentTarget
DeploymentVariant
HasSwiftRuntime
ArtworkDeviceIdiom
_DeviceTraitSet
ArtworkDisplayGamut
setDisplayName:
ArtworkHostedIdiom
setGraphicsFeatureSetFallbacks:
CompatibleDeviceFallback
.cxx_destruct
T@"NSString",&,N,V_DeviceTarget
ArtworkDeviceSubtype
_Target
ArtworkDynamicDisplayMode
setGPUArchName:
ArtworkScaleFactor
setProductType:
DeploymentTarget
DeviceTarget
DeviceTraitSet
DeviceTraitSetID
DisplayName
GPUArchName
GraphicsFeatureSetClass
GraphicsFeatureSetFallbacks
PerformanceMemory
Platform
PreferredArchitecture
ProductDescription
ProductType
T@"NSString",&,N,V_ArtworkDeviceIdiom
T@"NSString",&,N,V_ArtworkDeviceSubtype
T@"NSString",&,N,V_ArtworkDisplayGamut
T@"NSString",&,N,V_ArtworkDynamicDisplayMode
T@"NSString",&,N,V_ArtworkHostedIdiom
T@"NSString",&,N,V_ArtworkScaleFactor
T@"NSString",&,N,V_CompatibleDeviceFallback
T@"NSString",&,N,V_DeploymentTarget
T@"NSString",&,N,V_DisplayName
T@"NSString",&,N,V_GPUArchName
T@"NSString",&,N,V_GraphicsFeatureSetClass
T@"NSString",&,N,V_GraphicsFeatureSetFallbacks
T@"NSString",&,N,V_Platform
T@"NSString",&,N,V_PreferredArchitecture
T@"NSString",&,N,V_ProductDescription
T@"NSString",&,N,V_ProductType
T@"NSString",&,N,V_Target
T@"NSString",&,N,V_TargetType
T@"NSString",&,N,V_TargetVariant
T@"NSString",&,N,V_TargetVersion
TQ,N,V_DeploymentTarget
TQ,N,V_DeviceTraitSet
TQ,N,V_DeviceTraitSetID
TQ,N,V_HasSwiftRuntime
TQ,N,V_PerformanceMemory
Target
TargetType
TargetVariant
TargetVersion
UTF8String
_ArtworkDeviceIdiom
_ArtworkDeviceSubtype
_ArtworkDisplayGamut
_ArtworkDynamicDisplayMode
_ArtworkHostedIdiom
_ArtworkScaleFactor
_CompatibleDeviceFallback
_DeploymentTarget
_DeviceTarget
_DeviceTraitSetID
_DisplayName
_GPUArchName
_GraphicsFeatureSetClass
_GraphicsFeatureSetFallbacks
_HasSwiftRuntime
_PerformanceMemory
_Platform
_PreferredArchitecture
_ProductDescription
_ProductType
_TargetType
_TargetVariant
_TargetVersion
addObject:
class
copy
count
countByEnumeratingWithState:objects:count:
dataWithContentsOfFile:options:error:
description
hash
init
integerValue
intersectSet:
isEqual:
isEqualToString:
isKindOfClass:
minusSet:
objectAtIndex:
objectForKey:
propertyListWithData:options:format:error:
setArtworkDeviceIdiom:
setArtworkDeviceSubtype:
setArtworkDisplayGamut:
setArtworkDynamicDisplayMode:
setArtworkHostedIdiom:
setArtworkScaleFactor:
setCompatibleDeviceFallback:
setDeploymentTarget:
setDeviceTarget:
setDeviceTraitSet:
setDeviceTraitSetID:
setGraphicsFeatureSetClass:
setHasSwiftRuntime:
setPerformanceMemory:
setPlatform:
setPreferredArchitecture:
setProductDescription:
setTarget:
setTargetType:
setTargetVariant:
setTargetVersion:
setWithArray:
stringWithFormat:
stringWithUTF8String:
@16@0:8
B24@0:8@16
Q16@0:8
v24@0:8@16
v24@0:8Q16
v16@0:8
@"NSString"
