samplingParameters
responseSanitizer
renderedPromptSanitizer
[SHOULD NOT HAPPEN] error finding location for 
has-unsupported-types-for-object-streaming
missing-field-in-coding-keys
wrong-access-level
enums-cases-must-all-have-one-or-zero-associated-values
enums-must-be-raw-representible
enums-must-be-case-iterable
already-has-static-schema-property
already-conforms-to-generable
unsupported-type-declaration
GenerativeFunctions
@Generable can only be used with enums if all cases have one Generable associated value or none do.
@Generable can only be used on classes, structs, actors, and enums.
Object streaming is not supported for this object at this moment since it contains a field with unsupported type: 
A Codable @Generable must either be auto-codable (no CodingKeys) or have a CodingKeys that enumerates every field of the Generable. These properties were not found in the CodingKeys: 
static let choices: [any Generable.Type] = 
default:
    return nil
static let schema = Schema(fields: 
 already conforms to Generable. Remove the @Generable macro or delete the existing conformance.
Enums must be RawRepresentible by String to be marked @Generable.
Enums must be CaseIterable to be marked @Generable.
Schema.Field(name: "
 = try generatedValues.extract(field: "
 must have access level of 
Conformance to Generable failed because a static schema property already exists. Consider renaming the existing property to something else.
#run can only be used inside an @GenerativeFunction
@GenerativeFunction prompt body must end with a .with(model) call
try await {
    let identifier: String = 
_GenerativeFunctionExtractable.id
    var promptBodyWithoutModel = 
    var functionIdentifier: FunctionIdentifier = .init(identifier: identifier, resourceInformation: nil)
    if let (overrideInternals, overrideMetadata) = try await _GenerativeModelOverrideHelpers._generativeFunctionOverridesWithMetadata
(identifier) {
        functionIdentifier = overrideMetadata.functionIdentifier
        let promptBindingVariables: [String: any PromptComponentValueConvertible] = 
        let promptConfigurationBindingVariables: [String: Any] = 
        promptBodyWithoutModel = _GenerativeFunctionOverrideHelpers._configurePrompt(
            promptBodyWithoutModel,
            withOverride: overrideInternals,
            
            bindingVariables: promptBindingVariables,
            bindingConfigurations: promptConfigurationBindingVariables
        )
    }
    return 
 promptBodyWithoutModel
        .functionIdentifier(functionIdentifier)
        ._addAssetCache()
        .with(
@GenerativeFunction missing return type
.run(returning: (
ChatMessagesPrompt
bindingChatMessagesPrompts: 
[INTERNAL ERROR] promptBodyRemovingWithModel's input doesn't have `.with(model:)`.
@GenerativeFunction prompt body had unsupported format. Must be a CompletionPrompt or ChatMessagesPrompt with chaining configuration.
[INTERNAL ERROR] promptBodyModelType's input doesn't have `.with(model:)`.
use-override-hint-configuration
unsupported-prompt-type
@GenerativeFunction only works on functions
._internalTrackingConfig([:])
._internalSessionTrackingConfig(
    self._clientInfo.trackingConfig
.with(model: model, modelType: TokenGenerator.self)
Unexpected token kind for an access level token: 
_GenerativeFunctionExtractable: _GenerativeFunctionExtractable {
    static var id: String { 
    #if GENERATIVE_FUNCTION_SOURCE_EXTRACTION_ENABLED
    static var syntaxTree: String {
        
    }
    #else
    static var syntaxTree: String {
        ""
    }
    #endif
_generateGenerativeFunctionOverride() throws -> (String, Data) {
    try _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody: 
_GenerativeFunctionExtractable.id)
 async throws -> GenerativeConfigurationRunnable<
Unknown prompt syntax used. Please use the CompletionPrompt or ChatMessagesPrompt result builder.
Please use the `OverrideHint` initializer for configuration "
FoundationModels
_OverrideConfigurationHelper.
BindableConfiguration
CompletionPrompt
@GenenerativeFunction must have either a CompletionPrompt or ChatMessagesPrompt
@GenenerativeFunction must contain only one of: `.grammar`, `.partialGrammar` or `.schema`.
@GenerativeFunction prompt body must be a single statement.
@GenerativeFunction prompt body must be `FunctionCallExprSyntax`.
@GenerativeFunction missing prompt body
@GenerativeFunction requires an async function
@GenerativeFunction requires a throw function
@GenerativeFunction has no body
@GenerativeFunction has more than one statement
@GenerativeFunction missing #run
@GenerativeFunction must have #run for now
@GenerativeModelSession must have arguments
[SHOULD NOT HAPPEN] argumentsRaw is NOT LabeledExprListSyntax.self
var model: TokenGenerator {
    _clientInfo._model
private let _clientInfo: _ClientInfo
private final class _ClientInfo: _ClientInfoProtocol {
    let useCaseIdentifier: String
    var trackingConfig: _ClientInfoSessionTrackingConfig
    let _model: TokenGenerator
    @available(*, deprecated, message: "Use the new init that also accepts a onBehalfOfProcessID (set that to `nil` if you are not running on behalf on any other process).")
    init(useCaseIdentifier: String, sessionTrackingConfig: [String: String]) {
        self.useCaseIdentifier = useCaseIdentifier
        self.trackingConfig = .init(sessionTrackingConifg: sessionTrackingConfig, _internalSessionTrackingConfig: [:])
        self._model = TokenGenerator(model: 
, configuration: 
    }
    init(
        useCaseIdentifier: String,
        onBehalfOfProcessID: Int?,
        sessionTrackingConfig: [String: String]
    ) {
        self.useCaseIdentifier = useCaseIdentifier
        self.trackingConfig = .init(sessionTrackingConifg: sessionTrackingConfig, _internalSessionTrackingConfig: [:])
        self._model = TokenGenerator(
            model: 
            configuration: 
            useCaseIdentifier: useCaseIdentifier,
            onBehalfOf: onBehalfOfProcessID
        )
    }
@GenerativeModelSession must be applied on a final class
@GenerativeModelSession must have initializer and init `_clientInfo` property by using `_ClientInfo(useCaseIdentifier: String, onBehalfOfProcessID:Int?, sessionTrackingConfig: [String: String])`
: GenerativeModelSessionTokenGenerator {}
@GenerativeFunction in @GenerativeModelSession cannot have `.with(model:)`.
GenerativeFunction
_TtC25GenerativeFunctionsMacros19PlaceholderRewriter
placeholders
placeholderType
GenerativeFunctionsMacros.PlaceholderRewriter
init(viewMode:)
BindableChatMessagesPrompt
BindableVariable
var iterator = stream.makeAsyncIterator()
return AsyncThrowingStream<
, Error> {
    guard let value = try await iterator.next() else {
        return nil
    }
    
static func collect(_ stream: AsyncThrowingStream<
.Streaming, Error>) -> AsyncThrowingStream<
for try await __value in _
Value.append(__value)
for try await __value in value.
guard case .value(let _
Value) = try await value.
 else {
throw StreamingError.earlyEOS("Expected the 
 to be a value but found an end of stream")
GenerableElement
struct Streaming: GenerableStreaming {
 = try await decoder.stream(objectID: objectID, field: "
 = try await decoder.enumStream(objectID: objectID, field: "
 = try await decoder.stream(parentObjectID: objectID, field: "
decoder: any _StreamingDecoder
: AsyncThrowingStream<
    get async throws {
        for try await val in _
            return .value(val)
        }
        return .endOfStream
    }
_TtC25GenerativeFunctionsMacros14VariableFinder
variables
future reported an error, but wait cannot throw
swift_task_escalate
_Z19voucher_needs_adoptP9voucher_s
__tsan_acquire
__tsan_release
swift_task_enterThreadLocalContext
swift_task_exitThreadLocalContext
GenerativeFunctionsMacros
CurrentFunction
SourceLocation
GenerableDiagnostic
GenerableMacro
GenerableMacroErrors
GenerativeFunctionBodyMacro
GenerativeFunctionDiagnostic
GenerativeFunctionMacro
OverridablePromptWithMetadata
CustomError
GenerativeModelSessionGenerativeFunctionBodyMacro
GenerativeModelSessionWithModelBundleMacro
PlaceholderRewriter
PlaceholderType
Placeholder
StreamingExpansionEligible
StreamableExpansion
InitError
FieldMetadata
VariableFinder
Variable
SSSg
_pSg
ShySSG
ySSG
ySay
ySay
ySay
ySay
ySay
ySay
yS2SG
yS2SSgG
ySS4name_SS4typetG
SS4name_SS4typet
SaySSG
_pSg
ySSG
ySnySiGG
ySbG
ySS4case_SaySSG16associatedValuestG
SS4case_SaySSG16associatedValuest
ySS4name_SSSg5valuetG
SS4name_SSSg5valuet
$s25GenerativeFunctionsMacros26StreamingExpansionEligibleP
ySay
Si6offset_
7elementt
macroNode
function
promptBody
runnableOfFunctionName
file
line
column
message
diagnosticID
severity
codeGenError
message
diagnosticID
severity
message
overridablePrompt
promptPlaceholders
promptConfigurationPlaceholders
promptType
placeholders
placeholderType
name
type
bindableVariable
bindableChatMessagesPrompt
bindableConfiguration
hasFieldWithUnsupportedType
properties
typeName
accessLevelModifier
requiresDefaultInitializer
isEnum
name
type
isKeyword
overrideName
variables
name
grammar
partialGrammar
draftCache
samplingParameters
responseSanitizer
renderedPromptSanitizer
[SHOULD NOT HAPPEN] error finding location for 
has-unsupported-types-for-object-streaming
missing-field-in-coding-keys
wrong-access-level
enums-cases-must-all-have-one-or-zero-associated-values
enums-must-be-raw-representible
enums-must-be-case-iterable
already-has-static-schema-property
already-conforms-to-generable
unsupported-type-declaration
GenerativeFunctions
@Generable can only be used with enums if all cases have one Generable associated value or none do.
@Generable can only be used on classes, structs, actors, and enums.
Object streaming is not supported for this object at this moment since it contains a field with unsupported type: 
A Codable @Generable must either be auto-codable (no CodingKeys) or have a CodingKeys that enumerates every field of the Generable. These properties were not found in the CodingKeys: 
static let choices: [any Generable.Type] = 
default:
    return nil
static let schema = Schema(fields: 
 already conforms to Generable. Remove the @Generable macro or delete the existing conformance.
Enums must be RawRepresentible by String to be marked @Generable.
Enums must be CaseIterable to be marked @Generable.
Schema.Field(name: "
 = try generatedValues.extract(field: "
 must have access level of 
Conformance to Generable failed because a static schema property already exists. Consider renaming the existing property to something else.
#run can only be used inside an @GenerativeFunction
@GenerativeFunction prompt body must end with a .with(model) call
try await {
    let identifier: String = 
_GenerativeFunctionExtractable.id
    var promptBodyWithoutModel = 
    var functionIdentifier: FunctionIdentifier = .init(identifier: identifier, resourceInformation: nil)
    if let (overrideInternals, overrideMetadata) = try await _GenerativeModelOverrideHelpers._generativeFunctionOverridesWithMetadata
(identifier) {
        functionIdentifier = overrideMetadata.functionIdentifier
        let promptBindingVariables: [String: any PromptComponentValueConvertible] = 
        let promptConfigurationBindingVariables: [String: Any] = 
        promptBodyWithoutModel = _GenerativeFunctionOverrideHelpers._configurePrompt(
            promptBodyWithoutModel,
            withOverride: overrideInternals,
            
            bindingVariables: promptBindingVariables,
            bindingConfigurations: promptConfigurationBindingVariables
        )
    }
    return 
 promptBodyWithoutModel
        .functionIdentifier(functionIdentifier)
        ._addAssetCache()
        .with(
@GenerativeFunction missing return type
.run(returning: (
ChatMessagesPrompt
bindingChatMessagesPrompts: 
[INTERNAL ERROR] promptBodyRemovingWithModel's input doesn't have `.with(model:)`.
@GenerativeFunction prompt body had unsupported format. Must be a CompletionPrompt or ChatMessagesPrompt with chaining configuration.
[INTERNAL ERROR] promptBodyModelType's input doesn't have `.with(model:)`.
use-override-hint-configuration
unsupported-prompt-type
@GenerativeFunction only works on functions
._internalTrackingConfig([:])
._internalSessionTrackingConfig(
    self._clientInfo.trackingConfig
.with(model: model, modelType: TokenGenerator.self)
Unexpected token kind for an access level token: 
_GenerativeFunctionExtractable: _GenerativeFunctionExtractable {
    static var id: String { 
    #if GENERATIVE_FUNCTION_SOURCE_EXTRACTION_ENABLED
    static var syntaxTree: String {
        
    }
    #else
    static var syntaxTree: String {
        ""
    }
    #endif
_generateGenerativeFunctionOverride() throws -> (String, Data) {
    try _GenerativeFunctionOverrideHelpers._generateGenerativeFunctionOverride(promptBody: 
_GenerativeFunctionExtractable.id)
 async throws -> GenerativeConfigurationRunnable<
Unknown prompt syntax used. Please use the CompletionPrompt or ChatMessagesPrompt result builder.
Please use the `OverrideHint` initializer for configuration "
FoundationModels
_OverrideConfigurationHelper.
BindableConfiguration
CompletionPrompt
@GenenerativeFunction must have either a CompletionPrompt or ChatMessagesPrompt
@GenenerativeFunction must contain only one of: `.grammar`, `.partialGrammar` or `.schema`.
@GenerativeFunction prompt body must be a single statement.
@GenerativeFunction prompt body must be `FunctionCallExprSyntax`.
@GenerativeFunction missing prompt body
@GenerativeFunction requires an async function
@GenerativeFunction requires a throw function
@GenerativeFunction has no body
@GenerativeFunction has more than one statement
@GenerativeFunction missing #run
@GenerativeFunction must have #run for now
@GenerativeModelSession must have arguments
[SHOULD NOT HAPPEN] argumentsRaw is NOT LabeledExprListSyntax.self
var model: TokenGenerator {
    _clientInfo._model
private let _clientInfo: _ClientInfo
private final class _ClientInfo: _ClientInfoProtocol {
    let useCaseIdentifier: String
    var trackingConfig: _ClientInfoSessionTrackingConfig
    let _model: TokenGenerator
    @available(*, deprecated, message: "Use the new init that also accepts a onBehalfOfProcessID (set that to `nil` if you are not running on behalf on any other process).")
    init(useCaseIdentifier: String, sessionTrackingConfig: [String: String]) {
        self.useCaseIdentifier = useCaseIdentifier
        self.trackingConfig = .init(sessionTrackingConifg: sessionTrackingConfig, _internalSessionTrackingConfig: [:])
        self._model = TokenGenerator(model: 
, configuration: 
    }
    init(
        useCaseIdentifier: String,
        onBehalfOfProcessID: Int?,
        sessionTrackingConfig: [String: String]
    ) {
        self.useCaseIdentifier = useCaseIdentifier
        self.trackingConfig = .init(sessionTrackingConifg: sessionTrackingConfig, _internalSessionTrackingConfig: [:])
        self._model = TokenGenerator(
            model: 
            configuration: 
            useCaseIdentifier: useCaseIdentifier,
            onBehalfOf: onBehalfOfProcessID
        )
    }
@GenerativeModelSession must be applied on a final class
@GenerativeModelSession must have initializer and init `_clientInfo` property by using `_ClientInfo(useCaseIdentifier: String, onBehalfOfProcessID:Int?, sessionTrackingConfig: [String: String])`
: GenerativeModelSessionTokenGenerator {}
@GenerativeFunction in @GenerativeModelSession cannot have `.with(model:)`.
GenerativeFunction
_TtC25GenerativeFunctionsMacros19PlaceholderRewriter
placeholders
placeholderType
GenerativeFunctionsMacros.PlaceholderRewriter
init(viewMode:)
BindableChatMessagesPrompt
BindableVariable
var iterator = stream.makeAsyncIterator()
return AsyncThrowingStream<
, Error> {
    guard let value = try await iterator.next() else {
        return nil
    }
    
static func collect(_ stream: AsyncThrowingStream<
.Streaming, Error>) -> AsyncThrowingStream<
for try await __value in _
Value.append(__value)
for try await __value in value.
guard case .value(let _
Value) = try await value.
 else {
throw StreamingError.earlyEOS("Expected the 
 to be a value but found an end of stream")
GenerableElement
struct Streaming: GenerableStreaming {
 = try await decoder.stream(objectID: objectID, field: "
 = try await decoder.enumStream(objectID: objectID, field: "
 = try await decoder.stream(parentObjectID: objectID, field: "
decoder: any _StreamingDecoder
: AsyncThrowingStream<
    get async throws {
        for try await val in _
            return .value(val)
        }
        return .endOfStream
    }
_TtC25GenerativeFunctionsMacros14VariableFinder
variables
future reported an error, but wait cannot throw
swift_task_escalate
_Z19voucher_needs_adoptP9voucher_s
__tsan_acquire
__tsan_release
swift_task_enterThreadLocalContext
swift_task_exitThreadLocalContext
GenerativeFunctionsMacros
CurrentFunction
SourceLocation
GenerableDiagnostic
GenerableMacro
GenerableMacroErrors
GenerativeFunctionBodyMacro
GenerativeFunctionDiagnostic
GenerativeFunctionMacro
OverridablePromptWithMetadata
CustomError
GenerativeModelSessionGenerativeFunctionBodyMacro
GenerativeModelSessionWithModelBundleMacro
PlaceholderRewriter
PlaceholderType
Placeholder
StreamingExpansionEligible
StreamableExpansion
InitError
FieldMetadata
VariableFinder
Variable
SSSg
_pSg
ShySSG
ySSG
ySay
ySay
ySay
ySay
ySay
ySay
yS2SG
yS2SSgG
ySS4name_SS4typetG
SS4name_SS4typet
SaySSG
_pSg
ySSG
ySnySiGG
ySbG
ySS4case_SaySSG16associatedValuestG
SS4case_SaySSG16associatedValuest
ySS4name_SSSg5valuetG
SS4name_SSSg5valuet
$s25GenerativeFunctionsMacros26StreamingExpansionEligibleP
ySay
Si6offset_
7elementt
macroNode
function
promptBody
runnableOfFunctionName
file
line
column
message
diagnosticID
severity
codeGenError
message
diagnosticID
severity
message
overridablePrompt
promptPlaceholders
promptConfigurationPlaceholders
promptType
placeholders
placeholderType
name
type
bindableVariable
bindableChatMessagesPrompt
bindableConfiguration
hasFieldWithUnsupportedType
properties
typeName
accessLevelModifier
requiresDefaultInitializer
isEnum
name
type
isKeyword
overrideName
variables
name
grammar
partialGrammar
draftCache
