@(#)PROGRAM:leaks  PROJECT:SamplingTools-64566.76
MbP?
DYLD_INSERT_LIBRARIES=
MallocStackLogging=
com.apple.instruments.dtservicehub
com.apple.instruments.server.services.deviceinfo
com.apple.instruments.server.services.remoteleaks
AnalyzeCorpse
ProcessSnapshotGraphOptions
RegionDescriptionOptions
CollectFullDiskStackLogs
ScannerSettings
ScannerSettingExactScanningEnabled
ScannerSettingAbandonedMarkingEnabled
ScannerSettingShowRawClassNames
ScannerSettingObjectContentLevel
ScannerSettingScanningMask
ScannerSettingMaxInteriorOffset
Starting memgraph capture. Attaching to: %s (%d).
SerializedGraph
%s[%d]: [fatal] Error: Memgraph data not found.
Device browsing queue
Devices array appending queue
v8@?0
v16@?0@"OS_remote_device"8
v20@?0@"OS_remote_device"8B16
Found no attached devices
%@ (%@%@, %@) (%@)
 Internal
You have access to the following devices
Choose a device (letters): 
%s[%d]: [fatal] Failed to connect to DTServiceHub service on requested device
%s[%d]: [fatal] Failed to create socket to DTServiceHub service
remoteDeviceAttemptMatchingCLIInput
remoteDeviceMemgraphCollection.m
returnIndexesForChoices.count == 0 || returnIndexesForChoices.count == displayStrings.count
displayStrings.count == partialMatchableStrings.count
displayStrings.count == exactMatchableStrings.count
%@ matching %@
Q16@?0@"NSArray"8
Found no matches for %s
remoteDevicePromptUserForChoice_block_invoke
terminatingNewlinePtr
remoteDevicePromptUserForChoice_block_invoke_2
input > 0
remoteDevicePromptUserForChoice
choiceIndexes.count == choiceLabels.count
%5s) %s
 %lu
q24@?0@"NSDictionary"8@"NSDictionary"16
realAppName
%5s %@
You have access to the following processes on %@
Choose a process (letters or pid): 
%s[%d]: [fatal] Device-side memgraph collection error: %s
unknown error
%s[%d]: [fatal] Error: received empty response from device.
v16@?0@"DTXMessage"8
Memgraph capture completed.
message
%s[%d]: [fatal] %s
Search through a process for leaked memory.
[options] pid | partial-process-name | memory-graph-file
       leaks [options] --atExit -- <command-and-arguments>
exclude
exclude leaked blocks whose backtraces include the specified symbol
v24@?0@"NSString"8^@16
help
show this helpful usage message!
showTiming
initialization
quiet
suppress the process description header and footer
list
print the leaks as a list ("classic"-style) rather than as a tree
groupByType
in leak trees, group children by type rather than showing individual instances
(for normal leak detection output, and --referenceTree, --dominatorTree, and --autoreleasePools modes)
nostacks
do not print backtraces or save them in the memory graph file, even when available
fullStacks
print backtraces with one line per frame
nosources
do not show sourceFile:lineNumber in backtraces
rawNames
show raw class names instead of display names.
fullStackHistory
collects all memory allocation call stacks that are available, including historical allocations that have been freed.
originalBinaryPath
path
path to binaries backing an input core file, separated by commas
outputGraph
save a memory graph file into the given directory or file
SAMPLING_TOOLS_ALL_PROCESSES
physFootprint
physFootprint mode is now default so this flag is no longer needed
noPhysFootprint
compress
fullContent
print or save full allocation content descriptions
(this is the default for printing output for live processes)
readonlyContent
print or save just readonly allocation content descriptions
(this is the default for saving memory graphs)
noContent
do not save or print any allocation content descriptions
nocontext
excludePersonalInformation
nocontents
show the hex content of leaked allocations, if there is no description of content
conservative
don't attempt smart ivar-based scanning, scan byte-by-byte ignoring field information
noScanOverlay
DT_NO_SCAN_OVERLAY
forkCorpse
generate a corpse fork from process and run leaks on it
getCorpseFromParent
diffFrom
memgraph
show only the new leaks since the specified memgraph
--diffFrom option can only be specified once
specified memgraph is invalid or nil
trace
address
print chains of references from process 'roots' (e.g., global data) to the given block
traceTree
print a reverse tree of references, from the given block up to the process roots
-traceTree
dominatorTree
print a dominator tree of allocated memory starting at root nodes. Provide an address to print only its subtree instead. Supports -virtual and -groupByType
-dominatorTree
referenceTree
print a reference tree of allocated memory starting at root nodes
virtual
show virtual size of referenced VM regions instead of dirty size
autoreleasePools
print contents of autorelease pools, by thread
debug
mode
enable additional debugging modes; list available modes with --debug=help
Modes of 'leaks <process> --debug'.  More than one different mode flag can be passed,
such as '--debug='.*Storage.*' --debug=references'.
    --debug            -- full output
    --debug=layout     -- full output, including object layout and values of ivars
    --debug=histogram  -- only show histogram of number of allocations having each reference count
    --debug=references -- only show references to the allocation (not content or layout), and only if reference count > 1
    --debug=contents   -- only show contents (reference from the allocation)
    --debug=<address>  -- only show the allocation at or containing <address>
    --debug=<classes-pattern>  -- show allocations whose class name matches pattern
    --debug=<region-description-pattern>  -- show non-malloc nodes (e.g. VM regions, threads) whose description matches pattern
    --debug=stacks     -- show stack backtraces for nodes
layout
histogram
references
contents
stacks
-debug
maxInteriorOffset
how far into large regions to scan to find outgoing references, in bytes
suppressOutput
outputFile
write output to given path instead of stdout
unable to open output file "%s" for writing: %s (%d)
forkCorpseRetryTime
when creating a process corpse under system pressure, retry for the specified number of seconds
ipsIncidentID
rateLimit
nonIPSMemgraphCount
vmalso
show leaked VM regions
novm
vmonly
vmPageStatistics
checkAbandoned
report abandoned memory
postprocessGraph
allProcesses
minimumPid
run leaks against all processes (or those >= minimumPid), with the given arguments
atExit
launch the specified command and run leaks when that process exits.
This should be the last argument; use '--atExit -- <command-and-arguments>'
processInfo
show only process description header and binary images list
debugSymbolicators
symbolicate
<dSYM-path>|<library-names>|all
symbolicate given memgraph
dSYM
showResymbolicationInfo
lzfse
use LZFSE compression
device
device name
Use Remote Service Discovery to analyze processes on an embedded device
timeLimit
time in seconds to allow for leaks analysis; 0 means no time limit
Cannot pass pid, process-name, or memgraph ('%@'), with '--atExit -- <command>'
%s[%d]: [fatal] failed to open core file: %s
unknown argument: %@
'--symbolicate' can only be combined with '--outputGraph' flag
com.apple.leaks
at most one mode should be specified (--outputGraph, --autoreleasePools, --traceTree, --referenceTree, --dominatorTree, --debug, --processInfo, --diffFrom)
at most one mode should be specified (--outputGraph, --traceTree, --diffFrom)
%s[%d]: --nocontext is deprecated, use --noContent instead
only one of --fullContent, --readonlyContent, --noContent, or --nocontext can be specified;  also, --nocontext is deprecated, use --noContent instead
only one of --fullContent, --readonlyContent, or --noContent can be specified
physFootprint mode is now default so the --physFootprint flag is not necessary
only one of --physFootprint or --noPhysFootprint can be specified; physFootprint mode is the default
Ignoring --fullContent flag because --excludePersonalInfo was specified.
Ignoring --nostacks flag because --outputGraph was specified.
SAMPLING_TOOLS_TARGET_PID
/tmp
no output graph directory or path specified
no process specified
Cannot use '--device' and an input memgraph together
Cannot use '--device' and '--allProcesses' together
Cannot use '--device' and '--processInfo' together
No memgraph specified. Cannot pass pid or process-name with '--symbolicate'
'--symbolicate' flag is missing
'--lzfse' compression algorithm specified when there is nothing to compress
No '--outputGraph' path specified. Flag '--fullStackHistory' can only be used while capturing a memgraph and saving it to the specified path.
v16@?0@"DVT_VMUTask"8
%s[%d]: [fatal] target process no longer exists; abandoning...
%s[%d]: [fatal] unable to read input graph: %s
Cannot use '--device' and '--symbolicate' together
void checkForLeaks(DVT_VMUTask *__strong)
leaks.m
Expected leaksGlobals.outputFile to be a valid FILE*
leaks
generate analysis task
%s[%d]: [fatal] Failed to create temporary file for writing resymbolicated memgraph.
DISKLOGS
v16@?0@?<i@?^vQ>8
%s[%d]: [fatal] Failed to write resymbolicated memgraph because of error: %s
%s[%d]: [fatal] Failed to write resymbolicated memgraph. %s
Memgraph was successfully resymbolicated and written to: '%s' [%3.2f MB]
Skipping symbolication. %s
%s[%d]: [fatal] Resymbolication failed. %s
%s[%d]: [fatal] Cannot save a memgraph with '--fullStackHistory' because MallocStackLogging was not enabled for pid %d. Please run the process with full MallocStackLogging.
%s[%d]: [fatal] Cannot save a memgraph with '--fullStackHistory' for pid %d because it ran with MallocStackLogging lite mode. Please run the process with full MallocStackLogging.
Process %d is not debuggable. Due to security restrictions, leaks can only show or save contents of readonly memory of restricted processes.
%s[%d]: [fatal] memgraphs are from the same file [%s]
%s[%d]: [fatal] Invalid memgraph format passed in to --diffFrom: %s
%s[%d]: [fatal] Memgraphs are from different process identifiers [%d] and [%d]
No new leaks detected between memgraphs for process [%d].
%s[%d]: [fatal] ignoring --outputGraph option as path provided would overwrite the source graph file
.memgraph
Only showing unique leaks since %s.
leaks Report Version: 3.0
leaks Report Version: 4.0
, multi-line stacks
%s[%d]: [fatal] Invalid output graph path: %s
%s[%d]: [fatal] No permission to write to '%s'. Specify the writable path where to save the resymbolicated memgraph using '--outputGraph' option
unable to instantiate a memory scanner.
%s[%d]: %s
%s[%d]: [fatal] %s
adding root and malloc nodes from task
v16@?0^v8
%s[%d]: [fatal] cannot save a memgraph in IPS format and also save disk logs
length
bug_type
name
displayName
incidentID
%s[%d]: [fatal] unable to write JSON header: %s
write graph to file
%@[%d].XXXXXX.%@
%s[%d]: [fatal] unable to create file "%s" for memory graph: %d %s
%s[%d]: [fatal] unable to write graph to output file "%s": %s
url= <<%s>>
%@_%@
LogType
Output graph successfully written to '%s' [%3.2f MB]
memgraph.%@
Will not upload memgraph. rate limits: global=%lf proc=%lf. rand=%lf
memgraph.CountLimit
memgraph.%@.CountLimit
Will not take memgraph, because the limit of %.0lf graphs has been reached
%@.t
%@.signal
%@.exponent
%@.numerator
%@.coef_denominator
com.apple.da
mobile
%s[%d]: [fatal] Could not write the memgraph because of error: %s
v68@?0I8I12I16{?=^{?}{?=QIQ}^{?}}20^B60
SCANNING %s
Call stack: %s
REFERENCES TO THIS: %u
   STRONG: %u  CONSERVATIVE: %u  WEAK UU etc: %u
   SELF: %u
  SELF-REF
   %s
v28@?0I8I12I16^B20
LAYOUT OF %s (%s)
%llu bytes into 
--> %@%@
%5u: %s%s%s  %s
v32@?0@"DVT_VMUFieldInfo"8Q16^B24
v16@?0@"DVT_VMUClassInfo"8
%5u: <extra space>[%llu]
CONTENTS:
%u POINTERS FROM %s
v24@?0@"DVT_VMUVMRegion"8^B16
i24@?0r^v8r^v16
NODE COUNT:  %u   OWNING-REFS COUNT: %u   AVERAGE OWNING-REFS PER NODE: %.2f
    %10u %s references
SELF-REFERENCES:  %u
%26lu   %8lu
   leaked blocks and VM regions
   %s
MallocStackLoggingLiteZone
MallocStackLoggingLiteZone_Wrapper
v44@?0I8{?=Qb60b4@}12^B36
%s[%d]: [fatal] address provided for reference tracing (%#llx) not found in target process's heap
Tracing: %s
C16@?0I8C12
B28@?0I8I12I16*20
v12@?0I8
Found %u root%s referencing: %s
This is a reverse reference tree showing how the specified block is referenced.
The top node is the specified block, the next level down are blocks that reference that, and so on.
The number at the start of each line is the number of paths-to-roots going through that node.
This reverse reference tree can be imported into Instruments using Import Sample Data to allow data mining.
printReferenceTree
identifying root regions
building call tree from references
__DATA
%@ %@
Stack
Stack of %@
void printReferenceTree(DVT_VMUProcessObjectGraph *__strong)
Malloc blocks should not be root nodes of reference graph
__DATA __objc
void printReferenceTree(DVT_VMUProcessObjectGraph *__strong)_block_invoke
expected dstCallTreeNode to be nil since dstNode wasn't marked reachable previously
%@ %@: '%@[]'
expected to get VMUVMRegion for VM region node
%@  dirty: %s  swapped: %s
%@  purgableVolatile: %s
addChildCountsIntoNode
printing call tree
create call tree
This is a dominator tree showing dynamic memory for the process. In a dominator tree a node(X) can
be a descendant of node(Y) only if all paths of owning references from root nodes to node(X) go
through node(Y). When there are multiple paths a node will be promoted up the tree until it reaches
a node which satisfies this requirement or it becomes a root itself.
Each line shows:
  1. The total count of allocations for this node and all descendants.
  2. The total size of allocations for this node and all descendants.
  3. A description of the reference to the node. (optional)
  4. A description of the node itself.
The sizes for VM regions are calculated as dirty+compressed-purgeable unless --virtual was passed.
Any VM regions with zero size and no children are excluded. Also any VM regions which don't represent
dynamic memory owned by this process are also excluded. Examples are __AUTH_CONST, MALLOC metadata,
mapped files, and owned unmapped memory.
print call tree
no posix thread
unsigned int printAutoreleasePools(DVT_VMUProcessObjectGraph *__strong, DVT_VMUTaskMemoryScanner *__strong, __strong id<VMUStackLogReader>)_block_invoke
dyld
_main_thread
%*s  %8u
Total entries in autoreleasepools:
Unique entries in autoreleasepools:
%*s  %8u block%s  %8s bytes
Memory size of autoreleasepool content blocks:
Memory directly held only by autorelease pools:
Memory indirectly held only by autorelease pools:
%*s    ======           ======
Total memory of autorelease pools and content blocks:
Thread %u  %s
    %s
Number of autoreleases coalesced into previous entries: %u
void printThreadAutoreleasePool(LeakDetector *__strong, uint32_t, NSMutableSet *__strong, VMUMarkingMap *)
expected autoreleasePoolChainCount %u to be less than autoreleasePoolChainMax %u
INCORRECT CHAIN OF @autoreleasepool content BLOCKS -- TRUNCATING THE CHAIN (autoreleasePoolChainCount %u, autoreleasePoolChainMax %u
   COALESCED AUTORELEASES: %u
     ** %u:  
        %u:  
%s%s
NSString *memoryTreeHeldByAutoreleasedNode(LeakDetector *__strong, VMUMarkingMap *, DVT_VMUCallTreeNode *__unsafe_unretained *, uint32_t)
Expected non-nil srcCallTreeNode
NSString *memoryTreeHeldByAutoreleasedNode(LeakDetector *__strong, VMUMarkingMap *, DVT_VMUCallTreeNode *__unsafe_unretained *, uint32_t)_block_invoke
COUNT OF OWNING REFERENCES   NUMBER OF NODES WITH THAT COUNT
Entries held only by autorelease pools are marked with **
Autorelease pool pages not associated with a thread
    no autorelease pool
No autorelease pools.
        Empty
      POOL BOUNDARY
%s[%d]: mach port for process %d not valid
%s[%d]: %s
%s[%d]: [fatal] mach port for process %d not valid
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
xctest
sharedCode.m should have been built with -DSAMPLING_TOOLS_TESTS for use with xctest
Target process of memgraph:  %@ [%u]
../lib/libLeaksAtExit.dylib
libLeaksAtExit.dylib
/usr/lib/libLeaksAtExit.dylib
%s[%d]: [fatal] unable to locate required library: %s
DYLD_INSERT_LIBRARIES
DYLD_INSERT_LIBRARIES=%s:%s
DYLD_INSERT_LIBRARIES=%s
MallocStackLoggingDontDeleteStackLogFile=1
MallocStackLogging=lite
%s[%d]: [fatal] --atExit must be followed by " -- <command>"
%s[%d]: [fatal] No command specified after '--atExit -- '
%s[%d]: [fatal] Unable to launch --atExit command '%s': %s
%s[%d]: [fatal] Couldn't get task port for pid %u immediately after launch
%s[%d]: Unable to deallocate target task port: %d (%s)
%s[%d]: [fatal] Couldn't get task port for pid %u after receiving STOP signal
%s[%d]: [fatal] Expected to get a VMUTask of type task.
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: [fatal] Target task not available for analysis
%s[%d]: [fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
%s[%d]: [fatal] %s analysis of pid %u reached time limit of %llu seconds, exiting.
v16@?0i8B12
Target process is using %s so not generating corpse for better performance.
Target process is an ancestor and permitting live process for ancestors so not generating a corpse to save resources by default.
__check_mach_ports_lookup
%s-%d-%s
DT_RESPAWN_FOR_NONNATIVE
%s/%s[%d]-allProcesses.XXXXXX
%s[%d]: [fatal] Couldn't create output directory from template %s, %s. Exiting
%s[%d]: [fatal] Couldn't change directory to %s
stderr.txt
Couldn't create error file stderr.txt (%s)
Couldn't replace stderr file with stderr.txt (%s)
Writing all output files into %s
Skipping process of wrong architecture:  %d %s
ANALYZING PROCESS %5d: %s
.txt
Couldn't open output file %s (%s)
Couldn't replace output file with %s (%s)
    CHILD ANALYSIS TOOL CRASHED with %s
    %s for %5d: %s
Exception '%s', reason: '%s'
v16@?0i8I12
v40@?0i8r*12B20I24I28^B32
Child analysis tool crashed for these processes:
Wrote output files into %s
To print all files in pid order use:  (cd %s; cat `/bin/ls -tr1 *.txt`) 
/var/tmp
task from parent for pid %u
%s[%d]: [fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
%s[%d]: Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
<unknown>
%s[%d]: No process corpse slots currently available, waiting to get one
no corpse slots are available
target process %s (%d) is too large, or system memory pressure is to high
libgmalloc.dylib
possible high VM usage by GuardMalloc
corpse creation encountered the unexpected error %s (%d) for %s (%d)
generated corpse for pid %u
%s[%d]: [fatal] Kernel generated only a minimal corpse from the process with error %s (%d)
%s[%d]: Kernel generated only a minimal corpse from the process with error %s (%d) - examining live process instead
%s[%d]: [fatal] Failed to generate corpse: %s, exiting
%s[%d]: Failed to generate corpse: %s - examining live process instead
BOOL _respawnToolIfNecessaryVMUTaskWithExitStatus(DVT_VMUTask * _Nullable __strong, VMURespawnToolOptions, int *, uint64_t)
Only one of kVMURespawnForAllProcesses and kVMURespawnForAllNonNativeProcesses can be set
DYLD_ROOT_PATH
%s[%d]: [fatal] Failed to create symbolicator for target
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DT_NO_RESPAWN_TO_OS
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
arm64
x86_64
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
--al
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal] waitpid: %s
_respawnToolIfNecessaryVMUTaskWithExitStatus_block_invoke
sharedCode.m
WIFSIGNALED(child_status)
Child `%s` process died with signal %d %s
com.apple.SymbolicationDT
Symbolication.framework/Symbolication
com.apple.CoreSymbolicationDT
CoreSymbolication.framework/CoreSymbolication
64544
/System/Library/PrivateFrameworks/%s
%s/usr/bin/%s
v20@?0I8@?<v@?>12
Running in DT_RESPAWN_FOR_NONNATIVE mode -- respawning only if necessary to match target process arch and/or platform.
T@"NSData",&,N,V_inputGraphData
T@"DVT_VMUClassPatternMatcher",&,N,V_classesPatternMatcher
TB,N,V_collectFullDiskStackLogs
T@"DVT_VMUOptionParser",&,N,V_parser
_atExit
T@"NSArray",&,N,V_resymbolicationLibraryNames
_debugHistogram
T@"NSMutableSet",&,N,V_excludedFrames
_excludedFrames
T@"NSString",&,N,V_ipsIncidentID
_inputGraphPath
T@"NSString",&,N,V_preGenerationGraphPath
_showSourceInfo
T@"NSString",&,N,V_remoteDeviceTargetProcess
arrayWithArray:
TB,N,V_allProcesses
containsObject:
TB,N,V_atExit
contentForNode:
TB,N,V_checkAbandoned
doNormalLeakDetectionWithError:
TB,N,V_corpseWasGenerated
is64Bit
TB,N,V_debugHistogram
isAtEnd
TB,N,V_debugMode
numberWithBool:
TB,N,V_dominatorTreeMode
TB,N,V_excludePersonalInfo
scanner
TB,N,V_fullStacks
setDebugLayout:
TB,N,V_nocontext
setMaxInterior:
TB,N,V_postprocessGraph
showListOfLeaks
TB,N,V_rateLimit
stringByAppendingPathExtension:
TB,N,V_referenceTreeShowRegionVirtualSize
suppressPhysFootprintStatistics
TB,N,V_resymbolicateAll
vmuTask
.cxx_destruct
T@"NSError",&,N,V_argumentError
T@"DVT_VMUDebugTimer",&,N,V_debugTimer
TB,N,V_compress
T@"NSArray",&,N,V_inputOriginalBinaryPaths
_checkAbandoned
T@"NSData",&,N,V_preGenerationGraphData
_desiredAddress
T@"NSString",&,N,V_inputGraphPath
_inputGraphData
T@"NSString",&,N,V_outputGraphPath
_parser
T@"NSString",&,N,V_remoteDeviceTargetDevice
_suppressOutput
T@"NSString",&,N,V_resymbolicationDsymPath
bundleForClass:
TB,N,V_applyDiffFrom
containsString:
TB,N,V_autoreleasePoolMode
debugReferences
TB,N,V_collectVMpageStatistics
enumerateEdgesOfNode:withBlock:
TB,N,V_debugContents
is64bit
TB,N,V_debugLayout
isStack
TB,N,V_debugReferences
outputGraphPath
TB,N,V_exactScanning
plistRepresentationWithOptions:
TB,N,V_forkCorpse
TB,N,V_groupByType
setGroupByType:
TB,N,V_normalMode
setResymbolicationLibraryNames:
TB,N,V_quietMode
stringByAppendingPathComponent:
TB,N,V_referenceTreeMode
stringByResolvingSymlinksInPath
TB,N,V_remoteDeviceMode
valueForEnvVar:
TB,N,V_showBinaryContents
TB,N,V_showLeakedVMregions
TB,N,V_showListOfLeaks
TB,N,V_showOnlyVMregions
TB,N,V_showProcessInfoMode
TB,N,V_showRawClassNames
TB,N,V_showResymbolicationDetails
TB,N,V_showSourceInfo
TB,N,V_showStacks
TB,N,V_suppressOutput
TB,N,V_suppressPhysFootprintStatistics
TB,N,V_targetIsAncestor
TB,N,V_traceMode
TB,N,V_traceTree
TB,N,V_useLZFSEcompression
TB,N,V_userDidProvideMaxInterior
TI,N,V_autoreleasePoolsExtraReleasesCount
TI,N,V_objectContentLevel
TQ,N,V_desiredAddress
TQ,N,V_forkCorpseRetryTime
TQ,N,V_maxInterior
TQ,N,V_timeLimitInSeconds
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},N,V_outputFile
Ti,N,V_nonIPSMemgraphCount
Ti,N,V_returnCode
UTF8String
UUID
UUIDString
_allProcesses
_applyDiffFrom
_argumentError
_autoreleasePoolMode
_autoreleasePoolsExtraReleasesCount
_classesPatternMatcher
_collectFullDiskStackLogs
_collectVMpageStatistics
_compress
_corpseWasGenerated
_debugContents
_debugLayout
_debugMode
_debugReferences
_debugTimer
_dominatorTreeMode
_exactScanning
_excludePersonalInfo
_forkCorpse
_forkCorpseRetryTime
_fullStacks
_groupByType
_inputOriginalBinaryPaths
_ipsIncidentID
_maxInterior
_nocontext
_nonIPSMemgraphCount
_normalMode
_objectContentLevel
_outputFile
_outputGraphPath
_postprocessGraph
_preGenerationGraphData
_preGenerationGraphPath
_quietMode
_rateLimit
_referenceTreeMode
_referenceTreeShowRegionVirtualSize
_remoteDeviceMode
_remoteDeviceTargetDevice
_remoteDeviceTargetProcess
_resymbolicateAll
_resymbolicationDsymPath
_resymbolicationLibraryNames
_returnCode
_showBinaryContents
_showLeakedVMregions
_showListOfLeaks
_showOnlyVMregions
_showProcessInfoMode
_showRawClassNames
_showResymbolicationDetails
_showStacks
_suppressPhysFootprintStatistics
_targetIsAncestor
_timeLimitInSeconds
_traceMode
_traceTree
_useLZFSEcompression
_userDidProvideMaxInterior
absoluteString
absoluteURL
addAllNodesFromTaskWithError:
addChildCountsIntoNode
addChildWithName:address:count:numBytes:toNode:
addObject:
addRange:
addUniqueChildWithName:address:count:numBytes:toNode:
allProcesses
appendBytes:length:
appendData:
appendFormat:
appendString:
applyDiffFrom
argumentError
arguments
atExit
attributesOfItemAtPath:error:
autoreleasePoolMode
autoreleasePoolOffsets
autoreleasePoolsExtraReleasesCount
binaryImagesDescription
binarySectionNameForAddress:
binarySectionRangeContainingAddress:
bitfieldWidth
boolValue
breadthFirstSearch:nodeVisitBlock:edgeVisitBlock:
bundlePath
bundleWithIdentifier:
bytes
callStackSymbols
callTreeWithGraph:groupByType:showRegionVirtualSize:desiredAddress:debugTimer:
callTreeWithGraph:groupByType:showRegionVirtualSize:desiredClassesPattern:debugTimer:
checkAbandoned
checkTaskExistence
className
classesPatternMatcher
closeFile
code
collectFullDiskStackLogs
collectVMpageStatistics
compare:
componentsJoinedByString:
componentsSeparatedByString:
compress
copy
corpseWasGenerated
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createMapForMinusGraph:
createSymbolicatorWithFlags:andNotification:
currentHandler
dataWithContentsOfFile:options:error:
dataWithData:
dataWithJSONObject:options:error:
date
dateWithTimeIntervalSinceNow:
debugContents
debugHistogram
debugLayout
debugMode
debugTimer
defaultManager
defaultOverlay
description
descriptionOfFieldValueInObjectMemory:scanner:
desiredAddress
detachFromTask
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
directedGraphWithData:error:
diskLogs
doNormalLeakDetection
doNormalLeakDetectionWithTask:graph:scanner:stackLogReader:
dominatorTreeMode
encapsulateData:to:withSupplementalDataTag:error:dataGeneratorBlock:
endEvent:
enumerateClassHierarchyWithBlock:
enumerateObjectsWithBlock:
enumerateReferencesOfNode:withBlock:
enumerateRegionsWithBlock:
enumerateTypeFieldsWithBlock:
error
errorStatus
exactScanning
excludePersonalInfo
excludedFrames
executablePath
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForWritingAtPath:
fileHandleForWritingToURL:error:
fileSize
fileSystemRepresentation
fileURLWithPath:
firstObject
forkCorpse
forkCorpseRetryTime
fullIvarNameAtOffset:
fullStacks
getLeafFieldAtOffset:leafOffset:
getPlatform:
graph
groupByType
handleFailureInFunction:file:lineNumber:description:
hasPrefix:
hasSuffix:
infoType
init
initWithConnectedSocket:disconnectAction:
initWithCorePath:originalBinaryPaths:error:
initWithFileDescriptor:closeOnDealloc:
initWithPattern:forArgument:error:
initWithPid:
initWithPlistRepresentation:
initWithSymbolicator:sampler:options:
initWithTask:
initWithTask:getBinariesList:
initWithTask:symbolicator:
initWithTransport:
initWithUUIDBytes:
initWithVMUTask:graph:scanner:stackLogReader:
initWithVMUTask:options:
inputGraphData
inputGraphPath
inputOriginalBinaryPaths
insertString:atIndex:
instanceSize
intValue
invertEdges
invertedGraph
invertedNode
ipsIncidentID
isCore
isEqualToString:
isExclave
isExecutableFileAtPath:
isKernel
isSemiCriticalProcess
isSemiCriticalProcessWithNoTimeLimit
isSimulator
isSubmap
isTranslated
lastPathComponent
leakedNodesGraph
length
localizedDescription
logHandle
mainBundle
makeChannelWithIdentifier:
mapTableWithKeyOptions:valueOptions:
markReachableNodesFromRoots:inMap:
markReachableNodesFromRoots:inMap:options:
matchesNodeDetails:orNodeDescription:
maxInterior
memoryCache
messageWithSelector:objectArguments:
messageWithSelector:typesAndArguments:
moveItemAtPath:toPath:error:
name
nocontext
nodeCount
nodeDescription:
nodeDescription:usingDetails:
nodeDescription:withDestinationNode:referenceInfo:
nodeDetailIsAutoreleasePoolContentPage:
nodeDetails:
nodeIsAutoreleasePoolContentPage:
nodeNamespaceSize
nodeTypeDescription:details:mallocBySize:
nonIPSMemgraphCount
normalMode
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
object
objectAtIndexedSubscript:
objectContentLevel
objectForInfoDictionaryKey:
objectForKeyedSubscript:
offset
optind
outputFile
outputString
parentPid
parentProcessPath
parseArguments:withBlock:
parser
path
pathExtension
plistRepresentationWithOptions:fromOriginalMemgraph:
pointerSize
postprocessGraph
preGenerationGraphData
preGenerationGraphPath
printCallTreeToFile:
printCallTreeToFile:cumulativeOutput:options:
processDescription
processDescriptionString
processInfo
processName
processSnapshotGraphWithOptions:
quietMode
rangeForLocation:
rangeForSymbolName:inRegion:
rangeOfString:
rateLimit
reason
referenceDescription:dstDescription:is64bit:
referenceDescription:withSourceNode:destinationNode:alignmentSpacing:
referenceInfoWithName:
referenceTreeMode
referenceTreeShowRegionVirtualSize
refineEdges:withOptions:markingInvalid:
refineTypesWithOverlay:
regionSymbolNameForAddress:
regionSymbolRangeContainingAddress:
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:flags:handler:
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
remoteCapabilityVersion:
remoteDeviceMode
remoteDeviceTargetDevice
remoteDeviceTargetProcess
removeItemAtPath:error:
removeMarkedEdges:
removeObject:
requestGraph:options:
resetCachedMatches
resume
resymbolicateAll
resymbolicateWithDsymPath:libraryNames:all:progress:showDebugInfo:error:
resymbolicationDsymPath
resymbolicationLibraryNames
returnCode
runningProcesses
scanDouble:
scanType
scannerWithString:
sendControlSync:replyHandler:
setAbandonedMarkingEnabled:
setAllProcesses:
setApplyDiffFrom:
setArgumentError:
setAtExit:
setAutoreleasePoolMode:
setAutoreleasePoolsExtraReleasesCount:
setCheckAbandoned:
setClassesPatternMatcher:
setCollectFullDiskStackLogs:
setCollectVMpageStatistics:
setCompress:
setCorpseWasGenerated:
setDebugContents:
setDebugHistogram:
setDebugMode:
setDebugReferences:
setDebugTimer:
setDesiredAddress:
setDominatorTreeMode:
setExactScanning:
setExactScanningEnabled:
setExcludePersonalInfo:
setExcludedFrames:
setForkCorpse:
setForkCorpseRetryTime:
setFullStacks:
setGraph:
setInputGraphData:
setInputGraphPath:
setInputOriginalBinaryPaths:
setIpsIncidentID:
setMaxInteriorOffset:
setNocontext:
setNonIPSMemgraphCount:
setNormalMode:
setObject:atIndexedSubscript:
setObject:forKeyedSubscript:
setObjectContentLevel:
setObjectContentLevelForNodeLabels:
setOutputFile:
setOutputGraphPath:
setOutputString:
setParser:
setPostprocessGraph:
setPreGenerationGraphData:
setPreGenerationGraphPath:
setPurposeDescription:
setQuietMode:
setRateLimit:
setReferenceTreeMode:
setReferenceTreeShowRegionVirtualSize:
setRemoteDeviceMode:
setRemoteDeviceTargetDevice:
setRemoteDeviceTargetProcess:
setResymbolicateAll:
setResymbolicationDsymPath:
setReturnCode:
setScanner:
setScanningMask:
setSerializationOptions:
setShowBinaryContents:
setShowLeakedVMregions:
setShowListOfLeaks:
setShowOnlyVMregions:
setShowProcessInfoMode:
setShowRawClassNames:
setShowResymbolicationDetails:
setShowSourceInfo:
setShowStacks:
setSuppressOutput:
setSuppressPhysFootprintStatistics:
setSyntaxDescription:
setTargetIsAncestor:
setTimeLimitInSeconds:
setTraceMode:
setTraceTree:
setUseLZFSEcompression:
setUserDidProvideMaxInterior:
setValue:forKey:
sharedTimer
shouldAnalyzeWithCorpse
showBinaryContents
showLeakedVMregions
showOnlyVMregions
showProcessInfoMode
showRawClassNames
showResymbolicationDetails
showSourceInfo
showStacks
signpostID
size
sort
sortedArrayUsingComparator:
srcAddressToExtraAutoreleaseCountDict
stackLogReader
startWithCategory:message:
startWithMessage:
stop
streamFullStackLogsToBlock:
stride
string
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringByStandardizingPath
stringFromCallTreeIndentIfNoBranches:
stringFromCallTreeWithOptions:
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subgraphWithMarkedNodes:
substringWithRange:
suppressOutput
symbolicatedBacktraceForNode:nodeDetails:isLiteZone:options:
symbolicationMode
targetIsAncestor
task
taskPort
taskType
threadNameForAddress:
timeLimitInSeconds
traceMode
traceTree
truncateFileAtOffset:
type
typeName
typedDescription
unsignedIntValue
unsignedLongValue
usage:
usage:shouldExit:
useLZFSEcompression
userDidProvideMaxInterior
userInfo
usesLiteMode
vmuVMRegionForNode:
withEdgeMarkingMap:
withNodeMarkingMap:
writeData:error:
writeToFile:options:error:
zoneNameForIndex:
LeaksGlobals
LeakDetector
ObjectLocalToThisFile
@16@0:8
B16@0:8
v24@0:8@16
i16@0:8
v20@0:8i16
v20@0:8B16
Q16@0:8
v24@0:8Q16
I16@0:8
v20@0:8I16
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
v16@0:8
@"DVT_VMUDebugTimer"
@"NSString"
@"NSData"
@"NSArray"
@"DVT_VMUOptionParser"
@"NSError"
@"NSMutableSet"
@"DVT_VMUClassPatternMatcher"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
I48@0:8@16@24@32@40
@48@0:8@16@24@32@40
[fatal] %s
[fatal] failed to open core file: %s
[fatal] target process no longer exists; abandoning...
[fatal] unable to read input graph: %s
leaks
generate analysis task
[fatal] Failed to create temporary file for writing resymbolicated memgraph.
[fatal] Failed to write resymbolicated memgraph because of error: %s
[fatal] Failed to write resymbolicated memgraph. %s
[fatal] Resymbolication failed. %s
[fatal] Cannot save a memgraph with '--fullStackHistory' because MallocStackLogging was not enabled for pid %d. Please run the process with full MallocStackLogging.
[fatal] Cannot save a memgraph with '--fullStackHistory' for pid %d because it ran with MallocStackLogging lite mode. Please run the process with full MallocStackLogging.
[fatal] memgraphs are from the same file [%s]
[fatal] Invalid memgraph format passed in to --diffFrom: %s
[fatal] Memgraphs are from different process identifiers [%d] and [%d]
[fatal] ignoring --outputGraph option as path provided would overwrite the source graph file
[fatal] Invalid output graph path: %s
[fatal] No permission to write to '%s'. Specify the writable path where to save the resymbolicated memgraph using '--outputGraph' option
[fatal] %s
adding root and malloc nodes from task
[fatal] cannot save a memgraph in IPS format and also save disk logs
[fatal] unable to write JSON header: %s
write graph to file
[fatal] unable to create file "%s" for memory graph: %d %s
[fatal] unable to write graph to output file "%s": %s
url= <<%s>>
[fatal] Could not write the memgraph because of error: %s
[fatal] address provided for reference tracing (%#llx) not found in target process's heap
printReferenceTree
identifying root regions
building call tree from references
addChildCountsIntoNode
printing call tree
[fatal] mach port for process %d not valid
examining %@ [%u]
[fatal] unable to locate required library: %s
[fatal] --atExit must be followed by " -- <command>"
[fatal] No command specified after '--atExit -- '
[fatal] Unable to launch --atExit command '%s': %s
[fatal] Couldn't get task port for pid %u immediately after launch
[fatal] Couldn't get task port for pid %u after receiving STOP signal
[fatal] Expected to get a VMUTask of type task.
[fatal] error acquiring target task port from parent.
[fatal] Target task not available for analysis
[fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
[fatal] %s analysis of pid %u reached time limit of %llu seconds, exiting.
[fatal] Couldn't create output directory from template %s, %s. Exiting
[fatal] Couldn't change directory to %s
[fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
No process corpse slots currently available, waiting to get one
[fatal] Kernel generated only a minimal corpse from the process with error %s (%d)
Kernel generated only a minimal corpse from the process with error %s (%d) - examining live process instead
[fatal] Failed to generate corpse: %s, exiting
Failed to generate corpse: %s - examining live process instead
[fatal] Failed to create symbolicator for target
[fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
[fatal] 'mach_ports_register' failed: %s (%d)
[fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
[fatal] waitpid: %s
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380021</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.leaks</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>MacOSX</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>24A277a</string>
<key>DTPlatformName</key>
<string>macosx</string>
<key>DTPlatformVersion</key>
<string>15.0</string>
<key>DTSDKBuild</key>
<string>24A277a</string>
<key>DTSDKName</key>
<string>macosx15.0.internal</string>
<key>DTXcode</key>
<string>1600</string>
<key>DTXcodeBuild</key>
<string>16A5202f</string>
<key>LSMinimumSystemVersion</key>
<string>13.0</string>
</dict>
</plist>
