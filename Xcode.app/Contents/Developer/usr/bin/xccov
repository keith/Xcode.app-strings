@(#)PROGRAM:xccov  PROJECT:IDEFrameworks-23200.21
T@"NSString",&,V_fileNameFilter
JSONObjectWithData:options:error:
_fileNameFilter
SDKs
aggregatedLines
T@"NSDictionary",R
containsObject:
T@"NSString",&,V_targetNameFilter
dumpReportAtPath:options:error:
T@?,C,V_valueBlock
executableLines
TQ,V_mode
finishedLoading
UTF8String
_columnName
removedChildren
_fileNameRepresentsFullPath
setColumnWidth:
_outputFormat
setUsageBanner:
_valueBlock
.cxx_destruct
Tc,V_fileNameRepresentsFullPath
JSONRepresentation
actions
T@"NSArray",&,V_columnDefinitions
allKeys
T@"NSDictionary",R,C,N
defaultRegistry
T@"NSString",C,V_columnName
dvt_compactMap:
TQ,V_columnWidth
finish:
TQ,V_outputFormat
hasCoverageData
_columnDefinitions
numberWithBool:
_columnWidth
_mode
setLog:
_targetNameFilter
stringByAppendingPathExtension:
_xccov_errorWithLocalizedDescription:underlyingError:
actionResult
addCoverageReport:lines:
addObject:
addSubsection:
addSuiteNamed:
addedChildren
aggregatedCoverageDataForResultBundle:error:
aggregatedCoverageReport
aggregatedLinesForKey:forArchiveAtPath:error:
anyObject
appendFormat:
appendString:
archiveCoverageLines:error:
argumentKey
arguments
array
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
boolValue
buildResult
capitalizedString
caseInsensitiveCompare:
childrenDeltas
claimedPath
code
codeCoverageTargets
column
columnDefinitions
columnName
columnWidth
compare:
componentsJoinedByString:
configureActivityLogForResultBundle:
copy
copyWithSourceFilePathsMapped:
count
countByEnumeratingWithState:objects:count:
coverageArchiveFilePathForWriting
coverageArchiveFilePromise
coverageReport
coverageReportAtPath:error:
coverageReportFilePathForWriting
coverageReportForPath:error:
coveredLines
coveredLinesDelta
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createResultBundleForWorkspace:forScheme:
creationErrors
currentDirectoryPath
currentHandler
dataUsingEncoding:
dataWithJSONObject:options:error:
debugDescription
defaultDeviceManager
defaultManager
defaultToolchain
dictionary
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
diffAgainst:
diffCoverageReportAtPath:againstCoverageReportAtPath:mappingSourceFilePathPrefix:toPathPrefix:error:
distantFuture
documentLocation
domain
doubleValue
dumpCoverageArchiveAtPath:forKey:outputFormat:error:
dumpDebugDescriptionForArchiveAtPath:outputFormat:error:
dumpEntireReport:outputFormat:
dumpFunctionsInFileWithName:nameIsFullPath:inReport:outputFormat:
dumpKeysForArchiveAtPath:outputFormat:error:
dumpSourceFilesInTargetWithName:inReport:outputFormat:
dumpTargetsInReport:outputFormat:
dvt_arrayByApplyingBlock:
dvt_arrayByRemovingObject:
dvt_arrayByRemovingObjectsInArray:
dvt_dictionaryByAddingEntriesFromDictionary:
dvt_flatMap:
dvt_objectsPassingTest:
dvt_stringByMakingAbsolutePathWithBasePath:
entireReport
enumerateKeysAndObjectsUsingBlock:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
errorWithDomain:code:userInfo:
executableLinesDelta
executionCount
fileExistsAtPath:isDirectory:
fileNameFilter
fileNameRepresentsFullPath
filePathForPathString:
fileURLWithPath:
firstObject
formatErrors:
functions
generateCoverageReportAndArchiveWithProfileFilePath:architecture:toolchain:json:inputs:reportDestinationPath:archiveDestinationPath:logger:error:
generateCoverageReportForProject:workspace:schemeName:profileFilePath:architecture:toolchain:json:outputPath:inputs:error:
getCFRunLoop
getKeys:
handleFailureInMethod:object:file:lineNumber:description:
identifier
init
initLocalRecordWithWorkspace:
initWithArchivePath:error:
initWithBuildableInfos:profileFilePath:coverageReportDestinationPath:coverageArchiveDestinationPath:runDestination:llvmCoverageTools:logger:
initWithCapacity:
initWithColumnDefinitions:
initWithColumnName:valueBlock:
initWithData:encoding:
initWithFilePath:error:
initWithFormat:arguments:
initWithLogSection:
initWithMode:
initWithName:productPath:buildableIdentifier:architecture:toolchainIdentifiers:isStatic:sourceFiles:
initWithName:usageName:usageDescription:argumentType:argumentKey:handlerBlock:
initWithSectionType:domainType:title:
initWithTargetDevice:architecture:SDK:SDKVariant:
initWithTemporaryWorkspaceFilePath
isAbsolutePath
isEqualToString:
isExecutable
jsonRepresentation
jsonRepresentationByRecursing:
lastPathComponent
length
lineCoverage
lineCoverageDelta
lineNumber
lineRange
loadCoverageReportIfNeededWithError:
loadWorkspaceAtPath:representsProject:timeout:error:
localComputer
localizedDescription
logSectionDomainType
mainRunLoop
makeActionRecordWithSchemeCommand:schemeCommandName:schemeTask:runDestination:
mergeCoverageReports:andArchives:destinationReportPath:destinationArchivePath:error:
mode
mutableCopy
name
nativeArchitecture
newlineCharacterSet
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKeyedSubscript:
onlyFilesForTargetsWithName:
onlyFunctionsForFilesWithNameOrPath:
onlyTargets
outputFormat
parseArguments:intoOptionsDictionary:error:
path
pathExtension
pathString
platform
processInfo
productPath
rangeOfString:
rangeOfString:options:range:
recorder
recursivelyFindMachOBinariesInDirectory:
registerDefaults:
releaseContainer
removeObjectAtIndex:
removeObjectForKey:
retainedContainerAtFilePath:fileDataType:workspace:error:
retainedWrappedWorkspaceForContainerAtFilePath:fileDataType:error:
runContextManager
runContexts
runMode:beforeDate:
saveResultBundle:error:
saveSynchronouslyWithError:
schemeIdentifier
setColumnDefinitions:
setColumnName:
setDomainType:
setFileNameFilter:
setFileNameRepresentsFullPath:
setFilePath:
setHasCoverageData:
setMode:
setObject:forKeyedSubscript:
setOptionDefinitions:
setOutputFormat:
setSchemeIdentifier:
setStatus:
setTargetNameFilter:
setValueBlock:
sortedArrayUsingSelector:
sourceFiles
standardUserDefaults
start
stopRecordingWithInfo:completionBlock:
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByTrimmingCharactersInSet:
stringValue
stringWithFormat:
stringWithString:
subRanges
substringWithRange:
tableForElements:
targetNameFilter
testSchemeCommand
testingTypeIdentifier
title
toolchainForIdentifier:
toolsForBuildableInfos:logger:
type
unarchiveAllCoverageLines:
unarchiveCoverageLinesForKey:error:
usageName
usageString
valueBlock
waitForCondition:sourceObject:keyPathAffectingConditionBlock:timeout:
writeToPath:error:
xccov_componentsSeparatedByStringHandlingEscaping:
xccov_errorWithLocalizedDescription:
xccov_errorWithUnderlyingError:andLocalizedDescription:
xccov_popFirst
com.apple.dt.Xcode
Error initializing IDE infrastructure: %@
--workspace
--workspace <path>
Path to an xcworkspace file. Must be present if --project is not used.
workspace
--project
--project <path>
Path to xcodeproj file. Must be present if --workspace is not used.
project
--scheme
--scheme <name>
Name of the scheme to which the coverage report will be associated. Required.
scheme
--arch
--arch <arch>
If specified, the architecture to use when interpreting the given binaries. If the --json flag is passed, then this architecture can be overriden by the 'arch' field of the binary's json dictionary. Defaults to x86_64.
arch
--toolchain
--toolchain <toolchain ID>
The identifier of a toolchain to use when demangling function names, e.g. 'com.apple.dt.toolchain.OSX10_13'.
toolchain
--json
If specified, the input to the generate command will be interpreted as a JSON string. See examples below for the expected format of this JSON.
json
--profile
--profile <path>
The path to a profile file containing the coverage data. Required.
profile
--output
--output <path>
If specified, a path where the generated result bundle will be placed. Defaults to 'Results.xcresult' in the current directory.
resultBundle
--report
View the coverage report contained within a result bundle. Either this option or the --archive option must be specified when viewing a result bundle.
report
--archive
View the coverage archive contained within a result bundle. Either this option or the --report option must be specified when viewing a result bundle.
archive
--only-targets
Only view the list of targets.
allTargets
--files-for-target
--files-for-target <target name>
Only view the source files in the target(s) with the given name.
targetName
--functions-for-file
--functions-for-file <name or path>
Only view the functions/methods for the file(s) with the given name or path. Note that if a path is supplied, it is the path to the file when the coverage report was created, and the file need not exist on disk.
fileName
View the data in JSON format.
--file-list
View the list of files for which the archive contains coverage information.
allKeys
--file
--file <path>
View the line and subrange execution counts for the file with the given path. Note that this is the path to the file when the archive was created, and the file need not exist on disk.
--debugDescription
If specified, dumps a debug description of the archive.
debugDescription
--outReport
If specified, a path where the merged report will be placed. Defaults to 'merged.xccovreport' in the current directory.
outReport
--outArchive
If specified, a path where the merged archive will be placed. Defaults to 'merged.xccovarchive' in the current directory.
outArchive
--path-equivalence
--path-equivalence <from,to>
If specified, map source file paths in before.xccovreport using the provided equivalence. This allows you to diff coverage reports that were produced from the same set of sources, when the sources existed at different file system locations. For example, if before.xccovreport contains code coverage for a file that existed at location `/some/location` when the report was generated, passing `--path-equivalence /some,/tmp` will cause the file to be treated as if it existed at `/tmp/location`. If after.xccovreport then contains code coverage for the same file, but at `/tmp/location`, then the two files will be diffed together, as expected. Note that if a path prefix contains a comma, then the comma must be escaped with another comma.
pathEquivalence
generate
view
diff
merge
help
%@ [%@] [%@] [%@] [%@ | %@] [%@] [%@] inputs...
[%@ | %@] [%@] archive.xccovarchive
--archive [%@ | %@ [%@] | %@] result_bundle.xcresult
[%@ | %@ | %@] [%@] report.xccovreport
--report [%@ | %@ | %@] [%@] result_bundle.xcresult
%@ [%@] before.xccovreport after.xccovreport
%@ [%@] before.xcresult after.xcresult
[%@] [%@] report1.xccovreport archive1.xccovarchive report2.xccovreport archive2.xccovarchive ...
[%@]
%@ %@ %@
@"NSString"16@?0@"NSString"8
The generate command can be used to create an Xcode result bundle containing the coverage data from a set of raw binaries and a profile file. The result bundle can subsequently be opened in Xcode to view the data using the affordances in Xcode's UI, e.g. the coverage report and the source editor coverage ribbon. The binaries can be specified either via listing them on the command line, supplying a directory within which to recursively search for binaries, or by supplying a JSON array of objects describing the binaries.
The view command can be used to view the coverage data in a coverage report or archive. The report contains line coverage percentages for each target, source file, and function/method that has coverage information. The archive contains the raw execution counts for each file in the report.
The diff command can be used to compare two coverage reports with each other. The diff output lists which targets, source files, or functions were added or removed, as well as those whose line coverage changed.
The merge command can be used to merge multiple coverage reports and archives together into a single aggregate coverage report and archive. Note that the aggregate coverage report and archive may be inaccurate for source files that changed in between the time that the original coverage reports were generated. If there were no source changes, the aggregate coverage report and archive are guaranteed to be accurate.
'[ { "path": "/path/to/binary",
     "arch": "i386",
     "toolchain": "com.apple.dt.toolchain.OSX10_13"
   },
   { "path": "/path/to/another/binary",
     "name": "Custom name"
   } ]'
%1$@ generate --profile Coverage.profdata /path/to/binary1 /path/to/binary2
%1$@ generate --profile Coverage.profdata /path/to/directory_containing_binaries%1$@ generate --profile Coverage.profdata --json
%2$@
Examples:
%@ is a command line utility that can %@ Xcode coverage data. For detailed information regarding a particular command, try help <command>.
view and generate
v8@?0
Error: unrecognized command '%@'
Error: %@
Error: missing required option %@
Must supply a JSON dictionary describing the binaries to include in the report
Must supply the paths to the binaries for which to generate a report
Error: Must supply a report or archive to view
Error: unrecognized file format
Error: Must supply the path to two coverage reports to diff
Error: Must supply the --json option
Error: Must supply two path prefixes to %@ separated by a comma, e.g. %@ /tmp,/var
Error: Must supply at least two pairs of coverage reports and archives to merge together
Error: Invalid number of inputs
com.apple.dt.xccov
c8@?0
finishedLoading
+[XCCovWorkspaceUtils createResultBundleForWorkspace:forScheme:]
IDEFrameworks/IDEFoundation/Coverage/xccov/XCCovWorkspaceUtils.m
DVTIsMainThread()
code should be running on main thread
+[XCCovWorkspaceUtils saveResultBundle:error:]_block_invoke
XCCovErrorDomain
NSString * _Nonnull NormalizePath(NSString *__strong _Nonnull)
IDEFrameworks/IDEFoundation/Coverage/xccov/XCCovUtils.m
((path)) != nil
%@ should not be nil.
(path)
name
executableLines
coveredLines
lineCoverage
line
isExecutable
executionCount
@16@?0@"DVTSourceFileCodeCoverageRange"8
subranges
column
length
domain
code
localizedDescription
errors
@16@?0@"IDESchemeActionCodeCoverageTarget"8
targets
buildProductPath
@16@?0@"IDESchemeActionCodeCoverageFile"8
files
path
@16@?0@"IDESchemeActionCodeCoverageFunction"8
functions
lineNumber
executableLinesDelta
coveredLinesDelta
lineCoverageDelta
added%@s
removed%@s
%@Deltas
@"NSDictionary"16@?0@"DVTCoverageDataContainer"8
@"NSDictionary"16@?0@"IDESchemeActionCodeCoverageDelta"8
documentLocation
target
file
function
unknown
c16@?0@"IDESchemeActionRecord"8
No coverage data in result bundle
Failed to load coverage report for scheme action '%@' in result bundle
No coverage archive present in scheme action '%@' in result bundle
Failed to load coverage archive in scheme action '%@' in result bundle
Failed to unarchive lines from coverage archive in scheme action '%@' in result bundle
Failed to load result bundle
Failed to load coverage report
XCCovTool.m
Invalid parameter not satisfying: %@
archivePath != nil
Failed to find coverage lines for %@
Failed to create unarchiver
Failed to unarchive coverage lines
Errors:
+[XCCovTool configureActivityLogForResultBundle:]
IDEFrameworks/IDEFoundation/Coverage/xccov/XCCovTool.m
((actionResult)) != nil
(actionResult)
Test
Generating coverage report
+[XCCovTool generateCoverageReportAndArchiveWithProfileFilePath:architecture:toolchain:json:inputs:reportDestinationPath:archiveDestinationPath:logger:error:]
inputs.count > 0
x86_64
Unknown toolchain %@
report.xccovreport
archive.xccovarchive
Invalid JSON
toolchains
@"NSArray"16@?0@"NSString"8
Failed to find LLVM tools for coverage report generation
Failed to load workspace
No matching scheme for name '%@'
Results
xcresult
+[XCCovTool dumpCoverageArchiveAtPath:forKey:outputFormat:error:]
((archivePath)) != nil
(archivePath)
v32@?0@"NSString"8@"NSArray"16*24
%@%@: %@%@
(%u, %u, %llu)
@16@?0@"DVTSourceFileLineCoverageData"8
+[XCCovTool dumpDebugDescriptionForArchiveAtPath:outputFormat:error:]
+[XCCovTool dumpTargetsInReport:outputFormat:]
((report)) != nil
(report)
@"NSString"24@?0@"IDESchemeActionCodeCoverageTarget"8Q16
Name
# Source Files
Coverage
%.2f%% (%u/%u)
+[XCCovTool dumpSourceFilesInTargetWithName:inReport:outputFormat:]
((targetName)) != nil
(targetName)
c16@?0@"IDESchemeActionCodeCoverageTarget"8
@"NSString"24@?0@"IDESchemeActionCodeCoverageFile"8Q16
# Functions
product
+[XCCovTool dumpFunctionsInFileWithName:nameIsFullPath:inReport:outputFormat:]
((fileName)) != nil
(fileName)
@"NSString"24@?0@"IDESchemeActionCodeCoverageFunction"8Q16
Range
@"NSString"24@?0@"DVTCoverageDataContainer"8Q16
    
        
+[XCCovTool dumpReportAtPath:options:error:]
((dumpOptions)) != nil
(dumpOptions)
code which should be unreachable has been reached
beforeReportPath != nil
afterReportPath != nil
(beforeReportSourceFilePathPrefix == nil) == (afterReportSourceFilePathPrefix == nil)
coverageReportPaths != nil
correspondingArchivePaths != nil
coverageReportPaths.count == correspondingArchivePaths.count
Failed to load coverag report at path: %@
Failed to load coverage archive at path: %@
Failed to load coverage data from archive at path: %@
merged.xccovreport
merged.xccovarchive
Failed to write merged report at path %@
Failed to create merged archive
Failed to store coverage data in the merged archive
XCCovWorkspaceUtils
XCCovAdditions
XCCovTableColumnDefinition
XCCovTableBuilder
XCCovUtility
JSON
XCCovDumpReportOptions
XCCovTool
@44@0:8@16c24d28^@36
@32@0:8@16@24
c32@0:8@16^@24
@24@0:8@16
@32@0:8@16@?24
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
@"NSArray"
@20@0:8c16
@24@0:8Q16
c16@0:8
v20@0:8c16
@32@0:8@16^@24
@40@0:8@16@24^@32
c84@0:8@16@24@32c40@44@52@60@68^@76
c92@0:8@16@24@32@40@48@56c64@68@76^@84
c48@0:8@16@24Q32^@40
c40@0:8@16Q24^@32
@32@0:8@16Q24
@40@0:8@16@24Q32
@44@0:8@16c24@28Q36
c40@0:8@16@24^@32
c56@0:8@16@24@32@40^@48
@(#)PROGRAM:xccov  PROJECT:IDEFrameworks-23200.21
com.apple.dt.Xcode
Error initializing IDE infrastructure: %@
--workspace
--workspace <path>
Path to an xcworkspace file. Must be present if --project is not used.
workspace
--project
--project <path>
Path to xcodeproj file. Must be present if --workspace is not used.
project
--scheme
--scheme <name>
Name of the scheme to which the coverage report will be associated. Required.
scheme
--arch
--arch <arch>
If specified, the architecture to use when interpreting the given binaries. If the --json flag is passed, then this architecture can be overriden by the 'arch' field of the binary's json dictionary. Defaults to x86_64.
arch
--toolchain
--toolchain <toolchain ID>
The identifier of a toolchain to use when demangling function names, e.g. 'com.apple.dt.toolchain.OSX10_13'.
toolchain
--json
If specified, the input to the generate command will be interpreted as a JSON string. See examples below for the expected format of this JSON.
json
--profile
--profile <path>
The path to a profile file containing the coverage data. Required.
profile
--output
--output <path>
If specified, a path where the generated result bundle will be placed. Defaults to 'Results.xcresult' in the current directory.
resultBundle
--report
View the coverage report contained within a result bundle. Either this option or the --archive option must be specified when viewing a result bundle.
report
--archive
View the coverage archive contained within a result bundle. Either this option or the --report option must be specified when viewing a result bundle.
archive
--only-targets
Only view the list of targets.
allTargets
--files-for-target
--files-for-target <target name>
Only view the source files in the target(s) with the given name.
targetName
--functions-for-file
--functions-for-file <name or path>
Only view the functions/methods for the file(s) with the given name or path. Note that if a path is supplied, it is the path to the file when the coverage report was created, and the file need not exist on disk.
fileName
View the data in JSON format.
--file-list
View the list of files for which the archive contains coverage information.
allKeys
--file
--file <path>
View the line and subrange execution counts for the file with the given path. Note that this is the path to the file when the archive was created, and the file need not exist on disk.
--debugDescription
If specified, dumps a debug description of the archive.
debugDescription
--outReport
If specified, a path where the merged report will be placed. Defaults to 'merged.xccovreport' in the current directory.
outReport
--outArchive
If specified, a path where the merged archive will be placed. Defaults to 'merged.xccovarchive' in the current directory.
outArchive
--path-equivalence
--path-equivalence <from,to>
If specified, map source file paths in before.xccovreport using the provided equivalence. This allows you to diff coverage reports that were produced from the same set of sources, when the sources existed at different file system locations. For example, if before.xccovreport contains code coverage for a file that existed at location `/some/location` when the report was generated, passing `--path-equivalence /some,/tmp` will cause the file to be treated as if it existed at `/tmp/location`. If after.xccovreport then contains code coverage for the same file, but at `/tmp/location`, then the two files will be diffed together, as expected. Note that if a path prefix contains a comma, then the comma must be escaped with another comma.
pathEquivalence
generate
view
diff
merge
help
%@ [%@] [%@] [%@] [%@ | %@] [%@] [%@] inputs...
[%@ | %@] [%@] archive.xccovarchive
--archive [%@ | %@ [%@] | %@] result_bundle.xcresult
[%@ | %@ | %@] [%@] report.xccovreport
--report [%@ | %@ | %@] [%@] result_bundle.xcresult
%@ [%@] before.xccovreport after.xccovreport
%@ [%@] before.xcresult after.xcresult
[%@] [%@] report1.xccovreport archive1.xccovarchive report2.xccovreport archive2.xccovarchive ...
[%@]
%@ %@ %@
@"NSString"16@?0@"NSString"8
The generate command can be used to create an Xcode result bundle containing the coverage data from a set of raw binaries and a profile file. The result bundle can subsequently be opened in Xcode to view the data using the affordances in Xcode's UI, e.g. the coverage report and the source editor coverage ribbon. The binaries can be specified either via listing them on the command line, supplying a directory within which to recursively search for binaries, or by supplying a JSON array of objects describing the binaries.
The view command can be used to view the coverage data in a coverage report or archive. The report contains line coverage percentages for each target, source file, and function/method that has coverage information. The archive contains the raw execution counts for each file in the report.
The diff command can be used to compare two coverage reports with each other. The diff output lists which targets, source files, or functions were added or removed, as well as those whose line coverage changed.
The merge command can be used to merge multiple coverage reports and archives together into a single aggregate coverage report and archive. Note that the aggregate coverage report and archive may be inaccurate for source files that changed in between the time that the original coverage reports were generated. If there were no source changes, the aggregate coverage report and archive are guaranteed to be accurate.
'[ { "path": "/path/to/binary",
     "arch": "i386",
     "toolchain": "com.apple.dt.toolchain.OSX10_13"
   },
   { "path": "/path/to/another/binary",
     "name": "Custom name"
   } ]'
%1$@ generate --profile Coverage.profdata /path/to/binary1 /path/to/binary2
%1$@ generate --profile Coverage.profdata /path/to/directory_containing_binaries%1$@ generate --profile Coverage.profdata --json
%2$@
Examples:
%@ is a command line utility that can %@ Xcode coverage data. For detailed information regarding a particular command, try help <command>.
view and generate
v8@?0
Error: unrecognized command '%@'
Error: %@
Error: missing required option %@
Must supply a JSON dictionary describing the binaries to include in the report
Must supply the paths to the binaries for which to generate a report
Error: Must supply a report or archive to view
Error: unrecognized file format
Error: Must supply the path to two coverage reports to diff
Error: Must supply the --json option
Error: Must supply two path prefixes to %@ separated by a comma, e.g. %@ /tmp,/var
Error: Must supply at least two pairs of coverage reports and archives to merge together
Error: Invalid number of inputs
com.apple.dt.xccov
B8@?0
finishedLoading
+[XCCovWorkspaceUtils createResultBundleForWorkspace:forScheme:]
IDEFrameworks/IDEFoundation/Coverage/xccov/XCCovWorkspaceUtils.m
DVTIsMainThread()
code should be running on main thread
+[XCCovWorkspaceUtils saveResultBundle:error:]_block_invoke
XCCovErrorDomain
NSString * _Nonnull NormalizePath(NSString *__strong _Nonnull)
IDEFrameworks/IDEFoundation/Coverage/xccov/XCCovUtils.m
((path)) != nil
%@ should not be nil.
(path)
name
executableLines
coveredLines
lineCoverage
line
isExecutable
executionCount
@16@?0@"DVTSourceFileCodeCoverageRange"8
subranges
column
length
domain
code
localizedDescription
errors
@16@?0@"IDESchemeActionCodeCoverageTarget"8
targets
buildProductPath
@16@?0@"IDESchemeActionCodeCoverageFile"8
files
path
@16@?0@"IDESchemeActionCodeCoverageFunction"8
functions
lineNumber
executableLinesDelta
coveredLinesDelta
lineCoverageDelta
added%@s
removed%@s
%@Deltas
@"NSDictionary"16@?0@"DVTCoverageDataContainer"8
@"NSDictionary"16@?0@"IDESchemeActionCodeCoverageDelta"8
documentLocation
target
file
function
unknown
B16@?0@"IDESchemeActionRecord"8
No coverage data in result bundle
Failed to load coverage report for scheme action '%@' in result bundle
No coverage archive present in scheme action '%@' in result bundle
Failed to load coverage archive in scheme action '%@' in result bundle
Failed to unarchive lines from coverage archive in scheme action '%@' in result bundle
Failed to load result bundle
Failed to load coverage report
XCCovTool.m
Invalid parameter not satisfying: %@
archivePath != nil
Failed to find coverage lines for %@
Failed to create unarchiver
Failed to unarchive coverage lines
Errors:
+[XCCovTool configureActivityLogForResultBundle:]
IDEFrameworks/IDEFoundation/Coverage/xccov/XCCovTool.m
((actionResult)) != nil
(actionResult)
Test
Generating coverage report
+[XCCovTool generateCoverageReportAndArchiveWithProfileFilePath:architecture:toolchain:json:inputs:reportDestinationPath:archiveDestinationPath:logger:error:]
inputs.count > 0
x86_64
Unknown toolchain %@
report.xccovreport
archive.xccovarchive
Invalid JSON
toolchains
@"NSArray"16@?0@"NSString"8
Failed to find LLVM tools for coverage report generation
Failed to load workspace
No matching scheme for name '%@'
Results
xcresult
+[XCCovTool dumpCoverageArchiveAtPath:forKey:outputFormat:error:]
((archivePath)) != nil
(archivePath)
v32@?0@"NSString"8@"NSArray"16^B24
%@%@: %@%@
(%u, %u, %llu)
@16@?0@"DVTSourceFileLineCoverageData"8
+[XCCovTool dumpDebugDescriptionForArchiveAtPath:outputFormat:error:]
+[XCCovTool dumpTargetsInReport:outputFormat:]
((report)) != nil
(report)
@"NSString"24@?0@"IDESchemeActionCodeCoverageTarget"8Q16
Name
# Source Files
Coverage
%.2f%% (%u/%u)
+[XCCovTool dumpSourceFilesInTargetWithName:inReport:outputFormat:]
((targetName)) != nil
(targetName)
B16@?0@"IDESchemeActionCodeCoverageTarget"8
@"NSString"24@?0@"IDESchemeActionCodeCoverageFile"8Q16
# Functions
product
+[XCCovTool dumpFunctionsInFileWithName:nameIsFullPath:inReport:outputFormat:]
((fileName)) != nil
(fileName)
@"NSString"24@?0@"IDESchemeActionCodeCoverageFunction"8Q16
Range
@"NSString"24@?0@"DVTCoverageDataContainer"8Q16
    
        
+[XCCovTool dumpReportAtPath:options:error:]
((dumpOptions)) != nil
(dumpOptions)
code which should be unreachable has been reached
beforeReportPath != nil
afterReportPath != nil
(beforeReportSourceFilePathPrefix == nil) == (afterReportSourceFilePathPrefix == nil)
coverageReportPaths != nil
correspondingArchivePaths != nil
coverageReportPaths.count == correspondingArchivePaths.count
Failed to load coverag report at path: %@
Failed to load coverage archive at path: %@
Failed to load coverage data from archive at path: %@
merged.xccovreport
merged.xccovarchive
Failed to write merged report at path %@
Failed to create merged archive
Failed to store coverage data in the merged archive
T@"NSString",&,V_fileNameFilter
JSONObjectWithData:options:error:
_fileNameFilter
SDKs
aggregatedLines
T@"NSDictionary",R
containsObject:
T@"NSString",&,V_targetNameFilter
dumpReportAtPath:options:error:
T@?,C,V_valueBlock
executableLines
TQ,V_mode
finishedLoading
UTF8String
_columnName
removedChildren
_fileNameRepresentsFullPath
setColumnWidth:
_outputFormat
setUsageBanner:
_valueBlock
.cxx_destruct
TB,V_fileNameRepresentsFullPath
JSONRepresentation
actions
T@"NSArray",&,V_columnDefinitions
allKeys
T@"NSDictionary",R,C,N
defaultRegistry
T@"NSString",C,V_columnName
dvt_compactMap:
TQ,V_columnWidth
finish:
TQ,V_outputFormat
hasCoverageData
_columnDefinitions
numberWithBool:
_columnWidth
_mode
setLog:
_targetNameFilter
stringByAppendingPathExtension:
_xccov_errorWithLocalizedDescription:underlyingError:
actionResult
addCoverageReport:lines:
addObject:
addSubsection:
addSuiteNamed:
addedChildren
aggregatedCoverageDataForResultBundle:error:
aggregatedCoverageReport
aggregatedLinesForKey:forArchiveAtPath:error:
anyObject
appendFormat:
appendString:
archiveCoverageLines:error:
argumentKey
arguments
array
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
boolValue
buildResult
capitalizedString
caseInsensitiveCompare:
childrenDeltas
claimedPath
code
codeCoverageTargets
column
columnDefinitions
columnName
columnWidth
compare:
componentsJoinedByString:
configureActivityLogForResultBundle:
copy
copyWithSourceFilePathsMapped:
count
countByEnumeratingWithState:objects:count:
coverageArchiveFilePathForWriting
coverageArchiveFilePromise
coverageReport
coverageReportAtPath:error:
coverageReportFilePathForWriting
coverageReportForPath:error:
coveredLines
coveredLinesDelta
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createResultBundleForWorkspace:forScheme:
creationErrors
currentDirectoryPath
currentHandler
dataUsingEncoding:
dataWithJSONObject:options:error:
debugDescription
defaultDeviceManager
defaultManager
defaultToolchain
dictionary
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
diffAgainst:
diffCoverageReportAtPath:againstCoverageReportAtPath:mappingSourceFilePathPrefix:toPathPrefix:error:
distantFuture
documentLocation
domain
doubleValue
dumpCoverageArchiveAtPath:forKey:outputFormat:error:
dumpDebugDescriptionForArchiveAtPath:outputFormat:error:
dumpEntireReport:outputFormat:
dumpFunctionsInFileWithName:nameIsFullPath:inReport:outputFormat:
dumpKeysForArchiveAtPath:outputFormat:error:
dumpSourceFilesInTargetWithName:inReport:outputFormat:
dumpTargetsInReport:outputFormat:
dvt_arrayByApplyingBlock:
dvt_arrayByRemovingObject:
dvt_arrayByRemovingObjectsInArray:
dvt_dictionaryByAddingEntriesFromDictionary:
dvt_flatMap:
dvt_objectsPassingTest:
dvt_stringByMakingAbsolutePathWithBasePath:
entireReport
enumerateKeysAndObjectsUsingBlock:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
errorWithDomain:code:userInfo:
executableLinesDelta
executionCount
fileExistsAtPath:isDirectory:
fileNameFilter
fileNameRepresentsFullPath
filePathForPathString:
fileURLWithPath:
firstObject
formatErrors:
functions
generateCoverageReportAndArchiveWithProfileFilePath:architecture:toolchain:json:inputs:reportDestinationPath:archiveDestinationPath:logger:error:
generateCoverageReportForProject:workspace:schemeName:profileFilePath:architecture:toolchain:json:outputPath:inputs:error:
getCFRunLoop
getKeys:
handleFailureInMethod:object:file:lineNumber:description:
identifier
init
initLocalRecordWithWorkspace:
initWithArchivePath:error:
initWithBuildableInfos:profileFilePath:coverageReportDestinationPath:coverageArchiveDestinationPath:runDestination:llvmCoverageTools:logger:
initWithCapacity:
initWithColumnDefinitions:
initWithColumnName:valueBlock:
initWithData:encoding:
initWithFilePath:error:
initWithFormat:arguments:
initWithLogSection:
initWithMode:
initWithName:productPath:buildableIdentifier:architecture:toolchainIdentifiers:isStatic:sourceFiles:
initWithName:usageName:usageDescription:argumentType:argumentKey:handlerBlock:
initWithSectionType:domainType:title:
initWithTargetDevice:architecture:SDK:SDKVariant:
initWithTemporaryWorkspaceFilePath
isAbsolutePath
isEqualToString:
isExecutable
jsonRepresentation
jsonRepresentationByRecursing:
lastPathComponent
length
lineCoverage
lineCoverageDelta
lineNumber
lineRange
loadCoverageReportIfNeededWithError:
loadWorkspaceAtPath:representsProject:timeout:error:
localComputer
localizedDescription
logSectionDomainType
mainRunLoop
makeActionRecordWithSchemeCommand:schemeCommandName:schemeTask:runDestination:
mergeCoverageReports:andArchives:destinationReportPath:destinationArchivePath:error:
mode
mutableCopy
name
nativeArchitecture
newlineCharacterSet
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKeyedSubscript:
onlyFilesForTargetsWithName:
onlyFunctionsForFilesWithNameOrPath:
onlyTargets
outputFormat
parseArguments:intoOptionsDictionary:error:
path
pathExtension
pathString
platform
processInfo
productPath
rangeOfString:
rangeOfString:options:range:
recorder
recursivelyFindMachOBinariesInDirectory:
registerDefaults:
releaseContainer
removeObjectAtIndex:
removeObjectForKey:
retainedContainerAtFilePath:fileDataType:workspace:error:
retainedWrappedWorkspaceForContainerAtFilePath:fileDataType:error:
runContextManager
runContexts
runMode:beforeDate:
saveResultBundle:error:
saveSynchronouslyWithError:
schemeIdentifier
setColumnDefinitions:
setColumnName:
setDomainType:
setFileNameFilter:
setFileNameRepresentsFullPath:
setFilePath:
setHasCoverageData:
setMode:
setObject:forKeyedSubscript:
setOptionDefinitions:
setOutputFormat:
setSchemeIdentifier:
setStatus:
setTargetNameFilter:
setValueBlock:
sortedArrayUsingSelector:
sourceFiles
standardUserDefaults
start
stopRecordingWithInfo:completionBlock:
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByTrimmingCharactersInSet:
stringValue
stringWithFormat:
stringWithString:
subRanges
substringWithRange:
tableForElements:
targetNameFilter
testSchemeCommand
testingTypeIdentifier
title
toolchainForIdentifier:
toolsForBuildableInfos:logger:
type
unarchiveAllCoverageLines:
unarchiveCoverageLinesForKey:error:
usageName
usageString
valueBlock
waitForCondition:sourceObject:keyPathAffectingConditionBlock:timeout:
writeToPath:error:
xccov_componentsSeparatedByStringHandlingEscaping:
xccov_errorWithLocalizedDescription:
xccov_errorWithUnderlyingError:andLocalizedDescription:
xccov_popFirst
XCCovWorkspaceUtils
XCCovAdditions
XCCovTableColumnDefinition
XCCovTableBuilder
XCCovUtility
JSON
XCCovDumpReportOptions
XCCovTool
@44@0:8@16B24d28^@36
@32@0:8@16@24
B32@0:8@16^@24
@24@0:8@16
@32@0:8@16@?24
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
@"NSArray"
@20@0:8B16
@24@0:8Q16
B16@0:8
v20@0:8B16
@32@0:8@16^@24
@40@0:8@16@24^@32
B84@0:8@16@24@32B40@44@52@60@68^@76
B92@0:8@16@24@32@40@48@56B64@68@76^@84
B48@0:8@16@24Q32^@40
B40@0:8@16Q24^@32
@32@0:8@16Q24
@40@0:8@16@24Q32
@44@0:8@16B24@28Q36
B40@0:8@16@24^@32
B56@0:8@16@24@32@40^@48
