@(#)PROGRAM:genstrings  PROJECT:genstrings-23008
TQ,R,V_encoding
T@"NSMutableDictionary",&,N
containsObject:
T@"NSString",R,C,N
isAtEnd
options
_attributed
stringByAppendingPathComponent:
T@"NSDictionary",R,C,V_options
allKeys
T@"NSString",&,N
dealloc
T@"NSString",R,C,V_path
UTF8String
setKey:
_commentary
_encoding
_fallbackForStringEncoding:
_key
_newSubstringWithRange:zone:
_options
_path
_value
addArgument:forName:
addIndex:
addIndexesInRange:
addObject:
addObjectsFromArray:
alphanumericCharacterSet
appendBytes:length:
appendFormat:
appendString:
arguments
array
arrayWithObject:
attributed
boolValue
bytes
cStringUsingEncoding:
caseInsensitiveCompare:
changeCurrentDirectoryPath:
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
clear
code
commentary
commentaryDescription
componentsSeparatedByString:
containsIndex:
copy
copySourceFileDetectingEncodingIfNecessary:error:
count
countByEnumeratingWithState:objects:count:
countNewlinesBeforeLocation:
currentDirectoryPath
dataUsingEncoding:
dataWithCapacity:
dataWithContentsOfFile:
decimalDigitCharacterSet
defaultCStringEncoding
defaultManager
deleteCharactersInRange:
description
dictionary
dictionaryWithObjects:forKeys:count:
domain
encoding
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
environment
fileExistsAtPath:
fileURLWithPath:
findEntryInTable:key:value:comments:unicode:attributed:
firstMatchInString:options:range:
getArgumentForName:useFallbackForNonliteral:
getArgumentForPosition:useFallbackForNonliteral:
getArgumentsForRange:inSwiftFile:interpolations:
init
initWithBytes:length:encoding:
initWithCapacity:
initWithContentsOfFile:encoding:error:
initWithContentsOfFile:options:error:
initWithContentsOfFile:usedEncoding:error:
initWithFormat:arguments:
initWithKey:value:comment:
initWithName:entries:
initWithObjects:
initWithPath:options:
initWithPattern:options:error:
initWithSource:version:tables:
invertedSet
isEqualToString:
isNullOrNil
keyEnumerator
lastPathComponent
length
localizedCaseInsensitiveCompare:
localizedNameOfStringEncoding:
matchMemberOfArray:fromPosition:whichMember:
matchesInString:options:range:
name
nextObject
numberOfRanges
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
path
pathExtension
processInfo
processMultilineSwiftLiteral:escapingLiterals:
propertyListWithData:options:format:error:
range
rangeAtIndex:
rangeOfCharacterFromSet:options:range:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeOfUnicodeEscapeSequenceInSearchRange:genstringsUnicodeCheck:
removeAllObjects
replaceOccurrencesOfString:withString:options:range:
scanCharactersFromSet:intoString:
scanLocation
scanString:intoString:
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
scannerWithString:
setAttributed:
setCaseSensitive:
setCharactersToBeSkipped:
setCommentary:
setObject:forKey:
setObject:forKeyedSubscript:
setScanLocation:
setString:
setValue:
setWithCapacity:
sortedArrayUsingSelector:
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringByReplacingUnicodeCharacterEscapeSequences:
stringByTrimmingCharactersInSet:
stringByUnescapingStringsStyle
stringWithCapacity:
stringWithCharacters:length:
stringWithFormat:
stringWithString:
subarrayWithRange:
substringFromIndex:
substringToIndex:
substringWithRange:
unsignedIntegerValue
value
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
writeTo:error:
writeToFile:atomically:
zone
Key "%@" used with multiple comments %@
0000
invalid unicode sequence: \\U%s
Key "%s" used with multiple values. Value "%s" kept. Value "%s" ignored.
{ Key(%lx):%@
Commentary(%lx):%@
encoding
<%@: %p "%@" (%@)>
NONLITERAL_
%@%lu
NONLITERAL_%@
NSLocalizedString
NSLocalizedStringFromTable
NSLocalizedStringFromTableInBundle
NSLocalizedStringWithDefaultValue
NSLocalizedAttributedString
NSLocalizedAttributedStringFromTable
NSLocalizedAttributedStringFromTableInBundle
NSLocalizedAttributedStringWithDefaultValue
KitString
NXRunLocalizedAlertPanel
NSRunLocalizedAlertPanel
_NXKitString
_NXKitAlert
Text
CFCopyLocalizedString
CFCopyLocalizedStringFromTable
CFCopyLocalizedStringFromTableInBundle
CFCopyLocalizedStringWithDefaultValue
GENSTRINGS_OUTPUT_BYTE_ORDER
littleEndian
bigEndian
RC_XBS
GENSTRINGS_BINCOMPAT
couldn't connect to output directory %@
couldn't connect to working dir %@
couldn't find cwd (%@)
Bundle.localizedString
Bundle.localizedStringFromTable
Bundle.localizedStringFromTableInBundle
Bundle.localizedStringWithDefaultValue
-skipTable
-table
-noPositionalParameters
-SwiftUI
-timersupport
-text-replacement
-macRoman
-encoding
unknown string encoding '%@'
-bigEndian
-littleEndian
can only specify one endian option
couldn't read arguments file %@
couldn't interpret arguments file %@
-stringsdata
files
path
options
missing path in arguments file, entry %llu
v32@?0@"NSDictionary"8Q16*24
tables
skipTables
cannot append when generating stringsdata
cannot specify endianness when generating stringsdata
failed to read input file %@
input file %@ cannot be read in %@ encoding
-%@.stringsdata
cannot open output file %@
bad entry in file %@ (line = %ld): %@
%s: error: %s
%s: warning: %s
v8@?0
,\s*specifier:\s*\"(.*)\"
v32@?0@"NSString"8Q16*24
swift
%@%@
FromTable
FromTableInBundle
WithDefaultValue
tableName
NONLITERAL_tableName
comment
value
NONLITERAL_1
NONLITERAL_0
.strings
Localizable.strings
%li$
No comment provided by engineer.
 [allows markup]
/* %@ */
Keys: %s
Vals: %s
"%@" = "%@";
Uneven number of bytes in UTF16 data
[allows markup]
v32@?0@"NSString"8@"NSDictionary"16*24
Usage: %s [OPTION] file1.{m,c,cpp,swift} ... filen.{m,c,cpp,swift}
Options
 -h                       shows this message and exits.
 -encoding encoding       assume input files use specified encoding.
 -SwiftUI                 enables SwiftUI Text() support.
 -a                       append output to the old strings files.
 -s substring             substitute 'substring' for NSLocalizedString.
 -skipTable tablename     skip over the file for 'tablename'.
 -table tablename         only process certain tables. 
 -noPositionalParameters  turns off positional parameter support.
 -u                       allow unicode characters.
 -macRoman                read files as MacRoman not UTF-8.
 -d                       attempt to detect encoding if read fails.
 -q                       turns off multiple key/value pairs warning.
 -bigEndian               output generated with big endian byte order.
 -littleEndian            output generated with little endian byte order.
 -o dir                   place output files in 'dir'.
Please see the genstrings(1) man page for full documentation
Argument is not a literal string.
No output.
Key count does not match value count.
Table is not a literal string.
Unknown error.
NULL
()"\,:
invalid unicode sequence: \u%s
00000000
invalid unicode sequence: \U%s
01234567
0123456789abcdefABCDEF
ELSHashEntry
ELSSourceFile
ELSAdditions
@56@0:8@16@24@32@40c48c52
@16@0:8
v24@0:8@16
c16@0:8
v20@0:8c16
@"NSString"
@"NSMutableDictionary"
@32@0:8@16@24
v16@0:8
Q24@0:8Q16
@28@0:8c16^@20
Q16@0:8
@"NSDictionary"
v32@0:8@16@24
@28@0:8@16c24
@28@0:8Q16c24
{_NSRange=QQ}40@0:8@16Q24^q32
@36@0:8^{_NSRange=QQ}16c24@28
{_NSRange=QQ}36@0:8{_NSRange=QQ}16c32
@20@0:8c16
@(#)PROGRAM:genstrings  PROJECT:genstrings-23008
TQ,R,V_encoding
T@"NSMutableDictionary",&,N
containsObject:
T@"NSString",R,C,N
isAtEnd
options
_attributed
stringByAppendingPathComponent:
T@"NSDictionary",R,C,V_options
allKeys
T@"NSString",&,N
dealloc
T@"NSString",R,C,V_path
UTF8String
setKey:
_commentary
_encoding
_fallbackForStringEncoding:
_key
_newSubstringWithRange:zone:
_options
_path
_value
addArgument:forName:
addIndex:
addIndexesInRange:
addObject:
addObjectsFromArray:
alphanumericCharacterSet
appendBytes:length:
appendFormat:
appendString:
arguments
array
arrayWithObject:
attributed
boolValue
bytes
cStringUsingEncoding:
caseInsensitiveCompare:
changeCurrentDirectoryPath:
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
clear
code
commentary
commentaryDescription
componentsSeparatedByString:
containsIndex:
copy
copySourceFileDetectingEncodingIfNecessary:error:
count
countByEnumeratingWithState:objects:count:
countNewlinesBeforeLocation:
currentDirectoryPath
dataUsingEncoding:
dataWithCapacity:
dataWithContentsOfFile:
decimalDigitCharacterSet
defaultCStringEncoding
defaultManager
deleteCharactersInRange:
description
dictionary
dictionaryWithObjects:forKeys:count:
domain
encoding
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
environment
fileExistsAtPath:
fileURLWithPath:
findEntryInTable:key:value:comments:unicode:attributed:
firstMatchInString:options:range:
getArgumentForName:useFallbackForNonliteral:
getArgumentForPosition:useFallbackForNonliteral:
getArgumentsForRange:inSwiftFile:interpolations:
init
initWithBytes:length:encoding:
initWithCapacity:
initWithContentsOfFile:encoding:error:
initWithContentsOfFile:options:error:
initWithContentsOfFile:usedEncoding:error:
initWithFormat:arguments:
initWithKey:value:comment:
initWithName:entries:
initWithObjects:
initWithPath:options:
initWithPattern:options:error:
initWithSource:version:tables:
invertedSet
isEqualToString:
isNullOrNil
keyEnumerator
lastPathComponent
length
localizedCaseInsensitiveCompare:
localizedNameOfStringEncoding:
matchMemberOfArray:fromPosition:whichMember:
matchesInString:options:range:
name
nextObject
numberOfRanges
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
path
pathExtension
processInfo
processMultilineSwiftLiteral:escapingLiterals:
propertyListWithData:options:format:error:
range
rangeAtIndex:
rangeOfCharacterFromSet:options:range:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeOfUnicodeEscapeSequenceInSearchRange:genstringsUnicodeCheck:
removeAllObjects
replaceOccurrencesOfString:withString:options:range:
scanCharactersFromSet:intoString:
scanLocation
scanString:intoString:
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
scannerWithString:
setAttributed:
setCaseSensitive:
setCharactersToBeSkipped:
setCommentary:
setObject:forKey:
setObject:forKeyedSubscript:
setScanLocation:
setString:
setValue:
setWithCapacity:
sortedArrayUsingSelector:
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringByReplacingUnicodeCharacterEscapeSequences:
stringByTrimmingCharactersInSet:
stringByUnescapingStringsStyle
stringWithCapacity:
stringWithCharacters:length:
stringWithFormat:
stringWithString:
subarrayWithRange:
substringFromIndex:
substringToIndex:
substringWithRange:
unsignedIntegerValue
value
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
writeTo:error:
writeToFile:atomically:
zone
Key "%@" used with multiple comments %@
0000
invalid unicode sequence: \\U%s
Key "%s" used with multiple values. Value "%s" kept. Value "%s" ignored.
{ Key(%lx):%@
Commentary(%lx):%@
encoding
<%@: %p "%@" (%@)>
NONLITERAL_
%@%lu
NONLITERAL_%@
NSLocalizedString
NSLocalizedStringFromTable
NSLocalizedStringFromTableInBundle
NSLocalizedStringWithDefaultValue
NSLocalizedAttributedString
NSLocalizedAttributedStringFromTable
NSLocalizedAttributedStringFromTableInBundle
NSLocalizedAttributedStringWithDefaultValue
KitString
NXRunLocalizedAlertPanel
NSRunLocalizedAlertPanel
_NXKitString
_NXKitAlert
Text
CFCopyLocalizedString
CFCopyLocalizedStringFromTable
CFCopyLocalizedStringFromTableInBundle
CFCopyLocalizedStringWithDefaultValue
GENSTRINGS_OUTPUT_BYTE_ORDER
littleEndian
bigEndian
RC_XBS
GENSTRINGS_BINCOMPAT
couldn't connect to output directory %@
couldn't connect to working dir %@
couldn't find cwd (%@)
Bundle.localizedString
Bundle.localizedStringFromTable
Bundle.localizedStringFromTableInBundle
Bundle.localizedStringWithDefaultValue
-skipTable
-table
-noPositionalParameters
-SwiftUI
-timersupport
-text-replacement
-macRoman
-encoding
unknown string encoding '%@'
-bigEndian
-littleEndian
can only specify one endian option
couldn't read arguments file %@
couldn't interpret arguments file %@
-stringsdata
files
path
options
missing path in arguments file, entry %llu
v32@?0@"NSDictionary"8Q16^B24
tables
skipTables
cannot append when generating stringsdata
cannot specify endianness when generating stringsdata
failed to read input file %@
input file %@ cannot be read in %@ encoding
-%@.stringsdata
cannot open output file %@
bad entry in file %@ (line = %ld): %@
%s: error: %s
%s: warning: %s
v8@?0
,\s*specifier:\s*\"(.*)\"
v32@?0@"NSString"8Q16^B24
swift
%@%@
FromTable
FromTableInBundle
WithDefaultValue
tableName
NONLITERAL_tableName
comment
value
NONLITERAL_1
NONLITERAL_0
.strings
Localizable.strings
%li$
No comment provided by engineer.
 [allows markup]
/* %@ */
Keys: %s
Vals: %s
"%@" = "%@";
Uneven number of bytes in UTF16 data
[allows markup]
v32@?0@"NSString"8@"NSDictionary"16^B24
Usage: %s [OPTION] file1.{m,c,cpp,swift} ... filen.{m,c,cpp,swift}
Options
 -h                       shows this message and exits.
 -encoding encoding       assume input files use specified encoding.
 -SwiftUI                 enables SwiftUI Text() support.
 -a                       append output to the old strings files.
 -s substring             substitute 'substring' for NSLocalizedString.
 -skipTable tablename     skip over the file for 'tablename'.
 -table tablename         only process certain tables. 
 -noPositionalParameters  turns off positional parameter support.
 -u                       allow unicode characters.
 -macRoman                read files as MacRoman not UTF-8.
 -d                       attempt to detect encoding if read fails.
 -q                       turns off multiple key/value pairs warning.
 -bigEndian               output generated with big endian byte order.
 -littleEndian            output generated with little endian byte order.
 -o dir                   place output files in 'dir'.
Please see the genstrings(1) man page for full documentation
Argument is not a literal string.
No output.
Key count does not match value count.
Table is not a literal string.
Unknown error.
NULL
()"\,:
invalid unicode sequence: \u%s
00000000
invalid unicode sequence: \U%s
01234567
0123456789abcdefABCDEF
ELSHashEntry
ELSSourceFile
ELSAdditions
@56@0:8@16@24@32@40B48B52
@16@0:8
v24@0:8@16
B16@0:8
v20@0:8B16
@"NSString"
@"NSMutableDictionary"
@32@0:8@16@24
v16@0:8
Q24@0:8Q16
@28@0:8B16^@20
Q16@0:8
@"NSDictionary"
v32@0:8@16@24
@28@0:8@16B24
@28@0:8Q16B24
{_NSRange=QQ}40@0:8@16Q24^q32
@36@0:8^{_NSRange=QQ}16B24@28
{_NSRange=QQ}36@0:8{_NSRange=QQ}16B32
@20@0:8B16
