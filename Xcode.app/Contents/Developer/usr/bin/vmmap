@(#)PROGRAM:vmmap  PROJECT:SamplingTools-64566.82
TQ,N,V_regionDescriptionOptions
T@"<VMUStackLogReader>",&,N,V_stackLogReader
address
TB,N,V_fullStacks
containsString:
TB,N,V_showAllSplitLibs
is64Bit
TB,N,V_showShortenedOutput
TB,N,V_summaryOnly
setInterleaved:
Ti,N,V_terminalWidth
setShowSubmaps:
_forkCorpseRetryTime
stackIdentifier
_interleaved
userTag
_showAllSplitLibs
vmRegionTracker
.cxx_destruct
_stackLogReader
T@"DVT_VMUVMRegionTracker",&,N,V_vmRegionTracker
arrayWithArray:
TB,N,V_interleaved
didPhysFootprintDirtyAccounting
TB,N,V_showAsPages
is64bit
TB,N,V_showSubmaps
regions
TQ,N,V_forkCorpseRetryTime
setShowAsPages:
UTF8String
setSummaryOnly:
_fullStacks
stringByResolvingSymlinksInPath
_regionDescriptionOptions
valueForEnvVar:
_showAsPages
_showShortenedOutput
_showSubmaps
_summaryOnly
_terminalWidth
_vmRegionTracker
absoluteURL
appendFormat:
arguments
attributesOfItemAtPath:error:
bundleWithIdentifier:
callStackSymbols
columnHeadersWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:
compare:
componentsJoinedByString:
componentsSeparatedByString:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createSymbolicatorWithFlags:andNotification:
currentHandler
dataWithContentsOfFile:options:error:
dateWithTimeIntervalSinceNow:
defaultManager
description
descriptionForRegionTotals:memorySizeDivisor:
descriptionOfRegionsAroundAddress:options:
descriptionOfRegionsAroundAddress:options:maximumLength:memorySizeDivisor:
descriptionWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:
dictionaryWithObjects:forKeys:count:
directedGraphWithData:error:
dyldSharedCacheRange
endEvent:
executablePath
fileExistsAtPath:isDirectory:
fileSize
fileURLWithPath:
forkCorpseRetryTime
fullStacks
getPlatform:
handleFailureInFunction:file:lineNumber:description:
hasFractionalPageSizes
hasPrefix:
hasSuffix:
indexOfObjectPassingTest:
init
initWithCorePath:originalBinaryPaths:error:
initWithGraph:options:
initWithPid:
initWithTask:
initWithTask:getBinariesList:
initWithTask:symbolicator:
initWithVMUTask:options:
intValue
interleaved
isCore
isEqualToString:
isExclave
isExecutableFileAtPath:
isSemiCriticalProcess
isSemiCriticalProcessWithNoTimeLimit
isSimulator
isSubmap
isTranslated
kernelPageSize
lastPathComponent
length
localizedDescription
logHandle
memoryCache
name
numberWithInt:
numberWithUnsignedInt:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
parentPid
parentProcessPath
parseArguments:withBlock:
path
processDescription
processDescriptionString
processInfo
processName
protection
range
reason
recordedPhysFootprint
regionDescriptionOptions
regionTracker
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:flags:handler:
setForkCorpseRetryTime:
setFullStacks:
setObject:atIndexedSubscript:
setPurposeDescription:
setRegionDescriptionOptions:
setShowAllSplitLibs:
setShowShortenedOutput:
setSingleHyphenLongNames:
setStackLogReader:
setSyntaxDescription:
setTerminalWidth:
setVmRegionTracker:
sharedTimer
shouldAnalyzeWithCorpse
showAllSplitLibs
showAsPages
showShortenedOutput
showSubmaps
signpostID
size
sortedArrayUsingComparator:
stackLogReader
startPeeking
startWithCategory:message:
startWithMessage:
stop
stopPeeking
string
stringValue
stringWithFormat:
stringWithUTF8String:
summaryOnly
symbolicatedBacktraceForStackID:options:
taskDyldSharedCacheRange
taskPort
taskType
terminalWidth
type
usage:
vmPageSize
vmRegionRangeInfoForRange:
VmmapGlobals
ObjectLocalToThisFile
@16@0:8
i16@0:8
v20@0:8i16
Q16@0:8
v24@0:8Q16
B16@0:8
v20@0:8B16
v24@0:8@16
v16@0:8
@"<VMUStackLogReader>"
@"DVT_VMUVMRegionTracker"
Gives you an indication of the VM used by a process
[-sortBySize] [-wide] [-pages] [-interleaved] [-submap] [-allSplitLibs] [-noCoalesce] [-summary] [-stacks] [-forkCorpse] <pid | partial-process-name | memory-graph-file> [<address>]
sortBySize
sort regions by size (dirty + swapped)
v8@?0
wide
print wide output
verbose
equivalent to -w -submap -allSplitLibs -noCoalesce
resident
dirty
swapped
purge
pages
print region sizes in page counts rather than bytes
interleaved
print all regions in order, rather than non-writable then writable
submaps
print info about submaps
allSplitLibs
print info about all system split libraries, even those not loaded by this process
noCoalesce
do not coalesce adjacent identical regions (default is to coalesce for more concise output)
noMalloc
omit malloc zone details, useful in cases where gathering that is slow
summary
only print overall summary, not individual regions
stacks
show region allocation backtraces if target process uses MallocStackLogging (implies -interleaved -noCoalesce)
-stacks also implies -interleaved -noCoalesce
fullStacks
show region allocation backtraces with one line per frame
forkCorpse
generate a corpse fork from process and run vmmap on it
forkCorpseRetryTime
when creating a process corpse under system pressure, retry for the specified number of seconds
v24@?0@"NSString"8^@16
getCorpseFromParent
physFootprint
physFootprint mode is now default so this flag is no longer needed
noPhysFootprint
excludePersonalInfo
showTiming
initialization
help
allProcesses
minimumPid
run vmmap against all processes (or those >= minimumPid), with the given arguments
shortenedOutput
print less output by e.g. not showing any region in dyld shared cache that has (dirty + swapped == 0) etc
excResource
Produce output for ExcResource report
testRegionsAroundAddress
%s[%d]: [fatal] failed to open core file: %s
bad address '%@' specified
unknown argument: %@
no process specified
physFootprint mode is now default so the --physFootprint flag is not necessary
only one of --physFootprint or --noPhysFootprint can be specified; physFootprint mode is the default
-s/--sortBySize cannot be used when specifying an address
%s[%d]: [fatal] unable to read input graph: %s
vmmap
generate analysis task
v16@?0@"DVT_VMUTask"8
/tmp
Virtual Memory Map of process %d (%s)
Output report format:  2.4  -- %u-bit process
VM page size:  %u bytes
Process VM page size:  %u bytes    Kernel VM page size:  %u bytes
Reporting VM page counts in terms of %u bytes
==== Summary for process %d
B32@?0@"DVT_VMUVMRegion"8Q16^B24
MALLOC_PROB_GUARD
==== regions for process %d  (non-writable and writable regions are interleaved)
==== Non-writable regions for process %d
B16@?0@"DVT_VMUVMRegion"8
==== Writable regions for process %d
q24@?0@"DVT_VMUVMRegion"8@"DVT_VMUVMRegion"16
Stack
STACK GUARD
    object_id %lx
    ORIGINAL VM ALLOCATION: %#llx-%#llx[%s]
    REGION EXTENDS PAST ORIGINAL VM ALLOCATION: %#llx-%#llx[%s]
    Call stack: %s
SM=sharing mode:  
%s=copy_on_write %s=private %s=empty %s=aliased 
%s=shared %s=zero_filled %s=shared_alias
PURGE=purgeable mode:  
%c=volatile %c=nonvolatile %c=empty   otherwise is unpurgeable
end of previous: %#llx   %s
trying %#llx
v16@?0Q8
Collected with PhysFootprint mode disabled
Showing shortened output:
    - not showing any region in DSC that has (dirty + swapped == 0)
    - not showing 'unused system shared lib __DATA, on dirty page' regions
    - paths shortened (e.g. /System/Library/Frameworks -> /S/L/F, /usr/lib/system -> /u/l/s)
Collected with PhysFootprint mode enabled
Probabilistic Guard Malloc is enabled for this process which can increase memory footprint. See `man malloc` for more information.
==== Legend
.memgraph
%s[%d]: [fatal] unable to suspend target process: %s
%s[%d]: task_stop_peeking failed. (%s)
%s[%d]: mach port for process %d not valid
%s[%d]: %s
%s[%d]: [fatal] mach port for process %d not valid
%s[%d]: [fatal] %s
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
xctest
sharedCode.m should have been built with -DSAMPLING_TOOLS_TESTS for use with xctest
Target process of memgraph:  %@ [%u]
%s[%d]: [fatal] Expected to get a VMUTask of type task.
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: [fatal] Target task not available for analysis
%s[%d]: [fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
%s[%d]: [fatal] %s analysis of pid %u reached time limit of %llu seconds, exiting.
v16@?0i8B12
SAMPLING_TOOLS_ALL_PROCESSES
Target process is using %s so not generating corpse for better performance.
Target process is an ancestor and permitting live process for ancestors so not generating a corpse to save resources by default.
__check_mach_ports_lookup
i24@?0r^v8r^v16
%s-%d-%s
DT_RESPAWN_FOR_NONNATIVE
%s/%s[%d]-allProcesses.XXXXXX
%s[%d]: [fatal] Couldn't create output directory from template %s, %s. Exiting
%s[%d]: [fatal] Couldn't change directory to %s
stderr.txt
Couldn't create error file stderr.txt (%s)
Couldn't replace stderr file with stderr.txt (%s)
Writing all output files into %s
Skipping process of wrong architecture:  %d %s
ANALYZING PROCESS %5d: %s
.txt
Couldn't open output file %s (%s)
Couldn't replace output file with %s (%s)
    CHILD ANALYSIS TOOL CRASHED with %s
    %s for %5d: %s
Exception '%s', reason: '%s'
v16@?0i8I12
v40@?0i8r*12B20I24I28^B32
Child analysis tool crashed for these processes:
Wrote output files into %s
To print all files in pid order use:  (cd %s; cat `/bin/ls -tr1 *.txt`) 
: terminated; resuming target task
: interrupted; resuming target task
task from parent for pid %u
%s[%d]: [fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
%s[%d]: Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
%s[%d]: No process corpse slots currently available - waiting to get one
no corpse slots are available
target process's footprint is too large, or system memory pressure is too high
target process may be using too much VM
libgmalloc.dylib
GuardMalloc in the target process may be using too much VM
corpse creation encountered the unexpected error %s (%d)
generated corpse for pid %u
%s[%d]: [fatal] Kernel generated only a minimal corpse with error %s (%d)
%s[%d]: Kernel generated only a minimal corpse with error %s (%d) - examining live process instead
%s[%d]: [fatal] Failed to generate corpse: %s
%s[%d]: Failed to generate corpse: %s - examining live process instead
BOOL _respawnToolIfNecessaryVMUTaskWithExitStatus(DVT_VMUTask * _Nullable __strong, VMURespawnToolOptions, int *, uint64_t)
Only one of kVMURespawnForAllProcesses and kVMURespawnForAllNonNativeProcesses can be set
DYLD_ROOT_PATH
%s[%d]: [fatal] Failed to create symbolicator for target
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DT_NO_RESPAWN_TO_OS
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
arm64
x86_64
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
--al
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal] waitpid: %s
_respawnToolIfNecessaryVMUTaskWithExitStatus_block_invoke
sharedCode.m
WIFSIGNALED(child_status)
Child `%s` process died with signal %d %s
v12@?0I8
com.apple.SymbolicationDT
Symbolication.framework/Symbolication
com.apple.CoreSymbolicationDT
CoreSymbolication.framework/CoreSymbolication
64544
/System/Library/PrivateFrameworks/%s
%s/usr/bin/%s
v20@?0I8@?<v@?>12
Running in DT_RESPAWN_FOR_NONNATIVE mode -- respawning only if necessary to match target process arch and/or platform.
[fatal] failed to open core file: %s
[fatal] unable to read input graph: %s
vmmap
generate analysis task
[fatal] unable to suspend target process: %s
[fatal] mach port for process %d not valid
[fatal] %s
examining %@ [%u]
[fatal] Expected to get a VMUTask of type task.
[fatal] error acquiring target task port from parent.
[fatal] Target task not available for analysis
[fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
[fatal] %s analysis of pid %u reached time limit of %llu seconds, exiting.
[fatal] Couldn't create output directory from template %s, %s. Exiting
[fatal] Couldn't change directory to %s
[fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
No process corpse slots currently available - waiting to get one
[fatal] Kernel generated only a minimal corpse with error %s (%d)
Kernel generated only a minimal corpse with error %s (%d) - examining live process instead
[fatal] Failed to generate corpse: %s
Failed to generate corpse: %s - examining live process instead
[fatal] Failed to create symbolicator for target
[fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
[fatal] 'mach_ports_register' failed: %s (%d)
[fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
[fatal] waitpid: %s
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380021</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.vmmap</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>MacOSX</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>24A292</string>
<key>DTPlatformName</key>
<string>macosx</string>
<key>DTPlatformVersion</key>
<string>15.0</string>
<key>DTSDKBuild</key>
<string>24A292</string>
<key>DTSDKName</key>
<string>macosx15.0.internal</string>
<key>DTXcode</key>
<string>1600</string>
<key>DTXcodeBuild</key>
<string>16A5221e</string>
<key>LSMinimumSystemVersion</key>
<string>13.0</string>
</dict>
</plist>
