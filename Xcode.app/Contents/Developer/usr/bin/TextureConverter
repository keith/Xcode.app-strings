%F1/
%H1/
%J1/
%L1/
%N1/
%P1/
%R1/
%T1/
%V1/
%X1/
%Z1/
%\1/
%^1/
%`1/
%b1/
%d1/
%f1/
%h1/
%j1/
%j0/
%l0/
%n0/
%p0/
%r0/
%t0/
%v0/
%x0/
%z0/
%|0/
%~0/
%1/
% 1/
%"1/
%$1/
%&1/
% 1/
%"1/
%$1/
%&1/
%(1/
%*1/
%,1/
%.1/
%01/
%21/
%41/
%61/
%81/
%:1/
%<1/
%>1/
%@1/
%B1/
%D1/
%F1/
%H1/
%J1/
%L1/
%N1/
%P1/
%R1/
%T1/
%V1/
%X1/
%Z1/
%\1/
%^1/
%`1/
%b1/
%d1/
%f1/
%h1/
%j1/
%l1/
%n1/
%p1/
%r1/
%t1/
%v1/
%x1/
%z1/
%|1/
%~1/
%2/
% 2/
%"2/
%$2/
%&2/
%(2/
%*2/
%,2/
%.2/
%02/
%22/
%42/
%62/
%82/
%:2/
%<2/
%>2/
}(}-
}\l-
}lT-
Failed to compress texture
Failed to decompress texture
Failed to load texture
Images are identical
Images differ. RMS:%.2f MSE:%.2f PSNR:%.2f
Examining %s
File Not Found!
Building cubemap texture %s
Building volume texture %s
Building array texture %s
Building mip mapped texture %s
Converting %s
No converter for format (%s)
vector
basic_string
com.apple.TextureConverter.compress
version
compressor
format
options
^v8@?0
atcFormatUnknown
atcFormatR8Unorm
atcFormatR16F16
atcFormatR32F32
atcFormatRg8Unorm
atcFormatRg16F16
atcFormatRg32F32
atcFormatRgb8Unorm
atcFormatRgb16F16
atcFormatRgb32F32
atcFormatRgba8Unorm
atcFormatRgba16F16
atcFormatRgba32F32
atcFormatBgra8Unorm
atcFormatBc1Unorm
atcFormatBc2Unorm
atcFormatBc3Unorm
atcFormatBc4Snorm
atcFormatBc4Unorm
atcFormatBc5Snorm
atcFormatBc5Unorm
atcFormatBc6Sf16
atcFormatBc6Uf16
atcFormatBc7Unorm
atcFormatAstc4x4Unorm
atcFormatAstc4x4F16
atcFormatAstc5x4Unorm
atcFormatAstc5x4F16
atcFormatAstc5x5Unorm
atcFormatAstc5x5F16
atcFormatAstc6x5Unorm
atcFormatAstc6x5F16
atcFormatAstc6x6Unorm
atcFormatAstc6x6F16
atcFormatAstc8x5Unorm
atcFormatAstc8x5F16
atcFormatAstc8x6Unorm
atcFormatAstc8x6F16
atcFormatAstc8x8Unorm
atcFormatAstc8x8F16
atcFormatAstc10x5Unorm
atcFormatAstc10x5F16
atcFormatAstc10x6Unorm
atcFormatAstc10x6F16
atcFormatAstc10x8Unorm
atcFormatAstc10x8F16
atcFormatAstc10x10Unorm
atcFormatAstc10x10F16
atcFormatAstc12x10Unorm
atcFormatAstc12x10F16
atcFormatAstc12x12Unorm
atcFormatAstc12x12F16
atcFormatEacR11Snorm
atcFormatEacR11Unorm
atcFormatEacRg11Snorm
atcFormatEacRg11Unorm
atcFormatEacRgba8Unorm
atcFormatEtc2Rgb8Unorm
atcFormatEtc2Rgb8A1Unorm
atcFormatPvrtcRgb2BppUnorm
atcFormatPvrtcRgb4BppUnorm
atcFormatPvrtcRgba2BppUnorm
atcFormatPvrtcRgba4BppUnorm
atcFormatR8Srgb
atcFormatRg8Srgb
atcFormatRgb8Srgb
atcFormatRgba8Srgb
atcFormatBgra8Srgb
atcFormatBc1Srgb
atcFormatBc2Srgb
atcFormatBc3Srgb
atcFormatBc7Srgb
atcFormatEacRgba8Srgb
atcFormatEtc2Rgb8Srgb
atcFormatEtc2Rgb8A1Srgb
atcFormatPvrtcRgb2BppSrgb
atcFormatPvrtcRgb4BppSrgb
atcFormatPvrtcRgba2BppSrgb
atcFormatPvrtcRgba4BppSrgb
atcFormatAstc4x4Srgb
atcFormatAstc5x4Srgb
atcFormatAstc5x5Srgb
atcFormatAstc6x5Srgb
atcFormatAstc6x6Srgb
atcFormatAstc8x5Srgb
atcFormatAstc8x6Srgb
atcFormatAstc8x8Srgb
atcFormatAstc10x5Srgb
atcFormatAstc10x6Srgb
atcFormatAstc10x8Srgb
atcFormatAstc10x10Srgb
atcFormatAstc12x10Srgb
atcFormatAstc12x12Srgb
atcColorGamutUnknown
atcColorGamutSRGB
atcColorGamutDisplayP3
atcColorGamutNone
atcTextureType2D
atcTextureTypeCube
atcTextureType3D
atcTextureType2DArray
Unknown pixel format
Unknown color gamut
Unknown texture type
KTX2
Error: options == nullptr
Error: invalid options->format - %s
Error: invalid options->format - %i
Error: invalid gammaIn - %f
Error: invalid gammaOut - %f
Error: invalid rgbmRange - %f
Error: invalid compression format - %s
Error: invalid compression format - %i
Error: invalid compressor - %i
Error: invalid quality - %i
Error: invalid alphaMode - %i
Error: invalid alphaMode - %f
Error: invalid channelWeighting - %i
Error: invalid maxMipmaps - %i, maximum is 
Error: invalid mipmapFilter - %i
Error: invalid maxExtent - %i, maximum is 
Error: invalid resizeRoundMode - %i
Error: invalid resizeFilter - %i
Error: invalid wrapMode - %i
Error: invalid pvrtcPunchThroughMode - %i
Error: unsupported decompression format - %s
Error: invalid decompression format - %i
Error: invalid decompressor - %i
Error: invalid %s width - %i
Error: invalid %s height - %i
Error: invalid %s numMipLevels - %i, should be in range 1-%i 
Error: invalid %s type - %i
Error: invalid %s depth (%i) - should be > 1 and <= %u 
Error: invalid %s elements (%i) - should be > 1 and <= %ui
Warning: invalid %s elements (%i) - should be 1
Error: invalid %s->format - %u
Error: %s == nullptr
Error: invalid ATC_Surface(element %u, mipLevel %u) width - %i, should be %i or 0
Error: invalid ATC_Surface(element %u, mipLevel %u) height - %i, should be %i or 0
Error: invalid ATC_Surface(element %u, mipLevel %u) rowBytes - %i, should be 0 for compressed formats
Error: invalid ATC_Surface(element %u, mipLevel %u) rowBytes - %i, should be >= %i or 0
Error: invalid %s.surface[%i][%i].size - %i, should be == %i
Error: invalid %s.surface[%i][%i].data - NULL
Error: destTex == nullptr
ATC_Texture
Error: ATC_Context should set both memoryAllocator & memoryDeallocator, or neither.
sourceTex
Error: invalid sourceTex format - %s
Error: invalid sourceTex format - %i
Error: invalid fileFormat - %i
ATC_Decompress: Unsupported destination format: %s
refTex
compTex
TC_Version
TC_Options
KTXmetalPixelFormat
com.apple.image.premultipliedAlpha
com.apple.image.colorGamut
com.apple.image.colorTransfer
false
Did not recognize parameter %d '%s'
TextureConverter %s
Usage: %s%s Arguments...
 [Options]
=value
Options:
--%s
 (default: "
Widths Differ: (%d != %d)
Heights Differ: (%d != %d)
Depths Differ: (%d != %d)
Texture Typed Differ: (%d != %d)
NumFaces Differ: (%d != %d)
NumElements Differ: (%d != %d)
NumMipmaps Differ: (%d != %d)
0123456789abcdefxp
0123456789ABCDEFXP
null
_KMGT
_kMGT
Error: 
Warning: 
----------
Progress [%s] %.0f%%
Progress [
] %.0f%%
unknown
GenericGray
GenericRGB
GenericCMYK
DisplayP3
GenericRGBLinear
AdobeRGB1998
GenericGrayGamma2_2
GenericXYZ
GenericLab
ACESCGLinear
ITUR_709_PQ
ITUR_709_HLG
ITUR_2020
ITUR_2020_sRGBGamma
ROMMRGB
DCIP3
LinearITUR_2020
ExtendedITUR_2020
ExtendedLinearITUR_2020
LinearDisplayP3
ExtendedDisplayP3
ExtendedLinearDisplayP3
ITUR_2100_PQ
ITUR_2100_HLG
DisplayP3_PQ
DisplayP3_HLG
ExtendedSRGB
LinearSRGB
ExtendedLinearSRGB
ExtendedGray
LinearGray
ExtendedLinearGray
Could not create vImageConverterRef: %s [%ld]
Could not convert image: %s [%ld]
kvImageRoiLargerThanInputBuffer
kvImageInvalidKernelSize
kvImageInvalidEdgeStyle
kvImageInvalidOffset_X
kvImageInvalidOffset_Y
kvImageMemoryAllocationError
kvImageNullPointerArgument
kvImageInvalidParameter
kvImageBufferSizeMismatch
kvImageUnknownFlagsBit
kvImageInternalError
kvImageInvalidRowBytes
kvImageInvalidImageFormat
kvImageColorSyncIsAbsent
kvImageOutOfPlaceOperationRequired
kvImageInvalidImageObject
kvImageInvalidCVImageFormat
kvImageUnsupportedConversion
kvImageCoreVideoIsAbsent
Auto
PVRTC
Compression info is not available for the selected compressor (%i)
Unsupported auto compression format: "
Using Compressor: %s
Compression format (%s) is not supported by the selected compressor (%s)
Output texture is more recent than the input texture
 but
Output texture
 was compressed with an older version of TextureConverter
 and
 compression options are compatible
%s, skipping.
Converting
Compressing
%s mipmap level %d/%d for slice %d/%d (width: %d, height: %d, depth: %d)...
%s mipmap level %d/%d for element %d/%d (width: %d, height: %d, depth: %d)...
%s mipmap level %d/%d for face %d/%d (width: %d, height: %d, depth: %d)...
%s mipmap level %d/%d (width: %d, height: %d, depth: %d)...
 RMS: %.2f, MSE: %.2f, PSNR: %.2f
Processing time: %.2fms (%.2f MPix/s)
RMS: %.2f, MSE: %.2f, PSNR: %.2f
, line 
, NVTT assertion failed "
Unsupported auto decompression format: (%s)
Compression format (%s) is not supported by the selected decompressor
Unsupported decompressed texture type for selected file type
Unsupported decompressed texture type
Error: File not found (%s)
KTXwriter
Source texture color space [%s] overridden by options [%s] 
Size:   
 mip-levels
Format: 
Colorspace: 
Alpha: Premultiplied
Compressed with TextureConverter: 
Compression options: 
Cubemap images require six faces.!
Cubemap
face
Volume
slice
Array
element
%s failed loading image %u = "%s"!
%s %s %u error: "%s" is not a 2D texture!
%s %s %u error: "%s" is not a square texture!
%s %s %u error: "%s" dimensions (%ux%u) do not match %s 0 (%ux%u)!
%s %s %u error: "%s" number of miplevels (%u) does not match %s 0 (%u)!
%s %s %u error: "%s" format (%s) does not match %s 0 (%s)!
%s %s %u error: "%s" isNormalMap (%s) does not match %s 0 (%s)!
True
False
%s %s %u error: "%s" number of channels (%u) does not match %s 0! (%u)
Mipmap
%s %s %u error: "%s" dimensions (%ux%u) do not match expected %s (%ux%u)>>%d = (%ux%u)!
Unsupported KTX Texture Format
(KTX) %s
Image content is uniform, resized image from (w: %d, h: %d, d: %d) to (w: %d, h: %d, d: %d)!
Resized image to (width: %d, height: %d, depth: %d)
alpha_mode
alpha_reference
alpha_to_coverage
alpha_weight
build_array
build_cubemap
build_volume
build_mips
channel_weighting
check_date
check_details
gamut_out
compare
compression_format
compression_quality
crop_uniform_content
decompressor
decompressed
decompression_format
disable_annotation
disable_multithreading
file_format
flip_x
flip_y
flip_z
gamma_out
max_extent
max_mipmaps
mipmap_filter
normal_map
output
progressbar
pvrtc_punch_through
metrics
resize_filter
resize_round_mode
rgbm_encoding
rgbm_range
scale_range
srgb_format
verbose
wrap_mode
Ignore
Premultiply
Decompress
Compare
Examine
Convert
Kaiser
Fastest
Highest
Normal
Production
NearestMultipleOfFour
NearestPowerOfTwo
NextMultipleOfFour
NextPowerOfTwo
PreviousMultipleOfFour
PreviousPowerOfTwo
Clamp
Mirror
Repeat
Allowed
Forced
Unused
Linear
Perceptual
Compression format is not supported by the selected compressor
Compression format is not supported by the selected decompressor
Use alpha to coverage
Use alpha weight when compressing
Decode KTX ASTC images as HDR
Crop images with uniform content
Disable KTX file annotation
Disable multithreading
Flip image along x-axis
Flip image along y-axis
Flip image along z-axis
Treat image as normal map
Display progress bar
Report error metrics
Use RGBM encoding
Scale image to entire color range
Use sRGB pixel format
Output processing time in milliseconds
Verbose output
Build a 2D texture array by combining input textures. Can not be combined with --
, --
 or --
Build a cubemap by combining input textures. Input textures should be specified in +X/-X/+Y/-Y/+Z/-Z order. Can not be combined with --
Build a volume by combining input textures. Can not be combined with --
Build a 2D mip mapped image by combining input textures. Only 2D source images can be combined and each image must be half the width and height of the previous image. Can not be combined with --
Compare the date/time of the source file to the output file (if present) & skip compression if the output file is newer. Can be combined with --
Compare the compression options and TextureConverter version against the output file (if present) & skip compression if not needed. Only supported for KTX files. Can be combined with --
Alpha reference for alpha to coverage
Range for RGBM encoding
Maximum image extent
Maximum number of mipmaps. If set to 0 uses the number of mipmaps in the intput texture
Alpha mode
Channel weighting
Compression format
Compression quality
Compressor library
Decompressor library
Decompression format
Color gamut of input texture.
Color gamut for output texture.
Format
Gamma for input image, "
" or float value.
Gamma for output texture, "
Filter for mipmap generation
Operation mode
File format
Output file path
Decompressed file path
Comparison file path
PVRTC punch through mode
Resize filter
Resize round mode
Wrap mode
TextureConverter
Usage options:
       TextureConverter --h : Detailed Usage
       TextureConverter -h  : TextureTool Compatibility Mode Usage
Missing input file path!
Can not combine --
 with --
 requires at least two input textures!
 requires at size input textures!
Unsupported number of arguments!
Unsupported mode "
Unsupported file format "
Unsupported alpha mode "
Unsupported mipmap filter "
Unsupported resize filter "
Unsupported resize round mode "
Unsupported wrap mode "
Unsupported Channel weighting mode "
Unsupported PVRTC punch through mode "
The value for the RGBM range must be greater than or equal to 1.0!
Unsupported gamut_in mode "
Unsupported compression format "
Unsupported compression quality "
Unsupported compressor "
Unsupported decompressor "
No output path specified!
No decompressed output path specified!
No comparison path specified!
No copy output path specified!
Unexpected mode!
Compressors
Decompressors
Uncompressed formats
ARM compression formats
ETC2COMP compression formats
ISPC compression formats
NVTT compression formats
PVRTC compression formats
PVRTC support in Metal is now deprecated. Usage of ASTC/ETC2/BC formats is recommended instead.
STB compression formats
Input file formats
Output file formats
Operation modes
Compression qualities
Alpha modes
Color gamuts
Channel weighting modes
Resize filters
Resize round modes
Mipmap filters
Wrap modes
PVRTC punch through modes
Examples
========
To compress a source file to ASTC4x4 at highest quality with mip-maps:
TextureConverter --compression_format=ASTC4x4 --compression_quality=Highest --output=Output.ktx2 Input.png
To compress a source file to BC1 at highest quality with no mip-maps:
TextureConverter --max_mipmaps=1 --compression_format=BC1 --compression_quality=Highest --output=Output.ktx2 Input.png
To build a cube map from multiple source files:
TextureConverter --mode=convert --build_cubemap --output=Cubemap.ktx2 X_Pos.png X_Neg.png Y_Pos.png Y_Neg.png Z_Pos.png Z_Neg.png
To build a volume texture from multiple source files and compress to BC1:
TextureConverter --compression_format=BC1 --build_volume --output=Volume.ktx2 Slice1.png Slice2.png Slice3.png Slice4.png
To decompress a source file:
TextureConverter --mode=decompress --output=Output.ktx2 Input.ktx2
To compare two images:
TextureConverter --mode=compare --compare=Input2.ktx2 Input1.ktx2
, %s
DDS file support only supports 2D images
Compression format %s not supported for DDS files
Could not create file %s
fileName != __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/StdStream.h
FILE *nv::fileOpen(const char *, const char *)
BGRA8
RGBA8
RGBA4
BGRA4
ABGR4
R5G6B5
B5G6R5
RGB5A1
BGR5A1
A1RGB5
A1BGR5
BGR10A2
RGB10A2
R16_Snorm
RGB16
RGB32
RGBA16
RGBA32
RG11B10
RGB9E5
ASTC4x2
ASTC4x2_HDR
ASTC4x4
ASTC4x4_HDR
ASTC5x4
ASTC5x4_HDR
ASTC5x5
ASTC5x5_HDR
ASTC6x5
ASTC6x5_HDR
ASTC6x6
ASTC6x6_HDR
ASTC8x4
ASTC8x4_HDR
ASTC8x5
ASTC8x5_HDR
ASTC8x6
ASTC8x6_HDR
ASTC8x8
ASTC8x8_HDR
ASTC10x5_HDR
ASTC10x6_HDR
ASTC10x8_HDR
ASTC10x10
ASTC10x10_HDR
ASTC12x10
ASTC12x10_HDR
ASTC12x12
ASTC12x12_HDR
EAC_R11
EAC_RGBA8
ETC2_RGB8
ETC2_RGB8A1
PVRTC_RGB_2BPP
PVRTC_RGB_4BPP
PVRTC_RGBA_2BPP
PVRTC_RGBA_4BPP
Unknown pixel format!
The selected pixelformat does not support sRGB
Unknown pixel format "
Unsupported KTX2 Image Format
Operation was successful
The data in the file is inconsistent with the spec.
The file is a pipe or named pipe.
The target file could not be opened.
The operation would exceed the max file size.
n error occurred while reading from the file.
An error occurred while seeking in the file.
File does not have enough data to satisfy request.
An error occurred while writing to the file.
GL operations resulted in an error.
The operation is not allowed in the current state.
A parameter value was not valid.
Requested key was not found.
Not enough memory to complete the operation.
Transcoding of block compressed texture failed.
The file not a KTX file.
The KTX file specifies an unsupported texture type.
Feature not included in in-use library or not yet implemented.
Library dependency (OpenGL or Vulkan) not linked into application.
Compression format %s not supported for %s files.
Unknown texture type
Apple TextureConverter 
// %s.h
#include <stdint.h>
#include "AppleTextureConverter.h"
const uint32_t %s_type = %s;
const uint32_t %s_format = %s;
const uint32_t %s_colorGamut = %s;
const uint32_t %s_width = %u;
const uint32_t %s_height = %u;
const uint32_t %s_depth = %u;
const uint32_t %s_numMipmaps = %u;
const uint32_t %s_numElements = %u;
const uint32_t %s_numChannels = %u;
Element
Face
Slice
uint8_t %s_Mip%u[%u] = { 
uint8_t %s_Mip%u%s%u[%u] = { 
0x%02x, 
static void SetSurface%s(const ATC_Texture* pTexture, uint32_t element, uint32_t level, uint32_t width, uint32_t height, uint32_t size, uint8_t* data)
ATC_Surface* surface = NULL;
ATC_GetSurface( NULL, pTexture, element, level, &surface );
surface->width = width;
surface->height = height;
surface->rowBytes = 0;
surface->data = data;
surface->size = size;
const ATC_Texture* Get%s()
const ATC_Texture* pTexture = NULL;
ATC_CreateTexture2D( NULL, %u, %u, %u, %s, %s, %s, &pTexture );
true
ATC_CreateTexture2DArray( NULL, %u, %u, %u, %u, %s, %s, %s, &pTexture );
ATC_CreateTexture3D( NULL, %u, %u, %u, %u, %s, %s, %s, &pTexture );
ATC_CreateTextureCube( NULL, %u, %u, %s, %s, %s, &pTexture );
SetSurface%s(pTexture, %u, %u, %u, %u, %u, %s_Mip%u
%s%u
return pTexture;
, build: %b %d %Y, %T
TextureConverter TextureTool Compatibility Mode
Usage: TextureConverter [-hl]
       TextureConverter -c <reference_image> <input_image>
       TextureConverter [-ms] [-e <encoder>] [-p <preview_file>] -o <output> [-f <format>] <input_image>
       TextureConverter [-m] [-e <encoder>] -o <output> [-f <format>] <input_image>
       first form:
         -h       Display this help menu.
         -l       List available encoders, individual encoder options, and file formats.
       second form:
         -c       Compare <input_image> to <reference_image> and report differences.
       third form:
         -m       Generate a complete mipmap chain from the input image.
         -s       Report numerical differences between <input_image> and the encoded image.
         -e       Encode texture levels with <encoder>.
         -p       Output a PNG preview of the encoded output to <preview_file>. Requires -e option.
         -o       Write processed image to <output>.
         -f       Set file <format> for <output> image.
For detailed usage: TextureConverter --h
Encoders:
  PVRTC
    --bits-per-pixel-2
    --bits-per-pixel-4
    --punchthrough-unused
    --punchthrough-allowed
    --punchthrough-forced
    --alpha-is-independent
    --alpha-is-opacity
    --channel-weighting-linear
    --channel-weighting-perceptual
  ASTC
    --block-width-4
    --block-width-5
    --block-width-6
    --block-width-8
    --block-width-10
    --block-width-12
    --compression-mode-veryfast
    --compression-mode-fast
    --compression-mode-medium
    --compression-mode-thorough
    --compression-mode-exhaustive
    --srgb-yes
    --srgb-no
    --block-height-4
    --block-height-5
    --block-height-6
    --block-height-8
    --block-height-10
    --block-height-12
Formats:
  KTX
bits-per-pixel-2
bits-per-pixel-4
punchthrough-unused
punchthrough-allowed
punchthrough-forced
alpha-is-independent
alpha-is-opacity
channel-weighting-linear
channel-weighting-perceptual
block-width-4
block-width-5
block-width-6
block-width-8
block-width-10
block-width-12
compression-mode-veryfast
compression-mode-fast
compression-mode-medium
compression-mode-thorough
compression-mode-exhaustive
srgb-yes
srgb-no
block-height-4
block-height-5
block-height-6
block-height-8
block-height-10
block-height-12
h?lke:d:p:o:mf:c:s:r:
%s: no input file specified
%s: no output file specified
%s: -p option requires that -e is set
%s: decode mode not supported
%s: no reference file specified
%s: compare does not produce an output file
%s: compare does not produce a preview file
%s: generate mipmaps cannot be used with compare
%s: compare mode not supported
--time
--metrics
ASTC
--compressor=Auto
--compression_format=ASTC
--srgb_format
--compression_quality=Fastest
--compression_quality=Normal
--compression_quality=Production
--compression_quality=Highest
--compression_format=PVRTC_RGB_2BPP
--compression_format=PVRTC_RGBA_2BPP
--compression_format=PVRTC_RGB_4BPP
--compression_format=PVRTC_RGBA_4BPP
--pvrtc_punch_through=Allowed
--pvrtc_punch_through=Forced
--pvrtc_punch_through=Unused
--channel_weighting=Perceptual
--channel_weighting=Linear
--mipmap_filter=Box
--max_mipmaps=0
--file_format=KTX
--output=
Texture-Converter TextureTool Compatibility Mode
Migrate to the Texture-Converter interface for greater control
TextureConverter --h for more details
Calling 
beginScope
endScope
MTLAccelerationStructureBoundingBoxGeometryDescriptor
MTLAccelerationStructureDescriptor
MTLAccelerationStructureGeometryDescriptor
MTLAccelerationStructureTriangleGeometryDescriptor
MTLArgument
MTLArgumentDescriptor
MTLArrayType
MTLAttribute
MTLAttributeDescriptor
MTLAttributeDescriptorArray
MTLBinaryArchiveDescriptor
MTLBlitPassDescriptor
MTLBlitPassSampleBufferAttachmentDescriptor
MTLBlitPassSampleBufferAttachmentDescriptorArray
MTLBufferLayoutDescriptor
MTLBufferLayoutDescriptorArray
MTLCaptureDescriptor
MTLCaptureManager
MTLCommandBufferDescriptor
MTLCompileOptions
MTLComputePassDescriptor
MTLComputePassSampleBufferAttachmentDescriptor
MTLComputePassSampleBufferAttachmentDescriptorArray
MTLComputePipelineDescriptor
MTLComputePipelineReflection
MTLCounterSampleBufferDescriptor
MTLDepthStencilDescriptor
MTLFunctionConstant
MTLFunctionConstantValues
MTLFunctionDescriptor
MTLHeapDescriptor
MTLIndirectCommandBufferDescriptor
MTLInstanceAccelerationStructureDescriptor
MTLIntersectionFunctionDescriptor
MTLIntersectionFunctionTableDescriptor
MTLLinkedFunctions
MTLPipelineBufferDescriptor
MTLPipelineBufferDescriptorArray
MTLPointerType
MTLPrimitiveAccelerationStructureDescriptor
MTLRasterizationRateLayerArray
MTLRasterizationRateLayerDescriptor
MTLRasterizationRateMapDescriptor
MTLRasterizationRateSampleArray
MTLRenderPassAttachmentDescriptor
MTLRenderPassColorAttachmentDescriptor
MTLRenderPassColorAttachmentDescriptorArray
MTLRenderPassDepthAttachmentDescriptor
MTLRenderPassDescriptor
MTLRenderPassSampleBufferAttachmentDescriptor
MTLRenderPassSampleBufferAttachmentDescriptorArray
MTLRenderPassStencilAttachmentDescriptor
MTLRenderPipelineColorAttachmentDescriptor
MTLRenderPipelineColorAttachmentDescriptorArray
MTLRenderPipelineDescriptor
MTLRenderPipelineReflection
MTLResourceStatePassDescriptor
MTLResourceStatePassSampleBufferAttachmentDescriptor
MTLResourceStatePassSampleBufferAttachmentDescriptorArray
MTLSamplerDescriptor
MTLSharedEventHandle
MTLSharedEventListener
MTLSharedTextureHandle
MTLStageInputOutputDescriptor
MTLStencilDescriptor
MTLStructMember
MTLStructType
MTLTextureDescriptor
MTLTextureReferenceType
MTLTileRenderPipelineColorAttachmentDescriptor
MTLTileRenderPipelineColorAttachmentDescriptorArray
MTLTileRenderPipelineDescriptor
MTLType
MTLVertexAttribute
MTLVertexAttributeDescriptor
MTLVertexAttributeDescriptorArray
MTLVertexBufferLayoutDescriptor
MTLVertexBufferLayoutDescriptorArray
MTLVertexDescriptor
MTLVisibleFunctionTableDescriptor
GPUEndTime
GPUStartTime
accelerationStructureCommandEncoder
accelerationStructureSizesWithDescriptor:
access
addCompletedHandler:
addComputePipelineFunctionsWithDescriptor:error:
addDebugMarker:range:
addPresentedHandler:
addRenderPipelineFunctionsWithDescriptor:error:
addScheduledHandler:
addTileRenderPipelineFunctionsWithDescriptor:error:
alignment
allocatedSize
allowDuplicateIntersectionFunctionInvocation
allowGPUOptimizedContents
alphaBlendOperation
areBarycentricCoordsSupported
areProgrammableSamplePositionsSupported
areRasterOrderGroupsSupported
argumentBuffersSupport
argumentDescriptor
argumentIndex
argumentIndexStride
arguments
arrayLength
arrayType
attributeIndex
attributeType
attributes
backFaceStencil
binaryArchives
binaryFunctions
blitCommandEncoder
blitCommandEncoderWithDescriptor:
blitPassDescriptor
borderColor
boundingBoxBuffer
boundingBoxBufferOffset
boundingBoxCount
boundingBoxStride
buffer
bufferAlignment
bufferBytesPerRow
bufferDataSize
bufferDataType
bufferIndex
bufferOffset
bufferPointerType
bufferStructType
buffers
buildAccelerationStructure:descriptor:scratchBuffer:scratchBufferOffset:
captureObject
clearBarrier
clearColor
clearDepth
clearStencil
colorAttachments
column
commandBuffer
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
commandQueue
commandTypes
commit
compareFunction
computeCommandEncoder
computeCommandEncoderWithDescriptor:
computeCommandEncoderWithDispatchType:
computeFunction
computePassDescriptor
concurrentDispatchThreadgroups:threadsPerThreadgroup:
concurrentDispatchThreads:threadsPerThreadgroup:
constantBlockAlignment
constantDataAtIndex:
constantValues
contents
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
copyAccelerationStructure:toAccelerationStructure:
copyAndCompactAccelerationStructure:toAccelerationStructure:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:toTexture:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
copyParameterDataToBuffer:offset:
counterSet
counterSets
counters
cpuCacheMode
currentAllocatedSize
dataSize
dataType
dealloc
debugLocation
debugSignposts
defaultCaptureScope
defaultRasterSampleCount
depth
depthAttachment
depthAttachmentPixelFormat
depthCompareFunction
depthFailureOperation
depthPlane
depthResolveFilter
depthStencilPassOperation
descriptor
destination
destinationAlphaBlendFactor
destinationRGBBlendFactor
device
didModifyRange:
dispatchQueue
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
dispatchThreadsPerTile:
dispatchType
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawableID
elementArrayType
elementIsArgumentBuffer
elementPointerType
elementStructType
elementTextureReferenceType
elementType
encodeSignalEvent:value:
encodeWaitForEvent:value:
encodedLength
encoderLabel
endEncoding
endOfEncoderSampleIndex
endOfFragmentSampleIndex
endOfVertexSampleIndex
enqueue
error
errorOptions
errorState
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
executeCommandsInBuffer:withRange:
fastMathEnabled
fillBuffer:range:value:
firstMipmapInTail
fragmentArguments
fragmentBuffers
fragmentFunction
frontFaceStencil
function
functionConstantsDictionary
functionCount
functionDescriptor
functionHandleWithFunction:
functionName
functionNames
functionType
functions
generateMipmapsForTexture:
geometryDescriptors
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
getDefaultSamplePositions:count:
getSamplePositions:count:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
groups
hasUnifiedMemory
hazardTrackingMode
heap
heapBufferSizeAndAlignWithLength:options:
heapOffset
heapTextureSizeAndAlignWithDescriptor:
height
horizontal
horizontalSampleStorage
imageblockMemoryLengthForDimensions:
imageblockSampleLength
index
indexBuffer
indexBufferIndex
indexBufferOffset
indexType
indirectComputeCommandAtIndex:
indirectRenderCommandAtIndex:
inheritBuffers
inheritPipelineState
init
initWithDispatchQueue:
initWithSampleCount:
initWithSampleCount:horizontal:vertical:
inputPrimitiveTopology
insertDebugCaptureBoundary
insertDebugSignpost:
insertLibraries
installName
instanceCount
instanceDescriptorBuffer
instanceDescriptorBufferOffset
instanceDescriptorStride
instancedAccelerationStructures
intersectionFunctionTableDescriptor
intersectionFunctionTableOffset
iosurface
iosurfacePlane
isActive
isAliasable
isAlphaToCoverageEnabled
isAlphaToOneEnabled
isBlendingEnabled
isCapturing
isDepth24Stencil8PixelFormatSupported
isDepthTexture
isDepthWriteEnabled
isFramebufferOnly
isHeadless
isLowPower
isPatchControlPointData
isPatchData
isRasterizationEnabled
isRemovable
isShareable
isSparse
isTessellationFactorScaleEnabled
kernelEndTime
kernelStartTime
label
languageVersion
layerAtIndex:
layerCount
layers
layouts
length
level
libraries
libraryType
line
linkedFunctions
loadAction
location
locationNumber
lodAverage
lodMaxClamp
lodMinClamp
logs
magFilter
makeAliasable
mapPhysicalToScreenCoordinates:forLayer:
mapScreenToPhysicalCoordinates:forLayer:
maxAnisotropy
maxArgumentBufferSamplerCount
maxAvailableSizeWithAlignment:
maxBufferLength
maxCallStackDepth
maxFragmentBufferBindCount
maxKernelBufferBindCount
maxTessellationFactor
maxThreadgroupMemoryLength
maxThreadsPerThreadgroup
maxTotalThreadsPerThreadgroup
maxTransferRate
maxVertexAmplificationCount
maxVertexBufferBindCount
memberByName:
members
memoryBarrierWithResources:count:
memoryBarrierWithResources:count:afterStages:beforeStages:
memoryBarrierWithScope:
memoryBarrierWithScope:afterStages:beforeStages:
minFilter
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
mipFilter
mipmapLevelCount
mutability
name
newAccelerationStructureWithDescriptor:
newAccelerationStructureWithSize:
newArgumentEncoderForBufferAtIndex:
newArgumentEncoderWithArguments:
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
newBinaryArchiveWithDescriptor:error:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newBufferWithLength:options:
newBufferWithLength:options:offset:
newCaptureScopeWithCommandQueue:
newCaptureScopeWithDevice:
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newCounterSampleBufferWithDescriptor:error:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newDepthStencilStateWithDescriptor:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newEvent
newFence
newFunctionWithDescriptor:completionHandler:
newFunctionWithDescriptor:error:
newFunctionWithName:
newFunctionWithName:constantValues:completionHandler:
newFunctionWithName:constantValues:error:
newHeapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newIntersectionFunctionTableWithDescriptor:
newIntersectionFunctionWithDescriptor:completionHandler:
newIntersectionFunctionWithDescriptor:error:
newLibraryWithData:error:
newLibraryWithFile:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithSource:options:error:
newLibraryWithURL:error:
newRasterizationRateMapWithDescriptor:
newRemoteBufferViewForDevice:
newRemoteTextureViewForDevice:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newSamplerStateWithDescriptor:
newSharedEvent
newSharedEventHandle
newSharedEventWithHandle:
newSharedTextureHandle
newSharedTextureWithDescriptor:
newSharedTextureWithHandle:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newTextureWithDescriptor:offset:
newTextureWithDescriptor:offset:bytesPerRow:
newVisibleFunctionTableWithDescriptor:
normalizedCoordinates
notifyListener:atValue:block:
objectAtIndexedSubscript:
offset
opaque
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeIndirectCommandBuffer:withRange:
outputURL
parallelRenderCommandEncoderWithDescriptor:
parameterBufferSizeAndAlign
parentRelativeLevel
parentRelativeSlice
parentTexture
patchControlPointCount
patchType
peerCount
peerGroupID
peerIndex
physicalGranularity
physicalSizeForLayer:
pixelFormat
pointerType
popDebugGroup
preprocessorMacros
present
presentAfterMinimumDuration:
presentAtTime:
presentDrawable:
presentDrawable:afterMinimumDuration:
presentDrawable:atTime:
presentedTime
preserveInvariance
pushDebugGroup:
rAddressMode
rasterSampleCount
rasterizationRateMap
rasterizationRateMapDescriptorWithScreenSize:
rasterizationRateMapDescriptorWithScreenSize:layer:
rasterizationRateMapDescriptorWithScreenSize:layerCount:layers:
readMask
readWriteTextureSupport
recommendedMaxWorkingSetSize
refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:
registryID
remoteStorageBuffer
remoteStorageTexture
removeAllDebugMarkers
renderCommandEncoder
renderCommandEncoderWithDescriptor:
renderPassDescriptor
renderTargetArrayLength
renderTargetHeight
renderTargetWidth
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
required
reset
resetCommandsInBuffer:withRange:
resetTextureAccessCounters:region:mipLevel:slice:
resetWithRange:
resolveCounterRange:
resolveCounters:inRange:destinationBuffer:destinationOffset:
resolveDepthPlane
resolveLevel
resolveSlice
resolveTexture
resourceOptions
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
resourceStatePassDescriptor
retainedReferences
rgbBlendOperation
rootResource
sAddressMode
sampleBuffer
sampleBufferAttachments
sampleCount
sampleCountersInBuffer:atSampleIndex:withBarrier:
sampleTimestamps:gpuTimestamp:
screenSize
serializeToURL:error:
setAccelerationStructure:atBufferIndex:
setAccelerationStructure:atIndex:
setAccess:
setAllowDuplicateIntersectionFunctionInvocation:
setAllowGPUOptimizedContents:
setAlphaBlendOperation:
setAlphaToCoverageEnabled:
setAlphaToOneEnabled:
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setArrayLength:
setBackFaceStencil:
setBarrier
setBinaryArchives:
setBinaryFunctions:
setBlendColorRed:green:blue:alpha:
setBlendingEnabled:
setBorderColor:
setBoundingBoxBuffer:
setBoundingBoxBufferOffset:
setBoundingBoxCount:
setBoundingBoxStride:
setBuffer:offset:atIndex:
setBufferIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
setBytes:length:atIndex:
setCaptureObject:
setClearColor:
setClearDepth:
setClearStencil:
setColorStoreAction:atIndex:
setColorStoreActionOptions:atIndex:
setCommandTypes:
setCompareFunction:
setComputeFunction:
setComputePipelineState:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setConstantBlockAlignment:
setConstantValue:type:atIndex:
setConstantValue:type:withName:
setConstantValues:
setConstantValues:type:withRange:
setCounterSet:
setCpuCacheMode:
setCullMode:
setDataType:
setDefaultCaptureScope:
setDefaultRasterSampleCount:
setDepth:
setDepthAttachment:
setDepthAttachmentPixelFormat:
setDepthBias:slopeScale:clamp:
setDepthClipMode:
setDepthCompareFunction:
setDepthFailureOperation:
setDepthPlane:
setDepthResolveFilter:
setDepthStencilPassOperation:
setDepthStencilState:
setDepthStoreAction:
setDepthStoreActionOptions:
setDepthWriteEnabled:
setDestination:
setDestinationAlphaBlendFactor:
setDestinationRGBBlendFactor:
setDispatchType:
setEndOfEncoderSampleIndex:
setEndOfFragmentSampleIndex:
setEndOfVertexSampleIndex:
setErrorOptions:
setFastMathEnabled:
setFormat:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentBytes:length:atIndex:
setFragmentFunction:
setFragmentSamplerState:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentSamplerStates:withRange:
setFragmentTexture:atIndex:
setFragmentTextures:withRange:
setFrontFaceStencil:
setFrontFacingWinding:
setFunction:atIndex:
setFunctionCount:
setFunctions:
setFunctions:withRange:
setGeometryDescriptors:
setGroups:
setHazardTrackingMode:
setHeight:
setImageblockSampleLength:
setImageblockWidth:height:
setIndex:
setIndexBuffer:
setIndexBufferIndex:
setIndexBufferOffset:
setIndexType:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setInheritBuffers:
setInheritPipelineState:
setInputPrimitiveTopology:
setInsertLibraries:
setInstallName:
setInstanceCount:
setInstanceDescriptorBuffer:
setInstanceDescriptorBufferOffset:
setInstanceDescriptorStride:
setInstancedAccelerationStructures:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTable:atIndex:
setIntersectionFunctionTableOffset:
setIntersectionFunctionTables:withBufferRange:
setIntersectionFunctionTables:withRange:
setKernelBuffer:offset:atIndex:
setLabel:
setLanguageVersion:
setLayer:atIndex:
setLevel:
setLibraries:
setLibraryType:
setLinkedFunctions:
setLoadAction:
setLodAverage:
setLodMaxClamp:
setLodMinClamp:
setMagFilter:
setMaxAnisotropy:
setMaxCallStackDepth:
setMaxFragmentBufferBindCount:
setMaxKernelBufferBindCount:
setMaxTessellationFactor:
setMaxTotalThreadsPerThreadgroup:
setMaxVertexAmplificationCount:
setMaxVertexBufferBindCount:
setMinFilter:
setMipFilter:
setMipmapLevelCount:
setMutability:
setName:
setNormalizedCoordinates:
setObject:atIndexedSubscript:
setOffset:
setOpaque:
setOpaqueTriangleIntersectionFunctionWithSignature:atIndex:
setOpaqueTriangleIntersectionFunctionWithSignature:withRange:
setOptions:
setOutputURL:
setPixelFormat:
setPreprocessorMacros:
setPreserveInvariance:
setPurgeableState:
setRAddressMode:
setRasterSampleCount:
setRasterizationEnabled:
setRasterizationRateMap:
setReadMask:
setRenderPipelineState:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setRenderTargetArrayLength:
setRenderTargetHeight:
setRenderTargetWidth:
setResolveDepthPlane:
setResolveLevel:
setResolveSlice:
setResolveTexture:
setResourceOptions:
setRetainedReferences:
setRgbBlendOperation:
setSAddressMode:
setSampleBuffer:
setSampleCount:
setSamplePositions:count:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setSamplerStates:withRange:
setScissorRect:
setScissorRects:count:
setScreenSize:
setSignaledValue:
setSize:
setSlice:
setSourceAlphaBlendFactor:
setSourceRGBBlendFactor:
setSpecializedName:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
setStageInputDescriptor:
setStartOfEncoderSampleIndex:
setStartOfFragmentSampleIndex:
setStartOfVertexSampleIndex:
setStencilAttachment:
setStencilAttachmentPixelFormat:
setStencilCompareFunction:
setStencilFailureOperation:
setStencilFrontReferenceValue:backReferenceValue:
setStencilReferenceValue:
setStencilResolveFilter:
setStencilStoreAction:
setStencilStoreActionOptions:
setStepFunction:
setStepRate:
setStorageMode:
setStoreAction:
setStoreActionOptions:
setStride:
setSupportAddingBinaryFunctions:
setSupportArgumentBuffers:
setSupportIndirectCommandBuffers:
setSwizzle:
setTAddressMode:
setTessellationControlPointIndexType:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorFormat:
setTessellationFactorScale:
setTessellationFactorScaleEnabled:
setTessellationFactorStepFunction:
setTessellationOutputWindingOrder:
setTessellationPartitionMode:
setTexture:
setTexture:atIndex:
setTextureType:
setTextures:withRange:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setThreadgroupMemoryLength:
setThreadgroupMemoryLength:atIndex:
setThreadgroupMemoryLength:offset:atIndex:
setThreadgroupSizeMatchesTileSize:
setTileBuffer:offset:atIndex:
setTileBufferOffset:atIndex:
setTileBuffers:offsets:withRange:
setTileBytes:length:atIndex:
setTileFunction:
setTileHeight:
setTileSamplerState:atIndex:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTileSamplerStates:withRange:
setTileTexture:atIndex:
setTileTextures:withRange:
setTileWidth:
setTriangleCount:
setTriangleFillMode:
setType:
setUrl:
setUsage:
setVertexAmplificationCount:viewMappings:
setVertexBuffer:
setVertexBuffer:offset:atIndex:
setVertexBufferOffset:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexBytes:length:atIndex:
setVertexDescriptor:
setVertexFunction:
setVertexSamplerState:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexSamplerStates:withRange:
setVertexStride:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setViewport:
setViewports:count:
setVisibilityResultBuffer:
setVisibilityResultMode:offset:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTable:atIndex:
setVisibleFunctionTables:withBufferRange:
setVisibleFunctionTables:withRange:
setWidth:
setWriteMask:
sharedCaptureManager
signaledValue
size
sourceAlphaBlendFactor
sourceRGBBlendFactor
sparseTileSizeInBytes
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
specializedName
stageInputAttributes
stageInputDescriptor
stageInputOutputDescriptor
startCaptureWithCommandQueue:
startCaptureWithDescriptor:error:
startCaptureWithDevice:
startCaptureWithScope:
startOfEncoderSampleIndex
startOfFragmentSampleIndex
startOfVertexSampleIndex
staticThreadgroupMemoryLength
status
stencilAttachment
stencilAttachmentPixelFormat
stencilCompareFunction
stencilFailureOperation
stencilResolveFilter
stepFunction
stepRate
stopCapture
storageMode
storeAction
storeActionOptions
stride
structType
supportAddingBinaryFunctions
supportArgumentBuffers
supportIndirectCommandBuffers
supports32BitFloatFiltering
supports32BitMSAA
supportsBCTextureCompression
supportsCounterSampling:
supportsDestination:
supportsDynamicLibraries
supportsFamily:
supportsFeatureSet:
supportsFunctionPointers
supportsPullModelInterpolation
supportsQueryTextureLOD
supportsRasterizationRateMapWithLayerCount:
supportsRaytracing
supportsShaderBarycentricCoordinates
supportsTextureSampleCount:
supportsVertexAmplificationCount:
swizzle
synchronizeResource:
synchronizeTexture:slice:level:
tAddressMode
tailSizeInBytes
tessellationControlPointIndexType
tessellationFactorFormat
tessellationFactorStepFunction
tessellationOutputWindingOrder
tessellationPartitionMode
texture
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
textureBarrier
textureBufferDescriptorWithPixelFormat:width:resourceOptions:usage:
textureCubeDescriptorWithPixelFormat:size:mipmapped:
textureDataType
textureReferenceType
textureType
threadExecutionWidth
threadGroupSizeIsMultipleOfThreadExecutionWidth
threadgroupMemoryAlignment
threadgroupMemoryDataSize
threadgroupMemoryLength
threadgroupSizeMatchesTileSize
tileArguments
tileBuffers
tileFunction
tileHeight
tileWidth
triangleCount
type
updateFence:
updateFence:afterStages:
updateTextureMapping:mode:indirectBuffer:indirectBufferOffset:
updateTextureMapping:mode:region:mipLevel:slice:
updateTextureMappings:mode:regions:mipLevels:slices:numRegions:
usage
useHeap:
useHeap:stages:
useHeaps:count:
useHeaps:count:stages:
useResource:usage:
useResource:usage:stages:
useResources:count:usage:
useResources:count:usage:stages:
usedSize
vertexArguments
vertexAttributes
vertexBuffer
vertexBufferOffset
vertexBuffers
vertexDescriptor
vertexFunction
vertexStride
vertical
verticalSampleStorage
visibilityResultBuffer
visibleFunctionTableDescriptor
waitForFence:
waitForFence:beforeStages:
waitUntilCompleted
waitUntilScheduled
width
writeCompactedAccelerationStructureSize:toBuffer:offset:
writeMask
NSArray
NSAutoreleasePool
NSBundle
NSCondition
NSDate
NSDictionary
NSError
NSNumber
NSObject
NSProcessInfo
NSSet
NSString
NSURL
NSValue
addObject:
activeProcessorCount
allBundles
allFrameworks
allObjects
alloc
appStoreReceiptURL
array
arrayWithObject:
arrayWithObjects:count:
automaticTerminationSupportEnabled
autorelease
beginActivityWithOptions:reason:
boolValue
broadcast
builtInPlugInsPath
builtInPlugInsURL
bundleIdentifier
bundlePath
bundleURL
bundleWithPath:
bundleWithURL:
characterAtIndex:
charValue
countByEnumeratingWithState:objects:count:
cStringUsingEncoding:
code
compare:
copy
count
dateWithTimeIntervalSinceNow:
descriptionWithLocale:
disableAutomaticTermination:
disableSuddenTermination
debugDescription
description
dictionary
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
domain
doubleValue
drain
enableAutomaticTermination:
enableSuddenTermination
endActivity:
environment
errorWithDomain:code:userInfo:
executablePath
executableURL
fileSystemRepresentation
fileURLWithPath:
floatValue
fullUserName
getValue:size:
globallyUniqueString
hash
hostName
infoDictionary
initFileURLWithPath:
initWithBool:
initWithBytes:objCType:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithChar:
initWithCoder:
initWithCString:encoding:
initWithDomain:code:userInfo:
initWithDouble:
initWithFloat:
initWithInt:
initWithLong:
initWithLongLong:
initWithObjects:count:
initWithObjects:forKeys:count:
initWithPath:
initWithShort:
initWithString:
initWithUnsignedChar:
initWithUnsignedInt:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithUnsignedShort:
initWithURL:
integerValue
intValue
isEqual:
isEqualToNumber:
isEqualToString:
isEqualToValue:
isiOSAppOnMac
isLoaded
isLowPowerModeEnabled
isMacCatalystApp
isOperatingSystemAtLeastVersion:
keyEnumerator
lengthOfBytesUsingEncoding:
load
loadAndReturnError:
localizedDescription
localizedFailureReason
localizedInfoDictionary
localizedRecoveryOptions
localizedRecoverySuggestion
localizedStringForKey:value:table:
lock
longValue
longLongValue
mainBundle
maximumLengthOfBytesUsingEncoding:
methodSignatureForSelector:
mutableBytes
nextObject
numberWithBool:
numberWithChar:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithLong:
numberWithLongLong:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objCType
object
objectAtIndex:
objectEnumerator
objectForInfoDictionaryKey:
objectForKey:
operatingSystem
operatingSystemVersion
operatingSystemVersionString
pathForAuxiliaryExecutable:
performActivityWithOptions:reason:usingBlock:
performExpiringActivityWithReason:usingBlock:
physicalMemory
pointerValue
preflightAndReturnError:
privateFrameworksPath
privateFrameworksURL
processIdentifier
processInfo
processName
processorCount
rangeOfString:options:
release
resourcePath
resourceURL
respondsToSelector:
retain
retainCount
setAutomaticTerminationSupportEnabled:
setProcessName:
sharedFrameworksPath
sharedFrameworksURL
sharedSupportPath
sharedSupportURL
shortValue
showPools
signal
string
stringValue
stringWithString:
stringWithCString:encoding:
stringByAppendingString:
systemUptime
thermalState
unload
unlock
unsignedCharValue
unsignedIntegerValue
unsignedIntValue
unsignedLongValue
unsignedLongLongValue
unsignedShortValue
URLForAuxiliaryExecutable:
userInfo
userName
UTF8String
valueWithBytes:objCType:
valueWithPointer:
wait
waitUntilDate:
v24@?0^v8^v16
//  astc.metal
//  ASTCRuntime
//  Created by Georgi Rakidov on 28/01/2020.
//  Copyright 2020 APPLE. All rights reserved.
#include <metal_stdlib>
// Including header shared between this Metal shader code and Swift/C code executing Metal API commands
//#import "ShaderTypes.h"
#define BLOCKS_IN_GROUP_COUNT 64
using namespace metal;
//FUNCTION CONSTANTS
////////////////////////////////////////
constant int astc_block_width       [[ function_constant(0) ]];
constant int astc_block_height      [[ function_constant(1) ]];
constant int astc_channels          [[ function_constant(2) ]];
constant uint astc_packed_mode      [[ function_constant(3) ]];
////////////////////////////////////////
#define swap(a, b) {auto t = a; a=b; b=t;}
struct astc_settings
    int width;
    int height;
    int blocks_count;
    int width_in_blocks;
struct astc_block_data
    uint8_t weights[64];
    uint8_t endpoints[8];
struct range_values
    int levels_m;
    int levels_m_rcp;
    int levels_e;
    int levels;
struct pixel_set
    threadgroup uint32_t* restrict pixels;
    
    int width;
    int height;
float4 get_pixel_f(threadgroup const uint32_t* pixels, int x, int y)
    return unpack_unorm4x8_to_float(pixels[y*astc_block_width + x])*255.0;
//#define get_pixel(t,p,x,y) (unpack_unorm4x8_to_##t(p[y*astc_block_width + x])*t(255.0))
template<typename T>
void get_pixel(T out[], threadgroup const uint32_t* pixels, int x, int y)
    if(is_same<T, float>::value)
    {
        float4 tmp = unpack_unorm4x8_to_float(pixels[y*astc_block_width + x])*255.0;
        for(int i=0;i<4;++i)out[i] = tmp[i];
    }
    else
    {
        half4 tmp =  unpack_unorm4x8_to_half(pixels[y*astc_block_width + x])*255.0;
        for(int i=0;i<4;++i)out[i] = tmp[i];
    }
template <typename T>
T sq(T v)
    return v*v;
template <typename T>
T clamp(T v, int a, int b)
    return clamp(v, (T)a, (T)b);
template <typename T>
T dot3(T a[3], T b[3])
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
template <typename T>
inline T dot4(T a[4], T b[4])
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
template <typename T>
void ssymv3(T a[4], T covar[10], T b[4])
    a[0] = covar[0] * b[0] + covar[1] * b[1] + covar[2] * b[2];
    a[1] = covar[1] * b[0] + covar[4] * b[1] + covar[5] * b[2];
    a[2] = covar[2] * b[0] + covar[5] * b[1] + covar[7] * b[2];
template <typename T>
void ssymv4(T a[4], T covar[10], T b[4])
    a[0] = covar[0] * b[0] + covar[1] * b[1] + covar[2] * b[2] + covar[3] * b[3];
    a[1] = covar[1] * b[0] + covar[4] * b[1] + covar[5] * b[2] + covar[6] * b[3];
    a[2] = covar[2] * b[0] + covar[5] * b[1] + covar[7] * b[2] + covar[8] * b[3];
    a[3] = covar[3] * b[0] + covar[6] * b[1] + covar[8] * b[2] + covar[9] * b[3];
uint32_t get_field(uint32_t input, int a, int b)
    return (input >> b) & ((1 << (a - b + 1)) - 1);
int get_bits(uint32_t value, int from, int to)
    return (value >> from) & ((1 << (to + 1 - from)) - 1);
uint32_t get_bit(uint32_t input, int a)
    return get_field(input, a, a);
struct astc_block
    int width; // 2..8 <= 2^3
    int height;
    int dual_plane;
    int weight_range;
    int color_component_selector;
    int partitions;
    int partition_id;
    int color_endpoint_pairs;
    int channels;
    int color_endpoint_modes[4];
    int endpoint_range;
    
    astc_block(const uint32_t mode)
    {
        // uniform parameters
        width = int(2 + get_field(mode, 15, 13)); // 2..8 <= 2^3
        height = int(2 + get_field(mode, 18, 16)); // 2..8 <= 2^3
        dual_plane = int(get_field(mode, 19, 19));// 0 or 1
        partitions = 1;
        
        int colorEndpointModes0 = int(get_field(mode, 7, 6) * 2 + 6); // 6, 8, 10 or 12
        color_endpoint_pairs = 1 + (colorEndpointModes0 / 4);
        channels = (colorEndpointModes0 > 8) ? 4 : 3;
        // varying parameters
        weight_range = get_bits(mode, 0, 3);  // 0..11 <= 2^4
        color_component_selector = get_bits(mode, 4, 5);  // 0..2 <= 2^2
        partition_id = 0;
        color_endpoint_modes[0] = get_bits(mode, 6, 7) * 2 + 6; // 6, 8, 10 or 12
        endpoint_range = get_bits(mode, 8, 12); // 0..20 <= 2^5
    }
void accumulate_stats(float stats[15], float4 rgba, int channels)
    stats[10] += rgba[0];
    stats[11] += rgba[1];
    stats[12] += rgba[2];
    stats[0] += rgba[0] * rgba[0];
    stats[1] += rgba[0] * rgba[1];
    stats[2] += rgba[0] * rgba[2];
    stats[4] += rgba[1] * rgba[1];
    stats[5] += rgba[1] * rgba[2];
    stats[7] += rgba[2] * rgba[2];
    if (channels == 4)
    {
        stats[13] += rgba[3];
        stats[3] += rgba[0] * rgba[3];
        stats[6] += rgba[1] * rgba[3];
        stats[8] += rgba[2] * rgba[3];
        stats[9] += rgba[3] * rgba[3];
    }
void covar_from_stats(float covar[10], float stats[15], int channels)
    covar[0] = stats[0] - stats[10 + 0] * stats[10 + 0] / stats[14];
    covar[1] = stats[1] - stats[10 + 0] * stats[10 + 1] / stats[14];
    covar[2] = stats[2] - stats[10 + 0] * stats[10 + 2] / stats[14];
    covar[4] = stats[4] - stats[10 + 1] * stats[10 + 1] / stats[14];
    covar[5] = stats[5] - stats[10 + 1] * stats[10 + 2] / stats[14];
    covar[7] = stats[7] - stats[10 + 2] * stats[10 + 2] / stats[14];
    if (channels == 4)
    {
        covar[3] = stats[3] - stats[10 + 0] * stats[10 + 3] / stats[14];
        covar[6] = stats[6] - stats[10 + 1] * stats[10 + 3] / stats[14];
        covar[8] = stats[8] - stats[10 + 2] * stats[10 + 3] / stats[14];
        covar[9] = stats[9] - stats[10 + 3] * stats[10 + 3] / stats[14];
    }
void compute_axis(float axis[4], float covar[10], const int powerIterations, int channels)
    float vec[4] = { 1, 1, 1, 1 };
    for (int i = 0; i < powerIterations; i++)
    {
        if (channels == 3) ssymv3(axis, covar, vec);
        if (channels == 4) ssymv4(axis, covar, vec);
        for (int p = 0; p < channels; p++) vec[p] = axis[p];
        if (i % 2 == 1) // renormalize every other iteration
        {
            float norm_sq = 0;
            for (int p = 0; p < channels; p++)
                norm_sq += axis[p] * axis[p];
            float rnorm = rsqrt(norm_sq);
            for (int p = 0; p < channels; p++)
            {
                vec[p] *= rnorm;
            }
        }
    }
    for (int p = 0; p < channels; p++) axis[p] = vec[p];
void process_block(threadgroup uint32_t* restrict pixels, texture2d<half> src,
                uint xx, uint yy, uint width, uint height,
                bool zero_based, float dc[], float dir[])
    float stats[15] = { 0 };
    
    for (uint y = 0; y < height; y++)
    {
        for (uint x = 0; x < width; x++)
        {
            uint2 crd(xx * width + x, yy * height + y);
            
            half4 h_rgba = src.read(crd);
            float4 rgba = float4(h_rgba);
            //rgba.xyz = 1.0;
            rgba.w = 1.0;
            //rgba = float4(1,1,1,1);
            float4 rgba255 = rgba * 255.0f;
            
            accumulate_stats(stats, rgba255, 4);
            
            uint packed = pack_float_to_unorm4x8(rgba);
            pixels[y*astc_block_width + x] = packed;
        }
    }
    
    //width and height here are dimensions of the commpressed block
    //this function must be called only for blocks with the same dimesion as the global grid
    stats[14] += height * width;
    
    float cov[10];
    
    if (zero_based)
    {
        for (int p = 0; p < 4; p++) stats[10 + p] = 0;
    }
    covar_from_stats(cov, stats, 4);
    for (int p = 0; p < 4; p++)
        dc[p] = stats[10 + p] / stats[14];
    
    //Should work fine with 2,4,6,8,10
    int powerIterations = 2;
    float eps = sq(0.001) * 1000;
    cov[0] += eps;
    cov[4] += eps;
    cov[7] += eps;
    cov[9] += eps;
    
    compute_axis(dir, cov, powerIterations, 4);
void process_block_fast(threadgroup uint32_t* restrict pixels, texture2d<half> src,
                        //uint xx, uint yy, uint width, uint height, float ep[])
                        uint xx, uint yy, uint width, uint height, thread half3& ep_min, thread half3& ep_max)
    //half3 ep_min,ep_max;
    half lum_min = 1000.0h;
    half lum_max = 0.0h;
    for (uint y = 0; y < height; y++)
    {
        for (uint x = 0; x < width; x++)
        {
            uint2 crd(xx * width + x, yy * height + y);
            
            half3 rgb = src.read(crd).xyz;
            half lum = dot(rgb, half3(0.2126h, 0.7152h, 0.0722h));
            if(lum_max < lum)
            {
                lum_max = lum;
                ep_max = rgb;
            }
            if(lum_min > lum)
            {
                lum_min = lum;
                ep_min = rgb;
            }
            
            uint packed = pack_half_to_unorm4x8(half4(rgb, 1.0));
            pixels[y*width + x] = packed;
        }
    }
    
    ep_min *= 255.0;
    ep_max *= 255.0;
void fill_range_values(range_values values[], int _range[])
    int range = *_range;
    int range_div3 = (range * 21846) >> 16;
    int range_mod3 = range - range_div3 * 3;
    int levels_m = max(2, 5 - range_mod3 * 2);
    int levels_e = max(0, range_mod3 + range_div3 - 1);
    if (range == 0) levels_m = 2;
    int levels_m_rcp = 0x10000 / 2 + 1;
    if (levels_m == 3) levels_m_rcp = 0x10000 / 3 + 1;
    if (levels_m == 5) levels_m_rcp = 0x10000 / 5 + 1;
    values->levels_e = levels_e;
    values->levels_m = levels_m;
    values->levels_m_rcp = levels_m_rcp;
    values->levels = levels_m << levels_e;
range_values get_range_values(int range)
    range_values values;
    fill_range_values(&values, &range);
    return values;
int code_value(int value, range_values range)
    int coded = value;
    if (range.levels_m != 2 && range.levels > 5)
    {
        int value2 = value;
        if (value >= range.levels / 2) value2 = (range.levels - 1) - value;
        int q = (value2 * range.levels_m_rcp) >> 16;
        int r = value2 - q * range.levels_m;
        coded = q + r * (1 << (range.levels_e - 1));
        coded = coded * 2 + ((value >= range.levels / 2) ? 1 : 0);
    }
    return coded;
void code_block(const astc_block block[], threadgroup astc_block_data* restrict block_data)
    int num_weights = block->width * block->height * (block->dual_plane ? 2 : 1);
    range_values weight_range_values = get_range_values(block->weight_range);
    for (int i = 0; i < num_weights; i++)
    {
        block_data->weights[i] = code_value(block_data->weights[i], weight_range_values);
    }
    range_values endpoint_range_values = get_range_values(block->endpoint_range);
    for (int i = 0; i < 2 * block->color_endpoint_pairs; i++)
    {
        block_data->endpoints[i] = code_value(block_data->endpoints[i], endpoint_range_values);
    }
bool can_store(int value, int bits)
    if (value < 0) return false;
    if (value >= 1 << bits) return false;
    return true;
//TODO: Could this be a lookup table?
int pack_block_mode(const astc_block block[])
    int block_mode = 0;
    int D = !!block->dual_plane;
    int H = !!(block->weight_range >= 6);
    int DH = D * 2 + H;
    int R = block->weight_range + 2 - ((H > 0) ? 6 : 0);
    R = R / 2 + R % 2 * 4;
    if (can_store(block->width - 4, 2) && can_store(block->height - 2, 2))
    {
        int B = block->width - 4;
        int A = block->height - 2;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | (R & 3);
    }
    if (can_store(block->width - 8, 2) && can_store(block->height - 2, 2))
    {
        int B = block->width - 8;
        int A = block->height - 2;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | 4 | (R & 3);
    }
    if (can_store(block->width - 2, 2) && can_store(block->height - 8, 2))
    {
        int A = block->width - 2;
        int B = block->height - 8;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | 8 | (R & 3);
    }
    if (can_store(block->width - 2, 2) && can_store(block->height - 6, 1))
    {
        int A = block->width - 2;
        int B = block->height - 6;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | 12 | (R & 3);
    }
    if (can_store(block->width - 2, 1) && can_store(block->height - 2, 2))
    {
        int B = block->width;
        int A = block->height - 2;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | 12 | (R & 3);
    }
    if (DH == 0 && can_store(block->width - 6, 2) && can_store(block->height - 6, 2))
    {
        int A = block->width - 6;
        int B = block->height - 6;
        block_mode = (B << 9) | 256 | (A << 5) | (R << 2);
    }
    return block_mode;
constant static const int range_table[][3] =
    //2^ 3^ 5^
    { 1, 0, 0 }, // 0..1
    { 0, 1, 0 }, // 0..2
    { 2, 0, 0 }, // 0..3
    { 0, 0, 1 }, // 0..4
    { 1, 1, 0 }, // 0..5
    { 3, 0, 0 }, // 0..7
    { 1, 0, 1 }, // 0..9
    { 2, 1, 0 }, // 0..11
    { 4, 0, 0 }, // 0..15
    { 2, 0, 1 }, // 0..19
    { 3, 1, 0 }, // 0..23
    { 5, 0, 0 }, // 0..31
    { 3, 0, 1 }, // 0..39
    { 4, 1, 0 }, // 0..47
    { 6, 0, 0 }, // 0..63
    { 4, 0, 1 }, // 0..79
    { 5, 1, 0 }, // 0..95
    { 7, 0, 0 }, // 0..127
    { 5, 0, 1 }, // 0..159
    { 6, 1, 0 }, // 0..191
    { 8, 0, 0 }, // 0..255
int get_levels(int range)
    return (1 + 2 * range_table[range][1] + 4 * range_table[range][2]) << range_table[range][0];
int sequence_bits(int count, int range)
    int bits = count * range_table[range][0];
    bits += (count * range_table[range][1] * 8 + 4) / 5;
    bits += (count * range_table[range][2] * 7 + 2) / 3;
    return bits;
void set_bits(thread uint32_t data[4], thread int* pos, int bits, uint32_t value)
    int pos_val = *pos;
    
    int shift_left = pos_val % 32;
    
    int index = pos_val / 32;
    data[index] |= value << shift_left;
    
    int shifted_bits = 32 - shift_left;
    if(shifted_bits < bits)
    {
        data[index+1] |= value >> shifted_bits;
    }
    
    *pos = pos_val + bits;
void pack_five_trits(uint32_t data[4], int sequence[5], thread int* pos, int n)
    int t[5];
    int m[5];
    for (int i = 0; i < 5; i++)
    {
        t[i] = sequence[i] >> n;
        m[i] = sequence[i] - (t[i] << n);
    }
    int C;
    if (t[1] == 2 && t[2] == 2)
    {
        C = 3 * 4 + t[0];
    }
    else if (t[2] == 2)
    {
        C = t[1] * 16 + t[0] * 4 + 3;
    }
    else
    {
        C = t[2] * 16 + t[1] * 4 + t[0];
    }
    int T;
    if (t[3] == 2 && t[4] == 2)
    {
        T = get_field(C, 4, 2) * 32 + 7 * 4 + get_field(C, 1, 0);
    }
    else
    {
        T = get_field(C, 4, 0);
        if (t[4] == 2)
        {
            T += t[3] * 128 + 3 * 32;
        }
        else
        {
            T += t[4] * 128 + t[3] * 32;
        }
    }
    uint32_t pack1 = 0;
    pack1 |= m[0];
    pack1 |= get_field(T, 1, 0) << n;
    pack1 |= m[1] << (2 + n);
    uint32_t pack2 = 0;
    pack2 |= get_field(T, 3, 2);
    pack2 |= m[2] << 2;
    pack2 |= get_field(T, 4, 4) << (2 + n);
    pack2 |= m[3] << (3 + n);
    pack2 |= get_field(T, 6, 5) << (3 + n * 2);
    pack2 |= m[4] << (5 + n * 2);
    pack2 |= get_field(T, 7, 7) << (5 + n * 3);
    set_bits(data, pos, 2 + n * 2, pack1);
    set_bits(data, pos, 6 + n * 3, pack2);
void pack_three_quint(uint32_t data[4], int sequence[3], thread int* pos, int n)
    int q[3];
    int m[3];
    for (int i = 0; i < 3; i++)
    {
        q[i] = sequence[i] >> n;
        m[i] = sequence[i] - (q[i] << n);
    }
    int Q;
    if (q[0] == 4 && q[1] == 4)
    {
        Q = get_field(q[2], 1, 0) * 8 + 3 * 2 + get_bit(q[2], 2);
    }
    else
    {
        int C;
        if (q[1] == 4)
        {
            C = (q[0] << 3) + 5;
        }
        else
        {
            C = (q[1] << 3) + q[0];
        }
        if (q[2] == 4)
        {
            Q = get_field(~C, 2, 1) * 32 + get_field(C, 4, 3) * 8 + 3 * 2 + get_bit(C, 0);
        }
        else
        {
            Q = q[2] * 32 + get_field(C, 4, 0);
        }
    }
    uint32_t pack = 0;
    pack |= m[0];
    pack |= get_field(Q, 2, 0) << n;
    pack |= m[1] << (3 + n);
    pack |= get_field(Q, 4, 3) << (3 + n * 2);
    pack |= m[2] << (5 + n * 2);
    pack |= get_field(Q, 6, 5) << (5 + n * 3);
    set_bits(data, pos, 7 + n * 3, pack);
void pack_integer_sequence(uint32_t output_data[4], threadgroup const uint8_t* sequence, int pos, int count, int range)
    int n = range_table[range][0];
    int bits = sequence_bits(count, range);
    int pos0 = pos;
    uint32_t data[5] = { 0 };
    if (range_table[range][1] == 1)
    {
        for (int j = 0; j < (count + 4) / 5; j++)
        {
            int temp[5] = { 0 };
            for (int i = 0; i < min(count - j * 5, 5); i++) temp[i] = sequence[j * 5 + i];
            pack_five_trits(data, temp, &pos, n);
        }
    }
    else if (range_table[range][2] == 1)
    {
        for (int j = 0; j < (count + 2) / 3; j++)
        {
            int temp[3] = { 0 };
            for (int i = 0; i < min(count - j * 3, 3); i++) temp[i] = sequence[j * 3 + i];
            pack_three_quint(data, temp, &pos, n);
        }
    }
    else
    {
        for (int i = 0; i < count; i++)
        {
            set_bits(data, &pos, n, sequence[i]);
        }
    }
    if (pos0 + bits < 96) data[3] = 0;
    if (pos0 + bits < 64) data[2] = 0;
    if (pos0 + bits < 32) data[1] = 0;
    data[(pos0 + bits) / 32] &= (1 << ((pos0 + bits) % 32)) - 1;
    for (int k = 0; k < 4; k++) output_data[k] |= data[k];
void pack_block(uint32_t data[4],
                const astc_block block[],
                threadgroup const astc_block_data* restrict block_data)
    data[0] = 0;
    data[1] = 0;
    data[2] = 0;
    data[3] = 0;
    int pos = 0;
    set_bits(data, &pos, 11, pack_block_mode(block));
    int num_weights = block->width * block->height * (block->dual_plane ? 2 : 1);
    int weight_bits = sequence_bits(num_weights, block->weight_range);
    int extra_bits = 0;
    set_bits(data, &pos, 2, block->partitions - 1);
    set_bits(data, &pos, 4, block->color_endpoint_modes[0]);
    
    if (block->dual_plane)
    {
        extra_bits += 2;
        int pos2 = 128 - weight_bits - extra_bits;
        set_bits(data, &pos2, 2, block->color_component_selector);
    }
    int config_bits = pos + extra_bits;
    int remaining_bits = 128 - config_bits - weight_bits;
    int num_cem_pairs = 0;
    for (int j = 0; j < block->partitions; j++) num_cem_pairs += 1 + block->color_endpoint_modes[j] / 4;
    int endpoint_range = -1;
    for (int range = 20; range>0; range--)
    {
        int bits = sequence_bits(2 * num_cem_pairs, range);
        if (bits <= remaining_bits)
        {
            endpoint_range = range;
            break;
        }
    }
    pack_integer_sequence(data, block_data->endpoints, pos, 2 * num_cem_pairs, endpoint_range);
    
    uint32_t rdata[4] = { 0, 0, 0, 0 };
    pack_integer_sequence(rdata, block_data->weights, 0, num_weights, block->weight_range);
    for (int i = 0; i < 4; i++) data[i] |= reverse_bits(rdata[3 - i]);
/*void compute_pca_endpoints(float ep[8], pixel_set block[],
                                const threadgroup uint32_t* restrict pixels,
                                int channels, float dc[4], float dir[4])
    float ext[2] = { 1000, -1000 };
    for (int y = 0; y < astc_block_height; y++)
    for (int x = 0; x < astc_block_width; x++)
    {
        float proj = 0;
        
        float4 rgba = get_pixel_f(pixels, x, y);
        for (int p = 0; p < channels; p++)
            proj += (rgba[p] - dc[p]) * dir[p];
        ext[0] = min(ext[0], proj);
        ext[1] = max(ext[1], proj);
    }
    if (ext[1] - 1.0f < ext[0])
    {
        ext[1] += 0.5f;
        ext[0] -= 0.5f;
    }
    
    for (int i = 0; i < 2; i++)
    for (int p = 0; p < channels; p++)
    {
        ep[p * 2 + i] = dc[p] + dir[p] * ext[i];
    }
template <typename T>
void compute_pca_endpoints_fast(T ep[8], pixel_set block[],
                                const threadgroup uint32_t* restrict pixels,
                                int channels, T dc[4], T dir[4])
    T ext[2] = { 1000, -1000 };
    for (int y = 0; y < astc_block_height; y++)
    for (int x = 0; x < astc_block_width; x++)
    {
        T proj = 0;
        
        T rgba[4];
        get_pixel(rgba, pixels, x, y);
        for (int p = 0; p < channels; p++)
            proj += (rgba[p] - dc[p]) * dir[p];
        ext[0] = min(ext[0], proj);
        ext[1] = max(ext[1], proj);
    }
    if (ext[1] - 1.0f < ext[0])
    {
        ext[1] += 0.5f;
        ext[0] -= 0.5f;
    }
    
    for (int i = 0; i < 2; i++)
    for (int p = 0; p < channels; p++)
    {
        ep[p * 2 + i] = dc[p] + dir[p] * ext[i];
    }
template <typename T>
int quant_endpoint(T value, int levels)
    return clamp(value / T(255.0) * (levels - 1) + T(0.5), 0, levels - 1);
template <typename T>
void quantize_endpoints_scale(const astc_block block[],
                              threadgroup astc_block_data* restrict block_data,
                              T endpoints[4])
    int ep_levels = get_levels(block->endpoint_range);
    T near[3];
    T far[3];
    for (int p = 0; p < 3; p++)
    {
        near[p] = endpoints[p * 2 + 0];
        far[p] = endpoints[p * 2 + 1];
    }
    for (int p = 0; p < 3; p++)
        block_data->endpoints[p] = quant_endpoint(far[p], ep_levels);
    T sq_norm = dot3(far, far) + 0.00001;
    T scale = dot3(far, near) / sq_norm;
    block_data->endpoints[3] = quant_endpoint(scale * 256, ep_levels);
    if (block->color_endpoint_modes[0] > 8)
    {
        block_data->endpoints[4] = quant_endpoint(endpoints[3 * 2 + 0], ep_levels);
        block_data->endpoints[5] = quant_endpoint(endpoints[3 * 2 + 1], ep_levels);
    }
bool compare_endpoints(threadgroup uint8_t* endpoints, const astc_block block[])
    int sum = 0;
    for (int p = 0; p < 3; p++)
    {
        sum += endpoints[p * 2 + 0];
        sum -= endpoints[p * 2 + 1];
    }
    
    if (-2 <= sum && sum <= 2)
    {
        // avoid being too close so we don't need proper rounding
        for (int p = 0; p < 3; p++)
        {
            if (sum<=0)
                endpoints[p * 2 + 0] = clamp(endpoints[p * 2 + 0] - 1, 0, get_levels(block->endpoint_range) - 1);
            if (sum>0)
                endpoints[p * 2 + 1] = clamp(endpoints[p * 2 + 1] - 1, 0, get_levels(block->endpoint_range) - 1);
        }
        sum = 0;
        for (int p = 0; p < 3; p++)
        {
            sum += endpoints[p * 2 + 0];
            sum -= endpoints[p * 2 + 1];
        }
    }
    return sum > 0;
void reorder_endpoints(threadgroup uint8_t* endpoints, const astc_block block[], bool blue_contract)
    if (compare_endpoints(endpoints, block) == !blue_contract)
    for (int p = 0; p < 4; p++) swap(endpoints[p * 2], endpoints[p * 2 + 1]);
template <typename T>
void quantize_endpoints_pair(const astc_block block[],
                             threadgroup astc_block_data* restrict block_data,
                             T endpoints[6])
    int ep_levels = get_levels(block->endpoint_range);
    bool blue_contract = true;
    T blue_compressed[6];
    for (int i = 0; i < 2; i++)
    {
        blue_compressed[i + 0] = endpoints[i + 0] * 2 - endpoints[i + 4];
        blue_compressed[i + 2] = endpoints[i + 2] * 2 - endpoints[i + 4];
        blue_compressed[i + 4] = endpoints[i + 4];
        if (blue_compressed[i + 0] < 0) blue_contract = false;
        if (blue_compressed[i + 0] > 255) blue_contract = false;
        if (blue_compressed[i + 2] < 0) blue_contract = false;
        if (blue_compressed[i + 2] > 255) blue_contract = false;
    }
    
    if (blue_contract)
    {
        for (int p = 0; p < 3; p++)
        {
            block_data->endpoints[p * 2 + 0] = quant_endpoint(blue_compressed[p * 2 + 0], ep_levels);
            block_data->endpoints[p * 2 + 1] = quant_endpoint(blue_compressed[p * 2 + 1], ep_levels);
        }
    }
    else
    {
        for (int p = 0; p < 3; p++)
        {
            block_data->endpoints[p * 2 + 0] = quant_endpoint(endpoints[p * 2 + 0], ep_levels);
            block_data->endpoints[p * 2 + 1] = quant_endpoint(endpoints[p * 2 + 1], ep_levels);
        }
    }
    
    if (block->color_endpoint_modes[0] > 8)
    {
        block_data->endpoints[6] = quant_endpoint(endpoints[3 * 2 + 0], ep_levels);
        block_data->endpoints[7] = quant_endpoint(endpoints[3 * 2 + 1], ep_levels);
    }
    reorder_endpoints(block_data->endpoints, block, blue_contract);
template<typename T>
void quantize_endpoints(const astc_block block[],
                        threadgroup astc_block_data* restrict block_data,
                        T endpoints[])
    bool zero_based = (block->color_endpoint_modes[0] % 4) == 2;
    if (zero_based)
    {
        quantize_endpoints_scale(block, block_data, endpoints);
    }
    else
    {
        quantize_endpoints_pair(block, block_data, endpoints);
    }
inline int clamp_unorm8(int value)
    if (value < 0) return 0;
    if (value > 255) return 255;
    return value;
#define apply_blue_contract(r, g, b) { r = (r + b) >> 1; g = (g + b) >> 1; }
template <typename T>
void decode_endpoints(T endpoints[8], uint8_t coded_endpoints[], int mode)
    if ((mode % 4) == 2)
    {
        int v0 = coded_endpoints[0];
        int v1 = coded_endpoints[1];
        int v2 = coded_endpoints[2];
        int v3 = coded_endpoints[3];
        int v4 = coded_endpoints[4];
        int v5 = coded_endpoints[5];
        endpoints[0] = (v0 * v3) >> 8;
        endpoints[1] = (v1 * v3) >> 8;
        endpoints[2] = (v2 * v3) >> 8;
        endpoints[3] = 0xFF;
        endpoints[4] = v0;
        endpoints[5] = v1;
        endpoints[6] = v2;
        endpoints[7] = 0xFF;
        if (mode > 8)
        {
            endpoints[3] = clamp_unorm8(v4);
            endpoints[7] = clamp_unorm8(v5);
        }
    }
    if ((mode % 4) == 0)
    {
        int v0 = coded_endpoints[0];
        int v1 = coded_endpoints[1];
        int v2 = coded_endpoints[2];
        int v3 = coded_endpoints[3];
        int v4 = coded_endpoints[4];
        int v5 = coded_endpoints[5];
        int v6 = coded_endpoints[6];
        int v7 = coded_endpoints[7];
        bool swap_endpoints = v1 + v3 + v5 < v0 + v2 + v4;
        if (swap_endpoints)
        {
            swap(v0, v1);
            swap(v2, v3);
            swap(v4, v5);
            swap(v6, v7);
            apply_blue_contract(v0, v2, v4);
            apply_blue_contract(v1, v3, v5);
        }
        endpoints[0] = clamp_unorm8(v0);
        endpoints[1] = clamp_unorm8(v2);
        endpoints[2] = clamp_unorm8(v4);
        endpoints[3] = 0xFF;
        endpoints[4] = clamp_unorm8(v1);
        endpoints[5] = clamp_unorm8(v3);
        endpoints[6] = clamp_unorm8(v5);
        endpoints[7] = 0xFF;
        if (mode > 8)
        {
            endpoints[3] = clamp_unorm8(v6);
            endpoints[7] = clamp_unorm8(v7);
        }
    }
template <typename T>
void dequant_decode_endpoints(T endpoints[8], const threadgroup uint8_t* block_endpoints, int mode, int range)
    int levels = get_levels(range);
    int num_cem_pairs = 1 + mode / 4;
    uint8_t dequant_endpoints[8];
    for (int k = 0; k < 2 * num_cem_pairs; k++)
    {
        dequant_endpoints[k] = (int)(((int)block_endpoints[k]) * 255.0 / (levels - 1) + 0.5);
    }
    decode_endpoints(endpoints, dequant_endpoints, mode);
template <typename T>
void opt_weights_fast(threadgroup const uint32_t* restrict scaled_pixels,
                 const astc_block block[],
                 T rec_endpoints[],
                 threadgroup astc_block_data* restrict block_data)
    const int channels = 4;
    T w_levels = get_levels(block->weight_range);
    T dir[4]; dir[3] = 0;
    for (int p = 0; p < channels; p++) dir[p] = rec_endpoints[4 + p] - rec_endpoints[0 + p];
    T sq_norm = dot4(dir, dir) + 0.00001;
    for (int p = 0; p < channels; p++) dir[p] *= (w_levels - 1) / sq_norm;
    
    for (int y = 0; y < astc_block_height; y++)
    for (int x = 0; x < astc_block_width; x++)
    {
        T pixel[4]; pixel[3] = 0;
        
        T rgba[4];
        get_pixel(rgba, scaled_pixels, x, y);
        for (int p = 0; p < channels; ++p)
            pixel[p] = rgba[p] - rec_endpoints[0 + p];
        
        T q = clamp(dot4(pixel, dir) + 0.5, 0.0, w_levels - 1.0);
        block_data->weights[y * astc_block_width + x] = q;
    }
void endpoints_and_weights(threadgroup uint32_t* restrict scaled_pixels,
                    const astc_block block[],
                    threadgroup astc_block_data* restrict block_data,
                    float dc[],
                    float dir[]
                    )
    pixel_set pset;
    pset.pixels = scaled_pixels;
    pset.width = block->width;
    pset.height = block->height;
    float ep[8];
    //compute_pca_endpoints(ep, &pset, scaled_pixels, 4, dc, dir);
    compute_pca_endpoints_fast(ep, &pset, scaled_pixels, 4, dc, dir);
    
    quantize_endpoints(block, block_data, ep);
    
    float rec_endpoints[8];
    dequant_decode_endpoints(rec_endpoints, block_data->endpoints,
                             block->color_endpoint_modes[0], block->endpoint_range);
    opt_weights_fast(scaled_pixels, block, rec_endpoints, block_data);
kernel void astc_encode(texture2d<half>            inTexture               [[ texture(0) ]],
                        device uint*               dst                     [[ buffer(0) ]],
                        constant astc_settings*    settings                [[ buffer(1) ]],
                        uint                       block_index_in_group    [[ thread_index_in_threadgroup ]],
                        uint                       block_id                [[ thread_position_in_grid ]],
                        threadgroup uchar*         tg_mem_pool             [[threadgroup(0)]])
    if(block_id >= (uint)settings->blocks_count)
        return;
    
    threadgroup uint32_t*         _pixels = (threadgroup uint32_t*)tg_mem_pool;
    uint pixels_offset = (BLOCKS_IN_GROUP_COUNT) * (astc_block_width * astc_block_height);
    threadgroup astc_block_data*  _block_data = (threadgroup astc_block_data*)(_pixels + pixels_offset);
    
    threadgroup uint32_t* restrict pixels = &_pixels[astc_block_width * astc_block_height * block_index_in_group];
    threadgroup astc_block_data* block_data = &_block_data[block_index_in_group];
    
    uint width_in_blocks = settings->width_in_blocks;
    uint2 block_crd(block_id % width_in_blocks, block_id / width_in_blocks);
    
    const astc_block block(astc_packed_mode);
    float dc[4];
    float dir[4];
    bool zero_based = (block.color_endpoint_modes[0] % 4) == 2;
    process_block(pixels, inTexture,
                  block_crd.x, block_crd.y,
                  astc_block_width, astc_block_height,
                  zero_based, dc, dir);
    
    endpoints_and_weights(pixels, &block, block_data, dc, dir);
    
    code_block(&block, block_data);
    
    uint32_t data[4];
    pack_block(data, &block, block_data);
    for (int i = 0; i < 4; i++)
    {
        int outIndex = (block_crd.y * width_in_blocks + block_crd.x) * 4 + i;
        dst[outIndex] = data[i];
    }
kernel void astc_encode_fast(texture2d<half>       inTexture               [[ texture(0) ]],
                        device uint*               dst                     [[ buffer(0) ]],
                        constant astc_settings*    settings                [[ buffer(1) ]],
                        uint                       block_index_in_group    [[ thread_index_in_threadgroup ]],
                        uint                       block_id                [[ thread_position_in_grid ]],
                        threadgroup uchar*         tg_mem_pool             [[threadgroup(0)]])
    threadgroup uint32_t*         _pixels = (threadgroup uint32_t*)tg_mem_pool;
    uint pixels_offset = (BLOCKS_IN_GROUP_COUNT) * (astc_block_width * astc_block_height);
    threadgroup astc_block_data*  _block_data = (threadgroup astc_block_data*)(_pixels + pixels_offset);
    
    threadgroup uint32_t* restrict pixels = &_pixels[astc_block_width * astc_block_height * block_index_in_group];
    threadgroup astc_block_data* block_data = &_block_data[block_index_in_group];
    
    uint width_in_blocks = settings->width_in_blocks;
    uint2 block_crd(block_id % width_in_blocks, block_id / width_in_blocks);
    half3 ep_min, ep_max;
    process_block_fast(pixels, inTexture, block_crd.x, block_crd.y,
                       astc_block_width, astc_block_height, ep_min, ep_max);
    
    float ep[8];
    for(int p=0;p<3;++p)
    {
        ep[p*2 + 0] = ep_min[p];
        ep[p*2 + 1] = ep_max[p];
    }
    
    ep[6] = 255.0;
    ep[7] = 255.0;
    
    const astc_block block(astc_packed_mode);
    quantize_endpoints(&block, block_data, ep);
    
    float rec_endpoints[8];
    dequant_decode_endpoints(rec_endpoints, block_data->endpoints,
                             block.color_endpoint_modes[0],
                             block.endpoint_range);
    
    opt_weights_fast(pixels, &block, rec_endpoints, block_data);
    
    code_block(&block, block_data);
    
    uint32_t data[4];
    pack_block(data, &block, block_data);
    for (int i = 0; i < 4; i++)
    {
        int outIndex = (block_crd.y * width_in_blocks + block_crd.x) * 4 + i;
        dst[outIndex] = data[i];
    }
///////////////////////////
//BC1/BC3 encoding
void swap_ints(int u[], int v[], int n)
    for (int i=0; i<n; i++)
    {
        int t = u[i];
        u[i] = v[i];
        v[i] = t;
    }
int stb__Mul8Bit(int a, int b)
  int t = a*b + 128;
  return (t + (t >> 8)) >> 8;
ushort stb__As16Bit(int r, int g, int b)
   return (stb__Mul8Bit(r,31) << 11) + (stb__Mul8Bit(g,63) << 5) + stb__Mul8Bit(b,31);
ushort enc_rgb565(float c[3])
    return stb__As16Bit((int)c[0], (int)c[1], (int)c[2]);
void dec_rgb565(float c[3], int p)
    int c2 = (p>>0)&31;
    int c1 = (p>>5)&63;
    int c0 = (p>>11)&31;
    c[0] = (c0<<3)+(c0>>2);
    c[1] = (c1<<2)+(c1>>4);
    c[2] = (c2<<3)+(c2>>2);
uint fast_quant(threadgroup const uint* pixels, int p0, int p1)
    float c0[3];
    float c1[3];
    dec_rgb565(c0, p0);
    dec_rgb565(c1, p1);
    float dir[3];
    for (int p=0; p<3; p++) dir[p] = c1[p]-c0[p];
    
    float sq_norm = 0;
    for (int p=0; p<3; p++) sq_norm += sq(dir[p]);
    float rsq_norm = 1.0/sq_norm;
    for (int p=0; p<3; p++) dir[p] *= rsq_norm*3;
    float bias = 0.5;
    for (int p=0; p<3; p++) bias -= c0[p]*dir[p];
    uint bits = 0;
    uint scaler = 1;
    for(int y=0;y<astc_block_height;++y)
    {
        for(int x=0;x<astc_block_height;++x)
        {
            float dot = 0;
            float4 rgba = get_pixel_f(pixels, x, y);
            for (int p=0; p<3; p++)
            {
                dot += rgba[p]*dir[p];
            }
            int q = clamp((int)(dot+bias), 0, 3);
            bits += q*scaler;
            scaler *= 4;
        }
    }
    
    return bits;
uint fix_qbits(uint qbits)
    const uint mask_01b = 0x55555555;
    const uint mask_10b = 0xAAAAAAAA;
    uint qbits0 = qbits&mask_01b;
    uint qbits1 = qbits&mask_10b;
    qbits = (qbits1>>1) + (qbits1 ^ (qbits0<<1));
    return qbits;
kernel void bc1_encode_fast(texture2d<half>       inTexture               [[ texture(0) ]],
                    device uint*               dst                     [[ buffer(0) ]],
                    constant astc_settings*    settings                [[ buffer(1) ]],
                    uint                       block_index_in_group    [[ thread_index_in_threadgroup ]],
                    uint                       block_id                [[ thread_position_in_grid ]],
                    threadgroup uchar*         tg_mem_pool             [[threadgroup(0)]])
    threadgroup uint32_t*         _pixels = (threadgroup uint32_t*)tg_mem_pool;
    threadgroup uint32_t* restrict pixels = &_pixels[astc_block_width * astc_block_height * block_index_in_group];
    
    uint width_in_blocks = settings->width_in_blocks;
    uint2 block_crd(block_id % width_in_blocks, block_id / width_in_blocks);
    
    float c0[3];
    float c1[3];
    half3 ep_min, ep_max;
    process_block_fast(pixels, inTexture, block_crd.x, block_crd.y,
                       astc_block_width, astc_block_height, ep_min, ep_max);
    
    for(int i=0;i<3;++i)
    {
        c0[i] = ep_min[i];
        c1[i] = ep_max[i];
    }
    
    int p[2];
    p[0] = enc_rgb565(c0);
    p[1] = enc_rgb565(c1);
    if (p[0]<p[1]) swap_ints(&p[0], &p[1], 1);
    
    uint data[2];
    data[0] = (1<<16)*p[1]+p[0];
    data[1] = fast_quant(pixels, p[0], p[1]);
    
    data[1] = fix_qbits(data[1]);
    
    int out_index = (block_crd.y * width_in_blocks + block_crd.x) * 2;
    dst[out_index] = data[0];
    dst[out_index + 1] = data[1];
#include <metal_stdlib>
using namespace metal;
kernel void
simpleDecompress(texture2d<float, access::read> inTexture  [[texture(0)]],
                 texture2d<uint, access::write> outTexture [[texture(1)]],
                 uint2                          gid        [[thread_position_in_grid]])
    float4 fColour = inTexture.read(gid);
    outTexture.write(uint4(fColour*255.0), gid);
kernel void
simpleDecompress16F(texture2d<float, access::read> inTexture  [[texture(0)]],
                    texture2d<half, access::write> outTexture [[texture(1)]],
                    uint2                          gid        [[thread_position_in_grid]])
    float4 fColour = inTexture.read(gid);
    outTexture.write(half4(fColour), gid);
simpleDecompress16F
simpleDecompress
Compression
EXR File format does not support compression format %s
EXR file format does not support multiple miplevels
EXR file format does not support non-2D textures
Bad checkerboard mod value %d (this isn't supposed to happen!)
Bad threshold mod value %d (this isn't supposed to happen!)
Bad mod value %d (this isn't supposed to happen!)
Bit replication is wrong! (%d, %d)
Bit extra replication is wrong! (%d, %d, %d, %d)
PVRTC requires a square image.
PVRTC requires a first mip level with a width/height >= 8.
PVRTC requires a width/height of power of two.
Could not create vImage_Buffer: %s [%ld]
Retaining %s
Could not load image as expected CGImage format!
Retaining unknown colorspace
ASTCENC_SUCCESS
ASTCENC_ERR_OUT_OF_MEM
ASTCENC_ERR_BAD_CPU_FLOAT
ASTCENC_ERR_BAD_PARAM
ASTCENC_ERR_BAD_BLOCK_SIZE
ASTCENC_ERR_BAD_PROFILE
ASTCENC_ERR_BAD_QUALITY
ASTCENC_ERR_BAD_FLAGS
ASTCENC_ERR_BAD_SWIZZLE
ASTCENC_ERR_BAD_CONTEXT
ASTCENC_ERR_NOT_IMPLEMENTED
ASTCENC_ERR_BAD_DECODE_MODE
WARNING: %s using %d thread%s due to thread creation error
EtcImage.cpp
Encode
m_paucEncodingBits == nullptr
effortblocks = %d
pass %u
    %u unfinished blocks
Finished %d Blocks out of %d
    %u iterated blocks
IterateThroughWorstBlocks
a_uiMultithreadingStride > 0
FindEncodingWarningTypesForCurFormat
ETC1
RGB8
SRGB8
RGB8A1
SRGB8A1
SRGBA8
SIGNED_R11
RG11
SIGNED_RG11
UNKNOWN
RunFirstPass
SetEncodingBits
GetError
EtcBlock4x4Encoding.h
m_fError >= 0.0f
thread constructor failed
InitFromSource
EtcBlock4x4.cpp
InitFromEtcEncodingBits
PLANAR
CalcPixelError
EtcBlock4x4Encoding.cpp
a_fDecodedAlpha >= 0.0f
PerformIteration
EtcBlock4x4Encoding_ETC1.cpp
!m_boolDone
CalculateSourceAverages
(fWeightSumLeft + fWeightSumRight) > 0.0f
(fWeightSumTop + fWeightSumBottom) > 0.0f
fWeightSumRight > 0.0f
fWeightSumLeft > 0.0f
fWeightSumBottom > 0.0f
fWeightSumTop > 0.0f
TryDifferential
encodingTry.m_fError < FLT_MAX
ptryBest1 != nullptr
ptryBest2 != nullptr
iDRed >= -4 && iDRed < 4
iDGreen >= -4 && iDGreen < 4
iDBlue >= -4 && iDBlue < 4
TryDifferentialHalf
iRed >= 0 && iRed <= 31
iGreen >= 0 && iGreen <= 31
iBlue >= 0 && iBlue <= 31
ptry < &a_phalf->m_atry[DifferentialTrys::Half::MAX_TRYS]
ptry->m_fError < FLT_MAX
TryIndividualHalf
iRed >= 0 && iRed <= 15
iGreen >= 0 && iGreen <= 15
iBlue >= 0 && iBlue <= 15
ptry < &a_phalf->m_atry[IndividualTrys::Half::MAX_TRYS]
m_mode == MODE_ETC1
iDRed2 >= -4 && iDRed2 < 4
iDGreen2 >= -4 && iDGreen2 < 4
iDBlue2 >= -4 && iDBlue2 < 4
InitFromEncodingBits
EtcBlock4x4Encoding_R11.cpp
CalculateR11
fMinRed <= fMaxRed
EtcBlock4x4Encoding_RG11.cpp
CalculateG11
fMinGrn <= fMaxGrn
EtcBlock4x4Encoding_RGB8.cpp
CalculateBaseColorsForTAndH
uiTransparentPixels < PIXELS
SetEncodingBits_T
m_mode == MODE_T
m_boolDiff == true
iRed2 < 0 || iRed2 > 31
SetEncodingBits_H
m_mode == MODE_H
iRed2 >= 0 && iRed2 <= 31
iGreen2 < 0 || iGreen2 > 31
SetEncodingBits_Planar
m_mode == MODE_PLANAR
iGreen2 >= 0 && iGreen2 <= 31
iBlue2 < 0 || iBlue2 > 31
EtcBlock4x4Encoding_RGB8A1.cpp
!m_boolOpaque
!m_boolTransparent
SetEncodingBits_ETC1
m_boolDiff
!m_boolPunchThroughPixels
m_boolTransparent
m_uiEncodingIterations == 0
EtcBlock4x4Encoding_RGBA8.cpp
CalculateA8
fMinAlpha <= fMaxAlpha
DifferentialTrys
EtcDifferentialTrys.cpp
a_uiRadius <= MAX_RADIUS
iRed1 >= (signed)(0 + a_uiRadius) && iRed1 <= (signed)(31 - a_uiRadius)
iRed2 >= (signed)(0 + a_uiRadius) && iRed2 <= (signed)(31 - a_uiRadius)
iGreen1 >= (signed)(0 + a_uiRadius) && iGreen1 <= (signed)(31 - a_uiRadius)
iGreen2 >= (signed)(0 + a_uiRadius) && iGreen2 <= (signed)(31 - a_uiRadius)
iBlue1 >= (signed)(0+a_uiRadius) && iBlue1 <= (signed)(31 - a_uiRadius)
iBlue2 >= (signed)(0 + a_uiRadius) && iBlue2 <= (signed)(31 - a_uiRadius)
IndividualTrys
EtcIndividualTrys.cpp
AddBlock
EtcSortedBlockList.cpp
m_uiAddedBlocks < m_uiImageBlocks
Sort
m_uiAddedBlocks == m_uiImageBlocks
pbucket->plinkLast->GetNext() == nullptr
%3d: e=%.3f rms=%.6f %u
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc6h/zohone.cpp
float ZOH::refineone(const Tile &, int, const FltEndpts *, char *)
data && availdatabits > 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc6h/bits.h
ZOH::Bits::Bits(const char *, int)
nbits >= 0 && nbits < 32
int ZOH::Bits::read(int)
bptr < bend
int ZOH::Bits::readone()
bw[10],bw[11],bw[12],bw[13],bw[14],bw[15],bx[3:0],gw[10],gw[11],gw[12],gw[13],gw[14],gw[15],gx[3:0],rw[10],rw[11],rw[12],rw[13],rw[14],rw[15],rx[3:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
bw[10],bw[11],bx[7:0],gw[10],gw[11],gx[7:0],rw[10],rw[11],rx[7:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
bw[10],bx[8:0],gw[10],gx[8:0],rw[10],rx[8:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
bx[9:0],gx[9:0],rx[9:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
data && maxdatabits > 0
ZOH::Bits::Bits(char *, int)
void ZOH::Bits::write(int, int)
void ZOH::Bits::writeone(int)
bptr < maxbits
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc6h/zohtwo.cpp
float ZOH::refinetwo(const Tile &, int, const FltEndpts *, char *)
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bz[1],bw[10],bx[3:0],gz[3:0],bz[0],gw[10],gx[3:0],gy[3:0],rw[10],rx[4:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
d[4:0],bz[3],gy[4],rz[3:0],bz[2],bz[0],ry[3:0],by[3:0],bz[1],bw[10],bx[3:0],gz[3:0],gw[10],gx[4:0],gy[3:0],gz[4],rw[10],rx[3:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
d[4:0],bz[3],bz[4],rz[3:0],bz[2:1],ry[3:0],by[3:0],bw[10],bx[4:0],gz[3:0],bz[0],gw[10],gx[3:0],gy[3:0],by[4],rw[10],rx[3:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bz[1],bx[4:0],gz[3:0],bz[0],gx[4:0],gy[3:0],gz[4],rx[4:0],bw[9:0],gw[9:0],rw[9:0],bz[4],by[4],gy[4],m[1:0]
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bz[1],bx[4:0],gz[3:0],bz[0],gx[4:0],gy[3:0],gz[4],rx[4:0],bz[4],bw[8:0],gy[4],gw[8:0],by[4],rw[8:0],m[4:0]
d[4:0],rz[5:0],ry[5:0],by[3:0],bz[1],bx[4:0],gz[3:0],bz[0],gx[4:0],gy[3:0],rx[5:0],bz[4:3],bw[7:0],gy[4],bz[2],gw[7:0],by[4],gz[4],rw[7:0],m[4:0]
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bz[1],bx[4:0],gz[3:0],gx[5:0],gy[3:0],gz[4],rx[4:0],bz[4],gz[5],bw[7:0],gy[4],gy[5],gw[7:0],by[4],bz[0],rw[7:0],m[4:0]
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bx[5:0],gz[3:0],bz[0],gx[4:0],gy[3:0],gz[4],rx[4:0],bz[4],bz[5],bw[7:0],gy[4],by[5],gw[7:0],by[4],bz[1],rw[7:0],m[4:0]
d[4:0],rz[5:0],ry[5:0],by[3:0],bx[5:0],gz[3:0],gx[5:0],gy[3:0],rx[5:0],bz[4],bz[5],bz[3],bw[6:0],gy[4],bz[2],by[5],gw[6:0],by[4],bz[1:0],rw[6:0],gz[5:4],gy[5],m[1:0]
d[4:0],rz[5:0],ry[5:0],by[3:0],bx[5:0],gz[3:0],gx[5:0],gy[3:0],rx[5:0],bz[4],bz[5],bz[3],gz[5],bw[5:0],gy[4],bz[2],by[5],gy[5],gw[5:0],by[4],bz[1:0],gz[4],rw[5:0],m[4:0]
in.getptr() == AVPCL::BITSIZE
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode0.cpp
void AVPCL::decompress_mode0(const char *, Tile &)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/bits.h
AVPCL::Bits::Bits(const char *, int)
void read_header(Bits &, IntEndptsRGB_2 *, int &, Pattern &, int &)
in.getptr() == patterns[pat_index].modebits
in.getptr() == 83
int AVPCL::Bits::read(int)
int AVPCL::Bits::readone()
compr_endpts.A[j] < 16
void compress_one(const IntEndptsRGB &, IntEndptsRGB_2 &)
compr_endpts.B[j] < 16
shapes[((shapeindex)&3)*4+((shapeindex)>>2)*64+(x)+(y)*16] == region
void swap_indices(IntEndptsRGB_2 *, int (*)[4], int)
orig_indices[i] != -1
float optimize_one(const Vector4 *, const float *, int, float, const IntEndptsRGB_2 &, const RegionPrec &, IntEndptsRGB_2 &)
new_indices[i] != -1
out.getptr() == AVPCL::BITSIZE
void emit_block(const IntEndptsRGB_2 *, int, const Pattern &, const int (*)[4], char *)
AVPCL::Bits::Bits(char *, int)
out.getptr() == 83
void write_header(const IntEndptsRGB_2 *, int, const Pattern &, Bits &)
void AVPCL::Bits::write(int, int)
void AVPCL::Bits::writeone(int)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode1.cpp
void AVPCL::decompress_mode1(const char *, Tile &)
void read_header(Bits &, IntEndptsRGB_1 *, int &, Pattern &, int &)
in.getptr() == 82
compr_endpts.A[j] < 64
void compress_one(const IntEndptsRGB &, IntEndptsRGB_1 &)
compr_endpts.B[j] < 64
void swap_indices(IntEndptsRGB_1 *, int (*)[4], int)
float optimize_one(const Vector4 *, const float *, int, float, const IntEndptsRGB_1 &, const RegionPrec &, IntEndptsRGB_1 &)
void emit_block(const IntEndptsRGB_1 *, int, const Pattern &, const int (*)[4], char *)
out.getptr() == 82
void write_header(const IntEndptsRGB_1 *, int, const Pattern &, Bits &)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode2.cpp
void AVPCL::decompress_mode2(const char *, Tile &)
void read_header(Bits &, IntEndptsRGB *, int &, Pattern &, int &)
in.getptr() == 99
void swap_indices(IntEndptsRGB *, int (*)[4], int)
float optimize_one(const Vector4 *, const float *, int, float, const IntEndptsRGB &, const RegionPrec &, IntEndptsRGB &)
void emit_block(const IntEndptsRGB *, int, const Pattern &, const int (*)[4], char *)
out.getptr() == 99
void write_header(const IntEndptsRGB *, int, const Pattern &, Bits &)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode3.cpp
void AVPCL::decompress_mode3(const char *, Tile &)
in.getptr() == 98
compr_endpts.A[j] < 128
compr_endpts.B[j] < 128
out.getptr() == 98
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode4.cpp
void AVPCL::decompress_mode4(const char *, Tile &)
void read_header(Bits &, IntEndptsRGBA *, int &, int &, int &, Pattern &, int &)
in.getptr() == 50
void assign_indices(const Tile &, int, int, int, IntEndptsRGBA *, const PatternPrec &, int (*)[4][4], float *)
orig_indices[j][i] != -1
float optimize_one(const Vector4 *, const float *, int, int, int, float, const IntEndptsRGBA &, const RegionPrec &, IntEndptsRGBA &)
float map_colors(const Vector4 *, const float *, int, int, int, const IntEndptsRGBA &, const RegionPrec &, float, int (*)[16])
void emit_block(const IntEndptsRGBA *, int, const Pattern &, const int (*)[4][4], int, int, char *)
out.getptr() == 50
void write_header(const IntEndptsRGBA *, int, const Pattern &, int, int, Bits &)
(indices[((indexmode == INDEXMODE_ALPHA_IS_2BITS) ? 1 : 0)][0][0] & (1<<(2-1))) == 0
void write_indices(const int (*)[4][4], int, int, Bits &)
(indices[((indexmode == INDEXMODE_ALPHA_IS_3BITS) ? 1 : 0)][0][0] & (1<<(3-1))) == 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode5.cpp
void AVPCL::decompress_mode5(const char *, Tile &)
in.getptr() == 66
out.getptr() == 66
(indices[((indexmode == INDEXMODE_ALPHA_IS_3BITS) ? 1 : 0)][0][0] & (1<<(2-1))) == 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode6.cpp
void AVPCL::decompress_mode6(const char *, Tile &)
void read_header(Bits &, IntEndptsRGBA_2 *, int &, Pattern &, int &)
in.getptr() == 65
void compress_one(const IntEndptsRGBA &, IntEndptsRGBA_2 &)
float optimize_one(const Vector4 *, const float *, int, float, const IntEndptsRGBA_2 &, const RegionPrec &, IntEndptsRGBA_2 &)
void emit_block(const IntEndptsRGBA_2 *, int, const Pattern &, const int (*)[4], char *)
out.getptr() == 65
void write_header(const IntEndptsRGBA_2 *, int, const Pattern &, Bits &)
(indices[0][0] & (1<<(4-1))) == 0
void write_indices(const int (*)[4], int, Bits &)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode7.cpp
void AVPCL::decompress_mode7(const char *, Tile &)
compr_endpts.A[j] < 32
compr_endpts.B[j] < 32
void swap_indices(IntEndptsRGBA_2 *, int (*)[4], int)
denom == 3 || denom == 7 || denom == 15
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_utils.cpp
static int AVPCL::Utils::lerp(int, int, int, int, int)
i >= 0 && i <= denom
bias >= 0 && bias <= denom/2
a >= 0 && b >= 0
static Vector4 AVPCL::Utils::lerp(Vector4::Arg, Vector4::Arg, int, int, int)
prec > 3
static int AVPCL::Utils::unquantize(int, int)
static int AVPCL::Utils::quantize(float, int)
unq <= 255
q >= 0 && q < (1 << prec)
(R==r) && (A==a)
static float AVPCL::Utils::premult(float, float)
Dumping stacktrace:
s_sig_handler_enabled != true
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/Debug.cpp
void nv::debug::enableSigHandler(bool)
s_sig_handler_enabled == true
void nv::debug::disableSigHandler()
  In: '%s'
  In: [%s] '%s'
Got signal %d, faulty address is %p, from %p
Got signal %d, faulty address is %p
Breakpoint hit.
Got signal %d
*** Assertion failed: %s
    On file: %s
    On function: %s
    On line: %d
*** Assertion failed: %s
    On file: %s
    On line: %d
base >= 2
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/StrLib.cpp
StringBuilder &nv::StringBuilder::number(int, int)
base <= 36
StringBuilder &nv::StringBuilder::number(uint, int)
size_hint != 0
StringBuilder &nv::StringBuilder::reserve(uint)
s != __null
StringBuilder &nv::StringBuilder::copy(const char *)
StringBuilder &nv::StringBuilder::copy(const char *, uint)
s.m_size == 0
StringBuilder &nv::StringBuilder::copy(const StringBuilder &)
!isNull()
void nv::Path::appendSeparator(char)
m_str != __null
void nv::Path::stripFileName()
void nv::Path::stripExtension()
str != __null
static const char *nv::Path::fileName(const char *)
static const char *nv::Path::extension(const char *)
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
count < 0xFFFF
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/StrLib.h
void nv::String::setRefCount(uint16)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/TextWriter.cpp
nv::TextWriter::TextWriter(Stream *)
s->isSaving()
channel >= 0 && channel < 4
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/ColorBlock.cpp
void nv::AlphaBlock4x4::init(const ColorBlock &, uint)
(rmask & gmask) == 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/DirectDrawSurface.cpp
void nv::DDSHeader::setPixelFormat(uint, uint, uint, uint, uint)
(rmask & bmask) == 0
(rmask & amask) == 0
(gmask & bmask) == 0
(gmask & amask) == 0
(bmask & amask) == 0
bitcount > 0 && bitcount <= 32
Flags: 0x%.8X
Height: %d
Width: %d
Depth: %d
Pitch: %d
Linear size: %d
Mipmap count: %d
Flags: 0x%.8X
FourCC: '%c%c%c%c' (0x%.8X)
Swizzle: '%c%c%c%c' (0x%.8X)
Bit count: %d
Red mask:   0x%.8X
Green mask: 0x%.8X
Blue mask:  0x%.8X
Alpha mask: 0x%.8X
Caps 1: 0x%.8X
Caps 2: 0x%.8X
Caps 3: 0x%.8X
Caps 4: 0x%.8X
DXGI Format: %u (%s)
Resource dimension: %u (%s)
Misc flag: %u
Array size: %u
NVIDIA Texture Tools %d.%d.%d
User Version: %d
R32G32B32A32_TYPELESS
R32G32B32A32_FLOAT
R32G32B32A32_UINT
R32G32B32A32_SINT
R32G32B32_TYPELESS
R32G32B32_FLOAT
R32G32B32_UINT
R32G32B32_SINT
R16G16B16A16_TYPELESS
R16G16B16A16_FLOAT
R16G16B16A16_UNORM
R16G16B16A16_UINT
R16G16B16A16_SNORM
R16G16B16A16_SINT
R32G32_TYPELESS
R32G32_FLOAT
R32G32_UINT
R32G32_SINT
R32G8X24_TYPELESS
D32_FLOAT_S8X24_UINT
R32_FLOAT_X8X24_TYPELESS
X32_TYPELESS_G8X24_UINT
R10G10B10A2_TYPELESS
R10G10B10A2_UNORM
R10G10B10A2_UINT
R11G11B10_FLOAT
R8G8B8A8_TYPELESS
R8G8B8A8_UNORM
R8G8B8A8_UNORM_SRGB
R8G8B8A8_UINT
R8G8B8A8_SNORM
R8G8B8A8_SINT
R16G16_TYPELESS
R16G16_FLOAT
R16G16_UNORM
R16G16_UINT
R16G16_SNORM
R16G16_SINT
R32_TYPELESS
D32_FLOAT
R32_FLOAT
R32_UINT
R32_SINT
R24G8_TYPELESS
D24_UNORM_S8_UINT
R24_UNORM_X8_TYPELESS
X24_TYPELESS_G8_UINT
R8G8_TYPELESS
R8G8_UNORM
R8G8_UINT
R8G8_SNORM
R8G8_SINT
R16_TYPELESS
R16_FLOAT
D16_UNORM
R16_UNORM
R16_UINT
R16_SNORM
R16_SINT
R8_TYPELESS
R8_UNORM
R8_UINT
R8_SNORM
R8_SINT
A8_UNORM
R1_UNORM
R9G9B9E5_SHAREDEXP
R8G8_B8G8_UNORM
G8R8_G8B8_UNORM
BC1_TYPELESS
BC1_UNORM
BC1_UNORM_SRGB
BC2_TYPELESS
BC2_UNORM
BC2_UNORM_SRGB
BC3_TYPELESS
BC3_UNORM
BC3_UNORM_SRGB
BC4_TYPELESS
BC4_UNORM
BC4_SNORM
BC5_TYPELESS
BC5_UNORM
BC5_SNORM
B5G6R5_UNORM
B5G5R5A1_UNORM
B8G8R8A8_UNORM
B8G8R8X8_UNORM
BUFFER
TEXTURE1D
TEXTURE2D
TEXTURE3D
Pixel Format:
Caps:
Version:
DX10 Header:
DDSCAPS2_CUBEMAP
DDSCAPS2_CUBEMAP_NEGATIVEZ
DDSCAPS2_CUBEMAP_POSITIVEZ
DDSCAPS2_CUBEMAP_NEGATIVEY
DDSCAPS2_CUBEMAP_POSITIVEY
DDSCAPS2_CUBEMAP_NEGATIVEX
DDSCAPS2_CUBEMAP_POSITIVEX
DDSCAPS2_CUBEMAP_ALL_FACES
DDSCAPS2_VOLUME
DDSCAPS_MIPMAP
DDSCAPS_TEXTURE
DDSCAPS_COMPLEX
DDPF_NORMAL
DDPF_ALPHAPREMULT
DDPF_PALETTEINDEXED8
DDPF_PALETTEINDEXED4
DDPF_PALETTEINDEXED2
DDPF_PALETTEINDEXED1
DDPF_ALPHA
DDPF_ALPHAPIXELS
DDPF_FOURCC
DDPF_LUMINANCE
DDPF_RGB
DDSD_MIPMAPCOUNT
DDSD_LINEARSIZE
DDSD_PITCH
DDSD_DEPTH
DDSD_HEIGHT
DDSD_WIDTH
DDSD_PIXELFORMAT
DDSD_CAPS
%d: %f
m_windowSize == 3
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/Filter.cpp
void nv::Kernel2::initEdgeDetection()
m_windowSize == 9
void nv::Kernel2::initBlendedSobel(const Vector4 &)
%d: 
 %6.4f
img != __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/FloatImage.cpp
void nv::FloatImage::initFrom(const Image *)
num <= 4
Image *nv::FloatImage::createImage(uint, uint) const
baseComponent + num <= m_componentCount
m_componentCount == 4
Image *nv::FloatImage::createImageGammaCorrect(float) const
src < m_componentCount
void nv::FloatImage::copyChannel(uint, uint)
dst < m_componentCount
baseComponent + 3 <= m_componentCount
void nv::FloatImage::normalize(uint)
baseComponent + 4 <= m_componentCount
void nv::FloatImage::transform(uint, const Matrix &, Vector4::Arg)
void nv::FloatImage::swizzle(uint, uint, uint, uint, uint)
r < 7 && g < 7 && b < 7 && a < 7
alpha < m_componentCount
FloatImage *nv::FloatImage::resize(const Filter &, uint, uint, WrapMode, uint) const
FloatImage *nv::FloatImage::resize(const Filter &, uint, uint, uint, WrapMode, uint) const
right - left <= windowSize
void nv::FloatImage::applyKernelY(const PolyphaseKernel &, int, int, uint, WrapMode, float *, int) const
void nv::FloatImage::applyKernelZ(const PolyphaseKernel &, int, int, uint, WrapMode, float *) const
void nv::FloatImage::applyKernelY(const PolyphaseKernel &, int, int, uint, uint, WrapMode, float *, int) const
.tga
.ppm
.hdr
.dds
image != __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/ImageIO.cpp
bool nv::ImageIO::saveFloat(const char *, Stream &, const FloatImage *, uint, uint)
unknown image type
bad png sig
bad bits_per_channel
multiple IHDR
bad IHDR len
too large
1/2/4/8/16-bit only
bad ctype
bad comp method
bad filter method
bad interlace method
0-pixel image
first not IHDR
invalid PLTE
tRNS after IDAT
tRNS before PLTE
bad tRNS len
tRNS with alpha
no PLTE
outofmem
outofdata
no IDAT
bad zlib header
no preset dict
bad compression
zlib corrupt
read past buffer
output buffer limit
bad sizes
bad codelengths
bad huffman code
bad dist
not enough pixels
invalid filter
invalid width
unsupported
bad offset
invalid
bad bpp
bad masks
not BMP
bad BMP
unknown BMP
BMP RLE
BMP JPEG/PNG
bad Image Descriptor
missing color table
unknown code
not GIF
no clear code
too many codes
illegal code in raster
not PSD
wrong version
wrong channel count
unsupported bit depth
wrong color format
corrupt
PICT
bad file
bad format
no SOI
no SOF
expected marker
bad DRI len
bad DQT type
bad DQT table
bad DHT header
bad COM len
bad APP len
unknown marker
bad code lengths
bad SOF len
only 8-bit
no header height
0 width
bad component count
bad H
bad V
bad TQ
bad DNL len
bad DNL height
bad SOS component count
bad SOS len
bad DC huff
bad AC huff
bad SOS
can't merge dc and ac
max value > 65535
#?RADIANCE
#?RADIANCE
#?RGBE
not HDR
FORMAT=32-bit_rle_rgbe
unsupported format
unsupported data layout
invalid decoded scanline length
bad palette
!s.isError()
bool saveTGA(Stream &, const Image *)
img->pixels() != __null
mem == __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/TgaFile.h
void nv::TgaFile::allocate()
%d %d
s.isLoading()
FloatImage *loadFloatDDS(Stream &)
s.isSaving()
bool saveFloatDDS(Stream &, const FloatImage *, uint, uint)
p->name == __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvthread/Thread.cpp
void nv::Thread::setName(const char *)
thread pool
worker %d
bitCount <= 32
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/CompressionOptions.cpp
void nvtt::CompressionOptions::setPixelFormat(uint, uint, uint, uint, uint)
maxMask > rmask
maxMask > gmask
maxMask > bmask
maxMask > amask
rsize <= 32 && gsize <= 32 && bsize <= 32 && asize <= 32
void nvtt::CompressionOptions::setPixelFormat(uint8, uint8, uint8, uint8)
alphaThreshold >= 0 && alphaThreshold < 256
void nvtt::CompressionOptions::setQuantization(bool, bool, bool, int)
output_channel >= 0 && output_channel < 4
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/CompressorETC.cpp
void nv::decompress_eac(const void *, Vector4 *, int)
input_channel >= 0 && input_channel < 4
float nv::compress_eac(Vector4 *, float *, int, int, bool, void *)
data.mode == ETC_Data::Mode_ETC1
table_idx < 8
void get_diff_subblock_palette(uint16, uint, Color32 *)
bool get_diff_subblock_palette(uint16, uint16, uint, Color32 *)
void get_abs_subblock_palette(uint16, uint, Color32 *)
int get_partition(const ETC_Data &, int, int)
data.mode == ETC_Data::Mode_Planar
void decode_etc2_planar(const ETC_Data &, Vector4 *)
options.onebit_alpha == false
float compress_etc(Vector4 *, float *, const ETC_Options &, void *)
success
Vector3 unpack_color_555(uint32, uint32)
float compress_etc_a1(Vector4 *, float *, const ETC_Options &, void *)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/CompressorRGB.cpp
virtual void nv::PixelFormatConverter::compress(nvtt::AlphaMode, uint, uint, uint, const float *, nvtt::TaskDispatcher *, const nvtt::CompressionOptions::Private &, const nvtt::OutputOptions::Private &)
arraySize == 1
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/Context.cpp
bool nvtt::Compressor::Private::outputHeader(nvtt::TextureType, int, int, int, int, int, bool, const CompressionOptions::Private &, const OutputOptions::Private &) const
m_count == 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/RefCounted.h
virtual nv::RefCounted::~RefCounted()
m_count > 0
uint nv::WeakProxy::release() const
uint nv::RefCounted::release() const
i < deviceCount()
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/cuda/CudaUtils.cpp
bool nv::cuda::setDevice(int)
Unsupported block format, cannot decompress image data!
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/Surface.cpp
bool nvtt::Surface::load(const char *, bool *)
bool nvtt::Surface::save(const char *, bool, bool) const
image resized %dx%d -> %dx%d (error=%f)
image can't be resized further (error=%f)
Unspecified error code
No error detected
Error (generic)
Unknown frame descriptor
Version not supported
Unsupported frame parameter
Frame requires too much memory for decoding
Corrupted block detected
Restored data doesn't match checksum
Unsupported parameter
Parameter is out of bound
Context should be init first
Allocation error : not enough memory
workSpace buffer is not large enough
Operation not authorized at current processing stage
tableLog requires too much memory : unsupported
Unsupported max Symbol Value : too large
Specified maxSymbolValue is too small
Dictionary is corrupted
Dictionary mismatch
Cannot create Dictionary from provided samples
Destination buffer is too small
Src size is incorrect
Operation on NULL destination buffer
Frame index is too large
An I/O error occurred when reading/seeking
Destination buffer is wrong
Source buffer is wrong
1.4.9
WARNING: The maximum dictionary size %u is too large compared to the source size %u! size(source)/size(dictionary) = %f, but it should be >= 10! This may lead to a subpar dictionary! We recommend training on sources at least 10x, and preferably 100x the size of the dictionary! 
Cover parameters incorrect
Cover must have at least one input file
dictBufferCapacity must be at least %u
Failed to allocate dmer map: out of memory
Building dictionary
Constructed dictionary of size %u
Incorrect parameters
Trying %u different sets of parameters
d=%u
Failed to initialize context
k=%u
Failed to allocate parameters
%u%%       
%79s
FASTCOVER parameters incorrect
FASTCOVER must have at least one input file
Incorrect splitPoint
Incorrect accel
Incorrect k
%70s
statistics ... 
Total samples size is too large (%u MB), maximum size is %u MB
Total number of training samples is %u and is invalid.
Total number of testing samples is %u and is invalid.
Training on %u samples of total size %u
Testing on %u samples of total size %u
Failed to allocate scratch buffers
Constructing partial suffix array
Computing frequencies
Breaking content into %u epochs of size %u
Failed to allocate buffers: out of memory
Failed to select dictionary
Total number of training samples is %u and is invalid
Total number of testing samples is %u and is invalid.
Failed to allocate scratch buffers 
Failed to allocate frequency table 
Not enough memory 
 HUF_buildCTable error 
warning : pathological dataset : literals are not compressible : samples are noisy or too regular 
FSE_normalizeCount error with offcodeCount 
FSE_normalizeCount error with matchLengthCount 
FSE_normalizeCount error with litLengthCount 
HUF_writeCTable error 
FSE_writeNCount error with offcodeNCount 
FSE_writeNCount error with matchLengthNCount 
FSE_writeNCount error with litlengthNCount 
not enough space to write RepOffsets 
warning : ZSTD_compressBegin_usingCDict failed 
warning : could not compress sample size %u 
 %u segments found, of total size %u 
list %u best segments 
%3u:%3u bytes at pos %8u, savings %7u bytes |
!  warning : selected content significantly smaller than requested (%u < %u) 
!  consider increasing the number of samples (total size : %u MB)
!  consider increasing selectivity to produce larger dictionary (-s%u) 
!  note : larger dictionaries are not necessarily better, test its efficiency on samples 
!  note : calculated dictionary significantly larger than requested (%u > %u) 
!  consider increasing dictionary size, or produce denser dictionary (-s%u) 
!  always test dictionary efficiency on real samples 
sample set too large : reduced to %u MB ...
sorting %u files of total size %u MB ...
finding patterns ... 
minimum ratio : %u 
%4.2f %% 
found %3u matches of length >= %i at pos %7u  
Selected dict at position %u, of length %u : saves %u (ratio: %.2f)  
KTXorientation
S=%c,T=%c,R=%c
KTXanimData
 / libktx 
Unidentified app
__default__
v4.0.__default__
v4.0
KTXcubemapIncomplete
KTXglFormat
KTXdxgiFormat__
KTXswizzle
KTXwriterScParams
KTXastcDecodeMode
IEXDEBUGTHROW
Attempt to set the number of threads in a thread pool to a negative value.
Not implemented on this platform
Cannot register image file attribute type "
". The type has already been registered.
Cannot create image file attribute of unknown type "
Error decompressing data (input data are shorter than expected).
Error decompressing data (input data are longer than expected).
Integer multiplication overflow.
Integer addition overflow.
Unexpected attribute type.
box2i
box2f
Image channel name cannot be an empty string.
Cannot find image channel "
chlist
channel name
Invalid 
: it is more than 
 characters long.
Bad chromaticities: white.y cannot be zero
Bad chromaticities: RGBtoXYZ matrix is degenerate
chromaticities
ZBack
Deep data provided to CompositeDeepScanLine is missing a Z channel
Deep data provided to CompositeDeepScanLine is missing an alpha channel
Deep data provided to CompositeDeepScanLine has a different displayWindow to previously provided data
X and/or y subsampling factors of "
" channel in framebuffer are not 1
Cannot composite scanline: total sample count on scanline exceeds limit set by CompositeDeepScanLine::setMaximumSampleCount()
compression
Unknown compression type
Frame buffer slice name cannot be an empty string.
Cannot find frame buffer slice "
The type of sample count slice should be UINT.
deepImageState
scanlineimage
tiledimage
deepscanline
Can't build a DeepScanLineInputFile from a type-mismatched part.
Expected a deep scanline file but the file is tiled.
Expected a deep scanline file but the file is not a deep image.
Version 
 not supported for deepscanline images in this version of the library
Deep scanline image size 
 exceeds maximum size
Bad type for channel 
 initializing deepscanline reader
Cannot read image file "
" channel of input file "
" are not compatible with the frame buffer's subsampling factors.
Invalid base pointer, please set a proper sample count slice.
No frame buffer specified as pixel data destination.
Tried to read scan line outside the image file's data window.
Tried to read scan line without knowing the sample counts, pleaseread the sample counts first.
Error reading pixel data from image file "
Scan line 
 is missing.
Unexpected part number 
, should be 
Unexpected data block y coordinate.
readPixelSampleCounts(rawPixelData,frameBuffer,
) called with incorrect start scanline - should be 
) called with incorrect end scanline - should be 
readPixelSampleCounts called with no valid frame buffer
Tried to read scan line sample counts outside the image file's data window.
Error reading sample count data from image file "
Invalid chunk size
unrecognized exception
This version of the library does not support 
the allocation of data with size  > 
 file unpacked size :
 file packed size   :
Incorrect size for decompressed data. Expected 
 got 
 bytes
Incorrect size for uncompressed data. Expected 
Unexpected part number.
Bad sampleCountTableDataSize read from chunk 
: expected 
 or less, got 
This version of the library does not
support the allocation of data with size  > 
 file table size    :
Deep scanline data corrupt at chunk 
 (sampleCountTableDataSize error)
Deep scanline sampleCount data corrupt at chunk 
 (negative sample count detected)
: pixel data only contains 
 bytes of data but table references at least 
 bytes of sample data
Cannot open image file "
Can't build a DeepTiledInputFile from a part of type 
Expected a deep tiled file but the file is not deep tiled.
Expected a deep tiled file but the file is not a deep image.
 not supported for deeptiled images in this version of the library
Deep tile size exceeds maximum permitted area
Level coordinate (
) is invalid.
Tile (
) is not a valid tile.
Tried to read a tile outside the image file's data window.
) is missing.
Unexpected tile x coordinate.
Unexpected tile y coordinate.
Unexpected tile x level number coordinate.
Unexpected tile y level number coordinate.
Error calling numLevels() on image file "
" (numLevels() is not defined for files with RIPMAP level mode).
Error calling levelWidth() on image file "
Error calling levelHeight() on image file "
Error calling numXTiles() on image file "
" (Argument is not in valid range).
Error calling numYTiles() on image file "
Error calling dataWindowForLevel() on image file "
Arguments not in valid range.
Error calling dataWindowForTile() on image file "
Bad sampleCountTableDataSize read from tile 
Deep scanline data corrupt at tile 
Deep tile sampleCount data corrupt at tile 
Deep scanline sampleCount data corrupt at tile 
Unknown LevelMode format.
size mismatch when reading deep tile: expected 
bytes of uncompressed data but got 
double
Row pointers and types mismatch in count
Only 1 and 3 channel encoding is supported
Error uncompressing DWA data (packed AC buffer too small).
Data compression (zlib) failed.
Error compressing RLE'd data.
Error uncompressing DWA data(truncated header).
Error uncompressing DWA data(truncated file).
Error uncompressing DWA data (corrupt header).
Error uncompressing DWA data (corrupt header file).
Error uncompressing DWA data (truncated file).
Invalid version of compressed data block
Error uncompressing DWA data(corrupt header).
Error uncompressing UNKNOWN data.
Data decompression (zlib) failed.
AC data corrupt.
Unknown AC Compression
DC data corrupt.
Error uncompressing RLE data.
RLE data corrupted
Bad DWA compression type detected
DWA data corrupt
Unhandled compression scheme case
green
Error uncompressing DWA data (truncated rule).
Error uncompressing DWA data (corrupt cscIdx rule).
Error uncompressing DWA data (corrupt scheme rule).
Error uncompressing DWA data (corrupt rule).
envmap
Error decoding Huffman table (Truncated table data).
Error decoding Huffman table (Run beyond end of table).
Huffman decode error (Invalid symbol in header).
Huffman decode error (Overrun).
Error choosing Huffman decoder implementation (insufficient number of bits).
Huffman decode error (Decoded an invalid symbol).
Huffman decode error (RLE code with no previous symbol).
Huffman decode error (Symbol run beyond expected output buffer length).
Huffman decode error (Invalid RLE length)
Huffman decode error (Compressed data remains after filling expected output buffer).
float
floatvector
Invalid pixel type.
File is not an image file.
Cannot read version 
 image files.  Current file format version is 
The file format version number's flag field contains unrecognized flags.
Image attribute name cannot be an empty string.
dwaCompressionLevel
Cannot assign a value of type "
" to image attribute "
" of type "
Cannot find image attribute "
displayWindow
dataWindow
pixelAspectRatio
screenWindowCenter
screenWindowWidth
channels
lineOrder
is not a supported image type.
The following are supported: 
 or 
view
We can only process version 1
chunkCount
tiles
preview
Invalid display window in image header.
Invalid data window in image header.
The width of the data window exceeds the maximum width of 
pixels.
The height of the data window exceeds the maximum height of 
chunkCount exceeds maximum area of 
 pixels.
Invalid pixel aspect ratio in image header.
Invalid screen window width in image header.
Headers in a multipart file should have name attribute.
Headers in a multipart file should have type attribute.
Tiled image has no tile description attribute.
Invalid tile size in image header.
The width of the tiles exceeds the maximum width of 
Invalid level mode in image header.
Invalid level rounding mode in image header.
Invalid line order in image header.
Unknown compression type in image header.
Compression type in header not valid for deep data
Missing or empty channel list in header
Pixel type of "
" image channel is invalid.
The x subsampling factor for the "
" channel is not 1.
The y subsampling factor for the "
" channel is invalid.
The minimum x coordinate of the image's data window is not a multiple of the x subsampling factor of the "
" channel.
The minimum y coordinate of the image's data window is not a multiple of the y subsampling factor of the "
Number of pixels per row in the image's data window is not a multiple of the x subsampling factor of the "
Number of pixels per column in the image's data window is not a multiple of the y subsampling factor of the "
attribute name
attribute type name
Invalid size field in header attribute
Unexpected type for image attribute "
Invalid pixel aspect ratio
Error in Huffman-encoded data (decoded data are shorter than expected).
Error in Huffman-encoded data (invalid code table size).
Error in Huffman-encoded data (unexpected end of code table data).
Error in Huffman-encoded data (code table is longer than expected).
Error in header for Huffman-encoded data (invalid number of bits).
Error in Huffman-encoded data (invalid code table entry).
Error in Huffman-encoded data (invalid code).
Error in Huffman-encoded data (decoded data are longer than expected).
custom
MurmurHash3_32
MurmurHash3_64
Unrecognized IDmanifest version
Bad common string length in IDmanifest string table
IDManifest too small
Bad mapping table entry in IDManifest
ID manifest contains multiple entries for the same ID
Bad string index in IDManifest
IDManifest decompression (zlib) failed.
IDManifest decompression (zlib) failed: mismatch in decompressed data size
Error - IDManifest size error
ID manifest compression failed
attempt to change number of components in manifest once entries have been added
Cannot insert single component attribute into manifest with multiple components
mismatch between number of components in manifest and number of components in inserted entry
Cannot compute hash: unknown hashing scheme
not enough components inserted into previous entry in ID table before inserting new entry
attempt to insert too many strings into entry, or attempt to insert text before ID integer
Internal error: too many strings in component
IDManifest too small for string size
IDManifest too small for string
IDManifest too small for variable length integer
IDManifest too small for string list size
idmanifest
Invalid size field reading idmanifest attribute
Invalid pixel type
Non-image files must have a 'type' attribute
InputFile cannot handle parts of type 
Unknown pixel data type.
Tried to read a raw scanline from a deep image.
Tried to read a raw scanline from a tiled image.
Tried to read a raw tile from a scanline-based image.
Error reading tile data from image file "
Cannot get a TiledInputFile pointer from an InputFile that is not tiled.
Attempt to perform a memory-mapped read on a file that is not memory mapped.
Invalid key code film manufacturer code (must be between 0 and 99).
Invalid key code film type (must be between 0 and 99).
Invalid key code prefix (must be between 0 and 999999).
Invalid key code count (must be between 0 and 9999).
Invalid key code perforation offset (must be between 0 and 119).
Invalid key code number of perforations per frame (must be between 1 and 15).
Invalid key code number of perforations per count (must be between 20 and 120).
keycode
m33f
m33d
m44f
m44d
Unknown pixel type.
unsupported header type to get chunk offset table size
3.2.1
wstring_convert: from_bytes error
 MultiPartInputFile::header called with invalid part 
 on file with 
 parts
Multipart files cannot have the tiled bit set
Files must contain at least one header
Every header in a multipart file should have a type
Every header in a multipart file should have a name
Header name 
 is not a unique name.
 has non-conforming shared attributes: 
cannot reconstruct incomplete file: part with missing type
cannot reconstruct incomplete file: part with unknown type 
Unknown compression method in chunk offset reconstruction
part number out of range
part not tiled
invalid tile coordinates
y out of range
chunk index out of range
File pointer overflow during reconstruction
MultiPartInputFile::getPart called with invalid part 
MultiPartInputFile::partComplete called with invalid part 
Cannot copy the value of an image file attribute of type "
" to an attribute of type "
Can't build a OutputFile from a type-mismatched part.
Cannot initialize output part "
" channel of output file "
" is not compatible with the frame buffer's pixel type.
No frame buffer specified as pixel data source.
Tried to write more scan lines than specified by the data window.
Failed to write pixel data to image file "
Cannot copy pixels from image file "
" to image file "
". The input file is tiled, but the output file is not. Try using TiledOutputFile::copyPixels instead.
". The files have different data windows.
Quick pixel copy from image file "
" failed. The files have different line orders.
" failed. The files use different compression methods.
" failed.  The files have different channel lists.
" failed. "
" already contains pixel data.
Cannot update preview image pixels. File "
" does not contain a preview image.
Cannot update preview image pixels for file "
Cannot overwrite scan line 
. The scan line has not yet been stored in file "
Cannot determine current file position (%T).
PIZ compressed data too short
Error in header for PIZ-compressed data (invalid bitmap size).
Error in header for PIZ-compressed data (invalid array length).
Invalid dimensions in Preview Image Attribute
Mismatch between Preview Image Attribute size and dimensions
rational
No frame buffer was specified as the pixel data source for image file "
No frame buffer was specified as the pixel data destination for image file "
ScanLine size too large for RleCompressor
Data decoding (rle) failed.
maximum bytes per scanline exceeds maximum permissible size
Failed to allocate memory for scanline buffers
Can't build a ScanLineInputFile from a type-mismatched part.
Reading raw pixel data to a buffer is not supported for memory mapped streams.
IIF mode called with incorrect channel pattern
Invalid scan line 
 requested or missing.
Unexpected data block length.
originalDataWindow
worldToCamera
worldToNDC
sensorCenterOffset
sensorOverallDimensions
sensorPhotositePitch
sensorAcquisitionRectangle
ascFramingDecisionList
xDensity
longitude
latitude
altitude
cameraMake
cameraModel
cameraSerialNumber
cameraFirmwareVersion
cameraUuid
cameraLabel
cameraCCTSetting
cameraTintSetting
cameraColorBalance
isoSpeed
expTime
shutterAngle
captureRate
lensMake
lensModel
lensSerialNumber
lensFirmwareVersion
nominalFocalLength
pinholeFocalLength
effectiveFocalLength
entrancePupilOffset
aperture
tStop
focus
owner
comments
capDate
utcOffset
keyCode
timeCode
framesPerSecond
imageCounter
reelName
whiteLuminance
adoptedNeutral
renderingTransform
lookModTransform
wrapmodes
multiView
idManifest
Unexpected end of file.
(string)
Early end of file: read 
 out of 
 requested bytes.
File output failed.
stringvector
Invalid size field reading stringvector attribute
tiledesc
Can't build a TiledInputFile from a type-mismatched part.
Expected a tiled file but the file is not tiled.
File is not a regular tiled image.
TiledInputFile used for non-tiledimage part.
Tile size too large for OpenEXR format
File contains an invalid tile
rawTileData read the wrong tile
Unexpected tile block length.
Unexpected part number in readNextTileData
Argument not in valid range.
Maximum number of tiles exceeded
Bad level mode getting chunk offset table size
Can't build a TiledOutputFile from a type-mismatched part.
All channels in a tiled file must havesampling (1,1).
Tile coordinates are invalid.
Cannot perform a quick pixel copy from image file "
".  The output file is tiled, but the input file is not.  Try using OutputFile::copyPixels() instead.
" failed. The files have different tile descriptions.
" (numLevels() is not defined for RIPMAPs).
Cannot overwrite tile (
). The tile has not yet been stored in file "
Attempt to write tile (
) more than once.
Invalid tile description
Cannot open file "
" for writing.  Tiled image files do not support subsampled chroma channels.
Bad initialisation of TileOffsets object
Invalid deep tile size
Invalid tile size
Wrong offset count, not able to read from this array
Bad level mode getting tile order
Cannot set hours field in time code. New value is out of range.
Cannot set minutes field in time code. New value is out of range.
Cannot set seconds field in time code. New value is out of range.
Cannot set frame field in time code. New value is out of range.
Cannot extract binary group from time code user data.  Group number is out of range.
timecode
Data compression failed.
Data decompression failed.
Missing list to compute size
Expected output pointer
Invalid / unhandled type '%s' for attribute '%s', unable to compute size
Invalid output pointer passed to find_by_name
Invalid name passed to find_by_name
Invalid list pointer passed to find_by_name
Invalid type to add_by_type
Entry '%s' already in list but with different type ('%s' vs requested '%s')
Provided name '%s' too long for file (len %d, max %d)
Provided type name '%s' too long for file (len %d, max %d)
Entry '%s' already in list but with different type ('%s')
Invalid type enum for '%s': the opaque type is not actually a built-in type
Invalid type enum for '%s' in create by builtin type (type %d)
NULL attribute passed to remove
Invalid list pointer to remove attribute
Attribute not in list
Invalid list pointer to attr_list_add
Invalid output attribute pointer location to attr_list_add
Extra data storage requested negative length (%d)
Extra data storage output pointer must be provided when requesting extra data (%d)
Invalid name to add_by_type
Attribute '%s' (type %s) already in list but requesting additional data
Invalid / unimplemented type (%s) in attr_init
Received request to allocate negative sized string (%d)
Invalid reference to string object to initialize
Invalid static string argument to initialize
Invalid string too long for attribute
Invalid (NULL) arguments to string create with length
Invalid string argument to string set
Received request to assign a negative sized string (%d)
Invalid reference to string vector object to assign to
Received request to allocate negative sized string vector (%d entries)
Invalid too large size for string vector (%d entries)
Invalid index (%d of %d) initializing string vector
Invalid reference to string vector object to initialize index %d
Invalid index (%d of %d) assigning string vector ('%s', len %d)
<nil>
Received request to allocate negative sized float vector (%d entries)
Invalid too large size for float vector (%d entries)
Invalid reference to float vector object to initialize
Invalid reference to float array object to initialize
Invalid (NULL) arguments to float vector create
Invalid channel list pointer to chlist_add_with_length
Negative number of channels requested (%d)
Channel name must not be empty, received '%s'
<NULL>
Channel name must shorter than length allowed by file (%d), received '%s' (%d)
Invalid pixel type specified (%d) adding channel '%s' to list
Invalid perceptual linear flag value (%d) adding channel '%s' to list
Invalid pixel sampling (x %d y %d) adding channel '%s' to list
Attempt to add duplicate channel '%s' to channel list
Invalid reference to opaque data object to initialize
Invalid size for opaque data (%llu bytes, must be <= INT32_MAX)
No unpack provider specified for opaque data
No pack provider specified for opaque data
Pack function failed finding pack buffer size, unpacked size %d
Pack function failed to pack data, unpacked size %d, packed buffer size %d
Opaque data given invalid negative size (%d)
Invalid very large size for preview image (%u x %u - %llu bytes)
Invalid reference to preview object to initialize
Success
Unable to allocate memory
Context argument to function is not valid
Invalid argument to function
Argument to function out of valid range
Unable to open file (path does not exist or permission denied)
File is not an OpenEXR file or has a bad header value
File not opened for read
File not opened for write
File opened for write, but header not yet written
Error reading from stream
Error writing to stream
Text too long for file flags
Missing required attribute in part header
Invalid attribute in part header
No attribute by that name in part header
Attribute type mismatch
Attribute type vs. size mismatch
Attempt to use a scanline accessor function for a tiled image
Attempt to use a tiled accessor function for a scanline image
Attempt to modify a value when in update mode with different size
File in write mode, but header already written, can no longer edit attributes
Unexpected or corrupt values in data block leader vs computed value
Corrupt data block data, unable to decode
Previous part not yet finished writing
Invalid data block to write at this point
Use deep scanline write with the sample count table arguments
Use deep tile write with the sample count table arguments
Use non-deep scanline write (sample count table invalid for this part type)
Use non-deep tile write (sample count table invalid for this part type)
Invalid sample data table value
Feature not yet implemented, please use C++ library
Unknown error code
EXR_ERR_SUCCESS
EXR_ERR_OUT_OF_MEMORY
EXR_ERR_MISSING_CONTEXT_ARG
EXR_ERR_INVALID_ARGUMENT
EXR_ERR_ARGUMENT_OUT_OF_RANGE
EXR_ERR_FILE_ACCESS
EXR_ERR_FILE_BAD_HEADER
EXR_ERR_NOT_OPEN_READ
EXR_ERR_NOT_OPEN_WRITE
EXR_ERR_HEADER_NOT_WRITTEN
EXR_ERR_READ_IO
EXR_ERR_WRITE_IO
EXR_ERR_NAME_TOO_LONG
EXR_ERR_MISSING_REQ_ATTR
EXR_ERR_INVALID_ATTR
EXR_ERR_NO_ATTR_BY_NAME
EXR_ERR_ATTR_TYPE_MISMATCH
EXR_ERR_ATTR_SIZE_MISMATCH
EXR_ERR_SCAN_TILE_MIXEDAPI
EXR_ERR_TILE_SCAN_MIXEDAPI
EXR_ERR_MODIFY_SIZE_CHANGE
EXR_ERR_ALREADY_WROTE_ATTRS
EXR_ERR_BAD_CHUNK_LEADER
EXR_ERR_CORRUPT_CHUNK
EXR_ERR_INCORRECT_PART
EXR_ERR_INCORRECT_CHUNK
EXR_ERR_USE_SCAN_DEEP_WRITE
EXR_ERR_USE_TILE_DEEP_WRITE
EXR_ERR_USE_SCAN_NONDEEP_WRITE
EXR_ERR_USE_TILE_NONDEEP_WRITE
EXR_ERR_INVALID_SAMPLE_DATA
EXR_ERR_FEATURE_NOT_IMPLEMENTED
EXR_ERR_UNKNOWN
Invalid filename passed to test file header function
Invalid context handle passed to start_read function
Invalid filename passed to start_read function
Invalid filename passed to start_write function
Invalid type to register_attr_handler
Provided type name '%s' is a reserved / internal type name
Attribute handler for '%s' previously registered
Unable to register custom handler for type '%s'
Part %d, attribute '%s' (type '%s') has a name too long for new longname setting (%d)
Part %d, channel '%s' has a name too long for new longname setting (%d)
No parts defined in file prior to writing data
Part %d is missing channel list
read requested with no output offset pointer
Unable to open file for read: %s
Invalid file handle pointer
Invalid file descriptor
Unable to read %llu bytes: %s
Unable to rename temporary file: %s
write requested with no output offset pointer
tmp.%d
Invalid assumption in temporary filename
Unable to create %llu bytes for temporary filename
Unable to open file for write: %s
Unable to write %llu bytes to stream, wrote %lld: %s
Unable to allocate temporary memory
%s: (%s) %s
Context 0x%p: (%s) %s
<ERROR>: %s
Part index (%d) out of range
Source part index (%d) out of range
NULL output for '%s'
Invalid required attribute type '%s' for '%s'
No channels provided for channel list
Missing value for data window assignment
'lineOrder' value for line order (%d) out of range (%d - %d)
Invalid required attribute type '%s' for 'tiles'
Attempt to set tile descriptor on scanline part
NULL output for 'name'
Invalid required attribute type '%s' for 'name'
Invalid string passed trying to set 'name'
String too large to store (%llu bytes) into 'name'
Existing string 'name' has length %d, requested %d, unable to change
Invalid name for box2i attribute query
'%s' requested type 'box2i', but stored attributes is type '%s'
No input value for setting '%s', type '%s'
Invalid name for box2f attribute query
'%s' requested type 'box2f', but stored attributes is type '%s'
Invalid name for chlist attribute query
'%s' requested type 'chlist', but stored attributes is type '%s'
No input values for setting '%s', type 'chlist'
Invalid name for chromaticities attribute query
'%s' requested type 'chromaticities', but stored attributes is type '%s'
Invalid name for uc attribute query
'%s' requested type 'uc', but stored attributes is type '%s'
'%s' value for compression type (%d) out of range (%d - %d)
Invalid name for d attribute query
'%s' requested type 'd', but stored attributes is type '%s'
'%s' value for envmap (%d) out of range (%d - %d)
Invalid name for f attribute query
'%s' requested type 'f', but stored attributes is type '%s'
Invalid name for floatvector attribute query
'%s' requested type 'floatvector', but stored attributes is type '%s'
Invalid size (%d) for float vector '%s'
No input values for setting '%s', type 'floatvector'
'%s' requested type 'floatvector', but attribute is type '%s'
Existing float vector '%s' has %d, requested %d, unable to change
Invalid name for i attribute query
'%s' requested type 'i', but stored attributes is type '%s'
Invalid name for keycode attribute query
'%s' requested type 'keycode', but stored attributes is type '%s'
'%s' value for line order enum (%d) out of range (%d - %d)
Invalid name for m33f attribute query
'%s' requested type 'm33f', but stored attributes is type '%s'
Invalid name for m33d attribute query
'%s' requested type 'm33d', but stored attributes is type '%s'
Invalid name for m44f attribute query
'%s' requested type 'm44f', but stored attributes is type '%s'
Invalid name for m44d attribute query
'%s' requested type 'm44d', but stored attributes is type '%s'
Invalid name for preview attribute query
'%s' requested type 'preview', but stored attributes is type '%s'
No input value for setting '%s', type 'preview'
'%s' requested type 'preview', but attribute is type '%s'
Existing preview '%s' is %u x %u, requested is %u x %u, unable to change
Invalid name for rational attribute query
'%s' requested type 'rational', but stored attributes is type '%s'
Invalid name for string attribute query
'%s' requested type 'string', but stored attributes is type '%s'
Part type attribute must be implicitly only when adding a part
String too large to store (%llu bytes) into '%s'
'%s' requested type 'string', but attribute is type '%s'
Existing string '%s' has length %d, requested %d, unable to change
Invalid name for stringvector attribute query
'%s' requested type 'stringvector', but stored attributes is type '%s'
size parameter required to query stringvector
'%s' array buffer too small (%d) to hold string values (%d)
Invalid size (%d) for string vector '%s'
No input string values for setting '%s', type 'stringvector'
'%s' requested type 'stringvector', but attribute is type '%s'
'%s' received NULL string in string vector
'%s' string %d in string vector is different size (old %d new %d), unable to update
Existing string vector '%s' has %d strings, but given %d, unable to change
Invalid name for tiledesc attribute query
'%s' requested type 'tiledesc', but stored attributes is type '%s'
Invalid name for timecode attribute query
'%s' requested type 'timecode', but stored attributes is type '%s'
Invalid name for v2i attribute query
'%s' requested type 'v2i', but stored attributes is type '%s'
Invalid name for v2f attribute query
'%s' requested type 'v2f', but stored attributes is type '%s'
Invalid name for v2d attribute query
'%s' requested type 'v2d', but stored attributes is type '%s'
Invalid name for v3i attribute query
'%s' requested type 'v3i', but stored attributes is type '%s'
Invalid name for v3f attribute query
'%s' requested type 'v3f', but stored attributes is type '%s'
Invalid name for v3d attribute query
'%s' requested type 'v3d', but stored attributes is type '%s'
Invalid name for opaque attribute query
'%s' requested type 'opaque', but stored attributes is type '%s'
'%s' requested type '%s', but stored attributes is type '%s'
Invalid data window x dims (%d, %d) resulting in invalid tile level size (%lld) for level %d
Invalid data window y dims (%d, %d) resulting in invalid tile level size (%lld) for level %d
Error during file initialization
Invalid combination of version flags: single part found, but also marked as deep (%d) or multipart (%d)
Unable to extract header byte
Unable to go to next part definition
Unable to read magic and version flags
File is not an OpenEXR file: magic 0x%08X (%d) flags 0x%08X
File is of an unsupported version: %d, magic 0x%08X flags 0x%08X
File has an unsupported flags: magic 0x%08X flags 0x%08X
End of file attempting to read header
attribute type
Invalid empty string encountered parsing attribute name
Invalid empty string encountered parsing attribute type for attribute '%s'
Unable to read attribute size for attribute '%s', type '%s'
Unable to initialize attribute '%s', type '%s'
Invalid type '%s' for attribute '%s'
Invalid %s encountered: start '%s' (max %d)
Duplicate copy of required attribute 'channels' encountered
Required attribute 'channels': Invalid type '%s'
Unable to initialize attribute '%s', type 'chlist'
Duplicate copy of required attribute '%s' encountered
Required attribute '%s': Invalid type '%s'
Unable to initialize attribute '%s', type 'compression'
Duplicate copy of required attribute 'chunkCount' encountered
attribute 'chunkCount': Invalid type '%s'
Required attribute 'chunkCount': Invalid size %d (exp 4)
Unable to read chunkCount data
Unable to initialize attribute '%s', type 'int'
Unable to initialize attribute '%s', type 'box2i'
Unable to initialize attribute '%s', type 'lineOrder'
Duplicate copy of required attribute 'name' encountered
attribute 'name': Invalid type '%s'
Unable to initialize attribute '%s', type 'string'
Unable to read 'name' data
Required attribute '%s': Invalid size %d (exp 4)
Attribute '%s': Unable to read data (%d bytes)
Unable to initialize attribute '%s', type 'float'
Required attribute '%s': Invalid size %d (exp %llu)
Unable to initialize attribute '%s', type 'v2f'
Duplicate copy of required attribute 'tiles' encountered
Required attribute 'tiles': Invalid type '%s'
Required attribute 'tiles': Invalid size %d (exp %llu)
Unable to read 'tiles' data
Unable to initialize attribute '%s', type 'tiledesc'
Duplicate copy of required attribute 'type' encountered
Required attribute 'type': Invalid type '%s'
deeptile
attribute 'type': Invalid type string '%s'
Duplicate copy of required attribute 'version' encountered
attribute 'version': Invalid type '%s'
attribute 'version': Invalid size %d (exp 4)
Unable to read version data
Invalid version %d: expect 1
Attribute '%s', type '%s': Invalid negative size %d
Attribute '%s', type '%s': Invalid size %d
Attribute '%s': Invalid size %d (exp '%s' size 4 * n, found odd bytes %d)
Attribute '%s': Invalid size %d (exp '%s' size 4 * %d (%d))
Unable to read '%s' %s data
Out of data parsing '%s', last channel '%s'
Attribute '%s': Invalid size %d (exp '%s' size 1)
Attribute '%s' (type '%s'): Invalid value %d (max allowed %d)
Attribute '%s': Invalid size %d (exp '%s' size 8 * %d (%d))
Attribute '%s': Invalid size %d (exp '%s' size >= 8)
Attribute '%s': Unable to read preview sizes
Attribute '%s': Invalid size %d (exp '%s' %u x %u * 4 + sizevals)
Attribute '%s', type '%s': Invalid size for preview %u x %u
Attribute '%s': Unable to read preview data (%d bytes)
Attribute '%s': Unable to read string length
Attribute '%s': Invalid size (%d) encountered parsing string vector
Attribute '%s': Unable to read string of length (%d)
Attribute '%s': Invalid size %d (exp '%s' size %d)
Attribute '%s': Invalid tile level specification encountered: found enum %d
Attribute '%s': Invalid tile rounding specification encountered: found enum %d
Attribute '%s': Unable to read opaque %s data (%d bytes)
Invalid chunk count (%d) for part '%s'
<first>
Invalid chunk count (%d) for part '%s', expect (%d)
'channels' attribute not found
'compression' attribute not found
'dataWindow' attribute not found
'displayWindow' attribute not found
'lineOrder' attribute not found
'pixelAspectRatio' attribute not found
'screenWindowCenter' attribute not found
'screenWindowWidth' attribute not found
'name' attribute for multipart file not found
'type' attribute for v2+ file not found
'version' attribute for deep file not found
'chunkCount' attribute for multipart / deep file not found
Invalid display window (%d, %d - %d, %d)
Invalid data window (%d, %d - %d, %d)
Invalid width (%lld) too large (max %d)
Invalid height (%lld) too large (max %d)
Invalid chunkCount (%lld) exceeds maximum area of %lld
Invalid pixel aspect ratio %g
Invalid screen window width %g
Missing required channels attribute to validate against
request to validate channel list, but data window not set to validate against
At least one channel required
channel '%s': x subsampling factor is invalid (%d)
channel '%s': y subsampling factor is invalid (%d)
channel '%s': minimum x coordinate (%d) of the data window is not a multiple of the x subsampling factor (%d)
channel '%s': minimum y coordinate (%d) of the data window is not a multiple of the y subsampling factor (%d)
channel '%s': row width (%lld) of the data window is not a multiple of the x subsampling factor (%d)
channel '%s': column height (%lld) of the data window is not a multiple of the y subsampling factor (%d)
attribute 'type': Mismatch between file flags and type string '%s', believing file flags
attribute 'type': Mismatch between file flags and type attribute, unable to fix
'tiles' attribute for tiled file not found
Invalid tile description size (%u x %u)
Width of tile exceeds max size (%d vs max %d)
Invalid level mode (%d) in tile description header
Invalid rounding mode (%d) in tile description header
channel '%s': x subsampling factor is not 1 (%d) for a tiled image
channel '%s': y subsampling factor is not 1 (%d) for a tiled image
Invalid compression for deep data
channel '%s': x subsampling factor is not 1 (%d) for a deep image
channel '%s': y subsampling factor is not 1 (%d) for a deep image
File '%s': ver %d flags%s%s%s%s
 singletile
 longnames
 shortnames
 deep
 multipart
 parts: %d
File '%s':
 part %d: %s
<single>
  tiled image has levels: x %d y %d
    x tile count:
 %d (sz %d)
    y tile count:
%s: 
[ %d, %d - %d %d ] %d x %d
[ %g, %g - %g %g ]
%d channels
   '%s': %s samp %d %d
uint
half
<UNKNOWN>
r[%g, %g] g[%g, %g] b[%g, %g] w[%g, %g]
none
zips
pxr24
b44a
dwaa
dwab
'%s'
 (0x%02X)
latlong
cube
[%d entries]:
mfgc %d film %d prefix %d count %d perf_off %d ppf %d ppc %d
%d (%s)
increasing
decreasing
random
[ [%g %g %g] [%g %g %g] [%g %g %g] ]
[ [%g %g %g %g] [%g %g %g %g] [%g %g %g %g] [%g %g %g %g] ]
%u x %u
%d / %u
 (%g)
[%d entries]:
    '%s'
single image
mipmap
ripmap
size %u x %u level %u (%s) round %u (%s)
down
time %u user %u
[ %d, %d ]
[ %g, %g ]
[ %d, %d, %d ]
[ %g, %g, %g ]
(size %d unp size %d hdlrs %p %p %p)
<ERROR Unknown type '%s'>
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
]xEc
vH7B
W4vC
MbP?-C
]r2<
 9^;
cZK;#
%9)0
GTg8^
v?8i
-(;aU,$
G#]X
Q)b9
z@c"J
BN$N(
s\a=
$qE}
#a%
10WriterNull
@10Compressor
11NonCopyable
N12_GLOBAL__N_113AssertHandlerE
N2nv13AssertHandlerE
12Decompressor
N12_GLOBAL__N_113AssertHandlerE
6Writer
9BaseImage
N4nvtt13OutputHandlerE
11BaseSurface
817UncompressedImage
C19UncompressedSurface
33s?
@ity=
compression_qualcompression_quality=
9WriterDds
17CompressedSurface
15CompressedImage
sRGB
DisplayP3
DCIP3
BT709
BT2020
BT2100
Adobe-RGB-1998
CIE-1931-XYZ
ACEScg
linear
sRGB
KTX 11
9WriterKtx
12WriterHeader
3.0.171300
17DecompressorMetal
NSt3__117bad_function_callE
13CompressorArm
15DecompressorArm
B18CompressorEtc2Comp
9WriterExr
14CompressorIspc
14CompressorNull
16DecompressorNull
14CompressorNvtt
N4nvtt24SequentialTaskDispatcherE
N4nvtt14TaskDispatcherE
16DecompressorNvtt
=333333
?333333
?333333
15CompressorPvrtc
17DecompressorPvrtc
@13CompressorStb

   !! "
!!!""!$
"""##"%
###$$#$$$$$%%$%%%%%&&%&&&&&''&'''''(('((((())()))))**)*****++*(0+++,,+)1,,,--,+0---..-,1...//..0///00.0/1.0001102/1112214.2223325/333443444445545555566566666776777778878888899899999::9:::::;;:;;;;;<<;<<<<<==<=====>>=>>>>>??>????
?%!!?
9?JBB?
Z?^cc?
<?BAA?
UUU?UUU?UUU?UUU?UUU?UUU?UUU?UUU?
UUU?UUU?UUU?UUU?UUU?UUU?UUU?UUU?
?/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:771:5: Assertion failed: bits>=2 && bits<=4 
PPPP@@@@TTTT@PPT
@@PPTTU@PTU
@PPTUU
@T@TUU
TPP@P@@
DDDD
PPAT
UPPPPU
TTPPh
@PZj
UUPPZZ
@@jj
$$$$
P(i(iD
fffDDD
TRJ*33
33DD
0033
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1072:2: Assertion failed: bits >= 4 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1163:2: Assertion failed: mode <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1183:3: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1163:2: Assertion failed: mode <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1183:3: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1189:5: Assertion failed: mode <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1215:3: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1189:5: Assertion failed: mode <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1215:3: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1280:3: Assertion failed: best_q>=0 && best_q<=levels-1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1280:3: Assertion failed: best_q>=0 && best_q<=levels-1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1799:2: Assertion failed: (qblock[0]&15) < levels/2 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1799:2: Assertion failed: (qblock[0]&15) < levels/2 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1831:2: Assertion failed: v<pow2(bits) 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1831:2: Assertion failed: v<pow2(bits) 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1844:3: Assertion failed: from > 64+10 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1951:13: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1951:13: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2203:5: Assertion failed: span > 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2217:5: Assertion failed: mode_bits > 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2482:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2482:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2502:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 15 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2503:13: Assertion failed: -16 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2554:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 31 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2555:13: Assertion failed: -32 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2627:13: Assertion failed: qep[i * 4 + p] - qep[p] <= (1<<bits)/2 - 1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2628:13: Assertion failed: -(1<<bits)/2 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2738:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 15 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2739:13: Assertion failed: -16 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2810:13: Assertion failed: qep[i * 4 + p] - qep[p] <= (1<<bits)/2 - 1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2811:13: Assertion failed: -(1<<bits)/2 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2971:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 255 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2972:13: Assertion failed: -256 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3008:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 127 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3009:13: Assertion failed: -128 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3045:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3046:13: Assertion failed: -8 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3072:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2502:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 15 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2503:13: Assertion failed: -16 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2554:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 31 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2555:13: Assertion failed: -32 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2627:13: Assertion failed: qep[i * 4 + p] - qep[p] <= (1<<bits)/2 - 1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2628:13: Assertion failed: -(1<<bits)/2 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2738:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 15 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2739:13: Assertion failed: -16 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2810:13: Assertion failed: qep[i * 4 + p] - qep[p] <= (1<<bits)/2 - 1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2811:13: Assertion failed: -(1<<bits)/2 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2971:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 255 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2972:13: Assertion failed: -256 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3008:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 127 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3009:13: Assertion failed: -128 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3045:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3046:13: Assertion failed: -8 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3072:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3356:9: Assertion failed: best_q >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3356:9: Assertion failed: best_q >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3493:9: Assertion failed: idx < 165 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3493:9: Assertion failed: idx < 165 
3333333333333333@
UUU?
'7VU
 Ef$ 
e!@t
e\!Ptl!
%At#%Bt3%CtC%DsS%Enc%Fis%Gf
q+'Pt;'QjK'
)DT$)EO4)FKD)GHT)
+PT,+QL<+
H|+ T
1DT#1ET31FRC1GOS1HKc1IHs1JE
3BJ+3
G[4 Tk4!T{4"Q
j"6At26BtB6CtR6Dtb6Etr6Fr
g:8@tJ8ArZ8Bjj8
9Qr*9Rj:9
Sr;AT
<KK"<
>CM*>DH:>
E:?PTJ?QTZ?RRj?SMz?TH
E*@ T:@!TJ@"TZ@#Tj@$Nz@%E
CF4$CG34CH/DCI,TCJ*dCK&tC
',E@4<EA4LEB.\EC(lE
'<FP4LFQ4\FR.lFS(|F
F 4G!4
G"4,G#.<G$'LG`4\Ga4lGb.|Gc(
PH4#PI33PJ1CPK.SP
R@4+RA4;RB4KRC/[RD+kRE%{R
Ub4+Uc/;Ud+KUe%[U
taWAtqWBt
ZDk)ZEe9Z
jI[PtY[Qti[Rty[So
gY\ ti\!ty\"t
_B4"_C42_D4B_E4R_F4b_G4r_H4
e 4*e!4:e"4Je#4Ze$4je%4ze&1
fg'*f
iGT!iHT1iITAiJTQiKTai
E9k@TIkATYkBTikCTykDS
EImPTYmQTimRTymST
o%T)o&Q9o'LIo(EYo`TioaTyobT
4QrD4arE4qrF4
uJ))uK%9u
*9wQ4IwR4YwS4iwT4ywU4
%9y!4Iy"4Yy#4iy$4yy%4
zd4)ze49zf4Izg2Yzh.izi+yzj)
80?e
46=A
>r1F
>r1F
OyL?
295<295<
OyL?
_'?UM0
qo=UM0
_'?E,N?I
$H%?
$H%?
E,N?
<=2V
F"t=
A?~p^
7=~p^
A?F"t=
.R?z
;ge{
ek?;
C{;5{
s=Q/x
=ge{
Q/x=
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:570:5: Assertion failed: n <= 16 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:591:13: Assertion failed: e <= n 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:570:5: Assertion failed: n <= 16 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:591:13: Assertion failed: e <= n 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:609:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:609:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1247:5: Assertion failed: state->fastSkipTreshold <= 64 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1286:5: Assertion failed: count >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1247:5: Assertion failed: state->fastSkipTreshold <= 64 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1286:5: Assertion failed: count >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1247:5: Assertion failed: state->fastSkipTreshold <= 64 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1286:5: Assertion failed: count >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1988:5: Assertion failed: pitch <= 64 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1988:5: Assertion failed: pitch <= 64 
 !"#$%&'()*+,-./0123456789:;<=>?
C(knN
Q8=q=
oa^[
u>{r1?
Efff?
?fff?
?33s?
?fff?
 A33
?33s?
?fff?
 Aff
?NSt3__110__function6__funcIZ22astcenc_compress_imageP15astcenc_contextP13astcenc_imagePK15astcenc_swizzlePhmjE3$_0NS_9allocatorISA_EEFjvEEE
NSt3__110__function6__baseIFjvEEE
Z22astcenc_compress_imageP15astcenc_contextP13astcenc_imagePK15astcenc_swizzlePhmjE3$_0
NSt3__110__function6__funcIZ22astcenc_compress_imageP15astcenc_contextP13astcenc_imagePK15astcenc_swizzlePhmjE3$_1NS_9allocatorISA_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
Z22astcenc_compress_imageP15astcenc_contextP13astcenc_imagePK15astcenc_swizzlePhmjE3$_1
w8#w
 !"$%&()*01245689:#'/37;,-.@ABDEFHIJPQRTUVXYZCGOSW[LMN
`abdefhijpqrtuvxyzcgosw{lmn
<=>\]^
 !"#$()*+,0123489:;<%-5=
@ABCDHIJKLPQRSTXYZ[\EMU]
`abcdhijklpqrstxyz{|emu}
fgFG&noNO.vwVW6~
^_>'/7?
((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((2
##############################----------------------------------------------------------------------------------------------------------------7
CrQjRjAZSJQ
B8R8S8C03
*B"Q"
2A*B
RTCD
OOwB
"b Q
lb,O
aysqSiCYAK
q"sH![
,!.R,3|
ry_p
hbaSYnXaMRsYC
3!+.
"C]"1#q"
r`B9m8
wbl3
.n7B$m
,"%Ql
aSarQ
QGPC
IFHbI7
0%Ra*
!q"!Cs8
RE05HR
*Q#%
2UQ%
5b
_8SAC9bA78G8sq
1HiF0
2v0M*
Xn0$)a*
POp!
+%"s(eH
q"E(-
4QERdb\
%B,r
5q
X4eZP
S4Q$U
HKP~HDS
qyh9C1
1_8S1n070
0b1O0u0;
(sQsP
)J z F HA
#D9e $
Q2I 
%3<R
]>4
=#
uPGHSQUI
F@7@
a61v0s1
@7A!;
#e %
Q%R5I
3DC<5l
XFY(YtQoX
1v870U)
)'0~(
+G(b1sQ6I_(
 &!HAn 
!e!!S
R5<"-
fxd{
yuyjh
ta(a
aT[cQV
kK8H9S1Z841
`sYv0
(a2u(
 $-n _(
 6)G@7 
' O@F8
9sHU
2-QU
'.#
Bq
adcuQD]fX
ITSt
@cIJA
9rA~8Z@
1V0+)F1'1
hn(s!b)
 O@S!C)
 6!;
#u K
]tQM
$/B<#
(qdct
4]fXuYTS
IyAc
hV0F1
1H1aZ
H8HS) C)s!
!+!!
"'!s
(z +
]<><
{(qtyyadk
ij`$gD
ITHo
@aBd@~@Z8
2H1_0S)
0C)
(+Ib)n(
)s!'!
b,!.
d}34
->q
TQM]D1
E333?
Iy^!I)>
H.yrH&3
F9'gF$y
333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIImmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
88888888888888888888888888888888888888888888888888888888TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
..............................................EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ttttttttttttttttttttttttttttttttttttttttttttttt
""""""""""""""""""""""""""""""""""3333333333333333333333333333333333DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUffffffffffffffffffffffffffffffffffwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
(((((((((((((((((((((((((((666666666666666666666666666CCCCCCCCCCCCCCCCCCCCCCCCCCPPPPPPPPPPPPPPPPPPPPPPPPPPP^^^^^^^^^^^^^^^^^^^^^^^^^^^kkkkkkkkkkkkkkkkkkkkkkkkkkkyyyyyyyyyyyyyyyyyyyyyyyyyyy
!!!!!!!!!!!!!!!!!!!!!!,,,,,,,,,,,,,,,,,,,,,,7777777777777777777777BBBBBBBBBBBBBBBBBBBBBBMMMMMMMMMMMMMMMMMMMMMMXXXXXXXXXXXXXXXXXXXXXXccccccccccccccccccccccnnnnnnnnnnnnnnnnnnnnnnyyyyyyyyyyyyyyyyyyyyyyyy
!!!!!!!!!!!!!!!!!))))))))))))))))111111111111111199999999999999999BBBBBBBBBBBBBBBBBJJJJJJJJJJJJJJJJRRRRRRRRRRRRRRRRZZZZZZZZZZZZZZZZZccccccccccccccccckkkkkkkkkkkkkkkkssssssssssssssss{{{{{{{{{{{{{{{{{
             '''''''''''''-------------4444444444444:::::::::::::AAAAAAAAAAAAAGGGGGGGGGGGGGNNNNNNNNNNNNNTTTTTTTTTTTTT[[[[[[[[[[[[[aaaaaaaaaaaaahhhhhhhhhhhhhnnnnnnnnnnnnnuuuuuuuuuuuuu{{{{{{{{{{{{{{{
           &&&&&&&&&&&++++++++++0000000000066666666666;;;;;;;;;;;AAAAAAAAAAAFFFFFFFFFFFLLLLLLLLLLLQQQQQQQQQQVVVVVVVVVVV\\\\\\\\\\\aaaaaaaaaaagggggggggggllllllllllqqqqqqqqqqqwwwwwwwwwww||||||||||||

        $$$$$$$$((((((((,,,,,,,,000000004444444488888888<<<<<<<<<AAAAAAAAAEEEEEEEEIIIIIIIIMMMMMMMMQQQQQQQQUUUUUUUUYYYYYYYY]]]]]]]]aaaaaaaaeeeeeeeeiiiiiiiimmmmmmmmqqqqqqqquuuuuuuuyyyyyyyy}}}}}}}}}
      ######&&&&&&&*******------0000003333336666666:::::::======@@@@@@CCCCCCCGGGGGGGJJJJJJMMMMMMPPPPPPSSSSSSSWWWWWWWZZZZZZ]]]]]]```````dddddddggggggjjjjjjmmmmmmppppppptttttttwwwwwwzzzzzz}}}}}}}}
      #####%%%%%((((((+++++-----0000003333355555888888;;;;;=====@@@@@@CCCCCCFFFFFHHHHHKKKKKKNNNNNPPPPPSSSSSSVVVVVXXXXX[[[[[[^^^^^`````ccccccfffffhhhhhkkkkkknnnnnpppppssssssvvvvvxxxxx{{{{{{~~~~~~

    """"$$$$&&&&((((****,,,,....00002222444466668888::::<<<<>>>>@@@@BBBBDDDDFFFFHHHHJJJJLLLLNNNNPPPPRRRRTTTTVVVVXXXXZZZZ\\\\^^^^````bbbbddddffffhhhhjjjjllllnnnnpppprrrrttttvvvvxxxxzzzz||||~~~~~
   !!!###$$$&&&&((()))+++,,,....0001113334446666888999;;;<<<>>>>@@@AAACCCDDDFFFFHHHIIIKKKLLLNNNNPPPQQQSSSTTTVVVVXXXYYY[[[\\\^^^^```aaacccdddffffhhhiiikkklllnnnnpppqqqssstttvvvvxxxyyy{{{|||~~~~~
   !!"""$$$%%&&&((())***,,,--...000112224445566688899:::<<<==>>>@@@AABBBDDDEEFFFHHHIIJJJLLLMMNNNPPPQQRRRTTTUUVVVXXXYYZZZ\\\]]^^^```aabbbdddeefffhhhiijjjlllmmnnnpppqqrrrtttuuvvvxxxyyzzz|||}}~~~~
  !!""##$$%%&&''(())**++,,--..//00112233445566778899::;;<<==>>??@@AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]]^^__``aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~




       
"""""""

$$$$$$$
&&&&&&&&''''''''
%%%%%%%
#######
!!!!!!!
      
""""""
$$$$$
&&&&&&
((((((
******
,,,,,
......//////
-----
++++++
))))))
''''''
%%%%%
######
!!!!!!

    !!!!""""####$$$$%%%%&&&&''''(((())))****++++,,,,----..../////0000111122223333444455556666777788889999::::;;;;<<<<====>>>>???
   000@@@@
"""222BBBB
$$$4444DDD
&&&6666FFF
((((888HHH
****:::JJJ
,,,<<<LLL
...>>>NNNNOOOO???///
MMM===---
KKK;;;++++
III999))))
GGG7777'''
EEE5555%%%
CCCC333###
AAAA111!!!
   @@@
"""BBB
$$$DDD
&&&FFF
((HHH
**JJJ,,LLL
..NNN
000PPP
222RRR
444TTT
666VVV
888XXX
:::ZZZ
<<<\\\
>>>^^^___???
]]]===
[[[;;;
YYY999
WWW777
UUU555
SSS333
QQQ111
OOO//
MMM--
KKK++
III))
GGG'''
EEE%%%
CCC###
AAA!!!
  !!""##$$%%&&''(())**++,,--..//00112233445566778899::;;<<==>>???@@AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]]^^__``aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~
 @@`
"BBb
$DDd
&FFf
(HHh
*JJj
,LLl
.NNn
0PPp
2RRr
4TTt
6VVv
8XXx
:ZZz
<\\|
>^^~
}]]=
{[[;
yYY9
wWW7
uUU5
sSS3
qQQ1
oOO/
mMM-
kKK+
iII)
gGG'
eEE%
cCC#
aAA!
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
"3DUfw
!)19BJRZcks{
 $(,048<AEIMQUY]aeimquy}
 "$&(*,.02468:<>@BDFHJLNPRTVXZ\^`bdfhjlnprtvxz|~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~




????????????????
%.7@
%.7@
$+29@
$)/5;@
#'+/48<@
#'+/48<@
#&)-037:=@
"%(*-0358;>@
"$&(*,.02468:<>@
"$&(*,.02468:<>@
@NSt3__120__shared_ptr_pointerIPhZN3Etc13EncodeMipmapsEPfjjNS2_5Image6FormatENS2_11ErrorMetricEfjjjjPNS2_8RawImageEPibE3$_0NS_9allocatorIhEEEE
ZN3Etc13EncodeMipmapsEPfjjNS_5Image6FormatENS_11ErrorMetricEfjjjjPNS_8RawImageEPibE3$_0
@@NSt3__119__async_assoc_stateIvNS_12__async_funcIMN3Etc5ImageEFvjjEJPS3_ijEEEEE
NSt3__119__async_assoc_stateIjNS_12__async_funcIMN3Etc5ImageEFjjjjEJPS3_jijEEEEE
NSt3__113__assoc_stateIjEE
?N3Etc16Block4x4EncodingE
N3Etc21Block4x4Encoding_ETC1E
N3Etc20Block4x4Encoding_R11E
N3Etc21Block4x4Encoding_RG11E
N3Etc21Block4x4Encoding_RGB8E
N3Etc23Block4x4Encoding_RGB8A1E
N3Etc30Block4x4Encoding_RGB8A1_OpaqueE
N3Etc35Block4x4Encoding_RGB8A1_TransparentE
GB33
?N3Etc22Block4x4Encoding_RGBA8E
N3Etc29Block4x4Encoding_RGBA8_OpaqueE
N3Etc34Block4x4Encoding_RGBA8_TransparentE
N12_GLOBAL__N_117UnixAssertHandlerE
N2nv9StdStreamE
N2nv6StreamE
Qs?K\
Qs?K\
?UUU
?N2nv6FilterE
N2nv9BoxFilterE
N2nv14TriangleFilterE
N2nv15QuadraticFilterE
N2nv11CubicFilterE
N2nv13BSplineFilterE
N2nv14MitchellFilterE
N2nv13LanczosFilterE
N2nv10SincFilterE
N2nv12KaiserFilterE
N2nv14GaussianFilterE
32-bit_rle_rgbe
FORMAT=32-bit_rl
N2nv14StdInputStreamE
!(0)"
#*1892+$
%,3:;4-&
'.5<=6/7>????????????????RGB
N2nv15StdOutputStreamE
KTX 11
8D`?8D`?8D`?8D`?
<-\4
8D`?
F#DS
]p$o
S%'1
F(DS
]p)o
S*'1
F-DS
]p.o
S/'1
F2DS
]p3o
S4'1
F7DS
]p8o
S9'1
F<DS
]p=o
S>'1
FADS
]pBo
SC'1
FFDS
]pGo
SH'1
FKDS
]pLo
SM'1
FPDS
]pQo
SR'1
FUDS
]pVo
SW'1
FZDS
]p[o
N2nv20ColorBlockCompressorE
N2nv19CompressorInterfaceE
N2nv20FloatColorCompressorE
N2nv14CompressorDXT1E
N2nv18CompressorBC3_RGBME
N2nv14CompressorETC1E
N2nv16CompressorETC2_RE
N2nv17CompressorETC2_RGE
N2nv18CompressorETC2_RGBE
N2nv19CompressorETC2_RGBAE
N2nv19CompressorETC2_RGBME
DXT1DXT1DXT3DXT5DXT5ATI1ATI2DXT1
BC6HBC7LDXT5ETC1
ETC2
PVR0PVR1PVR2PVR3
N2nv17FastCompressorBC4E
N2nv17FastCompressorBC5E
N2nv23ProductionCompressorBC4E
N2nv23ProductionCompressorBC5E
N2nv13CompressorBC6E
N2nv13CompressorBC7E
N2nv19FastCompressorDXT1aE
N2nv18FastCompressorDXT3E
N2nv18FastCompressorDXT5E
N2nv19FastCompressorDXT5nE
N2nv15CompressorDXT1aE
N2nv19CompressorDXT1_LumaE
N2nv14CompressorDXT3E
N2nv14CompressorDXT5E
N2nv15CompressorDXT5nE
?%!!?
9?JBB?
Z?^cc?
~GN2nv20PixelFormatConverterE
N4nvtt22ParallelTaskDispatcherE
N4nvtt11CubeSurface7PrivateE
!)19BJRZcks{
 $(,048<AEIMQUY]aeimquy}
?%!!?
9?JBB?
Z?^cc?
<?BAA?
@N4nvtt20DefaultOutputHandlerE
.M;R
NAvT
?N4nvtt7Surface7PrivateE
N2nv10RefCountedE
N8nvsquish9ColourFitE
c>N8nvsquish18WeightedClusterFitE
  !!""##$$$$%%%%&&&&&&&&''''''''(((((((((((((((())))))))))))))))********************************
\ww_,
zk&_
~NX4
_H^zvd
x`tm6
Sr]?
$8'S
$ffn
rq7x;P
)n/h%fPn
,!MbDg[
>ZF9
rT+6ZNw
izc}
Nl9\
x=9v
"f^n[
5nsfZ
^[L6
Vgh$
2aNuE
BTcq
2,THh
/fxLf
]k_W
Z/K]
(U$;s
hm~iD
KTX 11
KTX 20
KTX 11
KTX 20
KTX 11
KTX 20
KTX 20
N7Iex_3_27BaseExcE
N7Iex_3_26ArgExcE
N7Iex_3_28LogicExcE
N7Iex_3_28InputExcE
N7Iex_3_25IoExcE
N7Iex_3_27MathExcE
N7Iex_3_28ErrnoExcE
N7Iex_3_29NoImplExcE
N7Iex_3_27NullExcE
N7Iex_3_27TypeExcE
N7Iex_3_28EpermExcE
N7Iex_3_29EnoentExcE
N7Iex_3_28EsrchExcE
N7Iex_3_28EintrExcE
N7Iex_3_26EioExcE
N7Iex_3_28EnxioExcE
N7Iex_3_28E2bigExcE
N7Iex_3_210EnoexecExcE
N7Iex_3_28EbadfExcE
N7Iex_3_29EchildExcE
N7Iex_3_29EagainExcE
N7Iex_3_29EnomemExcE
N7Iex_3_29EaccesExcE
N7Iex_3_29EfaultExcE
N7Iex_3_210EnotblkExcE
N7Iex_3_28EbusyExcE
N7Iex_3_29EexistExcE
N7Iex_3_28ExdevExcE
N7Iex_3_29EnodevExcE
N7Iex_3_210EnotdirExcE
N7Iex_3_29EisdirExcE
N7Iex_3_29EinvalExcE
N7Iex_3_29EnfileExcE
N7Iex_3_29EmfileExcE
N7Iex_3_29EnottyExcE
N7Iex_3_210EtxtbsyExcE
N7Iex_3_28EfbigExcE
N7Iex_3_29EnospcExcE
N7Iex_3_29EspipeExcE
N7Iex_3_28ErofsExcE
N7Iex_3_29EmlinkExcE
N7Iex_3_28EpipeExcE
N7Iex_3_27EdomExcE
N7Iex_3_29ErangeExcE
N7Iex_3_29EnomsgExcE
N7Iex_3_28EidrmExcE
N7Iex_3_29EchrngExcE
N7Iex_3_211El2nsyncExcE
N7Iex_3_29El3hltExcE
N7Iex_3_29El3rstExcE
N7Iex_3_29ElnrngExcE
N7Iex_3_210EunatchExcE
N7Iex_3_29EnocsiExcE
N7Iex_3_29El2hltExcE
N7Iex_3_210EdeadlkExcE
N7Iex_3_29EnolckExcE
N7Iex_3_28EbadeExcE
N7Iex_3_28EbadrExcE
N7Iex_3_29ExfullExcE
N7Iex_3_29EnoanoExcE
N7Iex_3_210EbadrqcExcE
N7Iex_3_210EbadsltExcE
N7Iex_3_212EdeadlockExcE
N7Iex_3_29EbfontExcE
N7Iex_3_29EnostrExcE
N7Iex_3_210EnodataExcE
N7Iex_3_28EtimeExcE
N7Iex_3_28EnosrExcE
N7Iex_3_29EnonetExcE
N7Iex_3_29EnopkgExcE
N7Iex_3_210EremoteExcE
N7Iex_3_210EnolinkExcE
N7Iex_3_27EadvExcE
N7Iex_3_29EsrmntExcE
N7Iex_3_28EcommExcE
N7Iex_3_29EprotoExcE
N7Iex_3_212EmultihopExcE
N7Iex_3_210EbadmsgExcE
N7Iex_3_215EnametoolongExcE
N7Iex_3_212EoverflowExcE
N7Iex_3_211EnotuniqExcE
N7Iex_3_29EbadfdExcE
N7Iex_3_210EremchgExcE
N7Iex_3_210ElibaccExcE
N7Iex_3_210ElibbadExcE
N7Iex_3_210ElibscnExcE
N7Iex_3_210ElibmaxExcE
N7Iex_3_211ElibexecExcE
N7Iex_3_29EilseqExcE
N7Iex_3_29EnosysExcE
N7Iex_3_28EloopExcE
N7Iex_3_211ErestartExcE
N7Iex_3_211EstrpipeExcE
N7Iex_3_212EnotemptyExcE
N7Iex_3_29EusersExcE
N7Iex_3_211EnotsockExcE
N7Iex_3_215EdestaddrreqExcE
N7Iex_3_211EmsgsizeExcE
N7Iex_3_213EprototypeExcE
N7Iex_3_214EnoprotooptExcE
N7Iex_3_218EprotonosupportExcE
N7Iex_3_218EsocktnosupportExcE
N7Iex_3_213EopnotsuppExcE
N7Iex_3_215EpfnosupportExcE
N7Iex_3_215EafnosupportExcE
N7Iex_3_213EaddrinuseExcE
N7Iex_3_216EaddrnotavailExcE
N7Iex_3_211EnetdownExcE
N7Iex_3_214EnetunreachExcE
N7Iex_3_212EnetresetExcE
N7Iex_3_215EconnabortedExcE
N7Iex_3_213EconnresetExcE
N7Iex_3_210EnobufsExcE
N7Iex_3_210EisconnExcE
N7Iex_3_211EnotconnExcE
N7Iex_3_212EshutdownExcE
N7Iex_3_215EtoomanyrefsExcE
N7Iex_3_212EtimedoutExcE
N7Iex_3_215EconnrefusedExcE
N7Iex_3_212EhostdownExcE
N7Iex_3_215EhostunreachExcE
N7Iex_3_211EalreadyExcE
N7Iex_3_214EinprogressExcE
N7Iex_3_29EstaleExcE
N7Iex_3_211EioresidExcE
N7Iex_3_210EucleanExcE
N7Iex_3_210EnotnamExcE
N7Iex_3_210EnavailExcE
N7Iex_3_29EisnamExcE
N7Iex_3_212EremoteioExcE
N7Iex_3_28EinitExcE
N7Iex_3_210EremdevExcE
N7Iex_3_212EcanceledExcE
N7Iex_3_213EnolimfileExcE
N7Iex_3_211EproclimExcE
N7Iex_3_212EdisjointExcE
N7Iex_3_211EnologinExcE
N7Iex_3_212EloginlimExcE
N7Iex_3_213EgrouploopExcE
N7Iex_3_212EnoattachExcE
N7Iex_3_210EnotsupExcE
N7Iex_3_210EnoattrExcE
N7Iex_3_216EdircorruptedExcE
N7Iex_3_29EdquotExcE
N7Iex_3_213EnfsremoteExcE
N7Iex_3_214EcontrollerExcE
N7Iex_3_217EnotcontrollerExcE
N7Iex_3_212EenqueuedExcE
N7Iex_3_215EnotenqueuedExcE
N7Iex_3_210EjoinedExcE
N7Iex_3_213EnotjoinedExcE
N7Iex_3_210EnoprocExcE
N7Iex_3_211EmustrunExcE
N7Iex_3_214EnotstoppedExcE
N7Iex_3_212EclockcpuExcE
N7Iex_3_214EinvalstateExcE
N7Iex_3_211EnoexistExcE
N7Iex_3_214EendofminorExcE
N7Iex_3_211EbufsizeExcE
N7Iex_3_29EemptyExcE
N7Iex_3_215EnointrgroupExcE
N7Iex_3_213EinvalmodeExcE
N7Iex_3_214EcantextentExcE
N7Iex_3_213EinvaltimeExcE
N7Iex_3_213EdestroyedExcE
N7Iex_3_211OverflowExcE
N7Iex_3_212UnderflowExcE
N7Iex_3_210DivzeroExcE
N7Iex_3_210InexactExcE
N7Iex_3_214InvalidFpOpExcE
N13IlmThread_3_24TaskE
N13IlmThread_3_218ThreadPoolProviderE
N13IlmThread_3_210ThreadPoolE
NSt3__120__shared_ptr_emplaceIN13IlmThread_3_212_GLOBAL__N_125DefaultThreadPoolProviderENS_9allocatorIS3_EEEE
N13IlmThread_3_212_GLOBAL__N_125DefaultThreadPoolProviderE
NSt3__120__shared_ptr_emplaceIN13IlmThread_3_212_GLOBAL__N_121DefaultThreadPoolDataENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_pointerIPN13IlmThread_3_218ThreadPoolProviderENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN13IlmThread_3_218ThreadPoolProviderEE27__shared_ptr_default_deleteIS2_S2_EE
N13IlmThread_3_29SemaphoreE
1111
11111111
N7Imf_3_29AttributeE
N7Imf_3_213B44CompressorE
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
< < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<C<C<C<C<C<C<C<C<C<C<C<C<C<C<C<D<D<D<D<D<D<D<D<D<D<D<D<D<D<D<E<E<E<E<E<E<E<E<E<E<E<E<E<E<E<F<F<F<F<F<F<F<F<F<F<F<F<F<F<F<G<G<G<G<G<G<G<G<G<G<G<G<G<G<G<H<H<H<H<H<H<H<H<H<H<H<H<H<H<H<I<I<I<I<I<I<I<I<I<I<I<I<I<I<I<J<J<J<J<J<J<J<J<J<J<J<J<J<J<J<K<K<K<K<K<K<K<K<K<K<K<K<K<K<K<L<L<L<L<L<L<L<L<L<L<L<L<L<L<L<M<M<M<M<M<M<M<M<M<M<M<M<M<M<M<N<N<N<N<N<N<N<N<N<N<N<N<N<N<N<O<O<O<O<O<O<O<O<O<O<O<O<O<O<O<P<P<P<P<P<P<P<P<P<P<P<P<P<P<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<R<R<R<R<R<R<R<R<R<R<R<R<R<R<R<S<S<S<S<S<S<S<S<S<S<S<S<S<S<S<T<T<T<T<T<T<T<T<T<T<T<T<T<T<T<U<U<U<U<U<U<U<U<U<U<U<U<U<U<V<V<V<V<V<V<V<V<V<V<V<V<V<V<V<W<W<W<W<W<W<W<W<W<W<W<W<W<W<W<X<X<X<X<X<X<X<X<X<X<X<X<X<X<X<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<[<[<[<[<[<[<[<[<[<[<[<[<[<[<[<\<\<\<\<\<\<\<\<\<\<\<\<\<\<]<]<]<]<]<]<]<]<]<]<]<]<]<]<]<^<^<^<^<^<^<^<^<^<^<^<^<^<^<^<_<_<_<_<_<_<_<_<_<_<_<_<_<_<`<`<`<`<`<`<`<`<`<`<`<`<`<`<`<a<a<a<a<a<a<a<a<a<a<a<a<a<a<a<b<b<b<b<b<b<b<b<b<b<b<b<b<b<c<c<c<c<c<c<c<c<c<c<c<c<c<c<c<d<d<d<d<d<d<d<d<d<d<d<d<d<d<e<e<e<e<e<e<e<e<e<e<e<e<e<e<e<f<f<f<f<f<f<f<f<f<f<f<f<f<f<f<g<g<g<g<g<g<g<g<g<g<g<g<g<g<h<h<h<h<h<h<h<h<h<h<h<h<h<h<h<i<i<i<i<i<i<i<i<i<i<i<i<i<i<j<j<j<j<j<j<j<j<j<j<j<j<j<j<j<k<k<k<k<k<k<k<k<k<k<k<k<k<k<l<l<l<l<l<l<l<l<l<l<l<l<l<l<l<m<m<m<m<m<m<m<m<m<m<m<m<m<m<n<n<n<n<n<n<n<n<n<n<n<n<n<n<o<o<o<o<o<o<o<o<o<o<o<o<o<o<o<p<p<p<p<p<p<p<p<p<p<p<p<p<p<q<q<q<q<q<q<q<q<q<q<q<q<q<q<q<r<r<r<r<r<r<r<r<r<r<r<r<r<r<s<s<s<s<s<s<s<s<s<s<s<s<s<s<s<t<t<t<t<t<t<t<t<t<t<t<t<t<t<u<u<u<u<u<u<u<u<u<u<u<u<u<u<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<w<w<w<w<w<w<w<w<w<w<w<w<w<w<x<x<x<x<x<x<x<x<x<x<x<x<x<x<y<y<y<y<y<y<y<y<y<y<y<y<y<y<y<z<z<z<z<z<z<z<z<z<z<z<z<z<z<{<{<{<{<{<{<{<{<{<{<{<{<{<{<|<|<|<|<|<|<|<|<|<|<|<|<|<|<}<}<}<}<}<}<}<}<}<}<}<}<}<}<}<~<~<~<~<~<~<~<~<~<~<~<~<~<~<
=======
= = = = = = =!=!=!=!=!=!="="="="="="=#=#=#=#=#=$=$=$=%=%=%=&=&=&='='='=(=(=(=)=)=)=*=*=*=+=+=+=,=,=,=-=-=-=-=.=.=.=/=/=/=0=0=0=1=1=1=2=2=2=3=3=3=4=4=4=5=5=5=6=6=6=7=7=7=8=8=8=9=9=9=:=:=:=:=;=;=;=<=<=<=======>=>=>=?=?=?=@=@=@=A=A=A=B=B=B=C=C=C=D=D=D=E=E=E=F=F=F=G=G=G=H=H=H=I=I=I=J=J=J=K=K=K=L=L=L=M=M=M=N=N=N=O=O=O=P=P=P=Q=Q=Q=R=R=R=S=S=S=T=T=T=U=U=U=V=V=V=W=W=W=X=X=X=Y=Y=Y=Z=Z=Z=[=[=[=\=\=\=]=]=]=^=^=^=_=_=_=`=`=`=a=a=a=b=b=b=c=c=c=d=d=d=e=e=e=f=f=f=g=g=g=h=h=h=i=i=i=j=j=j=k=k=k=l=l=l=m=m=m=n=n=n=o=o=o=p=p=p=q=q=r=r=r=s=s=s=t=t=t=u=u=u=v=v=v=w=w=w=x=x=x=y=y=y=z=z=z={={={=|=|=|=}=}=}=~=~=~=
>>>
> > > >!>!>!>">">#>#>#>$>$>%>%>%>&>&>&>'>'>(>(>(>)>)>*>*>*>+>+>+>,>,>->->->.>.>/>/>/>0>0>0>1>1>2>2>2>3>3>4>4>4>5>5>5>6>6>7>7>7>8>8>9>9>9>:>:>;>;>;><><><>=>=>>>>>>>?>?>@>@>@>A>A>B>B>B>C>C>D>D>D>E>E>E>F>F>G>G>G>H>H>I>I>I>J>J>K>K>K>L>L>M>M>M>N>N>O>O>O>P>P>P>Q>Q>R>R>R>S>S>T>T>T>U>U>V>V>V>W>W>X>X>X>Y>Y>Z>Z>Z>[>[>\>\>\>]>]>^>^>^>_>_>`>`>`>a>a>b>b>b>c>c>d>d>d>e>e>f>f>f>g>g>h>h>h>i>i>j>j>j>k>k>l>l>l>m>m>n>n>n>o>o>p>p>p>q>q>r>r>r>s>s>t>t>t>u>u>v>v>v>w>w>x>x>x>y>y>z>z>z>{>{>|>|>|>}>}>~>~>
? ?!?!?"?#?$?%?&?'?(?)?*?*?+?,?-?.?/?0?1?2?2?3?4?5?6?7?8?9?:?;?<?<?=?>???@?A?B?C?D?E?E?F?G?H?I?J?K?L?M?N?O?P?P?Q?R?S?T?U?V?W?X?Y?Z?[?[?\?]?^?_?`?a?b?c?d?e?f?f?g?h?i?j?k?l?m?n?o?p?q?r?s?s?t?u?v?w?x?y?z?{?|?}?~?
@@@
@ @ @!@!@"@"@#@#@$@$@%@%@&@&@'@'@(@(@)@*@*@+@+@,@,@-@-@.@.@/@/@0@0@1@1@2@2@3@3@4@5@5@6@6@7@7@8@8@9@9@:@:@;@;@<@<@=@=@>@?@?@@@@@A@A@B@B@C@C@D@D@E@E@F@G@G@H@H@I@I@J@J@K@K@L@L@M@N@N@O@O@P@P@Q@Q@R@R@S@S@T@U@U@V@V@W@W@X@X@Y@Y@Z@Z@[@\@\@]@]@^@^@_@_@`@`@a@b@b@c@c@d@d@e@e@f@g@g@h@h@i@i@j@j@k@k@l@m@m@n@n@o@o@p@p@q@r@r@s@s@t@t@u@u@v@w@w@x@x@y@y@z@{@{@|@|@}@}@~@~@
AAA
A A!A!A"A"A#A$A$A%A&A&A'A(A(A)A*A*A+A+A,A-A-A.A/A/A0A1A1A2A3A3A4A5A5A6A7A7A8A8A9A:A:A;A<A<A=A>A>A?A@A@AAABABACADADAEAFAFAGAHAHAIAJAJAKALALAMANANAOAPAPAQARARASATATAUAVAVAWAXAXAYAZAZA[A\A\A]A^A^A_A`A`AaAbAbAcAdAdAeAfAfAgAhAhAiAjAjAkAlAlAmAnAnAoApAqArAtAuAwAxAyA{A|A}A
B B!B#B$B&B(B)B+B,B.B/B1B2B4B5B7B9B:B<B=B?B@BBBCBEBGBHBJBKBMBNBPBRBSBUBVBXBZB[B]B^B`BbBcBeBfBhBiBkBmBnBpBrBsBuBvBxBzB{B}B~B
C C"C$C%C'C)C+C-C.C0C2C4C6C7C9C;C=C?C@CBCDCFCHCJCKCMCOCQCSCTCVCXCZC\C^C`CaCcCeCgCiCkClCnCpCrCtCvCxCyC{C}C
D D!D"D#D$D%D&D'D(D)D*D+D,D-D.D0D1D2D3D4D5D6D7D8D9D:D;D<D=D>D?D@DADCDDDEDFDGDHDIDJDKDLDMDNDODPDRDSDTDUDVDWDXDYDZD[D\D]D_D`DaDbDcDdDeDfDgDhDjDkDlDmDnDoDpDqDrDsDuDvDwDxDyDzD{D|D~D
E E!E"E#E%E&E'E)E*E+E,E.E/E0E2E3E4E6E7E8E9E;E<E=E?E@EAECEDEEEGEHEIEKELEMENEPEQERETEUEVEXEYEZE\E]E^E`EaEcEdEeEgEhEiEkElEmEoEpEqEsEtEvEwExEzE{E|E~E
F F"F#F%F&F(F)F+F,F.F0F1F3F4F6F7F9F:F<F>F?FAFBFDFEFGFIFJFLFMFOFPFRFTFUFWFXFZF[F]F_F`FbFcFeFgFhFjFkFmFoFpFrFsFuFwFxFzF|F}F
G G"G$G&G(G)G+G-G/G1G2G4G6G8G:G;G=G?GAGCGDGFGHGJGLGNGOGQGSGUGWGYGZG\G^G`GbGdGgGkGoGrGvGzG~G
H!H#H%H'H)H,H.H0H2H4H6H8H:H<H>HAHCHEHGHIHKHMHPHRHTHVHXHZH]H_HaHcHeHhHjHlHnHpHsHuHwHyH|H~H
I!I$I&I)I+I.I1I3I6I8I;I>I@ICIFIHIKIMIPISIUIXI[I]I`IcIfIhIkInIpIsIvIyI{I~I
J!J$J'J*J-J0J3J6J9J<J?JCJFJIJLJOJRJUJYJ\J_JbJeJiJlJoJrJuJyJ|J
K#K&K*K-K1K5K8K<K?KCKGKJKNKRKUKYK]K`KdKhKkKoKsKwKzK~K
L!L#L&L(L*L,L.L0L2L4L6L8L:L=L?LALCLELGLILLLNLPLRLTLVLXL[L]L_LaLcLfLhLjLlLnLqLsLuLwLzL|L~L
M!M$M'M)M,M.M1M3M6M9M;M>MAMCMFMHMKMNMPMSMVMXM[M^M`McMfMiMkMnMqMsMvMyM|M~M
N!N$N'N*N-N0N3N6N:N=N@NCNFNINLNONSNVNYN\N_NcNfNiNlNoNsNvNyN|N
O#O'O*O.O1O5O9O<O@OCOGOKONOROVOYO]OaOdOhOlOpOsOwO{O~O
P P"P$P&P(P*P,P.P0P2P4P6P9P;P=P?PAPCPEPGPJPLPNPPPRPTPWPYP[P]P_PaPdPfPhPjPlPoPqPsPuPxPzP|P~P
Q"Q$Q'Q)Q,Q/Q1Q4Q6Q9Q<Q>QAQCQFQIQKQNQQQSQVQYQ[Q^QaQcQfQiQlQnQqQtQvQyQ|Q
R!R$R'R*R-R1R4R7R:R=R@RCRFRJRMRPRSRVRYR]R`RcRfRiRlRpRsRvRyR}R
S S'S.S5S=SDSKSRSZSaSiSpSwS
T"T&T*T.T3T7T;T?TCTHTLTPTUTYT]TbTfTjToTsTxT|T
U%U*U/U4U9U>UDUIUNUTUYU^UdUiUoUtUyU
V"V(V.V4V:V@VGVMVSVZV`VfVmVsVzV
W$W+W2W9WAWHWOWVW^WeWmWtW|W
X X$X(X,X1X5X9X=XBXFXJXNXSXWX[X`XdXiXmXqXvXzX
Y"Y'Y-Y2Y7Y<YAYGYLYQYWY\YaYgYlYrYwY|Y
Z%Z+Z1Z7Z>ZDZJZQZWZ]ZdZjZpZwZ}Z
[![([/[6[=[E[L[S[[[b[i[q[x[
\"\&\+\/\3\7\;\@\D\H\L\Q\U\Y\^\b\g\k\o\t\x\}\
] ]%]*]/]5]:]?]D]J]O]T]Z]_]d]j]o]u]z]
^"^(^/^5^;^A^G^N^T^Z^a^g^n^t^z^
_%_,_3_:_A_I_P_W___f_m_u_|_
` `%`)`-`1`5`:`>`B`F`K`O`S`W`\```e`i`m`r`v`{`
a#a(a-a2a7a=aBaGaMaRaWa]abagamaraxa}a
b&b,b2b8b>bEbKbQbXb^bdbkbqbxb~b
c!c)c0c7c>cEcMcTc[cccjcrcyc
d#d'd+d/d3d8d<d@dDdIdMdQdVdZd^dcdgdkdpdtdyd}d
e e&e+e0e5e:e@eEeJeOeUeZe_eeejepeue{e
f#f)f/f5f<fBfHfNfUf[fafhfnfuf{f
g%g-g4g;gBgIgQgXg_gggngvg}g
h!h%h)h-h2h6h:h>hBhGhKhOhThXh\hahehihnhrhwh{h
i#i(i.i3i8i=iCiHiMiRiXi]ibihimisixi~i
j&j3j?jLjXjejrj
k"k0k?kMk\kkkzk
l#l,l4l<lElMlVl_lhlplyl
m&m1m;mEmPm[mempm{m
n*n6nCnOn\ninun
o&o4oCoRo`ooo~o
p%p.p6p?pGpPpXpapjpsp|p
q)q3q>qHqSq^qhqsq~q
r!r-r9rFrSr_rlryr
s*s8sGsVsdsss
t t(t0t9tAtJtRt[tdtltut~t
u"u,u6uAuKuVuaukuvu
v$v1v=vIvVvcvpv}v
w w.w<wKwZwhwww
x"x*x2x;xCxLxUx]xfxoxxx
y$y/y9yDyNyYydynyyy
z(z4z@zMzZzfzsz
{${2{A{O{^{m{{{
;~;~;~;~;~;~;~;~;};};};};};};};};};|;|;|;|;|;|;|;|;{;{;{;{;{;{;{;{;{;z;z;z;z;z;z;z;z;y;y;y;y;y;y;y;y;y;x;x;x;x;x;x;x;x;x;w;w;w;w;w;w;w;w;v;v;v;v;v;v;v;v;v;u;u;u;u;u;u;u;u;t;t;t;t;t;t;t;t;t;s;s;s;s;s;s;s;s;s;r;r;r;r;r;r;r;r;q;q;q;q;q;q;q;q;q;p;p;p;p;p;p;p;p;o;o;o;o;o;o;o;o;o;n;n;n;n;n;n;n;n;n;m;m;m;m;m;m;m;m;l;l;l;l;l;l;l;l;l;k;k;k;k;k;k;k;k;j;j;j;j;j;j;j;j;j;i;i;i;i;i;i;i;i;i;h;h;h;h;h;h;h;h;g;g;g;g;g;g;g;g;g;f;f;f;f;f;f;f;f;f;e;e;e;e;e;e;e;e;d;d;d;d;d;d;d;d;d;c;c;c;c;c;c;c;c;c;b;b;b;b;b;b;b;b;a;a;a;a;a;a;a;a;a;`;`;`;`;`;`;`;`;`;_;_;_;_;_;_;_;_;^;^;^;^;^;^;^;^;^;];];];];];];];];];\;\;\;\;\;\;\;\;[;[;[;[;[;[;[;[;[;Z;Z;Z;Z;Z;Z;Z;Z;Z;Y;Y;Y;Y;Y;Y;Y;Y;X;X;X;X;X;X;X;X;X;W;W;W;W;W;W;W;W;W;V;V;V;V;V;V;V;V;V;U;U;U;U;U;U;U;U;T;T;T;T;T;T;T;T;T;S;S;S;S;S;S;S;S;S;R;R;R;R;R;R;R;R;R;Q;Q;Q;Q;Q;Q;Q;Q;P;P;P;P;P;P;P;P;P;O;O;O;O;O;O;O;O;O;N;N;N;N;N;N;N;N;N;M;M;M;M;M;M;M;M;L;L;L;L;L;L;L;L;L;K;K;K;K;K;K;K;K;K;J;J;J;J;J;J;J;J;J;I;I;I;I;I;I;I;I;H;H;H;H;H;H;H;H;H;G;G;G;G;G;G;G;G;G;F;F;F;F;F;F;F;F;F;E;E;E;E;E;E;E;E;E;D;D;D;D;D;D;D;D;C;C;C;C;C;C;C;C;C;B;B;B;B;B;B;B;B;B;A;A;A;A;A;A;A;A;A;@;@;@;@;@;@;@;@;@;?;?;?;?;?;?;?;?;?;>;>;>;>;>;>;>;>;=;=;=;=;=;=;=;=;=;<;<;<;<;<;<;<;<;<;;;;;;;;;;;;;;;;;;;:;:;:;:;:;:;:;:;:;9;9;9;9;9;9;9;9;9;8;8;8;8;8;8;8;8;8;7;7;7;7;7;7;7;7;6;6;6;6;6;6;6;6;6;5;5;5;5;5;5;5;5;5;4;4;4;4;4;4;4;4;4;3;3;3;3;3;3;3;3;3;2;2;2;2;2;2;2;2;2;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;/;/;/;/;/;/;/;/;/;.;.;.;.;.;.;.;.;-;-;-;-;-;-;-;-;-;,;,;,;,;,;,;,;,;,;+;+;+;+;+;+;+;+;+;*;*;*;*;*;*;*;*;*;);););););););););(;(;(;(;(;(;(;(;(;';';';';';';';';';&;&;&;&;&;&;&;&;&;%;%;%;%;%;%;%;%;%;$;$;$;$;$;$;$;$;$;#;#;#;#;#;#;#;#;#;";";";";";";";";";!;!;!;!;!;!;!;!;!; ; ; ; ; ; ; ; ; ;
;;;;;;
:~:~:~:~:~:}:}:}:}:}:|:|:|:|:|:{:{:{:{:{:z:z:z:z:z:y:y:y:y:x:x:x:x:x:w:w:w:w:w:v:v:v:v:v:u:u:u:u:u:t:t:t:t:t:s:s:s:s:s:r:r:r:r:r:q:q:q:q:q:p:p:p:p:p:o:o:o:o:o:n:n:n:n:n:m:m:m:m:m:l:l:l:l:l:k:k:k:k:k:j:j:j:j:j:i:i:i:i:i:h:h:h:h:h:g:g:g:g:g:f:f:f:f:f:e:e:e:e:e:d:d:d:d:d:c:c:c:c:c:b:b:b:b:b:a:a:a:a:a:`:`:`:`:`
:::
9~9~9~9}9}9|9|9|9{9{9{9z9z9z9y9y9y9x9x9x9w9w9w9v9v9v9u9u9u9t9t9t9s9s9s9r9r9r9q9q9q9p9p9p9o9o9n9n9n9m9m9m9l9l9l9k9k9k9j9j9j9i9i9i9h9h9h9g9g9g9f9f9f9e9e9e9d9d9d9c9c9c9b9b9b9a9a9a9`9`9`9_9_9_9^9^9^9]9]9]9\9\9\9[9[9[9Z9Z9Z9Y9Y9Y9X9X9X9W9W9W9V9V9V9U9U9U9T9T9T9S9S9S9R9R9R9Q9Q9Q9P9P9P9O9O9O9N9N9N9M9M9M9L9L9L9K9K9K9J9J9J9I9I9I9H9H9H9G9G9G9F9F9F9E9E9E9D9D9D9C9C9C9B9B9B9A9A9A9@9@9@9?9?9?9>9>9>9=9=9=9<9<9<9<9;9;9;9:9:9:9999999898989797979696969595959494949393939292929191919090909/9/9/9.9.9.9.9-9-9-9,9,9,9+9+9+9*9*9*9)9)9)9(9(9(9'9'9'9&9&9&9%9%9%9$9$9$9$9#9#9#9"9"9"9!9!9!9 9 9 9
9999
8~8}8}8|8|8{8{8z8y8y8x8x8w8w8v8v8u8t8t8s8s8r8r8q8q8p8o8o8n8n8m8m8l8l8k8j8j8i8i8h8h8g8g8f8f8e8d8d8c8c8b8b8a8a8`8_8_8^8^8]8]8\8\8[8[8Z8Y8Y8X8X8W8W8V8V8U8U8T8T8S8R8R8Q8Q8P8P8O8O8N8N8M8M8L8K8K8J8J8I8I8H8H8G8G8F8F8E8D8D8C8C8B8B8A8A8@8@8?8?8>8>8=8=8<8;8;8:8:898988888787868685858484838282818180808/8/8.8.8-8-8,8,8+8+8*8*8)8)8(8(8'8&8&8%8%8$8$8#8#8"8"8!8!8 8 8
888
7~7}7|7{7z7y7x7w7v7u7u7t7s7r7q7p7o7n7m7l7k7j7i7h7h7g7f7e7d7c7b7a7`7_7^7]7\7\7[7Z7Y7X7W7V7U7T7S7R7Q7Q7P7O7N7M7L7K7J7I7H7G7G7F7E7D7C7B7A7@7?7>7=7=7<7;7:79787776757474737271707/7.7-7,7+7+7*7)7(7'7&7%7$7#7"7"7!7 7
6~6}6}6|6{6z6y6y6x6w6v6u6u6t6s6r6q6p6p6o6n6m6l6l6k6j6i6h6h6g6f6e6d6d6c6b6a6`6`6_6^6]6\6\6[6Z6Y6Y6X6W6V6U6U6T6S6R6Q6Q6P6O6N6M6M6L6K6J6J6I6H6G6F6F6E6D6C6B6B6A6@6?6?6>6=6<6;6;6:696868676665646463626161606/6.6-6-6,6+6*6*6)6(6'6'6&6%6$6#6#6"6!6 6 6
5~5}5{5z5x5w5v5t5s5r5p5o5n5l5k5i5h5g5e5d5c5a5`5_5]5\5[5Y5X5W5U5T5S5Q5P5O5M5L5K5I5H5G5E5D5C5A5@5?5>5<5;5:585756545352505/5.5-5+5*5)5'5&5%5$5"5!5 5
4~4}4{4z4y4x4w4v4u4t4s4q4p4o4n4m4l4k4j4i4g4f4e4d4c4b4a4`4_4^4]4[4Z4Y4X4W4V4U4T4S4R4Q4P4N4M4L4K4J4I4H4G4F4E4D4C4B4A4?4>4=4<4;4:494847464544434241404/4.4-4+4*4)4(4'4&4%4$4#4"4!4 4
3}3|3z3x3v3t3r3p3o3m3k3i3g3e3c3b3`3^3\3Z3X3W3U3S3Q3O3M3L3J3H3F3D3B3A3?3=3;3938363432303/3-3+3)3'3&3$3"3 3
2}2{2z2x2w2u2s2r2p2o2m2k2j2h2g2e2c2b2`2_2]2[2Z2X2W2U2S2R2P2O2M2L2J2H2G2E2D2B2A2?2=2<2:2927262423212/2.2,2+2)2(2&2%2#2"2 2
1~1|1{1y1x1w1u1t1s1q1p1o1m1l1k1i1h1f1e1d1b1a1`1^1]1\1Z1Y1X1V1U1T1R1Q1P1N1M1L1J1I1H1F1E1D1B1A1@1?1=1<1;19181715141311101/1.1,1+1*1(1'1&1%1#1"1!1
0}0|0{0z0y0x0w0v0u0s0r0q0p0o0n0m0l0k0i0h0g0f0e0d0c0b0a0`0^0]0\0[0Z0Y0X0W0V0U0S0P0N0L0J0H0F0C0A0?0=0;09070503000.0,0*0(0&0$0"0 0
/{/w/t/p/l/i/e/a/^/Z/V/R/O/K/H/D/@/=/9/5/2/./+/'/#/ /
.}.y.v.s.p.m.i.f.c.`.].Y.V.S.P.M.J.F.C.@.=.:.7.4.1...*.'.$.!.
-|-y-v-t-q-n-l-i-f-c-a-^-[-Y-V-S-Q-N-K-I-F-D-A->-<-9-6-4-1-/-,-)-'-$-"-
,~,|,z,x,u,s,q,o,m,j,h,f,d,a,_,],[,Y,W,T,R,P,N,L,J,H,E,C,A,?,=,;,9,7,4,2,0,.,,,*,(,&,$,", ,
+{+w+s+p+l+h+d+a+]+Y+V+R+N+K+G+D+@+<+9+5+1+.+*+'+#+ +
*|*y*v*s*o*l*i*f*c*_*\*Y*V*S*P*L*I*F*C*@*=*:*7*3*0*-***'*$*!*
)~)|)y)v)s)q)n)k)i)f)c)`)^)[)X)V)S)P)N)K)H)F)C)A)>);)9)6)4)1).),)))')$)!)
(~(|(z(w(u(s(q(n(l(j(h(f(c(a(_(]([(Y(V(T(R(P(N(L(I(G(E(C(A(?(=(;(8(6(4(2(0(.(,(*(((&($(!(
'~'z'w's'o'k'h'd'`']'Y'U'R'N'J'G'C'?'<'8'5'1'-'*'&'#'
&|&y&v&r&o&l&i&e&b&_&\&Y&V&R&O&L&I&F&C&@&<&9&6&3&0&-&*&'&$&!&
%~%{%y%v%s%p%n%k%h%f%c%`%^%[%X%U%S%P%N%K%H%F%C%@%>%;%8%6%3%1%.%+%)%&%$%!%
$~$y$u$p$l$h$c$_$Z$V$R$M$I$E$A$<$8$4$0$,$'$#$
#z#s#k#d#\#U#N#F#?#8#1#)#"#
"x"r"l"e"_"X"R"L"E"?"9"3"-"&" "
!~!x!s!m!h!c!]!X!S!M!H!C!=!8!3!.!)!#!
 { w r n j e a \ X T O K G C > : 6 2 - ) % ! 
|skbYPH?7.&
/70v0
021q1
1-2k2
2&3d3
4.4M4l4
5%5D5c5
696W6v6
7,7J7h7
8,8;8J8Y8h8w8
9)989G9U9d9s9
:":1:?:N:\:k:y:
;&;4;B;Q;_;m;|;
<!<(</<6<=<D<K<R<Y<`<g<n<u<|<
=!=(=/=5=<=C=J=Q=W=^=e=l=r=y=
> >'>->4>:>A>G>N>U>[>b>h>o>u>|>
?$?*?1?7?>?D?J?Q?W?]?d?j?p?w?}?
@ @#@&@)@,@/@2@5@8@;@>@A@D@H@K@N@Q@T@W@Z@]@`@c@f@i@l@o@r@u@x@{@~@
A!A$A'A*A-A0A2A5A8A;A>AAADAGAJALAOARAUAXA[A^A`AcAfAiAlAoArAtAwAzA}A
B!B$B'B)B,B/B1B4B7B:B<B?BBBDBGBJBMBOBRBUBWBZB]B_BbBeBgBjBmBoBrBuBwBzB}B
C!C$C'C)C,C.C1C3C6C8C;C>C@CCCECHCJCMCOCRCTCWCYC\C^CaCcCfCiCkCnCpCsCuCxCzC}C
D D!D#D$D%D&D'D(D*D+D,D-D.D0D1D2D3D4D6D7D8D9D:D;D=D>D?D@DADBDDDEDFDGDHDJDKDLDMDNDODQDRDSDTDUDVDXDYDZD[D\D]D^D`DaDbDcDdDeDgDhDiDjDkDlDmDoDpDqDrDsDtDvDwDxDyDzD{D|D~D
E E!E"E#E$E%E&E'E(E)E*E+E,E-E.E0E1E2E3E4E5E6E7E8E9E:E;E<E=E>E?E@EAEBECEDEEEFEGEHEJEKELEMENEOEPEQERESETEUEVEWEXEYEZE[E\E]E^E_E`EaEbEcEdEeEfEgEhEiEjEkElEmEnEoEpEqErEsEtEuEvEwExEyEzE|E}E~E
F F"F$F&F'F)F+F-F/F1F3F4F6F8F:F<F>F?FAFCFEFGFIFJFLFNFPFRFSFUFWFYF[F]F^F`FbFdFfFgFiFkFmFoFpFrFtFvFwFyF{F}F
G!G"G$G&G'G)G+G,G.G/G1G3G4G6G8G9G;G<G>G@GAGCGEGFGHGIGKGMGNGPGQGSGUGVGXGYG[G]G^G`GaGcGeGfGhGiGkGlGnGpGqGsGtGvGwGyG{G|G~G
H H!H!H"H#H$H$H%H&H&H'H(H)H)H*H+H+H,H-H.H.H/H0H0H1H2H2H3H4H5H5H6H7H7H8H9H9H:H;H;H<H=H>H>H?H@H@HAHBHBHCHDHDHEHFHGHGHHHIHIHJHKHKHLHMHMHNHOHOHPHQHQHRHSHSHTHUHVHVHWHXHXHYHZHZH[H\H\H]H^H^H_H`H`HaHbHbHcHdHdHeHfHfHgHhHhHiHjHjHkHlHlHmHnHnHoHpHpHqHrHrHsHtHtHuHvHvHwHwHxHyHyHzH{H{H|H}H}H~H
III
I I I!I!I"I"I#I#I$I%I%I&I&I'I'I(I(I)I*I*I+I+I,I,I-I-I.I.I/I0I0I1I1I2I2I3I3I4I4I5I6I6I7I7I8I8I9I9I:I:I;I<I<I=I=I>I>I?I?I@I@IAIAIBICICIDIDIEIEIFIFIGIGIHIHIIIIIJIKIKILILIMIMININIOIOIPIPIQIQIRISISITITIUIUIVIVIWIWIXIXIYIYIZIZI[I[I\I]I]I^I^I_I_I`I`IaIaIbIbIcIcIdIdIeIeIfIfIgIgIhIhIiIjIjIkIkIlIlImImInInIoIoIpIpIqIqIrIrIsIsItItIuIuIvIvIwIwIxIxIyIyIzIzI{I{I|I|I}I}I~I~I
J J!J"J#J$J%J%J&J'J(J)J*J+J+J,J-J.J/J0J1J1J2J3J4J5J6J6J7J8J9J:J;J<J<J=J>J?J@JAJAJBJCJDJEJFJFJGJHJIJJJKJKJLJMJNJOJPJPJQJRJSJTJTJUJVJWJXJYJYJZJ[J\J]J]J^J_J`JaJbJbJcJdJeJfJfJgJhJiJjJjJkJlJmJnJnJoJpJqJrJrJsJtJuJvJvJwJxJyJzJzJ{J|J}J~J~J
KKK
K K!K!K"K#K#K$K%K%K&K'K'K(K)K)K*K+K+K,K-K-K.K/K/K0K1K1K2K3K3K4K5K5K6K7K7K8K9K9K:K;K;K<K=K=K>K?K?K@KAKAKBKBKCKDKDKEKFKFKGKHKHKIKJKJKKKLKLKMKMKNKOKOKPKQKQKRKSKSKTKUKUKVKVKWKXKXKYKZKZK[K\K\K]K]K^K_K_K`KaKaKbKcKcKdKdKeKfKfKgKhKhKiKiKjKkKkKlKmKmKnKnKoKpKpKqKrKrKsKsKtKuKuKvKwKwKxKxKyKzKzK{K{K|K}K}K~K
LLLLL
L L L L L!L!L!L!L"L"L"L"L#L#L#L#L$L$L$L$L%L%L%L%L&L&L&L&L'L'L'L'L(L(L(L(L)L)L*L*L+L+L,L,L-L-L.L.L/L/L0L0L1L1L2L2L3L3L4L4L5L5L6L6L6L7L7L8L8L9L9L:L:L;L;L<L<L=L=L>L>L?L?L@L@LALALBLBLCLCLCLDLDLELELFLFLGLGLHLHLILILJLJLKLKLKLLLLLMLMLNLNLOLOLPLPLQLQLRLRLRLSLSLTLTLULULVLVLWLWLWLXLXLYLYLZLZL[L[L\L\L\L]L]L^L^L_L_L`L`LaLaLaLbLbLcLcLdLdLeLeLeLfLfLgLgLhLhLiLiLiLjLjLkLkLlLlLlLmLmLnLnLoLoLpLpLpLqLqLrLrLsLsLsLtLtLuLuLvLvLvLwLwLxLxLyLyLyLzLzL{L{L|L|L|L}L}L~L~L
MMMM
M M M M!M!M!M"M"M"M"M#M#M#M$M$M$M%M%M%M&M&M&M&M'M'M'M(M(M(M)M)M)M)M*M*M*M+M+M+M,M,M,M-M-M-M-M.M.M.M/M/M/M0M0M0M0M1M1M1M2M2M2M2M3M3M3M4M4M4M5M5M5M5M6M6M6M7M7M7M8M8M8M8M9M9M9M:M:M:M:M;M;M;M<M<M<M=M=M=M=M>M>M>M?M?M?M?M@M@M@MAMAMAMAMBMBMBMCMCMCMCMDMDMDMEMEMEMEMFMFMFMGMGMGMGMHMHMHMIMIMIMIMJMJMJMKMKMKMKMLMLMLMMMMMMMMMNMNMNMOMOMOMOMPMPMPMQMQMQMQMRMRMRMSMSMSMSMTMTMTMTMUMUMUMVMVMVMVMWMWMWMXMXMXMXMYMYMYMYMZMZMZM[M[M[M[M\M\M\M\M]M]M]M^M^M^M^M_M_M_M_M`M`M`MaMaMaMaMbMbMbMbMcMcMcMdMdMdMdMeMeMeMeMfMfMfMgMgMgMgMhMhMhMhMiMiMiMiMjMjMjMkMkMkMkMlMlMlMlMmMmMmMmMnMnMnMoMoMoMoMpMpMpMpMqMqMqMqMrMrMrMrMsMsMsMtMtMtMtMuMuMuMuMvMvMvMvMwMwMwMwMxMxMxMxMyMyMyMzMzMzMzM{M{M{M{M|M|M|M|M}M}M}M}M~M~M~M~M
NNNN
N N N!N!N!N"N"N"N#N#N$N$N$N%N%N%N&N&N'N'N'N(N(N(N)N)N)N*N*N+N+N+N,N,N,N-N-N.N.N.N/N/N/N0N0N0N1N1N2N2N2N3N3N3N4N4N4N5N5N5N6N6N7N7N7N8N8N8N9N9N9N:N:N:N;N;N<N<N<N=N=N=N>N>N>N?N?N?N@N@N@NANANBNBNBNCNCNCNDNDNDNENENENFNFNFNGNGNGNHNHNHNININJNJNJNKNKNKNLNLNLNMNMNMNNNNNNNONONONPNPNPNQNQNQNRNRNRNSNSNSNTNTNTNUNUNUNVNVNVNWNWNWNXNXNXNYNYNYNZNZNZN[N[N[N\N\N\N]N]N]N^N^N^N_N_N_N`N`N`NaNaNaNbNbNbNcNcNcNdNdNdNeNeNeNfNfNfNgNgNgNhNhNhNiNiNiNjNjNjNkNkNkNlNlNlNmNmNmNmNnNnNnNoNoNoNpNpNpNqNqNqNrNrNrNsNsNsNtNtNtNuNuNuNuNvNvNvNwNwNwNxNxNxNyNyNyNzNzNzN{N{N{N{N|N|N|N}N}N}N~N~N~N
OOO
O O O O!O!O"O"O#O#O$O$O%O%O%O&O&O'O'O(O(O)O)O)O*O*O+O+O,O,O-O-O-O.O.O/O/O0O0O1O1O1O2O2O3O3O4O4O4O5O5O6O6O7O7O7O8O8O9O9O:O:O;O;O;O<O<O=O=O>O>O>O?O?O@O@OAOAOAOBOBOCOCOCODODOEOEOFOFOFOGOGOHOHOIOIOIOJOJOKOKOKOLOLOMOMONONONOOOOOPOPOPOQOQOROROSOSOSOTOTOUOUOUOVOVOWOWOWOXOXOYOYOYOZOZO[O[O[O\O\O]O]O]O^O^O_O_O`O`O`OaOaObObObOcOcOcOdOdOeOeOeOfOfOgOgOgOhOhOiOiOiOjOjOkOkOkOlOlOmOmOmOnOnOoOoOoOpOpOpOqOqOrOrOrOsOsOtOtOtOuOuOuOvOvOwOwOwOxOxOyOyOyOzOzOzO{O{O|O|O|O}O}O}O~O~O
PPPPPPPP
`P`P`P`P`PaPaPaPaPaPbPbPbPbPbPcPcPcPcPcPdPdPdPdPdPePePePePePfPfPfPfPfPgPgPgPgPgPhPhPhPhPhPiPiPiPiPiPiPjPjPjPjPjPkPkPkPkPkPlPlPlPlPlPmPmPmPmPmPnPnPnPnPnPnPoPoPoPoPoPpPpPpPpPpPqPqPqPqPqPrPrPrPrPrPrPsPsPsPsPsPtPtPtPtPtPtPuPuPuPuPuPvPvPvPvPvPwPwPwPwPwPwPxPxPxPxPxPyPyPyPyPyPyPzPzPzPzPzP{P{P{P{P{P{P|P|P|P|P|P}P}P}P}P}P}P~P~P~P~P~P
QQQQQQ
`Q`Q`Q`Q`Q`QaQaQaQaQaQaQaQbQbQbQbQbQbQbQcQcQcQcQcQcQcQdQdQdQdQdQdQdQeQeQeQeQeQeQeQfQfQfQfQfQfQgQgQgQgQgQgQgQhQhQhQhQhQhQhQiQiQiQiQiQiQiQjQjQjQjQjQjQjQkQkQkQkQkQkQkQlQlQlQlQlQlQlQmQmQmQmQmQmQmQmQnQnQnQnQnQnQnQoQoQoQoQoQoQoQpQpQpQpQpQpQpQqQqQqQqQqQqQqQrQrQrQrQrQrQrQsQsQsQsQsQsQsQsQtQtQtQtQtQtQtQuQuQuQuQuQuQuQvQvQvQvQvQvQvQvQwQwQwQwQwQwQwQxQxQxQxQxQxQxQxQyQyQyQyQyQyQyQzQzQzQzQzQzQzQ{Q{Q{Q{Q{Q{Q{Q{Q|Q|Q|Q|Q|Q|Q|Q}Q}Q}Q}Q}Q}Q}Q}Q~Q~Q~Q~Q~Q~Q~Q~Q
RRRRRRRR
`R`R`R`R`RaRaRaRaRbRbRbRbRbRcRcRcRcRcRdRdRdRdReReReReReRfRfRfRfRfRgRgRgRgRhRhRhRhRhRiRiRiRiRiRjRjRjRjRjRkRkRkRkRlRlRlRlRlRmRmRmRmRmRnRnRnRnRnRoRoRoRoRoRpRpRpRpRpRqRqRqRqRqRrRrRrRrRsRsRsRsRsRtRtRtRtRtRuRuRuRuRuRvRvRvRvRvRwRwRwRwRwRxRxRxRxRxRyRyRyRyRyRzRzRzRzRzRzR{R{R{R{R{R|R|R|R|R|R}R}R}R}R}R~R~R~R~R~R
SSSSS
`S`S`S`S`S`SaSaSaSaSaSaSbSbSbSbSbSbSbScScScScScScSdSdSdSdSdSdSeSeSeSeSeSeSeSfSfSfSfSfSfSgSgSgSgSgSgSgShShShShShShSiSiSiSiSiSiSjSjSjSjSjSjSjSkSkSkSkSkSkSlSlSlSlSlSlSlSmSmSmSmSmSmSnSnSnSnSnSnSnSoSoSoSoSoSoSoSpSpSpSpSpSpSqSqSqSqSqSqSqSrSrSrSrSrSrSrSsSsSsSsSsSsStStStStStStStSuSuSuSuSuSuSuSvSvSvSvSvSvSvSwSwSwSwSwSwSxSxSxSxSxSxSxSySySySySySySySzSzSzSzSzSzSzS{S{S{S{S{S{S{S|S|S|S|S|S|S|S}S}S}S}S}S}S}S~S~S~S~S~S~S~S
TTTTTTTTTTTTTT
T T T T T T T T T T T T T T T T!T!T!T!T!T!T!T!T!T!T!T!T!T!T!T"T"T"T"T"T"T"T"T"T"T"T"T"T"T"T#T#T#T#T#T#T#T#T#T#T#T#T#T#T#T$T$T$T$T$T$T$T$T$T$T$T$T$T$T$T$T%T%T%T%T%T%T%T%T%T%T%T%T%T%T%T&T&T&T&T&T&T&T&T&T&T&T&T&T&T&T&T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T(T(T(T(T(T(T(T(T(T(T(T(T(T(T(T(T)T)T)T)T)T)T)T)T)T*T*T*T*T*T*T*T*T+T+T+T+T+T+T+T+T,T,T,T,T,T,T,T,T,T-T-T-T-T-T-T-T-T.T.T.T.T.T.T.T.T/T/T/T/T/T/T/T/T/T0T0T0T0T0T0T0T0T1T1T1T1T1T1T1T1T1T2T2T2T2T2T2T2T2T3T3T3T3T3T3T3T3T3T4T4T4T4T4T4T4T4T4T5T5T5T5T5T5T5T5T6T6T6T6T6T6T6T6T6T7T7T7T7T7T7T7T7T7T8T8T8T8T8T8T8T8T8T9T9T9T9T9T9T9T9T9T:T:T:T:T:T:T:T:T:T:T;T;T;T;T;T;T;T;T;T<T<T<T<T<T<T<T<T<T=T=T=T=T=T=T=T=T=T>T>T>T>T>T>T>T>T>T>T?T?T?T?T?T?T?T?T?T@T@T@T@T@T@T@T@T@T@TATATATATATATATATATATBTBTBTBTBTBTBTBTBTCTCTCTCTCTCTCTCTCTCTDTDTDTDTDTDTDTDTDTDTETETETETETETETETETETFTFTFTFTFTFTFTFTFTFTGTGTGTGTGTGTGTGTGTGTHTHTHTHTHTHTHTHTHTHTHTITITITITITITITITITITJTJTJTJTJTJTJTJTJTJTKTKTKTKTKTKTKTKTKTKTKTLTLTLTLTLTLTLTLTLTLTMTMTMTMTMTMTMTMTMTMTMTNTNTNTNTNTNTNTNTNTNTNTOTOTOTOTOTOTOTOTOTOTPTPTPTPTPTPTPTPTPTPTPTQTQTQTQTQTQTQTQTQTQTQTRTRTRTRTRTRTRTRTRTRTRTSTSTSTSTSTSTSTSTSTSTSTTTTTTTTTTTTTTTTTTTTTTTTTUTUTUTUTUTUTUTUTUTUTUTVTVTVTVTVTVTVTVTVTVTVTWTWTWTWTWTWTWTWTWTWTWTWTXTXTXTXTXTXTXTXTXTXTXTYTYTYTYTYTYTYTYTYTYTYTYTZTZTZTZTZTZTZTZTZTZTZTZT[T[T[T[T[T[T[T[T[T[T[T[T\T\T\T\T\T\T\T\T\T\T\T\T]T]T]T]T]T]T]T]T]T]T]T]T^T^T^T^T^T^T^T^T^T^T^T^T_T_T_T_T_T_T_T_T_T_T_T_T`T`T`T`T`T`T`T`T`T`T`T`TaTaTaTaTaTaTaTaTaTaTaTaTaTbTbTbTbTbTbTbTbTbTbTbTbTcTcTcTcTcTcTcTcTcTcTcTcTcTdTdTdTdTdTdTdTdTdTdTdTdTdTeTeTeTeTeTeTeTeTeTeTeTeTfTfTfTfTfTfTfTfTfTfTfTfTfTgTgTgTgTgTgTgTgTgTgTgTgTgThThThThThThThThThThThThThTiTiTiTiTiTiTiTiTiTiTiTiTiTiTjTjTjTjTjTjTjTjTjTjTjTjTjTkTkTkTkTkTkTkTkTkTkTkTkTkTlTlTlTlTlTlTlTlTlTlTlTlTlTlTmTmTmTmTmTmTmTmTmTmTmTmTmTmTnTnTnTnTnTnTnTnTnTnTnTnTnToToToToToToToToToToToToToToTpTpTpTpTpTpTpTpTpTpTpTpTpTpTqTqTqTqTqTqTqTqTqTqTqTqTqTqTrTrTrTrTrTrTrTrTrTrTrTrTrTrTsTsTsTsTsTsTsTsTsTsTsTsTsTsTsTtTtTtTtTtTtTtTtTtTtTtTtTtTtTuTuTuTuTuTuTuTuTuTuTuTuTuTuTuTvTvTvTvTvTvTvTvTvTvTvTvTvTvTwTwTwTwTwTwTwTwTwTwTwTwTwTwTwTxTxTxTxTxTxTxTxTxTxTxTxTxTxTxTyTyTyTyTyTyTyTyTyTyTyTyTyTyTyTzTzTzTzTzTzTzTzTzTzTzTzTzTzTzT{T{T{T{T{T{T{T{T{T{T{T{T{T{T{T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T}T}T}T}T}T}T}T}T}T}T}T}T}T}T}T~T~T~T~T~T~T~T~T~T~T~T~T~T~T~T~T
UUUUUUUUUUUU
U U U U U U U U U U U U U U U!U!U!U!U!U!U!U!U!U!U!U!U!U!U"U"U"U"U"U"U"U"U"U"U"U"U"U"U#U#U#U#U#U#U#U#U#U#U#U#U#U#U$U$U$U$U$U$U$U$U$U$U$U$U$U$U%U%U%U%U%U%U%U%U%U%U%U%U%U%U%U&U&U&U&U&U&U&U&U&U&U&U&U&U&U'U'U'U'U'U'U'U'U'U'U'U'U'U'U'U(U(U(U(U(U(U(U(U(U(U(U(U(U(U(U)U)U)U)U)U)U)U)U)U)U)U)U)U)U*U*U*U*U*U*U*U*U*U*U*U*U*U*U*U+U+U+U+U+U+U+U+U+U+U+U+U+U+U+U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U-U-U-U-U-U-U-U-U-U-U-U-U-U-U-U-U.U.U.U.U.U.U.U.U.U.U.U.U.U.U.U/U/U/U/U/U/U/U/U/U/U/U/U/U/U/U/U0U0U0U0U0U0U0U0U0U0U0U0U0U0U0U1U1U1U1U1U1U1U1U1U1U1U1U1U1U1U1U2U2U2U2U2U2U2U2U2U2U2U2U2U2U2U2U3U3U3U3U3U3U3U3U3U3U3U4U4U4U4U4U4U4U4U5U5U5U5U5U5U5U5U6U6U6U6U6U6U6U6U7U7U7U7U7U7U7U7U8U8U8U8U8U8U8U8U8U9U9U9U9U9U9U9U9U:U:U:U:U:U:U:U:U:U;U;U;U;U;U;U;U;U<U<U<U<U<U<U<U<U<U=U=U=U=U=U=U=U=U>U>U>U>U>U>U>U>U>U?U?U?U?U?U?U?U?U?U@U@U@U@U@U@U@U@U@UAUAUAUAUAUAUAUAUAUBUBUBUBUBUBUBUBUBUCUCUCUCUCUCUCUCUCUDUDUDUDUDUDUDUDUDUEUEUEUEUEUEUEUEUEUFUFUFUFUFUFUFUFUFUGUGUGUGUGUGUGUGUGUGUHUHUHUHUHUHUHUHUHUIUIUIUIUIUIUIUIUIUIUJUJUJUJUJUJUJUJUJUKUKUKUKUKUKUKUKUKUKULULULULULULULULULULUMUMUMUMUMUMUMUMUMUMUNUNUNUNUNUNUNUNUNUOUOUOUOUOUOUOUOUOUOUPUPUPUPUPUPUPUPUPUPUQUQUQUQUQUQUQUQUQUQUQURURURURURURURURURURUSUSUSUSUSUSUSUSUSUSUTUTUTUTUTUTUTUTUTUTUUUUUUUUUUUUUUUUUUUUUUUVUVUVUVUVUVUVUVUVUVUWUWUWUWUWUWUWUWUWUWUWUXUXUXUXUXUXUXUXUXUXUXUYUYUYUYUYUYUYUYUYUYUYUZUZUZUZUZUZUZUZUZUZU[U[U[U[U[U[U[U[U[U[U[U\U\U\U\U\U\U\U\U\U\U\U]U]U]U]U]U]U]U]U]U]U]U]U^U^U^U^U^U^U^U^U^U^U^U_U_U_U_U_U_U_U_U_U_U_U`U`U`U`U`U`U`U`U`U`U`UaUaUaUaUaUaUaUaUaUaUaUaUbUbUbUbUbUbUbUbUbUbUbUcUcUcUcUcUcUcUcUcUcUcUcUdUdUdUdUdUdUdUdUdUdUdUdUeUeUeUeUeUeUeUeUeUeUeUeUfUfUfUfUfUfUfUfUfUfUfUfUgUgUgUgUgUgUgUgUgUgUgUgUhUhUhUhUhUhUhUhUhUhUhUhUiUiUiUiUiUiUiUiUiUiUiUiUjUjUjUjUjUjUjUjUjUjUjUjUkUkUkUkUkUkUkUkUkUkUkUkUkUlUlUlUlUlUlUlUlUlUlUlUlUmUmUmUmUmUmUmUmUmUmUmUmUmUnUnUnUnUnUnUnUnUnUnUnUnUoUoUoUoUoUoUoUoUoUoUoUoUoUpUpUpUpUpUpUpUpUpUpUpUpUpUqUqUqUqUqUqUqUqUqUqUqUqUqUrUrUrUrUrUrUrUrUrUrUrUrUrUsUsUsUsUsUsUsUsUsUsUsUsUsUtUtUtUtUtUtUtUtUtUtUtUtUtUtUuUuUuUuUuUuUuUuUuUuUuUuUuUvUvUvUvUvUvUvUvUvUvUvUvUvUvUwUwUwUwUwUwUwUwUwUwUwUwUwUxUxUxUxUxUxUxUxUxUxUxUxUxUxUyUyUyUyUyUyUyUyUyUyUyUyUyUyUzUzUzUzUzUzUzUzUzUzUzUzUzUzU{U{U{U{U{U{U{U{U{U{U{U{U{U{U|U|U|U|U|U|U|U|U|U|U|U|U|U|U}U}U}U}U}U}U}U}U}U}U}U}U}U}U~U~U~U~U~U~U~U~U~U~U~U~U~U~U~U
N7Imf_3_214TypedAttributeIN9Imath_3_23BoxINS1_4Vec2IiEEEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_23BoxINS1_4Vec2IfEEEEEE
N7Imf_3_214TypedAttributeINS_11ChannelListEEE
N7Imf_3_214TypedAttributeINS_14ChromaticitiesEEE
N7Imf_3_221CompositeDeepScanLineE
N7Imf_3_212_GLOBAL__N_117LineCompositeTaskE
N7Imf_3_214TypedAttributeINS_11CompressionEEE
N7Imf_3_210CompressorE
ON7Imf_3_215DeepCompositingE
N7Imf_3_214TypedAttributeINS_14DeepImageStateEEE
N7Imf_3_221DeepScanLineInputFileE
N7Imf_3_212_GLOBAL__N_114LineBufferTaskE
N7Imf_3_218DeepTiledInputFileE
N7Imf_3_212_GLOBAL__N_114TileBufferTaskE
N7Imf_3_214TypedAttributeIdEE
?xxx@ff&@
R@ZZ
0@xxx@ZZ
l@33
@ff.A
$Aff
Aff&A
4A33
!Aff
A333A
$Aff
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
   ! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ 
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!<!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P!Q!R!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"p"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&~&
' '!'"'#'$'%'&'''(')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'L'M'N'O'P'Q'R'S'T'U'V'W'X'Y'Z'['\']'^'_'`'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
+ +!+"+#+$+%+&+'+(+)+*+++,+-+.+/+0+1+2+3+4+5+6+7+8+9+:+;+<+=+>+?+@+A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+[+\+]+^+_+`+a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z+{+|+}+~+
, ,!,",#,$,%,&,',(,),*,+,,,-,.,/,0,1,2,3,4,5,6,7,8,9,:,;,<,=,>,?,@,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,[,\,],^,_,`,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,{,|,},~,
- -!-"-#-$-%-&-'-(-)-*-+-,---.-/-0-1-2-3-4-5-6-7-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-[-\-]-^-_-`-a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z-{-|-}-~-
. .!.".#.$.%.&.'.(.).*.+.,.-.../.0.1.2.3.4.5.6.7.8.9.:.;.<.=.>.?.@.A.B.C.D.E.F.G.H.I.J.K.L.M.N.O.P.Q.R.S.T.U.V.W.X.Y.Z.[.\.].^._.`.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.{.|.}.~.
/ /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
0 0!0"0#0$0%0&0'0(0)0*0+0,0-0.0/000102030405060708090:0;0<0=0>0?0@0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
1 1!1"1#1$1%1&1'1(1)1*1+1,1-1.1/101112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2D2E2F2G2H2I2J2K2L2M2N2O2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2~2
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
4 4!4"4#4$4%4&4'4(4)4*4+4,4-4.4/404142434445464748494:4;4<4=4>4?4@4A4B4C4D4E4F4G4H4I4J4K4L4M4N4O4P4Q4R4S4T4U4V4W4X4Y4Z4[4\4]4^4_4`4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x4y4z4{4|4}4~4
5 5!5"5#5$5%5&5'5(5)5*5+5,5-5.5/505152535455565758595:5;5<5=5>5?5@5A5B5C5D5E5F5G5H5I5J5K5L5M5N5O5P5Q5R5S5T5U5V5W5X5Y5Z5[5\5]5^5_5`5a5b5c5d5e5f5g5h5i5j5k5l5m5n5o5p5q5r5s5t5u5v5w5x5y5z5{5|5}5~5
6 6!6"6#6$6%6&6'6(6)6*6+6,6-6.6/606162636465666768696:6;6<6=6>6?6@6A6B6C6D6E6F6G6H6I6J6K6L6M6N6O6P6Q6R6S6T6U6V6W6X6Y6Z6[6\6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6w6x6y6z6{6|6}6~6
7 7!7"7#7$7%7&7'7(7)7*7+7,7-7.7/707172737475767778797:7;7<7=7>7?7@7A7B7C7D7E7F7G7H7I7J7K7L7M7N7O7P7Q7R7S7T7U7V7W7X7Y7Z7[7\7]7^7_7`7a7b7c7d7e7f7g7h7i7j7k7l7m7n7o7p7q7r7s7t7u7v7w7x7y7z7{7|7}7~7
8 8!8"8#8$8%8&8'8(8)8*8+8,8-8.8/808182838485868788898:8;8<8=8>8?8@8A8B8C8D8E8F8G8H8I8J8K8L8M8N8O8P8Q8R8S8T8U8V8W8X8Y8Z8[8\8]8^8_8`8a8b8c8d8e8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}8~8
9 9!9"9#9$9%9&9'9(9)9*9+9,9-9.9/909192939495969798999:9;9<9=9>9?9@9A9B9C9D9E9F9G9H9I9J9K9L9M9N9O9P9Q9R9S9T9U9V9W9X9Y9Z9[9\9]9^9_9`9a9b9c9d9e9f9g9h9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9y9z9{9|9}9~9
: :!:":#:$:%:&:':(:):*:+:,:-:.:/:0:1:2:3:4:5:6:7:8:9:::;:<:=:>:?:@:A:B:C:D:E:F:G:H:I:J:K:L:M:N:O:P:Q:R:S:T:U:V:W:X:Y:Z:[:\:]:^:_:`:a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:}:~:
; ;!;";#;$;%;&;';(;);*;+;,;-;.;/;0;1;2;3;4;5;6;7;8;9;:;;;<;=;>;?;@;A;B;C;D;E;F;G;H;I;J;K;L;M;N;O;P;Q;R;S;T;U;V;W;X;Y;Z;[;\;];^;_;`;a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;{;|;};~;
< <!<"<#<$<%<&<'<(<)<*<+<,<-<.</<0<1<2<3<4<5<6<7<8<9<:<;<<<=<><?<@<A<B<C<D<E<F<G<H<I<J<K<L<M<N<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<\<]<^<_<`<a<b<c<d<e<f<g<h<i<j<k<l<m<n<o<p<q<r<s<t<u<v<w<x<y<z<{<|<}<~<
= =!="=#=$=%=&='=(=)=*=+=,=-=.=/=0=1=2=3=4=5=6=7=8=9=:=;=<===>=?=@=A=B=C=D=E=F=G=H=I=J=K=L=M=N=O=P=Q=R=S=T=U=V=W=X=Y=Z=[=\=]=^=_=`=a=b=c=d=e=f=g=h=i=j=k=l=m=n=o=p=q=r=s=t=u=v=w=x=y=z={=|=}=~=
> >!>">#>$>%>&>'>(>)>*>+>,>->.>/>0>1>2>3>4>5>6>7>8>9>:>;><>=>>>?>@>A>B>C>D>E>F>G>H>I>J>K>L>M>N>O>P>Q>R>S>T>U>V>W>X>Y>Z>[>\>]>^>_>`>a>b>c>d>e>f>g>h>i>j>k>l>m>n>o>p>q>r>s>t>u>v>w>x>y>z>{>|>}>~>
? ?!?"?#?$?%?&?'?(?)?*?+?,?-?.?/?0?1?2?3?4?5?6?7?8?9?:?;?<?=?>???@?A?B?C?D?E?F?G?H?I?J?K?L?M?N?O?P?Q?R?S?T?U?V?W?X?Y?Z?[?\?]?^?_?`?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t?u?v?w?x?y?z?{?|?}?~?
@ @!@"@#@$@%@&@'@(@)@*@+@,@-@.@/@0@1@2@3@4@5@6@7@8@9@:@;@<@=@>@?@@@A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@[@\@]@^@_@`@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@{@|@}@~@
A A!A"A#A$A%A&A'A(A)A*A+A,A-A.A/A0A1A2A3A4A5A6A7A8A9A:A;A<A=A>A?A@AAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZA[A\A]A^A_A`AaAbAcAdAeAfAgAhAiAjAkAlAmAnAoApAqArAsAtAuAvAwAxAyAzA{A|A}A~A
B B!B"B#B$B%B&B'B(B)B*B+B,B-B.B/B0B1B2B3B4B5B6B7B8B9B:B;B<B=B>B?B@BABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZB[B\B]B^B_B`BaBbBcBdBeBfBgBhBiBjBkBlBmBnBoBpBqBrBsBtBuBvBwBxByBzB{B|B}B~B
C C!C"C#C$C%C&C'C(C)C*C+C,C-C.C/C0C1C2C3C4C5C6C7C8C9C:C;C<C=C>C?C@CACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZC[C\C]C^C_C`CaCbCcCdCeCfCgChCiCjCkClCmCnCoCpCqCrCsCtCuCvCwCxCyCzC{C|C}C~C
D D!D"D#D$D%D&D'D(D)D*D+D,D-D.D/D0D1D2D3D4D5D6D7D8D9D:D;D<D=D>D?D@DADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZD[D\D]D^D_D`DaDbDcDdDeDfDgDhDiDjDkDlDmDnDoDpDqDrDsDtDuDvDwDxDyDzD{D|D}D~D
E E!E"E#E$E%E&E'E(E)E*E+E,E-E.E/E0E1E2E3E4E5E6E7E8E9E:E;E<E=E>E?E@EAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZE[E\E]E^E_E`EaEbEcEdEeEfEgEhEiEjEkElEmEnEoEpEqErEsEtEuEvEwExEyEzE{E|E}E~E
F F!F"F#F$F%F&F'F(F)F*F+F,F-F.F/F0F1F2F3F4F5F6F7F8F9F:F;F<F=F>F?F@FAFBFCFDFEFFFGFHFIFJFKFLFMFNFOFPFQFRFSFTFUFVFWFXFYFZF[F\F]F^F_F`FaFbFcFdFeFfFgFhFiFjFkFlFmFnFoFpFqFrFsFtFuFvFwFxFyFzF{F|F}F~F
G G!G"G#G$G%G&G'G(G)G*G+G,G-G.G/G0G1G2G3G4G5G6G7G8G9G:G;G<G=G>G?G@GAGBGCGDGEGFGGGHGIGJGKGLGMGNGOGPGQGRGSGTGUGVGWGXGYGZG[G\G]G^G_G`GaGbGcGdGeGfGgGhGiGjGkGlGmGnGoGpGqGrGsGtGuGvGwGxGyGzG{G|G}G~G
H H!H"H#H$H%H&H'H(H)H*H+H,H-H.H/H0H1H2H3H4H5H6H7H8H9H:H;H<H=H>H?H@HAHBHCHDHEHFHGHHHIHJHKHLHMHNHOHPHQHRHSHTHUHVHWHXHYHZH[H\H]H^H_H`HaHbHcHdHeHfHgHhHiHjHkHlHmHnHoHpHqHrHsHtHuHvHwHxHyHzH{H|H}H~H
I I!I"I#I$I%I&I'I(I)I*I+I,I-I.I/I0I1I2I3I4I5I6I7I8I9I:I;I<I=I>I?I@IAIBICIDIEIFIGIHIIIJIKILIMINIOIPIQIRISITIUIVIWIXIYIZI[I\I]I^I_I`IaIbIcIdIeIfIgIhIiIjIkIlImInIoIpIqIrIsItIuIvIwIxIyIzI{I|I}I~I
J J!J"J#J$J%J&J'J(J)J*J+J,J-J.J/J0J1J2J3J4J5J6J7J8J9J:J;J<J=J>J?J@JAJBJCJDJEJFJGJHJIJJJKJLJMJNJOJPJQJRJSJTJUJVJWJXJYJZJ[J\J]J^J_J`JaJbJcJdJeJfJgJhJiJjJkJlJmJnJoJpJqJrJsJtJuJvJwJxJyJzJ{J|J}J~J
K K!K"K#K$K%K&K'K(K)K*K+K,K-K.K/K0K1K2K3K4K5K6K7K8K9K:K;K<K=K>K?K@KAKBKCKDKEKFKGKHKIKJKKKLKMKNKOKPKQKRKSKTKUKVKWKXKYKZK[K\K]K^K_K`KaKbKcKdKeKfKgKhKiKjKkKlKmKnKoKpKqKrKsKtKuKvKwKxKyKzK{K|K}K~K
L L!L"L#L$L%L&L'L(L)L*L+L,L-L.L/L0L1L2L3L4L5L6L7L8L9L:L;L<L=L>L?L@LALBLCLDLELFLGLHLILJLKLLLMLNLOLPLQLRLSLTLULVLWLXLYLZL[L\L]L^L_L`LaLbLcLdLeLfLgLhLiLjLkLlLmLnLoLpLqLrLsLtLuLvLwLxLyLzL{L|L}L~L
M M!M"M#M$M%M&M'M(M)M*M+M,M-M.M/M0M1M2M3M4M5M6M7M8M9M:M;M<M=M>M?M@MAMBMCMDMEMFMGMHMIMJMKMLMMMNMOMPMQMRMSMTMUMVMWMXMYMZM[M\M]M^M_M`MaMbMcMdMeMfMgMhMiMjMkMlMmMnMoMpMqMrMsMtMuMvMwMxMyMzM{M|M}M~M
N N!N"N#N$N%N&N'N(N)N*N+N,N-N.N/N0N1N2N3N4N5N6N7N8N9N:N;N<N=N>N?N@NANBNCNDNENFNGNHNINJNKNLNMNNNONPNQNRNSNTNUNVNWNXNYNZN[N\N]N^N_N`NaNbNcNdNeNfNgNhNiNjNkNlNmNnNoNpNqNrNsNtNuNvNwNxNyNzN{N|N}N~N
O O!O"O#O$O%O&O'O(O)O*O+O,O-O.O/O0O1O2O3O4O5O6O7O8O9O:O;O<O=O>O?O@OAOBOCODOEOFOGOHOIOJOKOLOMONOOOPOQOROSOTOUOVOWOXOYOZO[O\O]O^O_O`OaObOcOdOeOfOgOhOiOjOkOlOmOnOoOpOqOrOsOtOuOvOwOxOyOzO{O|O}O~O
P P!P"P#P$P%P&P'P(P)P*P+P,P-P.P/P0P1P2P3P4P5P6P7P8P9P:P;P<P=P>P?P@PAPBPCPDPEPFPGPHPIPJPKPLPMPNPOPPPQPRPSPTPUPVPWPXPYPZP[P\P]P^P_P`PaPbPcPdPePfPgPhPiPjPkPlPmPnPoPpPqPrPsPtPuPvPwPxPyPzP{P|P}P~P
Q Q!Q"Q#Q$Q%Q&Q'Q(Q)Q*Q+Q,Q-Q.Q/Q0Q1Q2Q3Q4Q5Q6Q7Q8Q9Q:Q;Q<Q=Q>Q?Q@QAQBQCQDQEQFQGQHQIQJQKQLQMQNQOQPQQQRQSQTQUQVQWQXQYQZQ[Q\Q]Q^Q_Q`QaQbQcQdQeQfQgQhQiQjQkQlQmQnQoQpQqQrQsQtQuQvQwQxQyQzQ{Q|Q}Q~Q
R R!R"R#R$R%R&R'R(R)R*R+R,R-R.R/R0R1R2R3R4R5R6R7R8R9R:R;R<R=R>R?R@RARBRCRDRERFRGRHRIRJRKRLRMRNRORPRQRRRSRTRURVRWRXRYRZR[R\R]R^R_R`RaRbRcRdReRfRgRhRiRjRkRlRmRnRoRpRqRrRsRtRuRvRwRxRyRzR{R|R}R~R
S S!S"S#S$S%S&S'S(S)S*S+S,S-S.S/S0S1S2S3S4S5S6S7S8S9S:S;S<S=S>S?S@SASBSCSDSESFSGSHSISJSKSLSMSNSOSPSQSRSSSTSUSVSWSXSYSZS[S\S]S^S_S`SaSbScSdSeSfSgShSiSjSkSlSmSnSoSpSqSrSsStSuSvSwSxSySzS{S|S}S~S
T T!T"T#T$T%T&T'T(T)T*T+T,T-T.T/T0T1T2T3T4T5T6T7T8T9T:T;T<T=T>T?T@TATBTCTDTETFTGTHTITJTKTLTMTNTOTPTQTRTSTTTUTVTWTXTYTZT[T\T]T^T_T`TaTbTcTdTeTfTgThTiTjTkTlTmTnToTpTqTrTsTtTuTvTwTxTyTzT{T|T}T~T
U U!U"U#U$U%U&U'U(U)U*U+U,U-U.U/U0U1U2U3U4U5U6U7U8U9U:U;U<U=U>U?U@UAUBUCUDUEUFUGUHUIUJUKULUMUNUOUPUQURUSUTUUUVUWUXUYUZU[U\U]U^U_U`UaUbUcUdUeUfUgUhUiUjUkUlUmUnUoUpUqUrUsUtUuUvUwUxUyUzU{U|U}U~U
V V!V"V#V$V%V&V'V(V)V*V+V,V-V.V/V0V1V2V3V4V5V6V7V8V9V:V;V<V=V>V?V@VAVBVCVDVEVFVGVHVIVJVKVLVMVNVOVPVQVRVSVTVUVVVWVXVYVZV[V\V]V^V_V`VaVbVcVdVeVfVgVhViVjVkVlVmVnVoVpVqVrVsVtVuVvVwVxVyVzV{V|V}V~V
W W!W"W#W$W%W&W'W(W)W*W+W,W-W.W/W0W1W2W3W4W5W6W7W8W9W:W;W<W=W>W?W@WAWBWCWDWEWFWGWHWIWJWKWLWMWNWOWPWQWRWSWTWUWVWWWXWYWZW[W\W]W^W_W`WaWbWcWdWeWfWgWhWiWjWkWlWmWnWoWpWqWrWsWtWuWvWwWxWyWzW{W|W}W~W
X X!X"X#X$X%X&X'X(X)X*X+X,X-X.X/X0X1X2X3X4X5X6X7X8X9X:X;X<X=X>X?X@XAXBXCXDXEXFXGXHXIXJXKXLXMXNXOXPXQXRXSXTXUXVXWXXXYXZX[X\X]X^X_X`XaXbXcXdXeXfXgXhXiXjXkXlXmXnXoXpXqXrXsXtXuXvXwXxXyXzX{X|X}X~X
Y Y!Y"Y#Y$Y%Y&Y'Y(Y)Y*Y+Y,Y-Y.Y/Y0Y1Y2Y3Y4Y5Y6Y7Y8Y9Y:Y;Y<Y=Y>Y?Y@YAYBYCYDYEYFYGYHYIYJYKYLYMYNYOYPYQYRYSYTYUYVYWYXYYYZY[Y\Y]Y^Y_Y`YaYbYcYdYeYfYgYhYiYjYkYlYmYnYoYpYqYrYsYtYuYvYwYxYyYzY{Y|Y}Y~Y
Z Z!Z"Z#Z$Z%Z&Z'Z(Z)Z*Z+Z,Z-Z.Z/Z0Z1Z2Z3Z4Z5Z6Z7Z8Z9Z:Z;Z<Z=Z>Z?Z@ZAZBZCZDZEZFZGZHZIZJZKZLZMZNZOZPZQZRZSZTZUZVZWZXZYZZZ[Z\Z]Z^Z_Z`ZaZbZcZdZeZfZgZhZiZjZkZlZmZnZoZpZqZrZsZtZuZvZwZxZyZzZ{Z|Z}Z~Z
[ [!["[#[$[%[&['[([)[*[+[,[-[.[/[0[1[2[3[4[5[6[7[8[9[:[;[<[=[>[?[@[A[B[C[D[E[F[G[H[I[J[K[L[M[N[O[P[Q[R[S[T[U[V[W[X[Y[Z[[[\[][^[_[`[a[b[c[d[e[f[g[h[i[j[k[l[m[n[o[p[q[r[s[t[u[v[w[x[y[z[{[|[}[~[
\ \!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\0\1\2\3\4\5\6\7\8\9\:\;\<\=\>\?\@\A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z\[\\\]\^\_\`\a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z\{\|\}\~\
] ]!]"]#]$]%]&]'](])]*]+],]-].]/]0]1]2]3]4]5]6]7]8]9]:];]<]=]>]?]@]A]B]C]D]E]F]G]H]I]J]K]L]M]N]O]P]Q]R]S]T]U]V]W]X]Y]Z][]\]]]^]_]`]a]b]c]d]e]f]g]h]i]j]k]l]m]n]o]p]q]r]s]t]u]v]w]x]y]z]{]|]}]~]
^ ^!^"^#^$^%^&^'^(^)^*^+^,^-^.^/^0^1^2^3^4^5^6^7^8^9^:^;^<^=^>^?^@^A^B^C^D^E^F^G^H^I^J^K^L^M^N^O^P^Q^R^S^T^U^V^W^X^Y^Z^[^\^]^^^_^`^a^b^c^d^e^f^g^h^i^j^k^l^m^n^o^p^q^r^s^t^u^v^w^x^y^z^{^|^}^~^
_ _!_"_#_$_%_&_'_(_)_*_+_,_-_._/_0_1_2_3_4_5_6_7_8_9_:_;_<_=_>_?_@_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X_Y_Z_[_\_]_^___`_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_{_|_}_~_
` `!`"`#`$`%`&`'`(`)`*`+`,`-`.`/`0`1`2`3`4`5`6`7`8`9`:`;`<`=`>`?`@`A`B`C`D`E`F`G`H`I`J`K`L`M`N`O`P`Q`R`S`T`U`V`W`X`Y`Z`[`\`]`^`_```a`b`c`d`e`f`g`h`i`j`k`l`m`n`o`p`q`r`s`t`u`v`w`x`y`z`{`|`}`~`
a a!a"a#a$a%a&a'a(a)a*a+a,a-a.a/a0a1a2a3a4a5a6a7a8a9a:a;a<a=a>a?a@aAaBaCaDaEaFaGaHaIaJaKaLaMaNaOaPaQaRaSaTaUaVaWaXaYaZa[a\a]a^a_a`aaabacadaeafagahaiajakalamanaoapaqarasatauavawaxayaza{a|a}a~a
b b!b"b#b$b%b&b'b(b)b*b+b,b-b.b/b0b1b2b3b4b5b6b7b8b9b:b;b<b=b>b?b@bAbBbCbDbEbFbGbHbIbJbKbLbMbNbObPbQbRbSbTbUbVbWbXbYbZb[b\b]b^b_b`babbbcbdbebfbgbhbibjbkblbmbnbobpbqbrbsbtbubvbwbxbybzb{b|b}b~b
c c!c"c#c$c%c&c'c(c)c*c+c,c-c.c/c0c1c2c3c4c5c6c7c8c9c:c;c<c=c>c?c@cAcBcCcDcEcFcGcHcIcJcKcLcMcNcOcPcQcRcScTcUcVcWcXcYcZc[c\c]c^c_c`cacbcccdcecfcgchcicjckclcmcncocpcqcrcsctcucvcwcxcyczc{c|c}c~c
d d!d"d#d$d%d&d'd(d)d*d+d,d-d.d/d0d1d2d3d4d5d6d7d8d9d:d;d<d=d>d?d@dAdBdCdDdEdFdGdHdIdJdKdLdMdNdOdPdQdRdSdTdUdVdWdXdYdZd[d\d]d^d_d`dadbdcdddedfdgdhdidjdkdldmdndodpdqdrdsdtdudvdwdxdydzd{d|d}d~d
e e!e"e#e$e%e&e'e(e)e*e+e,e-e.e/e0e1e2e3e4e5e6e7e8e9e:e;e<e=e>e?e@eAeBeCeDeEeFeGeHeIeJeKeLeMeNeOePeQeReSeTeUeVeWeXeYeZe[e\e]e^e_e`eaebecedeeefegeheiejekelemeneoepeqereseteuevewexeyeze{e|e}e~e
f f!f"f#f$f%f&f'f(f)f*f+f,f-f.f/f0f1f2f3f4f5f6f7f8f9f:f;f<f=f>f?f@fAfBfCfDfEfFfGfHfIfJfKfLfMfNfOfPfQfRfSfTfUfVfWfXfYfZf[f\f]f^f_f`fafbfcfdfefffgfhfifjfkflfmfnfofpfqfrfsftfufvfwfxfyfzf{f|f}f~f
g g!g"g#g$g%g&g'g(g)g*g+g,g-g.g/g0g1g2g3g4g5g6g7g8g9g:g;g<g=g>g?g@gAgBgCgDgEgFgGgHgIgJgKgLgMgNgOgPgQgRgSgTgUgVgWgXgYgZg[g\g]g^g_g`gagbgcgdgegfggghgigjgkglgmgngogpgqgrgsgtgugvgwgxgygzg{g|g}g~g
h h!h"h#h$h%h&h'h(h)h*h+h,h-h.h/h0h1h2h3h4h5h6h7h8h9h:h;h<h=h>h?h@hAhBhChDhEhFhGhHhIhJhKhLhMhNhOhPhQhRhShThUhVhWhXhYhZh[h\h]h^h_h`hahbhchdhehfhghhhihjhkhlhmhnhohphqhrhshthuhvhwhxhyhzh{h|h}h~h
i i!i"i#i$i%i&i'i(i)i*i+i,i-i.i/i0i1i2i3i4i5i6i7i8i9i:i;i<i=i>i?i@iAiBiCiDiEiFiGiHiIiJiKiLiMiNiOiPiQiRiSiTiUiViWiXiYiZi[i\i]i^i_i`iaibicidieifigihiiijikiliminioipiqirisitiuiviwixiyizi{i|i}i~i
j j!j"j#j$j%j&j'j(j)j*j+j,j-j.j/j0j1j2j3j4j5j6j7j8j9j:j;j<j=j>j?j@jAjBjCjDjEjFjGjHjIjJjKjLjMjNjOjPjQjRjSjTjUjVjWjXjYjZj[j\j]j^j_j`jajbjcjdjejfjgjhjijjjkjljmjnjojpjqjrjsjtjujvjwjxjyjzj{j|j}j~j
k k!k"k#k$k%k&k'k(k)k*k+k,k-k.k/k0k1k2k3k4k5k6k7k8k9k:k;k<k=k>k?k@kAkBkCkDkEkFkGkHkIkJkKkLkMkNkOkPkQkRkSkTkUkVkWkXkYkZk[k\k]k^k_k`kakbkckdkekfkgkhkikjkkklkmknkokpkqkrksktkukvkwkxkykzk{k|k}k~k
l l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~l
m m!m"m#m$m%m&m'm(m)m*m+m,m-m.m/m0m1m2m3m4m5m6m7m8m9m:m;m<m=m>m?m@mAmBmCmDmEmFmGmHmImJmKmLmMmNmOmPmQmRmSmTmUmVmWmXmYmZm[m\m]m^m_m`mambmcmdmemfmgmhmimjmkmlmmmnmompmqmrmsmtmumvmwmxmymzm{m|m}m~m
n n!n"n#n$n%n&n'n(n)n*n+n,n-n.n/n0n1n2n3n4n5n6n7n8n9n:n;n<n=n>n?n@nAnBnCnDnEnFnGnHnInJnKnLnMnNnOnPnQnRnSnTnUnVnWnXnYnZn[n\n]n^n_n`nanbncndnenfngnhninjnknlnmnnnonpnqnrnsntnunvnwnxnynzn{n|n}n~n
o o!o"o#o$o%o&o'o(o)o*o+o,o-o.o/o0o1o2o3o4o5o6o7o8o9o:o;o<o=o>o?o@oAoBoCoDoEoFoGoHoIoJoKoLoMoNoOoPoQoRoSoToUoVoWoXoYoZo[o\o]o^o_o`oaobocodoeofogohoiojokolomonooopoqorosotouovowoxoyozo{o|o}o~o
p p!p"p#p$p%p&p'p(p)p*p+p,p-p.p/p0p1p2p3p4p5p6p7p8p9p:p;p<p=p>p?p@pApBpCpDpEpFpGpHpIpJpKpLpMpNpOpPpQpRpSpTpUpVpWpXpYpZp[p\p]p^p_p`papbpcpdpepfpgphpipjpkplpmpnpopppqprpsptpupvpwpxpypzp{p|p}p~p
q q!q"q#q$q%q&q'q(q)q*q+q,q-q.q/q0q1q2q3q4q5q6q7q8q9q:q;q<q=q>q?q@qAqBqCqDqEqFqGqHqIqJqKqLqMqNqOqPqQqRqSqTqUqVqWqXqYqZq[q\q]q^q_q`qaqbqcqdqeqfqgqhqiqjqkqlqmqnqoqpqqqrqsqtquqvqwqxqyqzq{q|q}q~q
r r!r"r#r$r%r&r'r(r)r*r+r,r-r.r/r0r1r2r3r4r5r6r7r8r9r:r;r<r=r>r?r@rArBrCrDrErFrGrHrIrJrKrLrMrNrOrPrQrRrSrTrUrVrWrXrYrZr[r\r]r^r_r`rarbrcrdrerfrgrhrirjrkrlrmrnrorprqrrrsrtrurvrwrxryrzr{r|r}r~r
s s!s"s#s$s%s&s's(s)s*s+s,s-s.s/s0s1s2s3s4s5s6s7s8s9s:s;s<s=s>s?s@sAsBsCsDsEsFsGsHsIsJsKsLsMsNsOsPsQsRsSsTsUsVsWsXsYsZs[s\s]s^s_s`sasbscsdsesfsgshsisjskslsmsnsospsqsrssstsusvswsxsyszs{s|s}s~s
t t!t"t#t$t%t&t't(t)t*t+t,t-t.t/t0t1t2t3t4t5t6t7t8t9t:t;t<t=t>t?t@tAtBtCtDtEtFtGtHtItJtKtLtMtNtOtPtQtRtStTtUtVtWtXtYtZt[t\t]t^t_t`tatbtctdtetftgthtitjtktltmtntotptqtrtstttutvtwtxtytzt{t|t}t~t
u u!u"u#u$u%u&u'u(u)u*u+u,u-u.u/u0u1u2u3u4u5u6u7u8u9u:u;u<u=u>u?u@uAuBuCuDuEuFuGuHuIuJuKuLuMuNuOuPuQuRuSuTuUuVuWuXuYuZu[u\u]u^u_u`uaubucudueufuguhuiujukulumunuoupuqurusutuuuvuwuxuyuzu{u|u}u~u
v v!v"v#v$v%v&v'v(v)v*v+v,v-v.v/v0v1v2v3v4v5v6v7v8v9v:v;v<v=v>v?v@vAvBvCvDvEvFvGvHvIvJvKvLvMvNvOvPvQvRvSvTvUvVvWvXvYvZv[v\v]v^v_v`vavbvcvdvevfvgvhvivjvkvlvmvnvovpvqvrvsvtvuvvvwvxvyvzv{v|v}v~v
w w!w"w#w$w%w&w'w(w)w*w+w,w-w.w/w0w1w2w3w4w5w6w7w8w9w:w;w<w=w>w?w@wAwBwCwDwEwFwGwHwIwJwKwLwMwNwOwPwQwRwSwTwUwVwWwXwYwZw[w\w]w^w_w`wawbwcwdwewfwgwhwiwjwkwlwmwnwowpwqwrwswtwuwvwwwxwywzw{w|w}w~w
x x!x"x#x$x%x&x'x(x)x*x+x,x-x.x/x0x1x2x3x4x5x6x7x8x9x:x;x<x=x>x?x@xAxBxCxDxExFxGxHxIxJxKxLxMxNxOxPxQxRxSxTxUxVxWxXxYxZx[x\x]x^x_x`xaxbxcxdxexfxgxhxixjxkxlxmxnxoxpxqxrxsxtxuxvxwxxxyxzx{x|x}x~x
y y!y"y#y$y%y&y'y(y)y*y+y,y-y.y/y0y1y2y3y4y5y6y7y8y9y:y;y<y=y>y?y@yAyByCyDyEyFyGyHyIyJyKyLyMyNyOyPyQyRySyTyUyVyWyXyYyZy[y\y]y^y_y`yaybycydyeyfygyhyiyjykylymynyoypyqyrysytyuyvywyxyyyzy{y|y}y~y
z z!z"z#z$z%z&z'z(z)z*z+z,z-z.z/z0z1z2z3z4z5z6z7z8z9z:z;z<z=z>z?z@zAzBzCzDzEzFzGzHzIzJzKzLzMzNzOzPzQzRzSzTzUzVzWzXzYzZz[z\z]z^z_z`zazbzczdzezfzgzhzizjzkzlzmznzozpzqzrzsztzuzvzwzxzyzzz{z|z}z~z
{ {!{"{#{${%{&{'{({){*{+{,{-{.{/{0{1{2{3{4{5{6{7{8{9{:{;{<{={>{?{@{A{B{C{D{E{F{G{H{I{J{K{L{M{N{O{P{Q{R{S{T{U{V{W{X{Y{Z{[{\{]{^{_{`{a{b{c{d{e{f{g{h{i{j{k{l{m{n{o{p{q{r{s{t{u{v{w{x{y{z{{{|{}{~{
| |!|"|#|$|%|&|'|(|)|*|+|,|-|.|/|0|1|2|3|4|5|6|7|8|9|:|;|<|=|>|?|@|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|[|\|]|^|_|`|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|{|||}|~|
} }!}"}#}$}%}&}'}(})}*}+},}-}.}/}0}1}2}3}4}5}6}7}8}9}:};}<}=}>}?}@}A}B}C}D}E}F}G}H}I}J}K}L}M}N}O}P}Q}R}S}T}U}V}W}X}Y}Z}[}\}]}^}_}`}a}b}c}d}e}f}g}h}i}j}k}l}m}n}o}p}q}r}s}t}u}v}w}x}y}z}{}|}}}~}
~ ~!~"~#~$~%~&~'~(~)~*~+~,~-~.~/~0~1~2~3~4~5~6~7~8~9~:~;~<~=~>~?~@~A~B~C~D~E~F~G~H~I~J~K~L~M~N~O~P~Q~R~S~T~U~V~W~X~Y~Z~[~\~]~^~_~`~a~b~c~d~e~f~g~h~i~j~k~l~m~n~o~p~q~r~s~t~u~v~w~x~y~z~{~|~}~~~
 !
 !
 !
 "
 $
 $
 (&
 (
 (
 (*
 (
 0,
 0,
 01.
@0
@0
@02
@0
@04
@04
@086
@0
@A8
@A8
@A8:
@A8
@A8<
@AC<
@AC<>
@B
@D
@D
@HF
@H
@H
@HJ
@H
@PL
@PL
@PQN
@P
@P
@PR
@P
@PT
@PT
@PXV
@P
@`X
@`X
@`XZ
@`X
@`a\
@`a\
@`a\^
`b
`d
`d
`hf
`h
`h
`hj
`h
`pl
`pl
`pqn
pr
pt
pt
pxv
px
xz
x|
x|
x|~
   ! 
   ! 
   ! 
   " 
   $ 
   $ 
   ( & 
   ( 
   ( 
   ( * 
   ( 
   0 , 
   0 , 
   0 1 . 
 @ 0 
 @ 0 
 @ 0 2 
 @ 0 
 @ 0 4 
 @ 0 4 
 @ 0 8 6 
 @ 0 
 @ A 8 
 @ A 8 
 @ A 8 : 
 @ A 8 
 @ A 8 < 
 @ A C < 
 @ A C < > 
 @ B 
 @ D 
 @ D 
 @ H F 
 @ H 
 @ H 
 @ H J 
 @ H 
 @ P L 
 @ P L 
 @ P Q N 
 @ P 
 @ P 
 @ P R 
 @ P 
 @ P T 
 @ P T 
 @ P X V 
 @ P 
 @ ` X 
 @ ` X 
 @ ` X Z 
 @ ` X 
 @ ` a \ 
 @ ` a \ 
 @ ` a \ ^ 
 ` b 
 ` d 
 ` d 
 ` h f 
 ` h 
 ` h 
 ` h j 
 ` h 
 ` p l 
 ` p l 
 ` p q n 
 p r 
 p t 
 p t 
 p x v 
 p x 
 x z 
 x | 
 x | 
 x | ~ 
! !!!
! !!!
! !!!
! !"!
! !$!
! !$!
! !(!&!
! !(!
! !(!
! !(!*!
! !(!
! !0!,!
! !0!,!
! !0!1!.!
!@!0!
!@!0!
!@!0!2!
!@!0!
!@!0!4!
!@!0!4!
!@!0!8!6!
!@!0!
!@!A!8!
!@!A!8!
!@!A!8!:!
!@!A!8!
!@!A!8!<!
!@!A!C!<!
!@!A!C!<!>!
!@!B!
!@!D!
!@!D!
!@!H!F!
!@!H!
!@!H!
!@!H!J!
!@!H!
!@!P!L!
!@!P!L!
!@!P!Q!N!
!@!P!
!@!P!
!@!P!R!
!@!P!
!@!P!T!
!@!P!T!
!@!P!X!V!
!@!P!
!@!`!X!
!@!`!X!
!@!`!X!Z!
!@!`!X!
!@!`!a!\!
!@!`!a!\!
!@!`!a!\!^!
!`!b!
!`!d!
!`!d!
!`!h!f!
!`!h!
!`!h!
!`!h!j!
!`!h!
!`!p!l!
!`!p!l!
!`!p!q!n!
!p!r!
!p!t!
!p!t!
!p!x!v!
!p!x!
!x!z!
!x!|!
!x!|!
!x!|!~!
" "!"
" "!"
" "!"
" """
" "$"
" "$"
" "("&"
" "("
" "("
" "("*"
" "("
" "0","
" "0","
" "0"1"."
"@"0"
"@"0"
"@"0"2"
"@"0"
"@"0"4"
"@"0"4"
"@"0"8"6"
"@"0"
"@"A"8"
"@"A"8"
"@"A"8":"
"@"A"8"
"@"A"8"<"
"@"A"C"<"
"@"A"C"<">"
"@"B"
"@"D"
"@"D"
"@"H"F"
"@"H"
"@"H"
"@"H"J"
"@"H"
"@"P"L"
"@"P"L"
"@"P"Q"N"
"@"P"
"@"P"
"@"P"R"
"@"P"
"@"P"T"
"@"P"T"
"@"P"X"V"
"@"P"
"@"`"X"
"@"`"X"
"@"`"X"Z"
"@"`"X"
"@"`"a"\"
"@"`"a"\"
"@"`"a"\"^"
"`"b"
"`"d"
"`"d"
"`"h"f"
"`"h"
"`"h"
"`"h"j"
"`"h"
"`"p"l"
"`"p"l"
"`"p"q"n"
"p"r"
"p"t"
"p"t"
"p"x"v"
"p"x"
"x"z"
"x"|"
"x"|"
"x"|"~"
# #!#
# #!#
# #!#
# #"#
# #$#
# #$#
# #(#&#
# #(#
# #(#
# #(#*#
# #(#
# #0#,#
# #0#,#
# #0#1#.#
#@#0#
#@#0#
#@#0#2#
#@#0#
#@#0#4#
#@#0#4#
#@#0#8#6#
#@#0#
#@#A#8#
#@#A#8#
#@#A#8#:#
#@#A#8#
#@#A#8#<#
#@#A#C#<#
#@#A#C#<#>#
#@#B#
#@#D#
#@#D#
#@#H#F#
#@#H#
#@#H#
#@#H#J#
#@#H#
#@#P#L#
#@#P#L#
#@#P#Q#N#
#@#P#
#@#P#
#@#P#R#
#@#P#
#@#P#T#
#@#P#T#
#@#P#X#V#
#@#P#
#@#`#X#
#@#`#X#
#@#`#X#Z#
#@#`#X#
#@#`#a#\#
#@#`#a#\#
#@#`#a#\#^#
#`#b#
#`#d#
#`#d#
#`#h#f#
#`#h#
#`#h#
#`#h#j#
#`#h#
#`#p#l#
#`#p#l#
#`#p#q#n#
#p#r#
#p#t#
#p#t#
#p#x#v#
#p#x#
#x#z#
#x#|#
#x#|#
#x#|#~#
$ $!$
$ $!$
$ $!$
$ $"$
$ $$$
$ $$$
$ $($&$
$ $($
$ $($
$ $($*$
$ $($
$ $0$,$
$ $0$,$
$ $0$1$.$
$@$0$
$@$0$
$@$0$2$
$@$0$
$@$0$4$
$@$0$4$
$@$0$8$6$
$@$0$
$@$A$8$
$@$A$8$
$@$A$8$:$
$@$A$8$
$@$A$8$<$
$@$A$C$<$
$@$A$C$<$>$
$@$B$
$@$D$
$@$D$
$@$H$F$
$@$H$
$@$H$
$@$H$J$
$@$H$
$@$P$L$
$@$P$L$
$@$P$Q$N$
$@$P$
$@$P$
$@$P$R$
$@$P$
$@$P$T$
$@$P$T$
$@$P$X$V$
$@$P$
$@$`$X$
$@$`$X$
$@$`$X$Z$
$@$`$X$
$@$`$a$\$
$@$`$a$\$
$@$`$a$\$^$
$`$b$
$`$d$
$`$d$
$`$h$f$
$`$h$
$`$h$
$`$h$j$
$`$h$
$`$p$l$
$`$p$l$
$`$p$q$n$
$p$r$
$p$t$
$p$t$
$p$x$v$
$p$x$
$x$z$
$x$|$
$x$|$
$x$|$~$
% %!%
% %!%
% %!%
% %"%
% %$%
% %$%
% %(%&%
% %(%
% %(%
% %(%*%
% %(%
% %0%,%
% %0%,%
% %0%1%.%
%@%0%
%@%0%
%@%0%2%
%@%0%
%@%0%4%
%@%0%4%
%@%0%8%6%
%@%0%
%@%A%8%
%@%A%8%
%@%A%8%:%
%@%A%8%
%@%A%8%<%
%@%A%C%<%
%@%A%C%<%>%
%@%B%
%@%D%
%@%D%
%@%H%F%
%@%H%
%@%H%
%@%H%J%
%@%H%
%@%P%L%
%@%P%L%
%@%P%Q%N%
%@%P%
%@%P%
%@%P%R%
%@%P%
%@%P%T%
%@%P%T%
%@%P%X%V%
%@%P%
%@%`%X%
%@%`%X%
%@%`%X%Z%
%@%`%X%
%@%`%a%\%
%@%`%a%\%
%@%`%a%\%^%
%`%b%
%`%d%
%`%d%
%`%h%f%
%`%h%
%`%h%
%`%h%j%
%`%h%
%`%p%l%
%`%p%l%
%`%p%q%n%
%p%r%
%p%t%
%p%t%
%p%x%v%
%p%x%
%x%z%
%x%|%
%x%|%
%x%|%~%
& &!&
& &!&
& &!&
& &"&
& &$&
& &$&
& &(&&&
& &(&
& &(&
& &(&*&
& &(&
& &0&,&
& &0&,&
& &0&1&.&
&@&0&
&@&0&
&@&0&2&
&@&0&
&@&0&4&
&@&0&4&
&@&0&8&6&
&@&0&
&@&A&8&
&@&A&8&
&@&A&8&:&
&@&A&8&
&@&A&8&<&
&@&A&C&<&
&@&A&C&<&>&
&@&B&
&@&D&
&@&D&
&@&H&F&
&@&H&
&@&H&
&@&H&J&
&@&H&
&@&P&L&
&@&P&L&
&@&P&Q&N&
&@&P&
&@&P&
&@&P&R&
&@&P&
&@&P&T&
&@&P&T&
&@&P&X&V&
&@&P&
&@&`&X&
&@&`&X&
&@&`&X&Z&
&@&`&X&
&@&`&a&\&
&@&`&a&\&
&@&`&a&\&^&
&`&b&
&`&d&
&`&d&
&`&h&f&
&`&h&
&`&h&
&`&h&j&
&`&h&
&`&p&l&
&`&p&l&
&`&p&q&n&
&p&r&
&p&t&
&p&t&
&p&x&v&
&p&x&
&x&z&
&x&|&
&x&|&
&x&|&~&
' '!'
' '!'
' '!'
' '"'
' '$'
' '$'
' '('&'
' '('
' '('
' '('*'
' '('
' '0','
' '0','
' '0'1'.'
'@'0'
'@'0'
'@'0'2'
'@'0'
'@'0'4'
'@'0'4'
'@'0'8'6'
'@'0'
'@'A'8'
'@'A'8'
'@'A'8':'
'@'A'8'
'@'A'8'<'
'@'A'C'<'
'@'A'C'<'>'
'@'B'
'@'D'
'@'D'
'@'H'F'
'@'H'
'@'H'
'@'H'J'
'@'H'
'@'P'L'
'@'P'L'
'@'P'Q'N'
'@'P'
'@'P'
'@'P'R'
'@'P'
'@'P'T'
'@'P'T'
'@'P'X'V'
'@'P'
'@'`'X'
'@'`'X'
'@'`'X'Z'
'@'`'X'
'@'`'a'\'
'@'`'a'\'
'@'`'a'\'^'
'`'b'
'`'d'
'`'d'
'`'h'f'
'`'h'
'`'h'
'`'h'j'
'`'h'
'`'p'l'
'`'p'l'
'`'p'q'n'
'p'r'
'p't'
'p't'
'p'x'v'
'p'x'
'x'z'
'x'|'
'x'|'
'x'|'~'
( (!(
( (!(
( (!(
( ("(
( ($(
( ($(
( (((&(
( (((
( (((
( (((*(
( (((
( (0(,(
( (0(,(
( (0(1(.(
(@(0(
(@(0(
(@(0(2(
(@(0(
(@(0(4(
(@(0(4(
(@(0(8(6(
(@(0(
(@(A(8(
(@(A(8(
(@(A(8(:(
(@(A(8(
(@(A(8(<(
(@(A(C(<(
(@(A(C(<(>(
(@(B(
(@(D(
(@(D(
(@(H(F(
(@(H(
(@(H(
(@(H(J(
(@(H(
(@(P(L(
(@(P(L(
(@(P(Q(N(
(@(P(
(@(P(
(@(P(R(
(@(P(
(@(P(T(
(@(P(T(
(@(P(X(V(
(@(P(
(@(`(X(
(@(`(X(
(@(`(X(Z(
(@(`(X(
(@(`(a(\(
(@(`(a(\(
(@(`(a(\(^(
(`(b(
(`(d(
(`(d(
(`(h(f(
(`(h(
(`(h(
(`(h(j(
(`(h(
(`(p(l(
(`(p(l(
(`(p(q(n(
(p(r(
(p(t(
(p(t(
(p(x(v(
(p(x(
(x(z(
(x(|(
(x(|(
(x(|(~(
) )!)
) )!)
) )!)
) )")
) )$)
) )$)
) )()&)
) )()
) )()
) )()*)
) )()
) )0),)
) )0),)
) )0)1).)
)@)0)
)@)0)
)@)0)2)
)@)0)
)@)0)4)
)@)0)4)
)@)0)8)6)
)@)0)
)@)A)8)
)@)A)8)
)@)A)8):)
)@)A)8)
)@)A)8)<)
)@)A)C)<)
)@)A)C)<)>)
)@)B)
)@)D)
)@)D)
)@)H)F)
)@)H)
)@)H)
)@)H)J)
)@)H)
)@)P)L)
)@)P)L)
)@)P)Q)N)
)@)P)
)@)P)
)@)P)R)
)@)P)
)@)P)T)
)@)P)T)
)@)P)X)V)
)@)P)
)@)`)X)
)@)`)X)
)@)`)X)Z)
)@)`)X)
)@)`)a)\)
)@)`)a)\)
)@)`)a)\)^)
)`)b)
)`)d)
)`)d)
)`)h)f)
)`)h)
)`)h)
)`)h)j)
)`)h)
)`)p)l)
)`)p)l)
)`)p)q)n)
)p)r)
)p)t)
)p)t)
)p)x)v)
)p)x)
)x)z)
)x)|)
)x)|)
)x)|)~)
* *!*
* *!*
* *!*
* *"*
* *$*
* *$*
* *(*&*
* *(*
* *(*
* *(***
* *(*
* *0*,*
* *0*,*
* *0*1*.*
*@*0*
*@*0*
*@*0*2*
*@*0*
*@*0*4*
*@*0*4*
*@*0*8*6*
*@*0*
*@*A*8*
*@*A*8*
*@*A*8*:*
*@*A*8*
*@*A*8*<*
*@*A*C*<*
*@*A*C*<*>*
*@*B*
*@*D*
*@*D*
*@*H*F*
*@*H*
*@*H*
*@*H*J*
*@*H*
*@*P*L*
*@*P*L*
*@*P*Q*N*
*@*P*
*@*P*
*@*P*R*
*@*P*
*@*P*T*
*@*P*T*
*@*P*X*V*
*@*P*
*@*`*X*
*@*`*X*
*@*`*X*Z*
*@*`*X*
*@*`*a*\*
*@*`*a*\*
*@*`*a*\*^*
*`*b*
*`*d*
*`*d*
*`*h*f*
*`*h*
*`*h*
*`*h*j*
*`*h*
*`*p*l*
*`*p*l*
*`*p*q*n*
*p*r*
*p*t*
*p*t*
*p*x*v*
*p*x*
*x*z*
*x*|*
*x*|*
*x*|*~*
+ +!+
+ +!+
+ +!+
+ +"+
+ +$+
+ +$+
+ +(+&+
+ +(+
+ +(+
+ +(+*+
+ +(+
+ +0+,+
+ +0+,+
+ +0+1+.+
+@+0+
+@+0+
+@+0+2+
+@+0+
+@+0+4+
+@+0+4+
+@+0+8+6+
+@+0+
+@+A+8+
+@+A+8+
+@+A+8+:+
+@+A+8+
+@+A+8+<+
+@+A+C+<+
+@+A+C+<+>+
+@+B+
+@+D+
+@+D+
+@+H+F+
+@+H+
+@+H+
+@+H+J+
+@+H+
+@+P+L+
+@+P+L+
+@+P+Q+N+
+@+P+
+@+P+
+@+P+R+
+@+P+
+@+P+T+
+@+P+T+
+@+P+X+V+
+@+P+
+@+`+X+
+@+`+X+
+@+`+X+Z+
+@+`+X+
+@+`+a+\+
+@+`+a+\+
+@+`+a+\+^+
+`+b+
+`+d+
+`+d+
+`+h+f+
+`+h+
+`+h+
+`+h+j+
+`+h+
+`+p+l+
+`+p+l+
+`+p+q+n+
+p+r+
+p+t+
+p+t+
+p+x+v+
+p+x+
+x+z+
+x+|+
+x+|+
+x+|+~+
, ,!,
, ,!,
, ,!,
, ,",
, ,$,
, ,$,
, ,(,&,
, ,(,
, ,(,
, ,(,*,
, ,(,
, ,0,,,
, ,0,,,
, ,0,1,.,
,@,0,
,@,0,
,@,0,2,
,@,0,
,@,0,4,
,@,0,4,
,@,0,8,6,
,@,0,
,@,A,8,
,@,A,8,
,@,A,8,:,
,@,A,8,
,@,A,8,<,
,@,A,C,<,
,@,A,C,<,>,
,@,B,
,@,D,
,@,D,
,@,H,F,
,@,H,
,@,H,
,@,H,J,
,@,H,
,@,P,L,
,@,P,L,
,@,P,Q,N,
,@,P,
,@,P,
,@,P,R,
,@,P,
,@,P,T,
,@,P,T,
,@,P,X,V,
,@,P,
,@,`,X,
,@,`,X,
,@,`,X,Z,
,@,`,X,
,@,`,a,\,
,@,`,a,\,
,@,`,a,\,^,
,`,b,
,`,d,
,`,d,
,`,h,f,
,`,h,
,`,h,
,`,h,j,
,`,h,
,`,p,l,
,`,p,l,
,`,p,q,n,
,p,r,
,p,t,
,p,t,
,p,x,v,
,p,x,
,x,z,
,x,|,
,x,|,
,x,|,~,
- -!-
- -!-
- -!-
- -"-
- -$-
- -$-
- -(-&-
- -(-
- -(-
- -(-*-
- -(-
- -0-,-
- -0-,-
- -0-1-.-
-@-0-
-@-0-
-@-0-2-
-@-0-
-@-0-4-
-@-0-4-
-@-0-8-6-
-@-0-
-@-A-8-
-@-A-8-
-@-A-8-:-
-@-A-8-
-@-A-8-<-
-@-A-C-<-
-@-A-C-<->-
-@-B-
-@-D-
-@-D-
-@-H-F-
-@-H-
-@-H-
-@-H-J-
-@-H-
-@-P-L-
-@-P-L-
-@-P-Q-N-
-@-P-
-@-P-
-@-P-R-
-@-P-
-@-P-T-
-@-P-T-
-@-P-X-V-
-@-P-
-@-`-X-
-@-`-X-
-@-`-X-Z-
-@-`-X-
-@-`-a-\-
-@-`-a-\-
-@-`-a-\-^-
-`-b-
-`-d-
-`-d-
-`-h-f-
-`-h-
-`-h-
-`-h-j-
-`-h-
-`-p-l-
-`-p-l-
-`-p-q-n-
-p-r-
-p-t-
-p-t-
-p-x-v-
-p-x-
-x-z-
-x-|-
-x-|-
-x-|-~-
. .!.
. .!.
. .!.
. .".
. .$.
. .$.
. .(.&.
. .(.
. .(.
. .(.*.
. .(.
. .0.,.
. .0.,.
. .0.1...
.@.0.
.@.0.
.@.0.2.
.@.0.
.@.0.4.
.@.0.4.
.@.0.8.6.
.@.0.
.@.A.8.
.@.A.8.
.@.A.8.:.
.@.A.8.
.@.A.8.<.
.@.A.C.<.
.@.A.C.<.>.
.@.B.
.@.D.
.@.D.
.@.H.F.
.@.H.
.@.H.
.@.H.J.
.@.H.
.@.P.L.
.@.P.L.
.@.P.Q.N.
.@.P.
.@.P.
.@.P.R.
.@.P.
.@.P.T.
.@.P.T.
.@.P.X.V.
.@.P.
.@.`.X.
.@.`.X.
.@.`.X.Z.
.@.`.X.
.@.`.a.\.
.@.`.a.\.
.@.`.a.\.^.
.`.b.
.`.d.
.`.d.
.`.h.f.
.`.h.
.`.h.
.`.h.j.
.`.h.
.`.p.l.
.`.p.l.
.`.p.q.n.
.p.r.
.p.t.
.p.t.
.p.x.v.
.p.x.
.x.z.
.x.|.
.x.|.
.x.|.~.
/ /!/
/ /!/
/ /!/
/ /"/
/ /$/
/ /$/
/ /(/&/
/ /(/
/ /(/
/ /(/*/
/ /(/
/ /0/,/
/ /0/,/
/ /0/1/./
/@/0/
/@/0/
/@/0/2/
/@/0/
/@/0/4/
/@/0/4/
/@/0/8/6/
/@/0/
/@/A/8/
/@/A/8/
/@/A/8/:/
/@/A/8/
/@/A/8/</
/@/A/C/</
/@/A/C/</>/
/@/B/
/@/D/
/@/D/
/@/H/F/
/@/H/
/@/H/
/@/H/J/
/@/H/
/@/P/L/
/@/P/L/
/@/P/Q/N/
/@/P/
/@/P/
/@/P/R/
/@/P/
/@/P/T/
/@/P/T/
/@/P/X/V/
/@/P/
/@/`/X/
/@/`/X/
/@/`/X/Z/
/@/`/X/
/@/`/a/\/
/@/`/a/\/
/@/`/a/\/^/
/`/b/
/`/d/
/`/d/
/`/h/f/
/`/h/
/`/h/
/`/h/j/
/`/h/
/`/p/l/
/`/p/l/
/`/p/q/n/
/p/r/
/p/t/
/p/t/
/p/x/v/
/p/x/
/x/z/
/x/|/
/x/|/
/x/|/~/
0 0!0
0 0!0
0 0!0
0 0"0
0 0$0
0 0$0
0 0(0&0
0 0(0
0 0(0
0 0(0*0
0 0(0
0 000,0
0 000,0
0 00010.0
0@000
0@000
0@00020
0@000
0@00040
0@00040
0@0008060
0@000
0@0A080
0@0A080
0@0A080:0
0@0A080
0@0A080<0
0@0A0C0<0
0@0A0C0<0>0
0@0B0
0@0D0
0@0D0
0@0H0F0
0@0H0
0@0H0
0@0H0J0
0@0H0
0@0P0L0
0@0P0L0
0@0P0Q0N0
0@0P0
0@0P0
0@0P0R0
0@0P0
0@0P0T0
0@0P0T0
0@0P0X0V0
0@0P0
0@0`0X0
0@0`0X0
0@0`0X0Z0
0@0`0X0
0@0`0a0\0
0@0`0a0\0
0@0`0a0\0^0
0`0b0
0`0d0
0`0d0
0`0h0f0
0`0h0
0`0h0
0`0h0j0
0`0h0
0`0p0l0
0`0p0l0
0`0p0q0n0
0p0r0
0p0t0
0p0t0
0p0x0v0
0p0x0
0x0z0
0x0|0
0x0|0
0x0|0~0
1 1!1
1 1!1
1 1!1
1 1"1
1 1$1
1 1$1
1 1(1&1
1 1(1
1 1(1
1 1(1*1
1 1(1
1 101,1
1 101,1
1 10111.1
1@101
1@101
1@10121
1@101
1@10141
1@10141
1@1018161
1@101
1@1A181
1@1A181
1@1A181:1
1@1A181
1@1A181<1
1@1A1C1<1
1@1A1C1<1>1
1@1B1
1@1D1
1@1D1
1@1H1F1
1@1H1
1@1H1
1@1H1J1
1@1H1
1@1P1L1
1@1P1L1
1@1P1Q1N1
1@1P1
1@1P1
1@1P1R1
1@1P1
1@1P1T1
1@1P1T1
1@1P1X1V1
1@1P1
1@1`1X1
1@1`1X1
1@1`1X1Z1
1@1`1X1
1@1`1a1\1
1@1`1a1\1
1@1`1a1\1^1
1`1b1
1`1d1
1`1d1
1`1h1f1
1`1h1
1`1h1
1`1h1j1
1`1h1
1`1p1l1
1`1p1l1
1`1p1q1n1
1p1r1
1p1t1
1p1t1
1p1x1v1
1p1x1
1x1z1
1x1|1
1x1|1
1x1|1~1
2 2!2
2 2!2
2 2!2
2 2"2
2 2$2
2 2$2
2 2(2&2
2 2(2
2 2(2
2 2(2*2
2 2(2
2 202,2
2 202,2
2 20212.2
2@202
2@202
2@20222
2@202
2@20242
2@20242
2@2028262
2@202
2@2A282
2@2A282
2@2A282:2
2@2A282
2@2A282<2
2@2A2C2<2
2@2A2C2<2>2
2@2B2
2@2D2
2@2D2
2@2H2F2
2@2H2
2@2H2
2@2H2J2
2@2H2
2@2P2L2
2@2P2L2
2@2P2Q2N2
2@2P2
2@2P2
2@2P2R2
2@2P2
2@2P2T2
2@2P2T2
2@2P2X2V2
2@2P2
2@2`2X2
2@2`2X2
2@2`2X2Z2
2@2`2X2
2@2`2a2\2
2@2`2a2\2
2@2`2a2\2^2
2`2b2
2`2d2
2`2d2
2`2h2f2
2`2h2
2`2h2
2`2h2j2
2`2h2
2`2p2l2
2`2p2l2
2`2p2q2n2
2p2r2
2p2t2
2p2t2
2p2x2v2
2p2x2
2x2z2
2x2|2
2x2|2
2x2|2~2
3 3!3
3 3!3
3 3!3
3 3"3
3 3$3
3 3$3
3 3(3&3
3 3(3
3 3(3
3 3(3*3
3 3(3
3 303,3
3 303,3
3 30313.3
3@303
3@303
3@30323
3@303
3@30343
3@30343
3@3038363
3@303
3@3A383
3@3A383
3@3A383:3
3@3A383
3@3A383<3
3@3A3C3<3
3@3A3C3<3>3
3@3B3
3@3D3
3@3D3
3@3H3F3
3@3H3
3@3H3
3@3H3J3
3@3H3
3@3P3L3
3@3P3L3
3@3P3Q3N3
3@3P3
3@3P3
3@3P3R3
3@3P3
3@3P3T3
3@3P3T3
3@3P3X3V3
3@3P3
3@3`3X3
3@3`3X3
3@3`3X3Z3
3@3`3X3
3@3`3a3\3
3@3`3a3\3
3@3`3a3\3^3
3`3b3
3`3d3
3`3d3
3`3h3f3
3`3h3
3`3h3
3`3h3j3
3`3h3
3`3p3l3
3`3p3l3
3`3p3q3n3
3p3r3
3p3t3
3p3t3
3p3x3v3
3p3x3
3x3z3
3x3|3
3x3|3
3x3|3~3
4 4!4
4 4!4
4 4!4
4 4"4
4 4$4
4 4$4
4 4(4&4
4 4(4
4 4(4
4 4(4*4
4 4(4
4 404,4
4 404,4
4 40414.4
4@404
4@404
4@40424
4@404
4@40444
4@40444
4@4048464
4@404
4@4A484
4@4A484
4@4A484:4
4@4A484
4@4A484<4
4@4A4C4<4
4@4A4C4<4>4
4@4B4
4@4D4
4@4D4
4@4H4F4
4@4H4
4@4H4
4@4H4J4
4@4H4
4@4P4L4
4@4P4L4
4@4P4Q4N4
4@4P4
4@4P4
4@4P4R4
4@4P4
4@4P4T4
4@4P4T4
4@4P4X4V4
4@4P4
4@4`4X4
4@4`4X4
4@4`4X4Z4
4@4`4X4
4@4`4a4\4
4@4`4a4\4
4@4`4a4\4^4
4`4b4
4`4d4
4`4d4
4`4h4f4
4`4h4
4`4h4
4`4h4j4
4`4h4
4`4p4l4
4`4p4l4
4`4p4q4n4
4p4r4
4p4t4
4p4t4
4p4x4v4
4p4x4
4x4z4
4x4|4
4x4|4
4x4|4~4
5 5!5
5 5!5
5 5!5
5 5"5
5 5$5
5 5$5
5 5(5&5
5 5(5
5 5(5
5 5(5*5
5 5(5
5 505,5
5 505,5
5 50515.5
5@505
5@505
5@50525
5@505
5@50545
5@50545
5@5058565
5@505
5@5A585
5@5A585
5@5A585:5
5@5A585
5@5A585<5
5@5A5C5<5
5@5A5C5<5>5
5@5B5
5@5D5
5@5D5
5@5H5F5
5@5H5
5@5H5
5@5H5J5
5@5H5
5@5P5L5
5@5P5L5
5@5P5Q5N5
5@5P5
5@5P5
5@5P5R5
5@5P5
5@5P5T5
5@5P5T5
5@5P5X5V5
5@5P5
5@5`5X5
5@5`5X5
5@5`5X5Z5
5@5`5X5
5@5`5a5\5
5@5`5a5\5
5@5`5a5\5^5
5`5b5
5`5d5
5`5d5
5`5h5f5
5`5h5
5`5h5
5`5h5j5
5`5h5
5`5p5l5
5`5p5l5
5`5p5q5n5
5p5r5
5p5t5
5p5t5
5p5x5v5
5p5x5
5x5z5
5x5|5
5x5|5
5x5|5~5
6 6!6
6 6!6
6 6!6
6 6"6
6 6$6
6 6$6
6 6(6&6
6 6(6
6 6(6
6 6(6*6
6 6(6
6 606,6
6 606,6
6 60616.6
6@606
6@606
6@60626
6@606
6@60646
6@60646
6@6068666
6@606
6@6A686
6@6A686
6@6A686:6
6@6A686
6@6A686<6
6@6A6C6<6
6@6A6C6<6>6
6@6B6
6@6D6
6@6D6
6@6H6F6
6@6H6
6@6H6
6@6H6J6
6@6H6
6@6P6L6
6@6P6L6
6@6P6Q6N6
6@6P6
6@6P6
6@6P6R6
6@6P6
6@6P6T6
6@6P6T6
6@6P6X6V6
6@6P6
6@6`6X6
6@6`6X6
6@6`6X6Z6
6@6`6X6
6@6`6a6\6
6@6`6a6\6
6@6`6a6\6^6
6`6b6
6`6d6
6`6d6
6`6h6f6
6`6h6
6`6h6
6`6h6j6
6`6h6
6`6p6l6
6`6p6l6
6`6p6q6n6
6p6r6
6p6t6
6p6t6
6p6x6v6
6p6x6
6x6z6
6x6|6
6x6|6
6x6|6~6
7 7!7
7 7!7
7 7!7
7 7"7
7 7$7
7 7$7
7 7(7&7
7 7(7
7 7(7
7 7(7*7
7 7(7
7 707,7
7 707,7
7 70717.7
7@707
7@707
7@70727
7@707
7@70747
7@70747
7@7078767
7@707
7@7A787
7@7A787
7@7A787:7
7@7A787
7@7A787<7
7@7A7C7<7
7@7A7C7<7>7
7@7B7
7@7D7
7@7D7
7@7H7F7
7@7H7
7@7H7
7@7H7J7
7@7H7
7@7P7L7
7@7P7L7
7@7P7Q7N7
7@7P7
7@7P7
7@7P7R7
7@7P7
7@7P7T7
7@7P7T7
7@7P7X7V7
7@7P7
7@7`7X7
7@7`7X7
7@7`7X7Z7
7@7`7X7
7@7`7a7\7
7@7`7a7\7
7@7`7a7\7^7
7`7b7
7`7d7
7`7d7
7`7h7f7
7`7h7
7`7h7
7`7h7j7
7`7h7
7`7p7l7
7`7p7l7
7`7p7q7n7
7p7r7
7p7t7
7p7t7
7p7x7v7
7p7x7
7x7z7
7x7|7
7x7|7
7x7|7~7
8 8!8
8 8!8
8 8!8
8 8"8
8 8$8
8 8$8
8 8(8&8
8 8(8
8 8(8
8 8(8*8
8 8(8
8 808,8
8 808,8
8 80818.8
8@808
8@808
8@80828
8@808
8@80848
8@80848
8@8088868
8@808
8@8A888
8@8A888
8@8A888:8
8@8A888
8@8A888<8
8@8A8C8<8
8@8A8C8<8>8
8@8B8
8@8D8
8@8D8
8@8H8F8
8@8H8
8@8H8
8@8H8J8
8@8H8
8@8P8L8
8@8P8L8
8@8P8Q8N8
8@8P8
8@8P8
8@8P8R8
8@8P8
8@8P8T8
8@8P8T8
8@8P8X8V8
8@8P8
8@8`8X8
8@8`8X8
8@8`8X8Z8
8@8`8X8
8@8`8a8\8
8@8`8a8\8
8@8`8a8\8^8
8`8b8
8`8d8
8`8d8
8`8h8f8
8`8h8
8`8h8
8`8h8j8
8`8h8
8`8p8l8
8`8p8l8
8`8p8q8n8
8p8r8
8p8t8
8p8t8
8p8x8v8
8p8x8
8x8z8
8x8|8
8x8|8
8x8|8~8
9 9!9
9 9!9
9 9!9
9 9"9
9 9$9
9 9$9
9 9(9&9
9 9(9
9 9(9
9 9(9*9
9 9(9
9 909,9
9 909,9
9 90919.9
9@909
9@909
9@90929
9@909
9@90949
9@90949
9@9098969
9@909
9@9A989
9@9A989
9@9A989:9
9@9A989
9@9A989<9
9@9A9C9<9
9@9A9C9<9>9
9@9B9
9@9D9
9@9D9
9@9H9F9
9@9H9
9@9H9
9@9H9J9
9@9H9
9@9P9L9
9@9P9L9
9@9P9Q9N9
9@9P9
9@9P9
9@9P9R9
9@9P9
9@9P9T9
9@9P9T9
9@9P9X9V9
9@9P9
9@9`9X9
9@9`9X9
9@9`9X9Z9
9@9`9X9
9@9`9a9\9
9@9`9a9\9
9@9`9a9\9^9
9`9b9
9`9d9
9`9d9
9`9h9f9
9`9h9
9`9h9
9`9h9j9
9`9h9
9`9p9l9
9`9p9l9
9`9p9q9n9
9p9r9
9p9t9
9p9t9
9p9x9v9
9p9x9
9x9z9
9x9|9
9x9|9
9x9|9~9
: :!:
: :!:
: :!:
: :":
: :$:
: :$:
: :(:&:
: :(:
: :(:
: :(:*:
: :(:
: :0:,:
: :0:,:
: :0:1:.:
:@:0:
:@:0:
:@:0:2:
:@:0:
:@:0:4:
:@:0:4:
:@:0:8:6:
:@:0:
:@:A:8:
:@:A:8:
:@:A:8:::
:@:A:8:
:@:A:8:<:
:@:A:C:<:
:@:A:C:<:>:
:@:B:
:@:D:
:@:D:
:@:H:F:
:@:H:
:@:H:
:@:H:J:
:@:H:
:@:P:L:
:@:P:L:
:@:P:Q:N:
:@:P:
:@:P:
:@:P:R:
:@:P:
:@:P:T:
:@:P:T:
:@:P:X:V:
:@:P:
:@:`:X:
:@:`:X:
:@:`:X:Z:
:@:`:X:
:@:`:a:\:
:@:`:a:\:
:@:`:a:\:^:
:`:b:
:`:d:
:`:d:
:`:h:f:
:`:h:
:`:h:
:`:h:j:
:`:h:
:`:p:l:
:`:p:l:
:`:p:q:n:
:p:r:
:p:t:
:p:t:
:p:x:v:
:p:x:
:x:z:
:x:|:
:x:|:
:x:|:~:
; ;!;
; ;!;
; ;!;
; ;";
; ;$;
; ;$;
; ;(;&;
; ;(;
; ;(;
; ;(;*;
; ;(;
; ;0;,;
; ;0;,;
; ;0;1;.;
;@;0;
;@;0;
;@;0;2;
;@;0;
;@;0;4;
;@;0;4;
;@;0;8;6;
;@;0;
;@;A;8;
;@;A;8;
;@;A;8;:;
;@;A;8;
;@;A;8;<;
;@;A;C;<;
;@;A;C;<;>;
;@;B;
;@;D;
;@;D;
;@;H;F;
;@;H;
;@;H;
;@;H;J;
;@;H;
;@;P;L;
;@;P;L;
;@;P;Q;N;
;@;P;
;@;P;
;@;P;R;
;@;P;
;@;P;T;
;@;P;T;
;@;P;X;V;
;@;P;
;@;`;X;
;@;`;X;
;@;`;X;Z;
;@;`;X;
;@;`;a;\;
;@;`;a;\;
;@;`;a;\;^;
;`;b;
;`;d;
;`;d;
;`;h;f;
;`;h;
;`;h;
;`;h;j;
;`;h;
;`;p;l;
;`;p;l;
;`;p;q;n;
;p;r;
;p;t;
;p;t;
;p;x;v;
;p;x;
;x;z;
;x;|;
;x;|;
;x;|;~;
< <!<
< <!<
< <!<
< <"<
< <$<
< <$<
< <(<&<
< <(<
< <(<
< <(<*<
< <(<
< <0<,<
< <0<,<
< <0<1<.<
<@<0<
<@<0<
<@<0<2<
<@<0<
<@<0<4<
<@<0<4<
<@<0<8<6<
<@<0<
<@<A<8<
<@<A<8<
<@<A<8<:<
<@<A<8<
<@<A<8<<<
<@<A<C<<<
<@<A<C<<<><
<@<B<
<@<D<
<@<D<
<@<H<F<
<@<H<
<@<H<
<@<H<J<
<@<H<
<@<P<L<
<@<P<L<
<@<P<Q<N<
<@<P<
<@<P<
<@<P<R<
<@<P<
<@<P<T<
<@<P<T<
<@<P<X<V<
<@<P<
<@<`<X<
<@<`<X<
<@<`<X<Z<
<@<`<X<
<@<`<a<\<
<@<`<a<\<
<@<`<a<\<^<
<`<b<
<`<d<
<`<d<
<`<h<f<
<`<h<
<`<h<
<`<h<j<
<`<h<
<`<p<l<
<`<p<l<
<`<p<q<n<
<p<r<
<p<t<
<p<t<
<p<x<v<
<p<x<
<x<z<
<x<|<
<x<|<
<x<|<~<
= =!=
= =!=
= =!=
= ="=
= =$=
= =$=
= =(=&=
= =(=
= =(=
= =(=*=
= =(=
= =0=,=
= =0=,=
= =0=1=.=
=@=0=
=@=0=
=@=0=2=
=@=0=
=@=0=4=
=@=0=4=
=@=0=8=6=
=@=0=
=@=A=8=
=@=A=8=
=@=A=8=:=
=@=A=8=
=@=A=8=<=
=@=A=C=<=
=@=A=C=<=>=
=@=B=
=@=D=
=@=D=
=@=H=F=
=@=H=
=@=H=
=@=H=J=
=@=H=
=@=P=L=
=@=P=L=
=@=P=Q=N=
=@=P=
=@=P=
=@=P=R=
=@=P=
=@=P=T=
=@=P=T=
=@=P=X=V=
=@=P=
=@=`=X=
=@=`=X=
=@=`=X=Z=
=@=`=X=
=@=`=a=\=
=@=`=a=\=
=@=`=a=\=^=
=`=b=
=`=d=
=`=d=
=`=h=f=
=`=h=
=`=h=
=`=h=j=
=`=h=
=`=p=l=
=`=p=l=
=`=p=q=n=
=p=r=
=p=t=
=p=t=
=p=x=v=
=p=x=
=x=z=
=x=|=
=x=|=
=x=|=~=
> >!>
> >!>
> >!>
> >">
> >$>
> >$>
> >(>&>
> >(>
> >(>
> >(>*>
> >(>
> >0>,>
> >0>,>
> >0>1>.>
>@>0>
>@>0>
>@>0>2>
>@>0>
>@>0>4>
>@>0>4>
>@>0>8>6>
>@>0>
>@>A>8>
>@>A>8>
>@>A>8>:>
>@>A>8>
>@>A>8><>
>@>A>C><>
>@>A>C><>>>
>@>B>
>@>D>
>@>D>
>@>H>F>
>@>H>
>@>H>
>@>H>J>
>@>H>
>@>P>L>
>@>P>L>
>@>P>Q>N>
>@>P>
>@>P>
>@>P>R>
>@>P>
>@>P>T>
>@>P>T>
>@>P>X>V>
>@>P>
>@>`>X>
>@>`>X>
>@>`>X>Z>
>@>`>X>
>@>`>a>\>
>@>`>a>\>
>@>`>a>\>^>
>`>b>
>`>d>
>`>d>
>`>h>f>
>`>h>
>`>h>
>`>h>j>
>`>h>
>`>p>l>
>`>p>l>
>`>p>q>n>
>p>r>
>p>t>
>p>t>
>p>x>v>
>p>x>
>x>z>
>x>|>
>x>|>
>x>|>~>
? ?!?
? ?!?
? ?!?
? ?"?
? ?$?
? ?$?
? ?(?&?
? ?(?
? ?(?
? ?(?*?
? ?(?
? ?0?,?
? ?0?,?
? ?0?1?.?
?@?0?
?@?0?
?@?0?2?
?@?0?
?@?0?4?
?@?0?4?
?@?0?8?6?
?@?0?
?@?A?8?
?@?A?8?
?@?A?8?:?
?@?A?8?
?@?A?8?<?
?@?A?C?<?
?@?A?C?<?>?
?@?B?
?@?D?
?@?D?
?@?H?F?
?@?H?
?@?H?
?@?H?J?
?@?H?
?@?P?L?
?@?P?L?
?@?P?Q?N?
?@?P?
?@?P?
?@?P?R?
?@?P?
?@?P?T?
?@?P?T?
?@?P?X?V?
?@?P?
?@?`?X?
?@?`?X?
?@?`?X?Z?
?@?`?X?
?@?`?a?\?
?@?`?a?\?
?@?`?a?\?^?
?`?b?
?`?d?
?`?d?
?`?h?f?
?`?h?
?`?h?
?`?h?j?
?`?h?
?`?p?l?
?`?p?l?
?`?p?q?n?
?p?r?
?p?t?
?p?t?
?p?x?v?
?p?x?
?x?z?
?x?|?
?x?|?
?x?|?~?
@ @!@
@ @!@
@ @!@
@ @"@
@ @$@
@ @$@
@ @(@&@
@ @(@
@ @(@
@ @(@*@
@ @(@
@ @0@,@
@ @0@,@
@ @0@1@.@
@@@0@
@@@0@
@@@0@2@
@@@0@
@@@0@4@
@@@0@4@
@@@0@8@6@
@@@0@
@@@A@8@
@@@A@8@
@@@A@8@:@
@@@A@8@
@@@A@8@<@
@@@A@C@<@
@@@A@C@<@>@
@@@B@
@@@D@
@@@D@
@@@H@F@
@@@H@
@@@H@
@@@H@J@
@@@H@
@@@P@L@
@@@P@L@
@@@P@Q@N@
@@@P@
@@@P@
@@@P@R@
@@@P@
@@@P@T@
@@@P@T@
@@@P@X@V@
@@@P@
@@@`@X@
@@@`@X@
@@@`@X@Z@
@@@`@X@
@@@`@a@\@
@@@`@a@\@
@@@`@a@\@^@
@`@b@
@`@d@
@`@d@
@`@h@f@
@`@h@
@`@h@
@`@h@j@
@`@h@
@`@p@l@
@`@p@l@
@`@p@q@n@
@p@r@
@p@t@
@p@t@
@p@x@v@
@p@x@
@x@z@
@x@|@
@x@|@
@x@|@~@
A A!A
A A!A
A A!A
A A"A
A A$A
A A$A
A A(A&A
A A(A
A A(A
A A(A*A
A A(A
A A0A,A
A A0A,A
A A0A1A.A
A@A0A
A@A0A
A@A0A2A
A@A0A
A@A0A4A
A@A0A4A
A@A0A8A6A
A@A0A
A@AAA8A
A@AAA8A
A@AAA8A:A
A@AAA8A
A@AAA8A<A
A@AAACA<A
A@AAACA<A>A
A@ABA
A@ADA
A@ADA
A@AHAFA
A@AHA
A@AHA
A@AHAJA
A@AHA
A@APALA
A@APALA
A@APAQANA
A@APA
A@APA
A@APARA
A@APA
A@APATA
A@APATA
A@APAXAVA
A@APA
A@A`AXA
A@A`AXA
A@A`AXAZA
A@A`AXA
A@A`AaA\A
A@A`AaA\A
A@A`AaA\A^A
A`AbA
A`AdA
A`AdA
A`AhAfA
A`AhA
A`AhA
A`AhAjA
A`AhA
A`ApAlA
A`ApAlA
A`ApAqAnA
ApArA
ApAtA
ApAtA
ApAxAvA
ApAxA
AxAzA
AxA|A
AxA|A
AxA|A~A
B B!B
B B!B
B B!B
B B"B
B B$B
B B$B
B B(B&B
B B(B
B B(B
B B(B*B
B B(B
B B0B,B
B B0B,B
B B0B1B.B
B@B0B
B@B0B
B@B0B2B
B@B0B
B@B0B4B
B@B0B4B
B@B0B8B6B
B@B0B
B@BAB8B
B@BAB8B
B@BAB8B:B
B@BAB8B
B@BAB8B<B
B@BABCB<B
B@BABCB<B>B
B@BBB
B@BDB
B@BDB
B@BHBFB
B@BHB
B@BHB
B@BHBJB
B@BHB
B@BPBLB
B@BPBLB
B@BPBQBNB
B@BPB
B@BPB
B@BPBRB
B@BPB
B@BPBTB
B@BPBTB
B@BPBXBVB
B@BPB
B@B`BXB
B@B`BXB
B@B`BXBZB
B@B`BXB
B@B`BaB\B
B@B`BaB\B
B@B`BaB\B^B
B`BbB
B`BdB
B`BdB
B`BhBfB
B`BhB
B`BhB
B`BhBjB
B`BhB
B`BpBlB
B`BpBlB
B`BpBqBnB
BpBrB
BpBtB
BpBtB
BpBxBvB
BpBxB
BxBzB
BxB|B
BxB|B
BxB|B~B
C C!C
C C!C
C C!C
C C"C
C C$C
C C$C
C C(C&C
C C(C
C C(C
C C(C*C
C C(C
C C0C,C
C C0C,C
C C0C1C.C
C@C0C
C@C0C
C@C0C2C
C@C0C
C@C0C4C
C@C0C4C
C@C0C8C6C
C@C0C
C@CAC8C
C@CAC8C
C@CAC8C:C
C@CAC8C
C@CAC8C<C
C@CACCC<C
C@CACCC<C>C
C@CBC
C@CDC
C@CDC
C@CHCFC
C@CHC
C@CHC
C@CHCJC
C@CHC
C@CPCLC
C@CPCLC
C@CPCQCNC
C@CPC
C@CPC
C@CPCRC
C@CPC
C@CPCTC
C@CPCTC
C@CPCXCVC
C@CPC
C@C`CXC
C@C`CXC
C@C`CXCZC
C@C`CXC
C@C`CaC\C
C@C`CaC\C
C@C`CaC\C^C
C`CbC
C`CdC
C`CdC
C`ChCfC
C`ChC
C`ChC
C`ChCjC
C`ChC
C`CpClC
C`CpClC
C`CpCqCnC
CpCrC
CpCtC
CpCtC
CpCxCvC
CpCxC
CxCzC
CxC|C
CxC|C
CxC|C~C
D D!D
D D!D
D D!D
D D"D
D D$D
D D$D
D D(D&D
D D(D
D D(D
D D(D*D
D D(D
D D0D,D
D D0D,D
D D0D1D.D
D@D0D
D@D0D
D@D0D2D
D@D0D
D@D0D4D
D@D0D4D
D@D0D8D6D
D@D0D
D@DAD8D
D@DAD8D
D@DAD8D:D
D@DAD8D
D@DAD8D<D
D@DADCD<D
D@DADCD<D>D
D@DBD
D@DDD
D@DDD
D@DHDFD
D@DHD
D@DHD
D@DHDJD
D@DHD
D@DPDLD
D@DPDLD
D@DPDQDND
D@DPD
D@DPD
D@DPDRD
D@DPD
D@DPDTD
D@DPDTD
D@DPDXDVD
D@DPD
D@D`DXD
D@D`DXD
D@D`DXDZD
D@D`DXD
D@D`DaD\D
D@D`DaD\D
D@D`DaD\D^D
D`DbD
D`DdD
D`DdD
D`DhDfD
D`DhD
D`DhD
D`DhDjD
D`DhD
D`DpDlD
D`DpDlD
D`DpDqDnD
DpDrD
DpDtD
DpDtD
DpDxDvD
DpDxD
DxDzD
DxD|D
DxD|D
DxD|D~D
E E!E
E E!E
E E!E
E E"E
E E$E
E E$E
E E(E&E
E E(E
E E(E
E E(E*E
E E(E
E E0E,E
E E0E,E
E E0E1E.E
E@E0E
E@E0E
E@E0E2E
E@E0E
E@E0E4E
E@E0E4E
E@E0E8E6E
E@E0E
E@EAE8E
E@EAE8E
E@EAE8E:E
E@EAE8E
E@EAE8E<E
E@EAECE<E
E@EAECE<E>E
E@EBE
E@EDE
E@EDE
E@EHEFE
E@EHE
E@EHE
E@EHEJE
E@EHE
E@EPELE
E@EPELE
E@EPEQENE
E@EPE
E@EPE
E@EPERE
E@EPE
E@EPETE
E@EPETE
E@EPEXEVE
E@EPE
E@E`EXE
E@E`EXE
E@E`EXEZE
E@E`EXE
E@E`EaE\E
E@E`EaE\E
E@E`EaE\E^E
E`EbE
E`EdE
E`EdE
E`EhEfE
E`EhE
E`EhE
E`EhEjE
E`EhE
E`EpElE
E`EpElE
E`EpEqEnE
EpErE
EpEtE
EpEtE
EpExEvE
EpExE
ExEzE
ExE|E
ExE|E
ExE|E~E
F F!F
F F!F
F F!F
F F"F
F F$F
F F$F
F F(F&F
F F(F
F F(F
F F(F*F
F F(F
F F0F,F
F F0F,F
F F0F1F.F
F@F0F
F@F0F
F@F0F2F
F@F0F
F@F0F4F
F@F0F4F
F@F0F8F6F
F@F0F
F@FAF8F
F@FAF8F
F@FAF8F:F
F@FAF8F
F@FAF8F<F
F@FAFCF<F
F@FAFCF<F>F
F@FBF
F@FDF
F@FDF
F@FHFFF
F@FHF
F@FHF
F@FHFJF
F@FHF
F@FPFLF
F@FPFLF
F@FPFQFNF
F@FPF
F@FPF
F@FPFRF
F@FPF
F@FPFTF
F@FPFTF
F@FPFXFVF
F@FPF
F@F`FXF
F@F`FXF
F@F`FXFZF
F@F`FXF
F@F`FaF\F
F@F`FaF\F
F@F`FaF\F^F
F`FbF
F`FdF
F`FdF
F`FhFfF
F`FhF
F`FhF
F`FhFjF
F`FhF
F`FpFlF
F`FpFlF
F`FpFqFnF
FpFrF
FpFtF
FpFtF
FpFxFvF
FpFxF
FxFzF
FxF|F
FxF|F
FxF|F~F
G G!G
G G!G
G G!G
G G"G
G G$G
G G$G
G G(G&G
G G(G
G G(G
G G(G*G
G G(G
G G0G,G
G G0G,G
G G0G1G.G
G@G0G
G@G0G
G@G0G2G
G@G0G
G@G0G4G
G@G0G4G
G@G0G8G6G
G@G0G
G@GAG8G
G@GAG8G
G@GAG8G:G
G@GAG8G
G@GAG8G<G
G@GAGCG<G
G@GAGCG<G>G
G@GBG
G@GDG
G@GDG
G@GHGFG
G@GHG
G@GHG
G@GHGJG
G@GHG
G@GPGLG
G@GPGLG
G@GPGQGNG
G@GPG
G@GPG
G@GPGRG
G@GPG
G@GPGTG
G@GPGTG
G@GPGXGVG
G@GPG
G@G`GXG
G@G`GXG
G@G`GXGZG
G@G`GXG
G@G`GaG\G
G@G`GaG\G
G@G`GaG\G^G
G`GbG
G`GdG
G`GdG
G`GhGfG
G`GhG
G`GhG
G`GhGjG
G`GhG
G`GpGlG
G`GpGlG
G`GpGqGnG
GpGrG
GpGtG
GpGtG
GpGxGvG
GpGxG
GxGzG
GxG|G
GxG|G
GxG|G~G
H H!H
H H!H
H H!H
H H"H
H H$H
H H$H
H H(H&H
H H(H
H H(H
H H(H*H
H H(H
H H0H,H
H H0H,H
H H0H1H.H
H@H0H
H@H0H
H@H0H2H
H@H0H
H@H0H4H
H@H0H4H
H@H0H8H6H
H@H0H
H@HAH8H
H@HAH8H
H@HAH8H:H
H@HAH8H
H@HAH8H<H
H@HAHCH<H
H@HAHCH<H>H
H@HBH
H@HDH
H@HDH
H@HHHFH
H@HHH
H@HHH
H@HHHJH
H@HHH
H@HPHLH
H@HPHLH
H@HPHQHNH
H@HPH
H@HPH
H@HPHRH
H@HPH
H@HPHTH
H@HPHTH
H@HPHXHVH
H@HPH
H@H`HXH
H@H`HXH
H@H`HXHZH
H@H`HXH
H@H`HaH\H
H@H`HaH\H
H@H`HaH\H^H
H`HbH
H`HdH
H`HdH
H`HhHfH
H`HhH
H`HhH
H`HhHjH
H`HhH
H`HpHlH
H`HpHlH
H`HpHqHnH
HpHrH
HpHtH
HpHtH
HpHxHvH
HpHxH
HxHzH
HxH|H
HxH|H
HxH|H~H
I I!I
I I!I
I I!I
I I"I
I I$I
I I$I
I I(I&I
I I(I
I I(I
I I(I*I
I I(I
I I0I,I
I I0I,I
I I0I1I.I
I@I0I
I@I0I
I@I0I2I
I@I0I
I@I0I4I
I@I0I4I
I@I0I8I6I
I@I0I
I@IAI8I
I@IAI8I
I@IAI8I:I
I@IAI8I
I@IAI8I<I
I@IAICI<I
I@IAICI<I>I
I@IBI
I@IDI
I@IDI
I@IHIFI
I@IHI
I@IHI
I@IHIJI
I@IHI
I@IPILI
I@IPILI
I@IPIQINI
I@IPI
I@IPI
I@IPIRI
I@IPI
I@IPITI
I@IPITI
I@IPIXIVI
I@IPI
I@I`IXI
I@I`IXI
I@I`IXIZI
I@I`IXI
I@I`IaI\I
I@I`IaI\I
I@I`IaI\I^I
I`IbI
I`IdI
I`IdI
I`IhIfI
I`IhI
I`IhI
I`IhIjI
I`IhI
I`IpIlI
I`IpIlI
I`IpIqInI
IpIrI
IpItI
IpItI
IpIxIvI
IpIxI
IxIzI
IxI|I
IxI|I
IxI|I~I
J J!J
J J!J
J J!J
J J"J
J J$J
J J$J
J J(J&J
J J(J
J J(J
J J(J*J
J J(J
J J0J,J
J J0J,J
J J0J1J.J
J@J0J
J@J0J
J@J0J2J
J@J0J
J@J0J4J
J@J0J4J
J@J0J8J6J
J@J0J
J@JAJ8J
J@JAJ8J
J@JAJ8J:J
J@JAJ8J
J@JAJ8J<J
J@JAJCJ<J
J@JAJCJ<J>J
J@JBJ
J@JDJ
J@JDJ
J@JHJFJ
J@JHJ
J@JHJ
J@JHJJJ
J@JHJ
J@JPJLJ
J@JPJLJ
J@JPJQJNJ
J@JPJ
J@JPJ
J@JPJRJ
J@JPJ
J@JPJTJ
J@JPJTJ
J@JPJXJVJ
J@JPJ
J@J`JXJ
J@J`JXJ
J@J`JXJZJ
J@J`JXJ
J@J`JaJ\J
J@J`JaJ\J
J@J`JaJ\J^J
J`JbJ
J`JdJ
J`JdJ
J`JhJfJ
J`JhJ
J`JhJ
J`JhJjJ
J`JhJ
J`JpJlJ
J`JpJlJ
J`JpJqJnJ
JpJrJ
JpJtJ
JpJtJ
JpJxJvJ
JpJxJ
JxJzJ
JxJ|J
JxJ|J
JxJ|J~J
K K!K
K K!K
K K!K
K K"K
K K$K
K K$K
K K(K&K
K K(K
K K(K
K K(K*K
K K(K
K K0K,K
K K0K,K
K K0K1K.K
K@K0K
K@K0K
K@K0K2K
K@K0K
K@K0K4K
K@K0K4K
K@K0K8K6K
K@K0K
K@KAK8K
K@KAK8K
K@KAK8K:K
K@KAK8K
K@KAK8K<K
K@KAKCK<K
K@KAKCK<K>K
K@KBK
K@KDK
K@KDK
K@KHKFK
K@KHK
K@KHK
K@KHKJK
K@KHK
K@KPKLK
K@KPKLK
K@KPKQKNK
K@KPK
K@KPK
K@KPKRK
K@KPK
K@KPKTK
K@KPKTK
K@KPKXKVK
K@KPK
K@K`KXK
K@K`KXK
K@K`KXKZK
K@K`KXK
K@K`KaK\K
K@K`KaK\K
K@K`KaK\K^K
K`KbK
K`KdK
K`KdK
K`KhKfK
K`KhK
K`KhK
K`KhKjK
K`KhK
K`KpKlK
K`KpKlK
K`KpKqKnK
KpKrK
KpKtK
KpKtK
KpKxKvK
KpKxK
KxKzK
KxK|K
KxK|K
KxK|K~K
L L!L
L L!L
L L!L
L L"L
L L$L
L L$L
L L(L&L
L L(L
L L(L
L L(L*L
L L(L
L L0L,L
L L0L,L
L L0L1L.L
L@L0L
L@L0L
L@L0L2L
L@L0L
L@L0L4L
L@L0L4L
L@L0L8L6L
L@L0L
L@LAL8L
L@LAL8L
L@LAL8L:L
L@LAL8L
L@LAL8L<L
L@LALCL<L
L@LALCL<L>L
L@LBL
L@LDL
L@LDL
L@LHLFL
L@LHL
L@LHL
L@LHLJL
L@LHL
L@LPLLL
L@LPLLL
L@LPLQLNL
L@LPL
L@LPL
L@LPLRL
L@LPL
L@LPLTL
L@LPLTL
L@LPLXLVL
L@LPL
L@L`LXL
L@L`LXL
L@L`LXLZL
L@L`LXL
L@L`LaL\L
L@L`LaL\L
L@L`LaL\L^L
L`LbL
L`LdL
L`LdL
L`LhLfL
L`LhL
L`LhL
L`LhLjL
L`LhL
L`LpLlL
L`LpLlL
L`LpLqLnL
LpLrL
LpLtL
LpLtL
LpLxLvL
LpLxL
LxLzL
LxL|L
LxL|L
LxL|L~L
M M!M
M M!M
M M!M
M M"M
M M$M
M M$M
M M(M&M
M M(M
M M(M
M M(M*M
M M(M
M M0M,M
M M0M,M
M M0M1M.M
M@M0M
M@M0M
M@M0M2M
M@M0M
M@M0M4M
M@M0M4M
M@M0M8M6M
M@M0M
M@MAM8M
M@MAM8M
M@MAM8M:M
M@MAM8M
M@MAM8M<M
M@MAMCM<M
M@MAMCM<M>M
M@MBM
M@MDM
M@MDM
M@MHMFM
M@MHM
M@MHM
M@MHMJM
M@MHM
M@MPMLM
M@MPMLM
M@MPMQMNM
M@MPM
M@MPM
M@MPMRM
M@MPM
M@MPMTM
M@MPMTM
M@MPMXMVM
M@MPM
M@M`MXM
M@M`MXM
M@M`MXMZM
M@M`MXM
M@M`MaM\M
M@M`MaM\M
M@M`MaM\M^M
M`MbM
M`MdM
M`MdM
M`MhMfM
M`MhM
M`MhM
M`MhMjM
M`MhM
M`MpMlM
M`MpMlM
M`MpMqMnM
MpMrM
MpMtM
MpMtM
MpMxMvM
MpMxM
MxMzM
MxM|M
MxM|M
MxM|M~M
N N!N
N N!N
N N!N
N N"N
N N$N
N N$N
N N(N&N
N N(N
N N(N
N N(N*N
N N(N
N N0N,N
N N0N,N
N N0N1N.N
N@N0N
N@N0N
N@N0N2N
N@N0N
N@N0N4N
N@N0N4N
N@N0N8N6N
N@N0N
N@NAN8N
N@NAN8N
N@NAN8N:N
N@NAN8N
N@NAN8N<N
N@NANCN<N
N@NANCN<N>N
N@NBN
N@NDN
N@NDN
N@NHNFN
N@NHN
N@NHN
N@NHNJN
N@NHN
N@NPNLN
N@NPNLN
N@NPNQNNN
N@NPN
N@NPN
N@NPNRN
N@NPN
N@NPNTN
N@NPNTN
N@NPNXNVN
N@NPN
N@N`NXN
N@N`NXN
N@N`NXNZN
N@N`NXN
N@N`NaN\N
N@N`NaN\N
N@N`NaN\N^N
N`NbN
N`NdN
N`NdN
N`NhNfN
N`NhN
N`NhN
N`NhNjN
N`NhN
N`NpNlN
N`NpNlN
N`NpNqNnN
NpNrN
NpNtN
NpNtN
NpNxNvN
NpNxN
NxNzN
NxN|N
NxN|N
NxN|N~N
O O!O
O O!O
O O!O
O O"O
O O$O
O O$O
O O(O&O
O O(O
O O(O
O O(O*O
O O(O
O O0O,O
O O0O,O
O O0O1O.O
O@O0O
O@O0O
O@O0O2O
O@O0O
O@O0O4O
O@O0O4O
O@O0O8O6O
O@O0O
O@OAO8O
O@OAO8O
O@OAO8O:O
O@OAO8O
O@OAO8O<O
O@OAOCO<O
O@OAOCO<O>O
O@OBO
O@ODO
O@ODO
O@OHOFO
O@OHO
O@OHO
O@OHOJO
O@OHO
O@OPOLO
O@OPOLO
O@OPOQONO
O@OPO
O@OPO
O@OPORO
O@OPO
O@OPOTO
O@OPOTO
O@OPOXOVO
O@OPO
O@O`OXO
O@O`OXO
O@O`OXOZO
O@O`OXO
O@O`OaO\O
O@O`OaO\O
O@O`OaO\O^O
O`ObO
O`OdO
O`OdO
O`OhOfO
O`OhO
O`OhO
O`OhOjO
O`OhO
O`OpOlO
O`OpOlO
O`OpOqOnO
OpOrO
OpOtO
OpOtO
OpOxOvO
OpOxO
OxOzO
OxO|O
OxO|O
OxO|O~O
P P!P
P P!P
P P!P
P P"P
P P$P
P P$P
P P(P&P
P P(P
P P(P
P P(P*P
P P(P
P P0P,P
P P0P,P
P P0P1P.P
P@P0P
P@P0P
P@P0P2P
P@P0P
P@P0P4P
P@P0P4P
P@P0P8P6P
P@P0P
P@PAP8P
P@PAP8P
P@PAP8P:P
P@PAP8P
P@PAP8P<P
P@PAPCP<P
P@PAPCP<P>P
P@PBP
P@PDP
P@PDP
P@PHPFP
P@PHP
P@PHP
P@PHPJP
P@PHP
P@PPPLP
P@PPPLP
P@PPPQPNP
P@PPP
P@PPP
P@PPPRP
P@PPP
P@PPPTP
P@PPPTP
P@PPPXPVP
P@PPP
P@P`PXP
P@P`PXP
P@P`PXPZP
P@P`PXP
P@P`PaP\P
P@P`PaP\P
P@P`PaP\P^P
P`PbP
P`PdP
P`PdP
P`PhPfP
P`PhP
P`PhP
P`PhPjP
P`PhP
P`PpPlP
P`PpPlP
P`PpPqPnP
PpPrP
PpPtP
PpPtP
PpPxPvP
PpPxP
PxPzP
PxP|P
PxP|P
PxP|P~P
Q Q!Q
Q Q!Q
Q Q!Q
Q Q"Q
Q Q$Q
Q Q$Q
Q Q(Q&Q
Q Q(Q
Q Q(Q
Q Q(Q*Q
Q Q(Q
Q Q0Q,Q
Q Q0Q,Q
Q Q0Q1Q.Q
Q@Q0Q
Q@Q0Q
Q@Q0Q2Q
Q@Q0Q
Q@Q0Q4Q
Q@Q0Q4Q
Q@Q0Q8Q6Q
Q@Q0Q
Q@QAQ8Q
Q@QAQ8Q
Q@QAQ8Q:Q
Q@QAQ8Q
Q@QAQ8Q<Q
Q@QAQCQ<Q
Q@QAQCQ<Q>Q
Q@QBQ
Q@QDQ
Q@QDQ
Q@QHQFQ
Q@QHQ
Q@QHQ
Q@QHQJQ
Q@QHQ
Q@QPQLQ
Q@QPQLQ
Q@QPQQQNQ
Q@QPQ
Q@QPQ
Q@QPQRQ
Q@QPQ
Q@QPQTQ
Q@QPQTQ
Q@QPQXQVQ
Q@QPQ
Q@Q`QXQ
Q@Q`QXQ
Q@Q`QXQZQ
Q@Q`QXQ
Q@Q`QaQ\Q
Q@Q`QaQ\Q
Q@Q`QaQ\Q^Q
Q`QbQ
Q`QdQ
Q`QdQ
Q`QhQfQ
Q`QhQ
Q`QhQ
Q`QhQjQ
Q`QhQ
Q`QpQlQ
Q`QpQlQ
Q`QpQqQnQ
QpQrQ
QpQtQ
QpQtQ
QpQxQvQ
QpQxQ
QxQzQ
QxQ|Q
QxQ|Q
QxQ|Q~Q
R R!R
R R!R
R R!R
R R"R
R R$R
R R$R
R R(R&R
R R(R
R R(R
R R(R*R
R R(R
R R0R,R
R R0R,R
R R0R1R.R
R@R0R
R@R0R
R@R0R2R
R@R0R
R@R0R4R
R@R0R4R
R@R0R8R6R
R@R0R
R@RAR8R
R@RAR8R
R@RAR8R:R
R@RAR8R
R@RAR8R<R
R@RARCR<R
R@RARCR<R>R
R@RBR
R@RDR
R@RDR
R@RHRFR
R@RHR
R@RHR
R@RHRJR
R@RHR
R@RPRLR
R@RPRLR
R@RPRQRNR
R@RPR
R@RPR
R@RPRRR
R@RPR
R@RPRTR
R@RPRTR
R@RPRXRVR
R@RPR
R@R`RXR
R@R`RXR
R@R`RXRZR
R@R`RXR
R@R`RaR\R
R@R`RaR\R
R@R`RaR\R^R
R`RbR
R`RdR
R`RdR
R`RhRfR
R`RhR
R`RhR
R`RhRjR
R`RhR
R`RpRlR
R`RpRlR
R`RpRqRnR
RpRrR
RpRtR
RpRtR
RpRxRvR
RpRxR
RxRzR
RxR|R
RxR|R
RxR|R~R
S S!S
S S!S
S S!S
S S"S
S S$S
S S$S
S S(S&S
S S(S
S S(S
S S(S*S
S S(S
S S0S,S
S S0S,S
S S0S1S.S
S@S0S
S@S0S
S@S0S2S
S@S0S
S@S0S4S
S@S0S4S
S@S0S8S6S
S@S0S
S@SAS8S
S@SAS8S
S@SAS8S:S
S@SAS8S
S@SAS8S<S
S@SASCS<S
S@SASCS<S>S
S@SBS
S@SDS
S@SDS
S@SHSFS
S@SHS
S@SHS
S@SHSJS
S@SHS
S@SPSLS
S@SPSLS
S@SPSQSNS
S@SPS
S@SPS
S@SPSRS
S@SPS
S@SPSTS
S@SPSTS
S@SPSXSVS
S@SPS
S@S`SXS
S@S`SXS
S@S`SXSZS
S@S`SXS
S@S`SaS\S
S@S`SaS\S
S@S`SaS\S^S
S`SbS
S`SdS
S`SdS
S`ShSfS
S`ShS
S`ShS
S`ShSjS
S`ShS
S`SpSlS
S`SpSlS
S`SpSqSnS
SpSrS
SpStS
SpStS
SpSxSvS
SpSxS
SxSzS
SxS|S
SxS|S
SxS|S~S
T T!T
T T!T
T T!T
T T"T
T T$T
T T$T
T T(T&T
T T(T
T T(T
T T(T*T
T T(T
T T0T,T
T T0T,T
T T0T1T.T
T@T0T
T@T0T
T@T0T2T
T@T0T
T@T0T4T
T@T0T4T
T@T0T8T6T
T@T0T
T@TAT8T
T@TAT8T
T@TAT8T:T
T@TAT8T
T@TAT8T<T
T@TATCT<T
T@TATCT<T>T
T@TBT
T@TDT
T@TDT
T@THTFT
T@THT
T@THT
T@THTJT
T@THT
T@TPTLT
T@TPTLT
T@TPTQTNT
T@TPT
T@TPT
T@TPTRT
T@TPT
T@TPTTT
T@TPTTT
T@TPTXTVT
T@TPT
T@T`TXT
T@T`TXT
T@T`TXTZT
T@T`TXT
T@T`TaT\T
T@T`TaT\T
T@T`TaT\T^T
T`TbT
T`TdT
T`TdT
T`ThTfT
T`ThT
T`ThT
T`ThTjT
T`ThT
T`TpTlT
T`TpTlT
T`TpTqTnT
TpTrT
TpTtT
TpTtT
TpTxTvT
TpTxT
TxTzT
TxT|T
TxT|T
TxT|T~T
U U!U
U U!U
U U!U
U U"U
U U$U
U U$U
U U(U&U
U U(U
U U(U
U U(U*U
U U(U
U U0U,U
U U0U,U
U U0U1U.U
U@U0U
U@U0U
U@U0U2U
U@U0U
U@U0U4U
U@U0U4U
U@U0U8U6U
U@U0U
U@UAU8U
U@UAU8U
U@UAU8U:U
U@UAU8U
U@UAU8U<U
U@UAUCU<U
U@UAUCU<U>U
U@UBU
U@UDU
U@UDU
U@UHUFU
U@UHU
U@UHU
U@UHUJU
U@UHU
U@UPULU
U@UPULU
U@UPUQUNU
U@UPU
U@UPU
U@UPURU
U@UPU
U@UPUTU
U@UPUTU
U@UPUXUVU
U@UPU
U@U`UXU
U@U`UXU
U@U`UXUZU
U@U`UXU
U@U`UaU\U
U@U`UaU\U
U@U`UaU\U^U
U`UbU
U`UdU
U`UdU
U`UhUfU
U`UhU
U`UhU
U`UhUjU
U`UhU
U`UpUlU
U`UpUlU
U`UpUqUnU
UpUrU
UpUtU
UpUtU
UpUxUvU
UpUxU
UxUzU
UxU|U
UxU|U
UxU|U~U
V V!V
V V!V
V V!V
V V"V
V V$V
V V$V
V V(V&V
V V(V
V V(V
V V(V*V
V V(V
V V0V,V
V V0V,V
V V0V1V.V
V@V0V
V@V0V
V@V0V2V
V@V0V
V@V0V4V
V@V0V4V
V@V0V8V6V
V@V0V
V@VAV8V
V@VAV8V
V@VAV8V:V
V@VAV8V
V@VAV8V<V
V@VAVCV<V
V@VAVCV<V>V
V@VBV
V@VDV
V@VDV
V@VHVFV
V@VHV
V@VHV
V@VHVJV
V@VHV
V@VPVLV
V@VPVLV
V@VPVQVNV
V@VPV
V@VPV
V@VPVRV
V@VPV
V@VPVTV
V@VPVTV
V@VPVXVVV
V@VPV
V@V`VXV
V@V`VXV
V@V`VXVZV
V@V`VXV
V@V`VaV\V
V@V`VaV\V
V@V`VaV\V^V
V`VbV
V`VdV
V`VdV
V`VhVfV
V`VhV
V`VhV
V`VhVjV
V`VhV
V`VpVlV
V`VpVlV
V`VpVqVnV
VpVrV
VpVtV
VpVtV
VpVxVvV
VpVxV
VxVzV
VxV|V
VxV|V
VxV|V~V
W W!W
W W!W
W W!W
W W"W
W W$W
W W$W
W W(W&W
W W(W
W W(W
W W(W*W
W W(W
W W0W,W
W W0W,W
W W0W1W.W
W@W0W
W@W0W
W@W0W2W
W@W0W
W@W0W4W
W@W0W4W
W@W0W8W6W
W@W0W
W@WAW8W
W@WAW8W
W@WAW8W:W
W@WAW8W
W@WAW8W<W
W@WAWCW<W
W@WAWCW<W>W
W@WBW
W@WDW
W@WDW
W@WHWFW
W@WHW
W@WHW
W@WHWJW
W@WHW
W@WPWLW
W@WPWLW
W@WPWQWNW
W@WPW
W@WPW
W@WPWRW
W@WPW
W@WPWTW
W@WPWTW
W@WPWXWVW
W@WPW
W@W`WXW
W@W`WXW
W@W`WXWZW
W@W`WXW
W@W`WaW\W
W@W`WaW\W
W@W`WaW\W^W
W`WbW
W`WdW
W`WdW
W`WhWfW
W`WhW
W`WhW
W`WhWjW
W`WhW
W`WpWlW
W`WpWlW
W`WpWqWnW
WpWrW
WpWtW
WpWtW
WpWxWvW
WpWxW
WxWzW
WxW|W
WxW|W
WxW|W~W
X X!X
X X!X
X X!X
X X"X
X X$X
X X$X
X X(X&X
X X(X
X X(X
X X(X*X
X X(X
X X0X,X
X X0X,X
X X0X1X.X
X@X0X
X@X0X
X@X0X2X
X@X0X
X@X0X4X
X@X0X4X
X@X0X8X6X
X@X0X
X@XAX8X
X@XAX8X
X@XAX8X:X
X@XAX8X
X@XAX8X<X
X@XAXCX<X
X@XAXCX<X>X
X@XBX
X@XDX
X@XDX
X@XHXFX
X@XHX
X@XHX
X@XHXJX
X@XHX
X@XPXLX
X@XPXLX
X@XPXQXNX
X@XPX
X@XPX
X@XPXRX
X@XPX
X@XPXTX
X@XPXTX
X@XPXXXVX
X@XPX
X@X`XXX
X@X`XXX
X@X`XXXZX
X@X`XXX
X@X`XaX\X
X@X`XaX\X
X@X`XaX\X^X
X`XbX
X`XdX
X`XdX
X`XhXfX
X`XhX
X`XhX
X`XhXjX
X`XhX
X`XpXlX
X`XpXlX
X`XpXqXnX
XpXrX
XpXtX
XpXtX
XpXxXvX
XpXxX
XxXzX
XxX|X
XxX|X
XxX|X~X
Y Y!Y
Y Y!Y
Y Y!Y
Y Y"Y
Y Y$Y
Y Y$Y
Y Y(Y&Y
Y Y(Y
Y Y(Y
Y Y(Y*Y
Y Y(Y
Y Y0Y,Y
Y Y0Y,Y
Y Y0Y1Y.Y
Y@Y0Y
Y@Y0Y
Y@Y0Y2Y
Y@Y0Y
Y@Y0Y4Y
Y@Y0Y4Y
Y@Y0Y8Y6Y
Y@Y0Y
Y@YAY8Y
Y@YAY8Y
Y@YAY8Y:Y
Y@YAY8Y
Y@YAY8Y<Y
Y@YAYCY<Y
Y@YAYCY<Y>Y
Y@YBY
Y@YDY
Y@YDY
Y@YHYFY
Y@YHY
Y@YHY
Y@YHYJY
Y@YHY
Y@YPYLY
Y@YPYLY
Y@YPYQYNY
Y@YPY
Y@YPY
Y@YPYRY
Y@YPY
Y@YPYTY
Y@YPYTY
Y@YPYXYVY
Y@YPY
Y@Y`YXY
Y@Y`YXY
Y@Y`YXYZY
Y@Y`YXY
Y@Y`YaY\Y
Y@Y`YaY\Y
Y@Y`YaY\Y^Y
Y`YbY
Y`YdY
Y`YdY
Y`YhYfY
Y`YhY
Y`YhY
Y`YhYjY
Y`YhY
Y`YpYlY
Y`YpYlY
Y`YpYqYnY
YpYrY
YpYtY
YpYtY
YpYxYvY
YpYxY
YxYzY
YxY|Y
YxY|Y
YxY|Y~Y
Z Z!Z
Z Z!Z
Z Z!Z
Z Z"Z
Z Z$Z
Z Z$Z
Z Z(Z&Z
Z Z(Z
Z Z(Z
Z Z(Z*Z
Z Z(Z
Z Z0Z,Z
Z Z0Z,Z
Z Z0Z1Z.Z
Z@Z0Z
Z@Z0Z
Z@Z0Z2Z
Z@Z0Z
Z@Z0Z4Z
Z@Z0Z4Z
Z@Z0Z8Z6Z
Z@Z0Z
Z@ZAZ8Z
Z@ZAZ8Z
Z@ZAZ8Z:Z
Z@ZAZ8Z
Z@ZAZ8Z<Z
Z@ZAZCZ<Z
Z@ZAZCZ<Z>Z
Z@ZBZ
Z@ZDZ
Z@ZDZ
Z@ZHZFZ
Z@ZHZ
Z@ZHZ
Z@ZHZJZ
Z@ZHZ
Z@ZPZLZ
Z@ZPZLZ
Z@ZPZQZNZ
Z@ZPZ
Z@ZPZ
Z@ZPZRZ
Z@ZPZ
Z@ZPZTZ
Z@ZPZTZ
Z@ZPZXZVZ
Z@ZPZ
Z@Z`ZXZ
Z@Z`ZXZ
Z@Z`ZXZZZ
Z@Z`ZXZ
Z@Z`ZaZ\Z
Z@Z`ZaZ\Z
Z@Z`ZaZ\Z^Z
Z`ZbZ
Z`ZdZ
Z`ZdZ
Z`ZhZfZ
Z`ZhZ
Z`ZhZ
Z`ZhZjZ
Z`ZhZ
Z`ZpZlZ
Z`ZpZlZ
Z`ZpZqZnZ
ZpZrZ
ZpZtZ
ZpZtZ
ZpZxZvZ
ZpZxZ
ZxZzZ
ZxZ|Z
ZxZ|Z
ZxZ|Z~Z
[ [![
[ [![
[ [![
[ ["[
[ [$[
[ [$[
[ [([&[
[ [([
[ [([
[ [([*[
[ [([
[ [0[,[
[ [0[,[
[ [0[1[.[
[@[0[
[@[0[
[@[0[2[
[@[0[
[@[0[4[
[@[0[4[
[@[0[8[6[
[@[0[
[@[A[8[
[@[A[8[
[@[A[8[:[
[@[A[8[
[@[A[8[<[
[@[A[C[<[
[@[A[C[<[>[
[@[B[
[@[D[
[@[D[
[@[H[F[
[@[H[
[@[H[
[@[H[J[
[@[H[
[@[P[L[
[@[P[L[
[@[P[Q[N[
[@[P[
[@[P[
[@[P[R[
[@[P[
[@[P[T[
[@[P[T[
[@[P[X[V[
[@[P[
[@[`[X[
[@[`[X[
[@[`[X[Z[
[@[`[X[
[@[`[a[\[
[@[`[a[\[
[@[`[a[\[^[
[`[b[
[`[d[
[`[d[
[`[h[f[
[`[h[
[`[h[
[`[h[j[
[`[h[
[`[p[l[
[`[p[l[
[`[p[q[n[
[p[r[
[p[t[
[p[t[
[p[x[v[
[p[x[
[x[z[
[x[|[
[x[|[
[x[|[~[
\ \!\
\ \!\
\ \!\
\ \"\
\ \$\
\ \$\
\ \(\&\
\ \(\
\ \(\
\ \(\*\
\ \(\
\ \0\,\
\ \0\,\
\ \0\1\.\
\@\0\
\@\0\
\@\0\2\
\@\0\
\@\0\4\
\@\0\4\
\@\0\8\6\
\@\0\
\@\A\8\
\@\A\8\
\@\A\8\:\
\@\A\8\
\@\A\8\<\
\@\A\C\<\
\@\A\C\<\>\
\@\B\
\@\D\
\@\D\
\@\H\F\
\@\H\
\@\H\
\@\H\J\
\@\H\
\@\P\L\
\@\P\L\
\@\P\Q\N\
\@\P\
\@\P\
\@\P\R\
\@\P\
\@\P\T\
\@\P\T\
\@\P\X\V\
\@\P\
\@\`\X\
\@\`\X\
\@\`\X\Z\
\@\`\X\
\@\`\a\\\
\@\`\a\\\
\@\`\a\\\^\
\`\b\
\`\d\
\`\d\
\`\h\f\
\`\h\
\`\h\
\`\h\j\
\`\h\
\`\p\l\
\`\p\l\
\`\p\q\n\
\p\r\
\p\t\
\p\t\
\p\x\v\
\p\x\
\x\z\
\x\|\
\x\|\
\x\|\~\
] ]!]
] ]!]
] ]!]
] ]"]
] ]$]
] ]$]
] ](]&]
] ](]
] ](]
] ](]*]
] ](]
] ]0],]
] ]0],]
] ]0]1].]
]@]0]
]@]0]
]@]0]2]
]@]0]
]@]0]4]
]@]0]4]
]@]0]8]6]
]@]0]
]@]A]8]
]@]A]8]
]@]A]8]:]
]@]A]8]
]@]A]8]<]
]@]A]C]<]
]@]A]C]<]>]
]@]B]
]@]D]
]@]D]
]@]H]F]
]@]H]
]@]H]
]@]H]J]
]@]H]
]@]P]L]
]@]P]L]
]@]P]Q]N]
]@]P]
]@]P]
]@]P]R]
]@]P]
]@]P]T]
]@]P]T]
]@]P]X]V]
]@]P]
]@]`]X]
]@]`]X]
]@]`]X]Z]
]@]`]X]
]@]`]a]\]
]@]`]a]\]
]@]`]a]\]^]
]`]b]
]`]d]
]`]d]
]`]h]f]
]`]h]
]`]h]
]`]h]j]
]`]h]
]`]p]l]
]`]p]l]
]`]p]q]n]
]p]r]
]p]t]
]p]t]
]p]x]v]
]p]x]
]x]z]
]x]|]
]x]|]
]x]|]~]
^ ^!^
^ ^!^
^ ^!^
^ ^"^
^ ^$^
^ ^$^
^ ^(^&^
^ ^(^
^ ^(^
^ ^(^*^
^ ^(^
^ ^0^,^
^ ^0^,^
^ ^0^1^.^
^@^0^
^@^0^
^@^0^2^
^@^0^
^@^0^4^
^@^0^4^
^@^0^8^6^
^@^0^
^@^A^8^
^@^A^8^
^@^A^8^:^
^@^A^8^
^@^A^8^<^
^@^A^C^<^
^@^A^C^<^>^
^@^B^
^@^D^
^@^D^
^@^H^F^
^@^H^
^@^H^
^@^H^J^
^@^H^
^@^P^L^
^@^P^L^
^@^P^Q^N^
^@^P^
^@^P^
^@^P^R^
^@^P^
^@^P^T^
^@^P^T^
^@^P^X^V^
^@^P^
^@^`^X^
^@^`^X^
^@^`^X^Z^
^@^`^X^
^@^`^a^\^
^@^`^a^\^
^@^`^a^\^^^
^`^b^
^`^d^
^`^d^
^`^h^f^
^`^h^
^`^h^
^`^h^j^
^`^h^
^`^p^l^
^`^p^l^
^`^p^q^n^
^p^r^
^p^t^
^p^t^
^p^x^v^
^p^x^
^x^z^
^x^|^
^x^|^
^x^|^~^
_ _!_
_ _!_
_ _!_
_ _"_
_ _$_
_ _$_
_ _(_&_
_ _(_
_ _(_
_ _(_*_
_ _(_
_ _0_,_
_ _0_,_
_ _0_1_._
_@_0_
_@_0_
_@_0_2_
_@_0_
_@_0_4_
_@_0_4_
_@_0_8_6_
_@_0_
_@_A_8_
_@_A_8_
_@_A_8_:_
_@_A_8_
_@_A_8_<_
_@_A_C_<_
_@_A_C_<_>_
_@_B_
_@_D_
_@_D_
_@_H_F_
_@_H_
_@_H_
_@_H_J_
_@_H_
_@_P_L_
_@_P_L_
_@_P_Q_N_
_@_P_
_@_P_
_@_P_R_
_@_P_
_@_P_T_
_@_P_T_
_@_P_X_V_
_@_P_
_@_`_X_
_@_`_X_
_@_`_X_Z_
_@_`_X_
_@_`_a_\_
_@_`_a_\_
_@_`_a_\_^_
_`_b_
_`_d_
_`_d_
_`_h_f_
_`_h_
_`_h_
_`_h_j_
_`_h_
_`_p_l_
_`_p_l_
_`_p_q_n_
_p_r_
_p_t_
_p_t_
_p_x_v_
_p_x_
_x_z_
_x_|_
_x_|_
_x_|_~_
` `!`
` `!`
` `!`
` `"`
` `$`
` `$`
` `(`&`
` `(`
` `(`
` `(`*`
` `(`
` `0`,`
` `0`,`
` `0`1`.`
`@`0`
`@`0`
`@`0`2`
`@`0`
`@`0`4`
`@`0`4`
`@`0`8`6`
`@`0`
`@`A`8`
`@`A`8`
`@`A`8`:`
`@`A`8`
`@`A`8`<`
`@`A`C`<`
`@`A`C`<`>`
`@`B`
`@`D`
`@`D`
`@`H`F`
`@`H`
`@`H`
`@`H`J`
`@`H`
`@`P`L`
`@`P`L`
`@`P`Q`N`
`@`P`
`@`P`
`@`P`R`
`@`P`
`@`P`T`
`@`P`T`
`@`P`X`V`
`@`P`
`@```X`
`@```X`
`@```X`Z`
`@```X`
`@```a`\`
`@```a`\`
`@```a`\`^`
```b`
```d`
```d`
```h`f`
```h`
```h`
```h`j`
```h`
```p`l`
```p`l`
```p`q`n`
`p`r`
`p`t`
`p`t`
`p`x`v`
`p`x`
`x`z`
`x`|`
`x`|`
`x`|`~`
a a!a
a a!a
a a!a
a a"a
a a$a
a a$a
a a(a&a
a a(a
a a(a
a a(a*a
a a(a
a a0a,a
a a0a,a
a a0a1a.a
a@a0a
a@a0a
a@a0a2a
a@a0a
a@a0a4a
a@a0a4a
a@a0a8a6a
a@a0a
a@aAa8a
a@aAa8a
a@aAa8a:a
a@aAa8a
a@aAa8a<a
a@aAaCa<a
a@aAaCa<a>a
a@aBa
a@aDa
a@aDa
a@aHaFa
a@aHa
a@aHa
a@aHaJa
a@aHa
a@aPaLa
a@aPaLa
a@aPaQaNa
a@aPa
a@aPa
a@aPaRa
a@aPa
a@aPaTa
a@aPaTa
a@aPaXaVa
a@aPa
a@a`aXa
a@a`aXa
a@a`aXaZa
a@a`aXa
a@a`aaa\a
a@a`aaa\a
a@a`aaa\a^a
a`aba
a`ada
a`ada
a`ahafa
a`aha
a`aha
a`ahaja
a`aha
a`apala
a`apala
a`apaqana
apara
apata
apata
apaxava
apaxa
axaza
axa|a
axa|a
axa|a~a
b b!b
b b!b
b b!b
b b"b
b b$b
b b$b
b b(b&b
b b(b
b b(b
b b(b*b
b b(b
b b0b,b
b b0b,b
b b0b1b.b
b@b0b
b@b0b
b@b0b2b
b@b0b
b@b0b4b
b@b0b4b
b@b0b8b6b
b@b0b
b@bAb8b
b@bAb8b
b@bAb8b:b
b@bAb8b
b@bAb8b<b
b@bAbCb<b
b@bAbCb<b>b
b@bBb
b@bDb
b@bDb
b@bHbFb
b@bHb
b@bHb
b@bHbJb
b@bHb
b@bPbLb
b@bPbLb
b@bPbQbNb
b@bPb
b@bPb
b@bPbRb
b@bPb
b@bPbTb
b@bPbTb
b@bPbXbVb
b@bPb
b@b`bXb
b@b`bXb
b@b`bXbZb
b@b`bXb
b@b`bab\b
b@b`bab\b
b@b`bab\b^b
b`bbb
b`bdb
b`bdb
b`bhbfb
b`bhb
b`bhb
b`bhbjb
b`bhb
b`bpblb
b`bpblb
b`bpbqbnb
bpbrb
bpbtb
bpbtb
bpbxbvb
bpbxb
bxbzb
bxb|b
bxb|b
bxb|b~b
c c!c
c c!c
c c!c
c c"c
c c$c
c c$c
c c(c&c
c c(c
c c(c
c c(c*c
c c(c
c c0c,c
c c0c,c
c c0c1c.c
c@c0c
c@c0c
c@c0c2c
c@c0c
c@c0c4c
c@c0c4c
c@c0c8c6c
c@c0c
c@cAc8c
c@cAc8c
c@cAc8c:c
c@cAc8c
c@cAc8c<c
c@cAcCc<c
c@cAcCc<c>c
c@cBc
c@cDc
c@cDc
c@cHcFc
c@cHc
c@cHc
c@cHcJc
c@cHc
c@cPcLc
c@cPcLc
c@cPcQcNc
c@cPc
c@cPc
c@cPcRc
c@cPc
c@cPcTc
c@cPcTc
c@cPcXcVc
c@cPc
c@c`cXc
c@c`cXc
c@c`cXcZc
c@c`cXc
c@c`cac\c
c@c`cac\c
c@c`cac\c^c
c`cbc
c`cdc
c`cdc
c`chcfc
c`chc
c`chc
c`chcjc
c`chc
c`cpclc
c`cpclc
c`cpcqcnc
cpcrc
cpctc
cpctc
cpcxcvc
cpcxc
cxczc
cxc|c
cxc|c
cxc|c~c
d d!d
d d!d
d d!d
d d"d
d d$d
d d$d
d d(d&d
d d(d
d d(d
d d(d*d
d d(d
d d0d,d
d d0d,d
d d0d1d.d
d@d0d
d@d0d
d@d0d2d
d@d0d
d@d0d4d
d@d0d4d
d@d0d8d6d
d@d0d
d@dAd8d
d@dAd8d
d@dAd8d:d
d@dAd8d
d@dAd8d<d
d@dAdCd<d
d@dAdCd<d>d
d@dBd
d@dDd
d@dDd
d@dHdFd
d@dHd
d@dHd
d@dHdJd
d@dHd
d@dPdLd
d@dPdLd
d@dPdQdNd
d@dPd
d@dPd
d@dPdRd
d@dPd
d@dPdTd
d@dPdTd
d@dPdXdVd
d@dPd
d@d`dXd
d@d`dXd
d@d`dXdZd
d@d`dXd
d@d`dad\d
d@d`dad\d
d@d`dad\d^d
d`dbd
d`ddd
d`ddd
d`dhdfd
d`dhd
d`dhd
d`dhdjd
d`dhd
d`dpdld
d`dpdld
d`dpdqdnd
dpdrd
dpdtd
dpdtd
dpdxdvd
dpdxd
dxdzd
dxd|d
dxd|d
dxd|d~d
e e!e
e e!e
e e!e
e e"e
e e$e
e e$e
e e(e&e
e e(e
e e(e
e e(e*e
e e(e
e e0e,e
e e0e,e
e e0e1e.e
e@e0e
e@e0e
e@e0e2e
e@e0e
e@e0e4e
e@e0e4e
e@e0e8e6e
e@e0e
e@eAe8e
e@eAe8e
e@eAe8e:e
e@eAe8e
e@eAe8e<e
e@eAeCe<e
e@eAeCe<e>e
e@eBe
e@eDe
e@eDe
e@eHeFe
e@eHe
e@eHe
e@eHeJe
e@eHe
e@ePeLe
e@ePeLe
e@ePeQeNe
e@ePe
e@ePe
e@ePeRe
e@ePe
e@ePeTe
e@ePeTe
e@ePeXeVe
e@ePe
e@e`eXe
e@e`eXe
e@e`eXeZe
e@e`eXe
e@e`eae\e
e@e`eae\e
e@e`eae\e^e
e`ebe
e`ede
e`ede
e`ehefe
e`ehe
e`ehe
e`eheje
e`ehe
e`epele
e`epele
e`epeqene
epere
epete
epete
epexeve
epexe
exeze
exe|e
exe|e
exe|e~e
f f!f
f f!f
f f!f
f f"f
f f$f
f f$f
f f(f&f
f f(f
f f(f
f f(f*f
f f(f
f f0f,f
f f0f,f
f f0f1f.f
f@f0f
f@f0f
f@f0f2f
f@f0f
f@f0f4f
f@f0f4f
f@f0f8f6f
f@f0f
f@fAf8f
f@fAf8f
f@fAf8f:f
f@fAf8f
f@fAf8f<f
f@fAfCf<f
f@fAfCf<f>f
f@fBf
f@fDf
f@fDf
f@fHfFf
f@fHf
f@fHf
f@fHfJf
f@fHf
f@fPfLf
f@fPfLf
f@fPfQfNf
f@fPf
f@fPf
f@fPfRf
f@fPf
f@fPfTf
f@fPfTf
f@fPfXfVf
f@fPf
f@f`fXf
f@f`fXf
f@f`fXfZf
f@f`fXf
f@f`faf\f
f@f`faf\f
f@f`faf\f^f
f`fbf
f`fdf
f`fdf
f`fhfff
f`fhf
f`fhf
f`fhfjf
f`fhf
f`fpflf
f`fpflf
f`fpfqfnf
fpfrf
fpftf
fpftf
fpfxfvf
fpfxf
fxfzf
fxf|f
fxf|f
fxf|f~f
g g!g
g g!g
g g!g
g g"g
g g$g
g g$g
g g(g&g
g g(g
g g(g
g g(g*g
g g(g
g g0g,g
g g0g,g
g g0g1g.g
g@g0g
g@g0g
g@g0g2g
g@g0g
g@g0g4g
g@g0g4g
g@g0g8g6g
g@g0g
g@gAg8g
g@gAg8g
g@gAg8g:g
g@gAg8g
g@gAg8g<g
g@gAgCg<g
g@gAgCg<g>g
g@gBg
g@gDg
g@gDg
g@gHgFg
g@gHg
g@gHg
g@gHgJg
g@gHg
g@gPgLg
g@gPgLg
g@gPgQgNg
g@gPg
g@gPg
g@gPgRg
g@gPg
g@gPgTg
g@gPgTg
g@gPgXgVg
g@gPg
g@g`gXg
g@g`gXg
g@g`gXgZg
g@g`gXg
g@g`gag\g
g@g`gag\g
g@g`gag\g^g
g`gbg
g`gdg
g`gdg
g`ghgfg
g`ghg
g`ghg
g`ghgjg
g`ghg
g`gpglg
g`gpglg
g`gpgqgng
gpgrg
gpgtg
gpgtg
gpgxgvg
gpgxg
gxgzg
gxg|g
gxg|g
gxg|g~g
h h!h
h h!h
h h!h
h h"h
h h$h
h h$h
h h(h&h
h h(h
h h(h
h h(h*h
h h(h
h h0h,h
h h0h,h
h h0h1h.h
h@h0h
h@h0h
h@h0h2h
h@h0h
h@h0h4h
h@h0h4h
h@h0h8h6h
h@h0h
h@hAh8h
h@hAh8h
h@hAh8h:h
h@hAh8h
h@hAh8h<h
h@hAhCh<h
h@hAhCh<h>h
h@hBh
h@hDh
h@hDh
h@hHhFh
h@hHh
h@hHh
h@hHhJh
h@hHh
h@hPhLh
h@hPhLh
h@hPhQhNh
h@hPh
h@hPh
h@hPhRh
h@hPh
h@hPhTh
h@hPhTh
h@hPhXhVh
h@hPh
h@h`hXh
h@h`hXh
h@h`hXhZh
h@h`hXh
h@h`hah\h
h@h`hah\h
h@h`hah\h^h
h`hbh
h`hdh
h`hdh
h`hhhfh
h`hhh
h`hhh
h`hhhjh
h`hhh
h`hphlh
h`hphlh
h`hphqhnh
hphrh
hphth
hphth
hphxhvh
hphxh
hxhzh
hxh|h
hxh|h
hxh|h~h
i i!i
i i!i
i i!i
i i"i
i i$i
i i$i
i i(i&i
i i(i
i i(i
i i(i*i
i i(i
i i0i,i
i i0i,i
i i0i1i.i
i@i0i
i@i0i
i@i0i2i
i@i0i
i@i0i4i
i@i0i4i
i@i0i8i6i
i@i0i
i@iAi8i
i@iAi8i
i@iAi8i:i
i@iAi8i
i@iAi8i<i
i@iAiCi<i
i@iAiCi<i>i
i@iBi
i@iDi
i@iDi
i@iHiFi
i@iHi
i@iHi
i@iHiJi
i@iHi
i@iPiLi
i@iPiLi
i@iPiQiNi
i@iPi
i@iPi
i@iPiRi
i@iPi
i@iPiTi
i@iPiTi
i@iPiXiVi
i@iPi
i@i`iXi
i@i`iXi
i@i`iXiZi
i@i`iXi
i@i`iai\i
i@i`iai\i
i@i`iai\i^i
i`ibi
i`idi
i`idi
i`ihifi
i`ihi
i`ihi
i`ihiji
i`ihi
i`ipili
i`ipili
i`ipiqini
ipiri
ipiti
ipiti
ipixivi
ipixi
ixizi
ixi|i
ixi|i
ixi|i~i
j j!j
j j!j
j j!j
j j"j
j j$j
j j$j
j j(j&j
j j(j
j j(j
j j(j*j
j j(j
j j0j,j
j j0j,j
j j0j1j.j
j@j0j
j@j0j
j@j0j2j
j@j0j
j@j0j4j
j@j0j4j
j@j0j8j6j
j@j0j
j@jAj8j
j@jAj8j
j@jAj8j:j
j@jAj8j
j@jAj8j<j
j@jAjCj<j
j@jAjCj<j>j
j@jBj
j@jDj
j@jDj
j@jHjFj
j@jHj
j@jHj
j@jHjJj
j@jHj
j@jPjLj
j@jPjLj
j@jPjQjNj
j@jPj
j@jPj
j@jPjRj
j@jPj
j@jPjTj
j@jPjTj
j@jPjXjVj
j@jPj
j@j`jXj
j@j`jXj
j@j`jXjZj
j@j`jXj
j@j`jaj\j
j@j`jaj\j
j@j`jaj\j^j
j`jbj
j`jdj
j`jdj
j`jhjfj
j`jhj
j`jhj
j`jhjjj
j`jhj
j`jpjlj
j`jpjlj
j`jpjqjnj
jpjrj
jpjtj
jpjtj
jpjxjvj
jpjxj
jxjzj
jxj|j
jxj|j
jxj|j~j
k k!k
k k!k
k k!k
k k"k
k k$k
k k$k
k k(k&k
k k(k
k k(k
k k(k*k
k k(k
k k0k,k
k k0k,k
k k0k1k.k
k@k0k
k@k0k
k@k0k2k
k@k0k
k@k0k4k
k@k0k4k
k@k0k8k6k
k@k0k
k@kAk8k
k@kAk8k
k@kAk8k:k
k@kAk8k
k@kAk8k<k
k@kAkCk<k
k@kAkCk<k>k
k@kBk
k@kDk
k@kDk
k@kHkFk
k@kHk
k@kHk
k@kHkJk
k@kHk
k@kPkLk
k@kPkLk
k@kPkQkNk
k@kPk
k@kPk
k@kPkRk
k@kPk
k@kPkTk
k@kPkTk
k@kPkXkVk
k@kPk
k@k`kXk
k@k`kXk
k@k`kXkZk
k@k`kXk
k@k`kak\k
k@k`kak\k
k@k`kak\k^k
k`kbk
k`kdk
k`kdk
k`khkfk
k`khk
k`khk
k`khkjk
k`khk
k`kpklk
k`kpklk
k`kpkqknk
kpkrk
kpktk
kpktk
kpkxkvk
kpkxk
kxkzk
kxk|k
kxk|k
kxk|k~k
l l!l
l l!l
l l!l
l l"l
l l$l
l l$l
l l(l&l
l l(l
l l(l
l l(l*l
l l(l
l l0l,l
l l0l,l
l l0l1l.l
l@l0l
l@l0l
l@l0l2l
l@l0l
l@l0l4l
l@l0l4l
l@l0l8l6l
l@l0l
l@lAl8l
l@lAl8l
l@lAl8l:l
l@lAl8l
l@lAl8l<l
l@lAlCl<l
l@lAlCl<l>l
l@lBl
l@lDl
l@lDl
l@lHlFl
l@lHl
l@lHl
l@lHlJl
l@lHl
l@lPlLl
l@lPlLl
l@lPlQlNl
l@lPl
l@lPl
l@lPlRl
l@lPl
l@lPlTl
l@lPlTl
l@lPlXlVl
l@lPl
l@l`lXl
l@l`lXl
l@l`lXlZl
l@l`lXl
l@l`lal\l
l@l`lal\l
l@l`lal\l^l
l`lbl
l`ldl
l`ldl
l`lhlfl
l`lhl
l`lhl
l`lhljl
l`lhl
l`lplll
l`lplll
l`lplqlnl
lplrl
lpltl
lpltl
lplxlvl
lplxl
lxlzl
lxl|l
lxl|l
lxl|l~l
m m!m
m m!m
m m!m
m m"m
m m$m
m m$m
m m(m&m
m m(m
m m(m
m m(m*m
m m(m
m m0m,m
m m0m,m
m m0m1m.m
m@m0m
m@m0m
m@m0m2m
m@m0m
m@m0m4m
m@m0m4m
m@m0m8m6m
m@m0m
m@mAm8m
m@mAm8m
m@mAm8m:m
m@mAm8m
m@mAm8m<m
m@mAmCm<m
m@mAmCm<m>m
m@mBm
m@mDm
m@mDm
m@mHmFm
m@mHm
m@mHm
m@mHmJm
m@mHm
m@mPmLm
m@mPmLm
m@mPmQmNm
m@mPm
m@mPm
m@mPmRm
m@mPm
m@mPmTm
m@mPmTm
m@mPmXmVm
m@mPm
m@m`mXm
m@m`mXm
m@m`mXmZm
m@m`mXm
m@m`mam\m
m@m`mam\m
m@m`mam\m^m
m`mbm
m`mdm
m`mdm
m`mhmfm
m`mhm
m`mhm
m`mhmjm
m`mhm
m`mpmlm
m`mpmlm
m`mpmqmnm
mpmrm
mpmtm
mpmtm
mpmxmvm
mpmxm
mxmzm
mxm|m
mxm|m
mxm|m~m
n n!n
n n!n
n n!n
n n"n
n n$n
n n$n
n n(n&n
n n(n
n n(n
n n(n*n
n n(n
n n0n,n
n n0n,n
n n0n1n.n
n@n0n
n@n0n
n@n0n2n
n@n0n
n@n0n4n
n@n0n4n
n@n0n8n6n
n@n0n
n@nAn8n
n@nAn8n
n@nAn8n:n
n@nAn8n
n@nAn8n<n
n@nAnCn<n
n@nAnCn<n>n
n@nBn
n@nDn
n@nDn
n@nHnFn
n@nHn
n@nHn
n@nHnJn
n@nHn
n@nPnLn
n@nPnLn
n@nPnQnNn
n@nPn
n@nPn
n@nPnRn
n@nPn
n@nPnTn
n@nPnTn
n@nPnXnVn
n@nPn
n@n`nXn
n@n`nXn
n@n`nXnZn
n@n`nXn
n@n`nan\n
n@n`nan\n
n@n`nan\n^n
n`nbn
n`ndn
n`ndn
n`nhnfn
n`nhn
n`nhn
n`nhnjn
n`nhn
n`npnln
n`npnln
n`npnqnnn
npnrn
npntn
npntn
npnxnvn
npnxn
nxnzn
nxn|n
nxn|n
nxn|n~n
o o!o
o o!o
o o!o
o o"o
o o$o
o o$o
o o(o&o
o o(o
o o(o
o o(o*o
o o(o
o o0o,o
o o0o,o
o o0o1o.o
o@o0o
o@o0o
o@o0o2o
o@o0o
o@o0o4o
o@o0o4o
o@o0o8o6o
o@o0o
o@oAo8o
o@oAo8o
o@oAo8o:o
o@oAo8o
o@oAo8o<o
o@oAoCo<o
o@oAoCo<o>o
o@oBo
o@oDo
o@oDo
o@oHoFo
o@oHo
o@oHo
o@oHoJo
o@oHo
o@oPoLo
o@oPoLo
o@oPoQoNo
o@oPo
o@oPo
o@oPoRo
o@oPo
o@oPoTo
o@oPoTo
o@oPoXoVo
o@oPo
o@o`oXo
o@o`oXo
o@o`oXoZo
o@o`oXo
o@o`oao\o
o@o`oao\o
o@o`oao\o^o
o`obo
o`odo
o`odo
o`ohofo
o`oho
o`oho
o`ohojo
o`oho
o`opolo
o`opolo
o`opoqono
oporo
opoto
opoto
opoxovo
opoxo
oxozo
oxo|o
oxo|o
oxo|o~o
p p!p
p p!p
p p!p
p p"p
p p$p
p p$p
p p(p&p
p p(p
p p(p
p p(p*p
p p(p
p p0p,p
p p0p,p
p p0p1p.p
p@p0p
p@p0p
p@p0p2p
p@p0p
p@p0p4p
p@p0p4p
p@p0p8p6p
p@p0p
p@pAp8p
p@pAp8p
p@pAp8p:p
p@pAp8p
p@pAp8p<p
p@pApCp<p
p@pApCp<p>p
p@pBp
p@pDp
p@pDp
p@pHpFp
p@pHp
p@pHp
p@pHpJp
p@pHp
p@pPpLp
p@pPpLp
p@pPpQpNp
p@pPp
p@pPp
p@pPpRp
p@pPp
p@pPpTp
p@pPpTp
p@pPpXpVp
p@pPp
p@p`pXp
p@p`pXp
p@p`pXpZp
p@p`pXp
p@p`pap\p
p@p`pap\p
p@p`pap\p^p
p`pbp
p`pdp
p`pdp
p`phpfp
p`php
p`php
p`phpjp
p`php
p`ppplp
p`ppplp
p`pppqpnp
ppprp
ppptp
ppptp
pppxpvp
pppxp
pxpzp
pxp|p
pxp|p
pxp|p~p
q q!q
q q!q
q q!q
q q"q
q q$q
q q$q
q q(q&q
q q(q
q q(q
q q(q*q
q q(q
q q0q,q
q q0q,q
q q0q1q.q
q@q0q
q@q0q
q@q0q2q
q@q0q
q@q0q4q
q@q0q4q
q@q0q8q6q
q@q0q
q@qAq8q
q@qAq8q
q@qAq8q:q
q@qAq8q
q@qAq8q<q
q@qAqCq<q
q@qAqCq<q>q
q@qBq
q@qDq
q@qDq
q@qHqFq
q@qHq
q@qHq
q@qHqJq
q@qHq
q@qPqLq
q@qPqLq
q@qPqQqNq
q@qPq
q@qPq
q@qPqRq
q@qPq
q@qPqTq
q@qPqTq
q@qPqXqVq
q@qPq
q@q`qXq
q@q`qXq
q@q`qXqZq
q@q`qXq
q@q`qaq\q
q@q`qaq\q
q@q`qaq\q^q
q`qbq
q`qdq
q`qdq
q`qhqfq
q`qhq
q`qhq
q`qhqjq
q`qhq
q`qpqlq
q`qpqlq
q`qpqqqnq
qpqrq
qpqtq
qpqtq
qpqxqvq
qpqxq
qxqzq
qxq|q
qxq|q
qxq|q~q
r r!r
r r!r
r r!r
r r"r
r r$r
r r$r
r r(r&r
r r(r
r r(r
r r(r*r
r r(r
r r0r,r
r r0r,r
r r0r1r.r
r@r0r
r@r0r
r@r0r2r
r@r0r
r@r0r4r
r@r0r4r
r@r0r8r6r
r@r0r
r@rAr8r
r@rAr8r
r@rAr8r:r
r@rAr8r
r@rAr8r<r
r@rArCr<r
r@rArCr<r>r
r@rBr
r@rDr
r@rDr
r@rHrFr
r@rHr
r@rHr
r@rHrJr
r@rHr
r@rPrLr
r@rPrLr
r@rPrQrNr
r@rPr
r@rPr
r@rPrRr
r@rPr
r@rPrTr
r@rPrTr
r@rPrXrVr
r@rPr
r@r`rXr
r@r`rXr
r@r`rXrZr
r@r`rXr
r@r`rar\r
r@r`rar\r
r@r`rar\r^r
r`rbr
r`rdr
r`rdr
r`rhrfr
r`rhr
r`rhr
r`rhrjr
r`rhr
r`rprlr
r`rprlr
r`rprqrnr
rprrr
rprtr
rprtr
rprxrvr
rprxr
rxrzr
rxr|r
rxr|r
rxr|r~r
s s!s
s s!s
s s!s
s s"s
s s$s
s s$s
s s(s&s
s s(s
s s(s
s s(s*s
s s(s
s s0s,s
s s0s,s
s s0s1s.s
s@s0s
s@s0s
s@s0s2s
s@s0s
s@s0s4s
s@s0s4s
s@s0s8s6s
s@s0s
s@sAs8s
s@sAs8s
s@sAs8s:s
s@sAs8s
s@sAs8s<s
s@sAsCs<s
s@sAsCs<s>s
s@sBs
s@sDs
s@sDs
s@sHsFs
s@sHs
s@sHs
s@sHsJs
s@sHs
s@sPsLs
s@sPsLs
s@sPsQsNs
s@sPs
s@sPs
s@sPsRs
s@sPs
s@sPsTs
s@sPsTs
s@sPsXsVs
s@sPs
s@s`sXs
s@s`sXs
s@s`sXsZs
s@s`sXs
s@s`sas\s
s@s`sas\s
s@s`sas\s^s
s`sbs
s`sds
s`sds
s`shsfs
s`shs
s`shs
s`shsjs
s`shs
s`spsls
s`spsls
s`spsqsns
spsrs
spsts
spsts
spsxsvs
spsxs
sxszs
sxs|s
sxs|s
sxs|s~s
t t!t
t t!t
t t!t
t t"t
t t$t
t t$t
t t(t&t
t t(t
t t(t
t t(t*t
t t(t
t t0t,t
t t0t,t
t t0t1t.t
t@t0t
t@t0t
t@t0t2t
t@t0t
t@t0t4t
t@t0t4t
t@t0t8t6t
t@t0t
t@tAt8t
t@tAt8t
t@tAt8t:t
t@tAt8t
t@tAt8t<t
t@tAtCt<t
t@tAtCt<t>t
t@tBt
t@tDt
t@tDt
t@tHtFt
t@tHt
t@tHt
t@tHtJt
t@tHt
t@tPtLt
t@tPtLt
t@tPtQtNt
t@tPt
t@tPt
t@tPtRt
t@tPt
t@tPtTt
t@tPtTt
t@tPtXtVt
t@tPt
t@t`tXt
t@t`tXt
t@t`tXtZt
t@t`tXt
t@t`tat\t
t@t`tat\t
t@t`tat\t^t
t`tbt
t`tdt
t`tdt
t`thtft
t`tht
t`tht
t`thtjt
t`tht
t`tptlt
t`tptlt
t`tptqtnt
tptrt
tpttt
tpttt
tptxtvt
tptxt
txtzt
txt|t
txt|t
txt|t~t
u u!u
u u!u
u u!u
u u"u
u u$u
u u$u
u u(u&u
u u(u
u u(u
u u(u*u
u u(u
u u0u,u
u u0u,u
u u0u1u.u
u@u0u
u@u0u
u@u0u2u
u@u0u
u@u0u4u
u@u0u4u
u@u0u8u6u
u@u0u
u@uAu8u
u@uAu8u
u@uAu8u:u
u@uAu8u
u@uAu8u<u
u@uAuCu<u
u@uAuCu<u>u
u@uBu
u@uDu
u@uDu
u@uHuFu
u@uHu
u@uHu
u@uHuJu
u@uHu
u@uPuLu
u@uPuLu
u@uPuQuNu
u@uPu
u@uPu
u@uPuRu
u@uPu
u@uPuTu
u@uPuTu
u@uPuXuVu
u@uPu
u@u`uXu
u@u`uXu
u@u`uXuZu
u@u`uXu
u@u`uau\u
u@u`uau\u
u@u`uau\u^u
u`ubu
u`udu
u`udu
u`uhufu
u`uhu
u`uhu
u`uhuju
u`uhu
u`upulu
u`upulu
u`upuqunu
upuru
uputu
uputu
upuxuvu
upuxu
uxuzu
uxu|u
uxu|u
uxu|u~u
v v!v
v v!v
v v!v
v v"v
v v$v
v v$v
v v(v&v
v v(v
v v(v
v v(v*v
v v(v
v v0v,v
v v0v,v
v v0v1v.v
v@v0v
v@v0v
v@v0v2v
v@v0v
v@v0v4v
v@v0v4v
v@v0v8v6v
v@v0v
v@vAv8v
v@vAv8v
v@vAv8v:v
v@vAv8v
v@vAv8v<v
v@vAvCv<v
v@vAvCv<v>v
v@vBv
v@vDv
v@vDv
v@vHvFv
v@vHv
v@vHv
v@vHvJv
v@vHv
v@vPvLv
v@vPvLv
v@vPvQvNv
v@vPv
v@vPv
v@vPvRv
v@vPv
v@vPvTv
v@vPvTv
v@vPvXvVv
v@vPv
v@v`vXv
v@v`vXv
v@v`vXvZv
v@v`vXv
v@v`vav\v
v@v`vav\v
v@v`vav\v^v
v`vbv
v`vdv
v`vdv
v`vhvfv
v`vhv
v`vhv
v`vhvjv
v`vhv
v`vpvlv
v`vpvlv
v`vpvqvnv
vpvrv
vpvtv
vpvtv
vpvxvvv
vpvxv
vxvzv
vxv|v
vxv|v
vxv|v~v
w w!w
w w!w
w w!w
w w"w
w w$w
w w$w
w w(w&w
w w(w
w w(w
w w(w*w
w w(w
w w0w,w
w w0w,w
w w0w1w.w
w@w0w
w@w0w
w@w0w2w
w@w0w
w@w0w4w
w@w0w4w
w@w0w8w6w
w@w0w
w@wAw8w
w@wAw8w
w@wAw8w:w
w@wAw8w
w@wAw8w<w
w@wAwCw<w
w@wAwCw<w>w
w@wBw
w@wDw
w@wDw
w@wHwFw
w@wHw
w@wHw
w@wHwJw
w@wHw
w@wPwLw
w@wPwLw
w@wPwQwNw
w@wPw
w@wPw
w@wPwRw
w@wPw
w@wPwTw
w@wPwTw
w@wPwXwVw
w@wPw
w@w`wXw
w@w`wXw
w@w`wXwZw
w@w`wXw
w@w`waw\w
w@w`waw\w
w@w`waw\w^w
w`wbw
w`wdw
w`wdw
w`whwfw
w`whw
w`whw
w`whwjw
w`whw
w`wpwlw
w`wpwlw
w`wpwqwnw
wpwrw
wpwtw
wpwtw
wpwxwvw
wpwxw
wxwzw
wxw|w
wxw|w
wxw|w~w
x x!x
x x!x
x x!x
x x"x
x x$x
x x$x
x x(x&x
x x(x
x x(x
x x(x*x
x x(x
x x0x,x
x x0x,x
x x0x1x.x
x@x0x
x@x0x
x@x0x2x
x@x0x
x@x0x4x
x@x0x4x
x@x0x8x6x
x@x0x
x@xAx8x
x@xAx8x
x@xAx8x:x
x@xAx8x
x@xAx8x<x
x@xAxCx<x
x@xAxCx<x>x
x@xBx
x@xDx
x@xDx
x@xHxFx
x@xHx
x@xHx
x@xHxJx
x@xHx
x@xPxLx
x@xPxLx
x@xPxQxNx
x@xPx
x@xPx
x@xPxRx
x@xPx
x@xPxTx
x@xPxTx
x@xPxXxVx
x@xPx
x@x`xXx
x@x`xXx
x@x`xXxZx
x@x`xXx
x@x`xax\x
x@x`xax\x
x@x`xax\x^x
x`xbx
x`xdx
x`xdx
x`xhxfx
x`xhx
x`xhx
x`xhxjx
x`xhx
x`xpxlx
x`xpxlx
x`xpxqxnx
xpxrx
xpxtx
xpxtx
xpxxxvx
xpxxx
xxxzx
xxx|x
xxx|x
xxx|x~x
y y!y
y y!y
y y!y
y y"y
y y$y
y y$y
y y(y&y
y y(y
y y(y
y y(y*y
y y(y
y y0y,y
y y0y,y
y y0y1y.y
y@y0y
y@y0y
y@y0y2y
y@y0y
y@y0y4y
y@y0y4y
y@y0y8y6y
y@y0y
y@yAy8y
y@yAy8y
y@yAy8y:y
y@yAy8y
y@yAy8y<y
y@yAyCy<y
y@yAyCy<y>y
y@yBy
y@yDy
y@yDy
y@yHyFy
y@yHy
y@yHy
y@yHyJy
y@yHy
y@yPyLy
y@yPyLy
y@yPyQyNy
y@yPy
y@yPy
y@yPyRy
y@yPy
y@yPyTy
y@yPyTy
y@yPyXyVy
y@yPy
y@y`yXy
y@y`yXy
y@y`yXyZy
y@y`yXy
y@y`yay\y
y@y`yay\y
y@y`yay\y^y
y`yby
y`ydy
y`ydy
y`yhyfy
y`yhy
y`yhy
y`yhyjy
y`yhy
y`ypyly
y`ypyly
y`ypyqyny
ypyry
ypyty
ypyty
ypyxyvy
ypyxy
yxyzy
yxy|y
yxy|y
yxy|y~y
z z!z
z z!z
z z!z
z z"z
z z$z
z z$z
z z(z&z
z z(z
z z(z
z z(z*z
z z(z
z z0z,z
z z0z,z
z z0z1z.z
z@z0z
z@z0z
z@z0z2z
z@z0z
z@z0z4z
z@z0z4z
z@z0z8z6z
z@z0z
z@zAz8z
z@zAz8z
z@zAz8z:z
z@zAz8z
z@zAz8z<z
z@zAzCz<z
z@zAzCz<z>z
z@zBz
z@zDz
z@zDz
z@zHzFz
z@zHz
z@zHz
z@zHzJz
z@zHz
z@zPzLz
z@zPzLz
z@zPzQzNz
z@zPz
z@zPz
z@zPzRz
z@zPz
z@zPzTz
z@zPzTz
z@zPzXzVz
z@zPz
z@z`zXz
z@z`zXz
z@z`zXzZz
z@z`zXz
z@z`zaz\z
z@z`zaz\z
z@z`zaz\z^z
z`zbz
z`zdz
z`zdz
z`zhzfz
z`zhz
z`zhz
z`zhzjz
z`zhz
z`zpzlz
z`zpzlz
z`zpzqznz
zpzrz
zpztz
zpztz
zpzxzvz
zpzxz
zxzzz
zxz|z
zxz|z
zxz|z~z
{ {!{
{ {!{
{ {!{
{ {"{
{ {${
{ {${
{ {({&{
{ {({
{ {({
{ {({*{
{ {({
{ {0{,{
{ {0{,{
{ {0{1{.{
{@{0{
{@{0{
{@{0{2{
{@{0{
{@{0{4{
{@{0{4{
{@{0{8{6{
{@{0{
{@{A{8{
{@{A{8{
{@{A{8{:{
{@{A{8{
{@{A{8{<{
{@{A{C{<{
{@{A{C{<{>{
{@{B{
{@{D{
{@{D{
{@{H{F{
{@{H{
{@{H{
{@{H{J{
{@{H{
{@{P{L{
{@{P{L{
{@{P{Q{N{
{@{P{
{@{P{
{@{P{R{
{@{P{
{@{P{T{
{@{P{T{
{@{P{X{V{
{@{P{
{@{`{X{
{@{`{X{
{@{`{X{Z{
{@{`{X{
{@{`{a{\{
{@{`{a{\{
{@{`{a{\{^{
{`{b{
{`{d{
{`{d{
{`{h{f{
{`{h{
{`{h{
{`{h{j{
{`{h{
{`{p{l{
{`{p{l{
{`{p{q{n{
{p{r{
{p{t{
{p{t{
{p{x{v{
{p{x{
{x{z{
{x{|{
{x{|{
{x{|{~{
N7Imf_3_213DwaCompressor19LossyDctDecoderBaseE
N7Imf_3_213DwaCompressor19LossyDctEncoderBaseE
N7Imf_3_213DwaCompressorE
   ! " # $ & ' ( ) * + , . / 0 1 2 3 4 5 7 8 9 : ; < = > @ A B C D E F G H J K L M N O P Q R S U V W X Y Z [ \ ] ^ _ ` b c d e f g h i j k l m n o p r s t u v w x y z { | } ~ 
! !!!!!"!#!$!%!&!'!(!)!)!*!+!,!-!.!/!0!0!1!2!3!4!5!6!7!7!8!9!:!;!<!=!>!>!?!@!A!B!C!D!D!E!F!G!H!I!J!K!K!L!M!N!O!P!Q!Q!R!S!T!U!V!V!W!X!Y!Z![!\!\!]!^!_!`!a!a!b!c!d!e!f!f!g!h!i!j!k!k!l!m!n!o!p!p!q!r!s!t!u!u!v!w!x!y!z!z!{!|!}!~!~!
" "!"""""#"$"$"%"&"'"'"(")"*"*"+",","-"."."/"0"1"1"2"3"3"4"5"6"6"7"8"8"9":";";"<"="=">"?"?"@"A"B"B"C"D"D"E"F"F"G"H"I"I"J"K"K"L"M"M"N"O"P"P"Q"R"R"S"T"T"U"V"V"W"X"Y"Y"Z"["["\"]"]"^"_"_"`"a"a"b"c"d"d"e"f"f"g"h"h"i"j"j"k"l"l"m"n"n"o"p"p"q"r"r"s"t"t"u"v"w"w"x"y"y"z"{"{"|"}"}"~"
###
# # #!#!#"#####$#$#%#%#&#'#'#(#(#)#*#*#+#+#,#-#-#.#.#/#0#0#1#1#2#3#3#4#4#5#6#6#7#7#8#9#9#:#:#;#;#<#=#=#>#>#?#@#@#A#A#B#C#C#D#D#E#E#F#G#G#H#H#I#J#J#K#K#L#L#M#N#N#O#O#P#Q#Q#R#R#S#S#T#U#U#V#V#W#W#X#Y#Y#Z#Z#[#\#\#]#]#^#^#_#`#`#a#a#b#b#c#d#d#e#e#f#f#g#h#h#i#i#j#j#k#l#l#m#m#n#n#o#p#p#q#q#r#r#s#t#t#u#u#v#v#w#x#x#y#y#z#z#{#|#|#}#}#~#~#
$$$$$
$ $ $ $ $!$!$!$!$"$"$"$"$#$#$#$#$$$$$$$$$%$%$%$%$&$&$&$&$'$'$'$'$($($($($)$)$)$)$*$*$*$*$+$+$+$+$,$,$,$,$-$-$-$-$.$.$.$.$/$/$/$/$0$0$0$0$1$1$1$1$1$2$2$2$2$3$3$3$3$4$4$4$4$5$5$5$5$6$6$6$6$7$7$7$7$8$8$8$8$9$9$9$9$:$:$:$:$;$;$;$;$<$<$<$<$=$=$=$=$>$>$>$>$>$?$?$?$?$@$@$@$@$A$A$A$A$B$B$B$B$C$C$D$D$E$E$F$F$F$G$G$H$H$I$I$J$J$K$K$L$L$M$M$N$N$O$O$P$P$Q$Q$Q$R$R$S$S$T$T$U$U$V$V$W$W$X$X$Y$Y$Z$Z$Z$[$[$\$\$]$]$^$^$_$_$`$`$a$a$b$b$b$c$c$d$d$e$e$f$f$g$g$h$h$i$i$i$j$j$k$k$l$l$m$m$n$n$o$o$o$p$p$q$q$r$r$s$s$t$t$u$u$u$v$v$w$w$x$x$y$y$z$z$z${${$|$|$}$}$~$~$
%%%
% % % %!%!%"%"%"%#%#%$%$%$%%%%%&%&%&%'%'%'%(%(%)%)%)%*%*%+%+%+%,%,%,%-%-%.%.%.%/%/%/%0%0%1%1%1%2%2%3%3%3%4%4%4%5%5%6%6%6%7%7%7%8%8%9%9%9%:%:%;%;%;%<%<%<%=%=%>%>%>%?%?%?%@%@%A%A%A%B%B%B%C%C%D%D%D%E%E%E%F%F%G%G%G%H%H%H%I%I%J%J%J%K%K%K%L%L%M%M%M%N%N%N%O%O%P%P%P%Q%Q%Q%R%R%S%S%S%T%T%T%U%U%U%V%V%W%W%W%X%X%X%Y%Y%Z%Z%Z%[%[%[%\%\%\%]%]%^%^%^%_%_%_%`%`%a%a%a%b%b%b%c%c%c%d%d%e%e%e%f%f%f%g%g%g%h%h%i%i%i%j%j%j%k%k%k%l%l%m%m%m%n%n%n%o%o%o%p%p%p%q%q%r%r%r%s%s%s%t%t%t%u%u%v%v%v%w%w%w%x%x%x%y%y%y%z%z%{%{%{%|%|%|%}%}%}%~%~%~%
&&&
& &!&!&"&"&#&$&$&%&&&&&'&'&(&)&)&*&+&+&,&,&-&.&.&/&0&0&1&1&2&3&3&4&4&5&6&6&7&8&8&9&9&:&;&;&<&<&=&>&>&?&@&@&A&A&B&C&C&D&D&E&F&F&G&G&H&I&I&J&J&K&L&L&M&N&N&O&O&P&Q&Q&R&R&S&T&T&U&U&V&W&W&X&X&Y&Z&Z&[&[&\&]&]&^&^&_&`&`&a&a&b&c&c&d&d&e&f&f&g&g&h&h&i&j&j&k&k&l&m&m&n&n&o&p&p&q&q&r&s&s&t&t&u&u&v&w&w&x&x&y&z&z&{&{&|&|&}&~&~&
'''
' ' '!'!'"'"'#'#'$'%'%'&'&'''''('(')')'*'*'+'+',','-'-'.'.'/'/'0'0'1'2'2'3'3'4'4'5'5'6'6'7'7'8'8'9'9':':';';'<'<'='='>'>'?'?'@'@'A'A'B'B'C'C'D'D'E'F'F'G'G'H'H'I'I'J'J'K'K'L'L'M'M'N'N'O'O'P'P'Q'Q'R'R'S'S'T'T'U'U'V'V'W'W'X'X'Y'Y'Z'Z'['['\'\']']'^'^'_'_'`'`'a'a'b'b'c'c'd'd'e'e'f'f'g'g'h'h'i'i'j'j'k'k'l'l'm'm'n'n'o'o'p'p'q'q'r'r's's't't'u'u'v'v'w'w'x'x'y'y'z'z'{'{'|'|'}'}'~'~'
(((
( ( (!(!(!("("(#(#($($($(%(%(&(&('('((((((()()(*(*(+(+(+(,(,(-(-(.(.(.(/(/(0(0(1(1(1(2(2(3(3(4(4(4(5(5(6(6(7(7(7(8(8(9(9(:(:(:(;(;(<(<(=(=(=(>(>(?(?(@(@(@(A(A(B(B(B(C(C(D(D(E(E(E(F(F(G(G(H(H(H(I(I(J(J(J(K(K(L(L(M(M(M(N(N(O(O(O(P(P(Q(Q(R(R(R(S(S(T(T(T(U(U(V(V(W(W(W(X(X(Y(Y(Y(Z(Z([([([(\(\(](](](^(^(_(_(`(`(`(a(a(b(b(b(c(c(d(d(d(e(e(f(f(f(g(g(h(h(h(i(i(j(j(j(k(k(l(l(m(m(m(n(n(o(o(o(p(p(q(q(q(r(r(s(s(s(t(t(u(u(u(v(v(w(w(w(x(x(y(y(y(z(z({({({(|(|(|(}(}(~(~(~(
))))
) ) ) )!)!)!)")")")#)#)#)$)$)$)%)%)%)&)&)&)')')')()()()))))))*)*)*)+)+)+),),),)-)-)-).).).)/)/)/)0)0)0)1)1)1)2)2)2)3)3)3)4)4)4)5)5)5)6)6)6)7)7)7)8)8)8)9)9)9):):):);););)<)<)<)=)=)=)>)>)>)>)?)?)?)@)@)@)A)A)A)B)B)B)C)C)C)D)D)D)E)E)E)F)F)F)G)G)G)H)H)H)I)I)I)J)J)J)K)K)K)L)L)L)M)M)M)M)N)N)N)O)O)O)P)P)P)Q)Q)Q)R)R)R)S)S)S)T)T)T)U)U)U)V)V)V)W)W)W)X)X)X)X)Y)Y)Y)Z)Z)Z)[)[)[)\)\)\)])])])^)^)^)_)_)_)`)`)`)`)a)a)a)b)b)b)c)c)c)d)d)d)e)e)e)f)f)f)g)g)g)g)h)h)h)i)i)i)j)j)j)k)k)k)l)l)l)m)m)m)m)n)n)n)o)o)o)p)p)p)q)q)q)r)r)r)r)s)s)s)t)t)t)u)u)u)v)v)v)w)w)w)w)x)x)x)y)y)y)z)z)z){){){)|)|)})~)~)
***
* * *!*!*"*#*#*$*$*%*%*&*&*'*'*(*)*)*****+*+*,*,*-*-*.*.*/*0*0*1*1*2*2*3*3*4*4*5*5*6*7*7*8*8*9*9*:*:*;*;*<*<*=*=*>*?*?*@*@*A*A*B*B*C*C*D*D*E*E*F*G*G*H*H*I*I*J*J*K*K*L*L*M*M*N*N*O*P*P*Q*Q*R*R*S*S*T*T*U*U*V*V*W*W*X*X*Y*Y*Z*[*[*\*\*]*]*^*^*_*_*`*`*a*a*b*b*c*c*d*d*e*e*f*f*g*g*h*i*i*j*j*k*k*l*l*m*m*n*n*o*o*p*p*q*q*r*r*s*s*t*t*u*u*v*v*w*w*x*x*y*y*z*z*{*{*|*}*}*~*~*
+++
+ + +!+!+"+"+#+#+#+$+$+%+%+&+&+'+'+(+(+(+)+)+*+*+++++,+,+-+-+-+.+.+/+/+0+0+1+1+1+2+2+3+3+4+4+5+5+6+6+6+7+7+8+8+9+9+:+:+:+;+;+<+<+=+=+>+>+>+?+?+@+@+A+A+B+B+B+C+C+D+D+E+E+F+F+F+G+G+H+H+I+I+J+J+J+K+K+L+L+M+M+N+N+N+O+O+P+P+Q+Q+R+R+R+S+S+T+T+U+U+U+V+V+W+W+X+X+Y+Y+Y+Z+Z+[+[+\+\+\+]+]+^+^+_+_+`+`+`+a+a+b+b+c+c+c+d+d+e+e+f+f+g+g+g+h+h+i+i+j+j+j+k+k+l+l+m+m+m+n+n+o+o+p+p+p+q+q+r+r+s+s+s+t+t+u+u+v+v+w+w+w+x+x+y+y+z+z+z+{+{+|+|+}+}+}+~+~+
,,,,
, , ,!,!,!,",",",#,#,$,$,$,%,%,%,&,&,',',',(,(,(,),),*,*,*,+,+,+,,,,,-,-,-,.,.,/,/,/,0,0,0,1,1,2,2,2,3,3,3,4,4,4,5,5,6,6,6,7,7,7,8,8,9,9,9,:,:,:,;,;,<,<,<,=,=,=,>,>,>,?,?,@,@,@,A,A,A,B,B,C,C,C,D,D,D,E,E,E,F,F,G,G,G,H,H,H,I,I,I,J,J,K,K,K,L,L,L,M,M,M,N,N,O,O,O,P,P,P,Q,Q,Q,R,R,S,S,S,T,T,T,U,U,U,V,V,V,W,W,X,X,X,Y,Y,Y,Z,Z,Z,[,[,\,\,\,],],],^,^,^,_,_,_,`,`,`,a,a,b,b,b,c,c,c,d,d,d,e,e,e,f,f,g,g,g,h,h,h,i,i,i,j,j,j,k,k,k,l,l,l,m,m,n,n,n,o,o,o,p,p,p,q,q,q,r,r,r,s,s,s,t,t,u,u,u,v,v,v,w,w,w,x,x,x,y,y,y,z,z,z,{,{,{,|,|,|,},},~,~,~,
-----
- - - -!-!-!-!-"-"-"-#-#-#-#-$-$-$-%-%-%-&-&-'-'-(-(-)-*-*-+-+-,-----.-.-/-/-0-1-1-2-2-3-3-4-5-5-6-6-7-8-8-9-9-:-:-;-<-<-=-=->->-?-@-@-A-A-B-B-C-D-D-E-E-F-F-G-H-H-I-I-J-J-K-K-L-M-M-N-N-O-O-P-Q-Q-R-R-S-S-T-T-U-V-V-W-W-X-X-Y-Z-Z-[-[-\-\-]-]-^-_-_-`-`-a-a-b-b-c-d-d-e-e-f-f-g-g-h-i-i-j-j-k-k-l-l-m-m-n-o-o-p-p-q-q-r-r-s-s-t-u-u-v-v-w-w-x-x-y-y-z-{-{-|-|-}-}-~-~-
...
. . .!.!.".".#.#.#.$.$.%.%.&.&.'.'.(.(.).).*.*.+.+.+.,.,.-.-....././.0.0.1.1.2.2.3.3.3.4.4.5.5.6.6.7.7.8.8.9.9.:.:.:.;.;.<.<.=.=.>.>.?.?.@.@.@.A.A.B.B.C.C.D.D.E.E.F.F.G.G.G.H.H.I.I.J.J.K.K.L.L.L.M.M.N.N.O.O.P.P.Q.Q.R.R.R.S.S.T.T.U.U.V.V.W.W.W.X.X.Y.Y.Z.Z.[.[.\.\.\.].].^.^._._.`.`.a.a.a.b.b.c.c.d.d.e.e.e.f.f.g.g.h.h.i.i.j.j.j.k.k.l.l.m.m.n.n.n.o.o.p.p.q.q.r.r.r.s.s.t.t.u.u.v.v.w.w.w.x.x.y.y.z.z.{.{.{.|.|.}.}.~.~.~.
///
/ /!/!/"/#/$/%/%/&/'/(/)/)/*/+/,/,/-/.///0/0/1/2/3/3/4/5/6/7/7/8/9/:/;/;/</=/>/>/?/@/A/A/B/C/D/E/E/F/G/H/H/I/J/K/L/L/M/N/O/O/P/Q/R/R/S/T/U/V/V/W/X/Y/Y/Z/[/\/\/]/^/_/_/`/a/b/b/c/d/e/e/f/g/h/i/i/j/k/l/l/m/n/o/o/p/q/r/r/s/t/u/u/v/w/x/x/y/z/{/{/|/}/~/~/
0000
0 0 0 0!0!0!0"0"0"0#0#0#0$0$0$0%0%0%0&0&0&0'0'0'0(0(0(0)0)0)0*0*0*0+0+0+0,0,0,0-0-0-0.0.0.0/0/0/000000010101010202020303030404040505050606060707070808080909090:0:0:0;0;0;0<0<0<0<0=0=0=0>0>0>0?0?0?0@0@0@0A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F0G0G0G0H0H0H0I0I0I0J0J0J0K0K0K0K0L0L0L0M0M0M0N0N0N0O0O0O0P0P0P0Q0Q0Q0Q0R0R0R0S0S0S0T0T0T0U0U0U0V0V0V0V0W0W0W0X0X0X0Y0Y0Y0Z0Z0Z0[0[0[0[0\0\0\0]0]0]0^0^0^0_0_0_0_0`0`0`0a0a0a0b0b0b0c0c0c0d0d0d0d0e0e0e0f0f0f0g0g0g0h0h0h0h0i0i0i0j0j0j0k0k0k0k0l0l0l0m0m0m0n0n0n0o0o0o0o0p0p0p0q0q0q0r0r0r0r0s0s0s0t0t0t0u0u0u0v0v0v0v0w0w0w0x0x0x0y0y0y0y0z0z0z0{0{0{0|0|0|0|0}0}0}0~0~0~0
111
1 1 1!1!1"1"1#1#1$1$1%1%1&1&1'1'1(1(1)1)1*1*1+1,1,1-1-1.1.1/1/10101111121213131414151516161717181819191:1:1;1;1<1<1=1=1>1>1?1?1@1@1A1A1B1B1C1C1D1D1E1E1F1F1G1G1H1H1H1I1I1J1J1K1K1L1L1M1M1N1N1O1O1P1P1Q1Q1R1R1S1S1T1T1U1U1V1V1W1W1X1X1Y1Y1Z1Z1[1[1\1\1]1]1^1^1^1_1_1`1`1a1a1b1b1c1c1d1d1e1e1f1f1g1g1h1h1i1i1j1j1k1k1k1l1l1m1m1n1n1o1o1p1p1q1q1r1r1s1s1t1t1u1u1u1v1v1w1w1x1x1y1y1z1z1{1{1|1|1}1}1~1~1~1
2222
2 2 2 2!2!2"2"2"2#2#2$2$2%2%2%2&2&2'2'2'2(2(2)2)2)2*2*2+2+2,2,2,2-2-2.2.2.2/2/202020212122222223232424252525262627272728282929292:2:2;2;2;2<2<2=2=2=2>2>2?2?2?2@2@2A2A2A2B2B2C2C2C2D2D2E2E2E2F2F2G2G2G2H2H2I2I2I2J2J2K2K2K2L2L2M2M2M2N2N2O2O2O2P2P2Q2Q2Q2R2R2S2S2S2T2T2U2U2U2V2V2W2W2W2X2X2Y2Y2Y2Z2Z2[2[2[2\2\2]2]2]2^2^2_2_2_2`2`2a2a2a2b2b2b2c2c2d2d2d2e2e2f2f2f2g2g2h2h2h2i2i2j2j2j2k2k2k2l2l2m2m2m2n2n2o2o2o2p2p2q2q2q2r2r2s2s2s2t2t2t2u2u2v2v2v2w2w2x2x2x2y2y2y2z2z2{2{2{2|2|2}2}2}2~2~2
3 3!3!3"3#3#3$3%3&3&3'3(3(3)3*3*3+3,3,3-3.3.3/3030313233333435353637373839393:3;3;3<3=3=3>3?3?3@3A3A3B3C3C3D3E3E3F3G3G3H3I3J3J3K3L3L3M3N3N3O3P3P3Q3R3R3S3T3T3U3V3V3W3X3X3Y3Z3Z3[3\3\3]3^3^3_3_3`3a3a3b3c3c3d3e3e3f3g3g3h3i3i3j3k3k3l3m3m3n3o3o3p3q3q3r3s3s3t3u3u3v3v3w3x3x3y3z3z3{3|3|3}3~3~3
44444
4 4 4 4!4!4!4"4"4"4"4#4#4#4$4$4$4$4%4%4%4&4&4&4&4'4'4'4(4(4(4(4)4)4)4*4*4*4*4+4+4+4,4,4,4,4-4-4-4.4.4.4.4/4/4/4040404041414142424242434343434444444545454546464647474747484848494949494:4:4:4;4;4;4;4<4<4<4<4=4=4=4>4>4>4>4?4?4?4@4@4@4@4A4A4A4B4B4B4B4C4C4C4C4D4D4D4E4E4E4E4F4F4F4G4G4G4G4H4H4H4H4I4I4I4J4J4J4J4K4K4K4K4L4L4L4M4M4M4M4N4N4N4O4O4O4O4P4P4P4P4Q4Q4Q4R4R4R4R4S4S4S4S4T4T4T4U4U4U4U4V4V4V4V4W4W4W4X4X4X4X4Y4Y4Y4Y4Z4Z4Z4[4[4[4[4\4\4\4\4]4]4]4]4^4^4^4_4_4_4_4`4`4`4`4a4a4a4b4b4b4b4c4c4c4c4d4d4d4d4e4e4e4f4f4f4f4g4g4g4g4h4h4h4h4i4i4i4j4j4j4j4k4k4k4k4l4l4l4l4m4m4m4n4n4n4n4o4o4o4o4p4p4p4p4q4q4q4r4r4r4r4s4s4s4s4t4t4t4t4u4u4u4u4v4v4v4w4w4w4w4x4x4x4x4y4y4y4y4z4z4z4z4{4{4{4|4|4|4|4}4}4}4}4~4~4~4~4
555
5 5 5!5!5!5"5"5#5#5$5$5%5%5%5&5&5'5'5(5(5)5)5)5*5*5+5+5,5,5-5-5-5.5.5/5/50505051515252535354545455555656575757585859595:5:5;5;5;5<5<5=5=5>5>5>5?5?5@5@5A5A5A5B5B5C5C5D5D5D5E5E5F5F5G5G5H5H5H5I5I5J5J5K5K5K5L5L5M5M5N5N5N5O5O5P5P5Q5Q5Q5R5R5S5S5S5T5T5U5U5V5V5V5W5W5X5X5Y5Y5Y5Z5Z5[5[5\5\5\5]5]5^5^5^5_5_5`5`5a5a5a5b5b5c5c5d5d5d5e5e5f5f5f5g5g5h5h5i5i5i5j5j5k5k5k5l5l5m5m5n5n5n5o5o5p5p5p5q5q5r5r5s5s5s5t5t5u5u5u5v5v5w5w5w5x5x5y5y5z5z5z5{5{5|5|5|5}5}5~5~5~5
6666
6 6 6!6!6!6"6"6"6#6#6#6$6$6$6%6%6&6&6&6'6'6'6(6(6(6)6)6*6*6*6+6+6+6,6,6,6-6-6-6.6.6.6/6/60606061616162626263636364646565656666666767676868696:6;6;6<6=6=6>6?6?6@6A6B6B6C6D6D6E6F6F6G6H6I6I6J6K6K6L6M6M6N6O6P6P6Q6R6R6S6T6T6U6V6V6W6X6Y6Y6Z6[6[6\6]6]6^6_6_6`6a6a6b6c6d6d6e6f6f6g6h6h6i6j6j6k6l6l6m6n6n6o6p6p6q6r6r6s6t6t6u6v6w6w6x6y6y6z6{6{6|6}6}6~6
777
7 7 7!7!7"7#7#7$7$7%7%7&7'7'7(7(7)7*7*7+7+7,7-7-7.7.7/70707171727373747475767677777879797:7:7;7;7<7=7=7>7>7?7@7@7A7A7B7C7C7D7D7E7E7F7G7G7H7H7I7J7J7K7K7L7L7M7N7N7O7O7P7Q7Q7R7R7S7S7T7U7U7V7V7W7W7X7Y7Y7Z7Z7[7\7\7]7]7^7^7_7`7`7a7a7b7b7c7d7d7e7e7f7f7g7h7h7i7i7j7j7k7l7l7m7m7n7n7o7p7p7q7q7r7r7s7t7t7u7u7v7v7w7x7x7y7y7z7z7{7|7|7}7}7~7~7
88888
8 8 8 8 8!8!8!8!8"8"8"8"8#8#8#8#8$8$8$8$8%8%8%8%8&8&8&8&8'8'8'8'8(8(8(8(8)8)8)8)8*8*8*8*8+8+8+8+8,8,8,8,8-8-8-8-8.8.8.8.8/8/8/8/80808080818181818182828282838383838484848485858585868686868787878788888888898989898:8:8:8:8;8;8;8;8<8<8<8<8=8=8=8=8>8>8>8>8>8?8?8?8?8@8@8@8@8A8A8A8A8B8B8B8B8C8C8D8D8E8E8F8F8F8G8G8H8H8I8I8J8J8K8K8L8L8M8M8N8N8O8O8P8P8Q8Q8Q8R8R8S8S8T8T8U8U8V8V8W8W8X8X8Y8Y8Z8Z8Z8[8[8\8\8]8]8^8^8_8_8`8`8a8a8b8b8b8c8c8d8d8e8e8f8f8g8g8h8h8i8i8i8j8j8k8k8l8l8m8m8n8n8o8o8o8p8p8q8q8r8r8s8s8t8t8u8u8u8v8v8w8w8x8x8y8y8z8z8z8{8{8|8|8}8}8~8~8
999
9 9 9 9!9!9"9"9"9#9#9$9$9$9%9%9&9&9&9'9'9'9(9(9)9)9)9*9*9+9+9+9,9,9,9-9-9.9.9.9/9/9/90909191919292939393949494959596969697979798989999999:9:9;9;9;9<9<9<9=9=9>9>9>9?9?9?9@9@9A9A9A9B9B9B9C9C9D9D9D9E9E9E9F9F9G9G9G9H9H9H9I9I9J9J9J9K9K9K9L9L9M9M9M9N9N9N9O9O9P9P9P9Q9Q9Q9R9R9S9S9S9T9T9T9U9U9U9V9V9W9W9W9X9X9X9Y9Y9Z9Z9Z9[9[9[9\9\9\9]9]9^9^9^9_9_9_9`9`9a9a9a9b9b9b9c9c9c9d9d9e9e9e9f9f9f9g9g9g9h9h9i9i9i9j9j9j9k9k9k9l9l9m9m9m9n9n9n9o9o9o9p9p9p9q9q9r9r9r9s9s9s9t9t9t9u9u9v9v9v9w9w9w9x9x9x9y9y9y9z9z9{9{9{9|9|9|9}9}9}9~9~9~9
:::
: :!:!:":":#:$:$:%:&:&:':':(:):):*:+:+:,:,:-:.:.:/:0:0:1:1:2:3:3:4:4:5:6:6:7:8:8:9:9:::;:;:<:<:=:>:>:?:@:@:A:A:B:C:C:D:D:E:F:F:G:G:H:I:I:J:J:K:L:L:M:N:N:O:O:P:Q:Q:R:R:S:T:T:U:U:V:W:W:X:X:Y:Z:Z:[:[:\:]:]:^:^:_:`:`:a:a:b:c:c:d:d:e:f:f:g:g:h:h:i:j:j:k:k:l:m:m:n:n:o:p:p:q:q:r:s:s:t:t:u:u:v:w:w:x:x:y:z:z:{:{:|:|:}:~:~:
;;;
; ; ;!;!;";";#;#;$;%;%;&;&;';';(;(;););*;*;+;+;,;,;-;-;.;.;/;/;0;0;1;2;2;3;3;4;4;5;5;6;6;7;7;8;8;9;9;:;:;;;;;<;<;=;=;>;>;?;?;@;@;A;A;B;B;C;C;D;D;E;F;F;G;G;H;H;I;I;J;J;K;K;L;L;M;M;N;N;O;O;P;P;Q;Q;R;R;S;S;T;T;U;U;V;V;W;W;X;X;Y;Y;Z;Z;[;[;\;\;];];^;^;_;_;`;`;a;a;b;b;c;c;d;d;e;e;f;f;g;g;h;h;i;i;j;j;k;k;l;l;m;m;n;n;o;o;p;p;q;q;r;r;s;s;t;t;u;u;v;v;w;w;x;x;y;y;z;z;{;{;|;|;};};~;~;
<<<
< < < <!<!<"<"<#<#<#<$<$<%<%<&<&<&<'<'<(<(<(<)<)<*<*<+<+<+<,<,<-<-<-<.<.</</</<0<0<1<1<2<2<2<3<3<4<4<4<5<5<6<6<6<7<7<8<8<8<9<9<:<:<:<;<;<<<<<<<=<=<><><><?<?<@<@<@<A<A<B<B<B<C<C<D<D<D<E<E<F<F<F<G<G<G<H<H<I<I<I<J<J<K<K<K<L<L<M<M<M<N<N<N<O<O<P<P<P<Q<Q<R<R<R<S<S<S<T<T<U<U<U<V<V<V<W<W<X<X<X<Y<Y<Y<Z<Z<[<[<[<\<\<\<]<]<^<^<^<_<_<_<`<`<a<a<a<b<b<b<c<c<c<d<d<e<e<e<f<f<f<g<g<g<h<h<i<i<i<j<j<j<k<k<k<l<l<m<m<m<n<n<n<o<o<o<p<p<q<q<q<r<r<r<s<s<s<t<t<t<u<u<u<v<v<w<w<w<x<x<x<y<y<y<z<z<z<{<{<{<|<|<|<}<}<~<~<~<
=====
= = = = =!=!=!=!="="="="=#=#=#=#=$=$=$=$=%=%=%=%=&=&=&=&='='='='='=(=(=(=(=)=)=)=)=*=*=*=*=+=+=+=+=,=,=,=,=-=-=-=-=-=.=.=.=.=/=/=/=/=0=0=0=0=1=1=1=1=1=2=2=2=2=3=3=3=3=4=4=4=4=5=5=5=5=5=6=6=6=6=7=7=7=7=8=8=8=8=9=9=9=9=9=:=:=:=:=;=;=;=;=<=<=<=<=<=========>=>=>=>=?=?=?=?=?=@=@=@=@=A=A=A=A=A=B=B=B=B=C=C=D=D=D=E=E=F=F=G=G=H=H=I=I=I=J=J=K=K=L=L=M=M=M=N=N=O=O=P=P=Q=Q=Q=R=R=S=S=T=T=T=U=U=V=V=W=W=X=X=X=Y=Y=Z=Z=[=[=[=\=\=]=]=^=^=^=_=_=`=`=a=a=a=b=b=c=c=d=d=d=e=e=f=f=f=g=g=h=h=i=i=i=j=j=k=k=l=l=l=m=m=n=n=n=o=o=p=p=p=q=q=r=r=s=s=s=t=t=u=u=u=v=v=w=w=w=x=x=y=y=y=z=z={={={=|=|=}=}=}=~=~=
>>>>>
> > > > >!>!>!>">">">">#>#>#>#>$>$>$>%>%>%>%>&>&>&>'>'>'>'>(>(>(>)>)>)>)>*>*>*>*>+>+>+>,>,>,>,>->->->->.>.>.>/>/>/>/>0>0>0>0>1>1>1>2>2>2>2>3>3>3>3>4>4>4>5>5>5>5>6>6>6>6>7>7>7>8>8>8>8>9>9>9>9>:>:>:>:>;>;>;><><><><>=>=>=>=>>>>>>>>>?>?>?>@>@>@>@>A>A>A>A>B>B>B>B>C>C>C>C>D>D>D>D>E>E>E>F>F>F>F>G>G>G>G>H>H>H>H>I>I>I>I>J>J>J>J>K>K>K>K>L>L>L>M>M>M>M>N>N>N>N>O>O>O>O>P>P>P>P>Q>Q>Q>Q>R>R>R>R>S>S>S>S>T>T>T>T>U>U>U>U>V>V>V>V>W>W>W>W>X>X>X>X>Y>Y>Y>Y>Z>Z>Z>Z>[>[>[>[>\>\>\>\>]>]>]>]>^>^>^>^>_>_>_>_>`>`>`>`>a>a>a>a>b>b>b>b>c>c>c>c>d>d>d>d>e>e>e>e>f>f>f>f>f>g>g>g>g>h>h>h>h>i>i>i>i>j>j>j>j>k>k>k>k>l>l>l>l>m>m>m>m>m>n>n>n>n>o>o>o>o>p>p>p>p>q>q>q>q>r>r>r>r>r>s>s>s>s>t>t>t>t>u>u>u>u>v>v>v>v>v>w>w>w>w>x>x>x>x>y>y>y>y>z>z>z>z>z>{>{>{>{>|>|>|>|>}>}>}>}>}>~>~>~>~>
????
? ? ? ?!?!?!?"?"?"?#?#?#?$?$?$?%?%?%?&?&?&?'?'?'?'?(?(?(?)?)?)?*?*?*?+?+?+?,?,?,?-?-?-?.?.?.?.?/?/?/?0?0?0?1?1?1?2?2?2?3?3?3?4?4?4?4?5?5?5?6?6?6?7?7?7?8?8?8?8?9?9?9?:?:?:?;?;?;?<?<?<?<?=?=?=?>?>?>???????@?@?@?@?A?A?A?B?B?B?C?C?C?C?D?D?D?E?E?E?F?F?F?G?G?G?G?H?H?H?I?I?I?I?J?J?J?K?K?K?L?L?L?L?M?M?M?N?N?N?O?O?O?O?P?P?P?Q?Q?Q?Q?R?R?R?S?S?S?T?T?T?T?U?U?U?V?V?V?V?W?W?W?X?X?X?X?Y?Y?Y?Z?Z?Z?Z?[?[?[?\?\?\?\?]?]?]?^?^?^?^?_?_?_?`?`?`?`?a?a?a?b?b?b?b?c?c?c?d?d?d?d?e?e?e?f?f?f?f?g?g?g?h?h?h?h?i?i?i?i?j?j?j?k?k?k?k?l?l?l?m?m?m?m?n?n?n?n?o?o?o?p?p?p?p?q?q?q?q?r?r?r?s?s?s?s?t?t?t?t?u?u?u?v?v?v?v?w?w?w?w?x?x?x?y?y?y?y?z?z?z?z?{?{?{?{?|?|?|?}?}?}?}?~?~?~?~?
@@@@@@
@ @ @ @ @ @ @!@!@!@!@!@!@"@"@"@"@"@#@#@#@#@#@#@$@$@$@$@$@$@%@%@%@%@%@%@&@&@&@&@&@&@'@'@'@'@'@(@(@(@(@(@(@)@)@)@)@)@)@*@*@*@*@*@*@+@+@+@+@+@+@,@,@,@,@,@,@-@-@-@-@-@-@.@.@.@.@.@.@/@/@/@/@/@/@0@0@0@0@0@0@1@1@1@1@1@1@2@2@2@2@2@2@2@3@3@3@3@3@3@4@4@4@4@4@4@5@5@5@5@5@5@6@6@6@6@6@6@6@7@7@7@7@7@7@8@8@8@8@8@8@9@9@9@9@9@9@:@:@:@:@:@:@:@;@;@;@;@;@;@<@<@<@<@<@<@<@=@=@=@=@=@=@>@>@>@>@>@>@>@?@?@?@?@?@?@@@@@@@@@@@@@@@A@A@A@A@A@A@B@B@B@B@B@B@B@C@C@C@C@C@C@D@D@D@D@D@D@D@E@E@E@E@E@E@E@F@F@F@F@F@F@G@G@G@G@G@G@G@H@H@H@H@H@H@H@I@I@I@I@I@I@I@J@J@J@J@J@J@J@K@K@K@K@K@K@L@L@L@L@L@L@L@M@M@M@M@M@M@M@N@N@N@N@N@N@N@O@O@O@O@O@O@O@P@P@P@P@P@P@P@Q@Q@Q@Q@Q@Q@Q@R@R@R@R@R@R@R@S@S@S@S@S@S@S@T@T@T@T@T@T@T@U@U@U@U@U@U@U@U@V@V@V@V@V@V@V@W@W@W@W@W@W@W@X@X@X@X@X@X@X@Y@Y@Y@Y@Y@Y@Y@Z@Z@Z@Z@Z@Z@Z@Z@[@[@[@[@[@[@[@\@\@\@\@\@\@\@]@]@]@]@]@]@]@]@^@^@^@^@^@^@^@_@_@_@_@_@_@_@_@`@`@`@`@`@`@`@a@a@a@a@a@a@a@a@b@b@b@b@b@b@b@c@c@c@c@c@c@c@c@d@d@d@d@d@d@d@d@e@e@e@e@e@e@e@f@f@f@f@f@f@f@f@g@g@g@g@g@g@g@g@h@h@h@h@h@h@h@i@i@i@i@i@i@i@i@j@j@j@j@j@j@j@j@k@k@k@k@k@k@k@k@l@l@l@l@l@l@l@l@m@m@m@m@m@m@m@m@n@n@n@n@n@n@n@n@o@o@o@o@o@o@o@o@p@p@p@p@p@p@p@p@q@q@q@q@q@q@q@q@r@r@r@r@r@r@r@r@s@s@s@s@s@s@s@s@t@t@t@t@t@t@t@t@u@u@u@u@u@u@u@u@v@v@v@v@v@v@v@v@v@w@w@w@w@w@w@w@w@x@x@x@x@x@x@x@x@y@y@y@y@y@y@y@y@y@z@z@z@z@z@z@z@z@{@{@{@{@{@{@{@{@|@|@|@|@|@|@|@|@|@}@}@}@}@}@}@}@}@~@~@~@~@~@~@~@~@~@
AAAAAAAA
`A`A`A`A`A`AaAaAaAaAaAaAbAbAbAbAbAcAcAcAcAcAcAdAdAdAdAdAdAeAeAeAeAeAfAfAfAfAfAfAgAgAgAgAgAgAhAhAhAhAhAhAiAiAiAiAiAiAjAjAjAjAjAjAkAkAkAkAkAlAlAlAlAlAlAmAmAmAmAmAmAnAnAnAnAnAnAoAoAoAoAoAoApApApApApApAqAqAqAqAqAqArArArArArArArAsAsAsAsAsAsAtAtAtAtAtAtAuAuAuAuAuAuAvAvAvAvAvAvAwAwAwAwAwAwAxAxAxAxAxAxAxAyAyAyAyAyAyAzAzAzAzAzAzA{A{A{A{A{A{A|A|A|A|A|A|A|A}A}A}A}A}A}A~A~A~A~A~A~A~A
BBBBBBB
`B`B`B`B`B`B`B`BaBaBaBaBaBaBaBaBaBbBbBbBbBbBbBbBbBcBcBcBcBcBcBcBcBcBdBdBdBdBdBdBdBdBdBeBeBeBeBeBeBeBeBfBfBfBfBfBfBfBfBfBgBgBgBgBgBgBgBgBgBhBhBhBhBhBhBhBhBiBiBiBiBiBiBiBiBjBjBjBjBkBkBkBkBkBlBlBlBlBmBmBmBmBmBnBnBnBnBoBoBoBoBoBpBpBpBpBqBqBqBqBqBrBrBrBrBsBsBsBsBsBtBtBtBtBuBuBuBuBuBvBvBvBvBvBwBwBwBwBxBxBxBxBxByByByByByBzBzBzBzBzB{B{B{B{B|B|B|B|B|B}B}B}B}B}B~B~B~B~B~B
CCCCC
`C`C`C`C`C`CaCaCaCaCaCaCaCbCbCbCbCbCbCcCcCcCcCcCcCdCdCdCdCdCdCdCeCeCeCeCeCeCfCfCfCfCfCfCfCgCgCgCgCgCgChChChChChChChCiCiCiCiCiCiCiCjCjCjCjCjCjCkCkCkCkCkCkCkClClClClClClClCmCmCmCmCmCmCnCnCnCnCnCnCnCoCoCoCoCoCoCoCpCpCpCpCpCpCpCqCqCqCqCqCqCrCrCrCrCrCrCrCsCsCsCsCsCsCsCtCtCtCtCtCtCtCuCuCuCuCuCuCuCvCvCvCvCvCvCvCwCwCwCwCwCwCwCxCxCxCxCxCxCxCyCyCyCyCyCyCyCzCzCzCzCzCzCzC{C{C{C{C{C{C{C|C|C|C|C|C|C|C|C}C}C}C}C}C}C}C~C~C~C~C~C~C~C
DDDDDDDDDDDDDDD
D D D D D D D D D D D D D D D D D!D!D!D!D!D!D!D!D!D!D!D!D!D!D!D!D!D"D"D"D"D"D"D"D"D"D"D"D"D"D"D"D"D"D#D#D#D#D#D#D#D#D#D#D#D#D#D#D#D#D#D$D$D$D$D$D$D$D$D$D$D$D$D$D$D$D$D$D%D%D%D%D%D%D%D%D%D%D%D%D%D%D%D%D%D%D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D'D'D'D'D'D'D'D'D'D'D(D(D(D(D(D(D(D(D(D)D)D)D)D)D)D)D)D)D*D*D*D*D*D*D*D*D*D+D+D+D+D+D+D+D+D+D,D,D,D,D,D,D,D,D,D-D-D-D-D-D-D-D-D-D.D.D.D.D.D.D.D.D.D.D/D/D/D/D/D/D/D/D/D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D4D4D5D5D5D5D5D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8D8D8D9D9D9D9D9D9D9D9D9D9D:D:D:D:D:D:D:D:D:D:D:D;D;D;D;D;D;D;D;D;D;D<D<D<D<D<D<D<D<D<D<D<D=D=D=D=D=D=D=D=D=D=D=D>D>D>D>D>D>D>D>D>D>D?D?D?D?D?D?D?D?D?D?D?D@D@D@D@D@D@D@D@D@D@D@DADADADADADADADADADADADBDBDBDBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDFDFDFDFDGDGDGDGDGDGDGDGDGDGDGDHDHDHDHDHDHDHDHDHDHDHDHDIDIDIDIDIDIDIDIDIDIDIDIDJDJDJDJDJDJDJDJDJDJDJDJDKDKDKDKDKDKDKDKDKDKDKDKDLDLDLDLDLDLDLDLDLDLDLDLDMDMDMDMDMDMDMDMDMDMDMDMDNDNDNDNDNDNDNDNDNDNDNDNDNDODODODODODODODODODODODODPDPDPDPDPDPDPDPDPDPDPDPDPDQDQDQDQDQDQDQDQDQDQDQDQDRDRDRDRDRDRDRDRDRDRDRDRDRDSDSDSDSDSDSDSDSDSDSDSDSDSDTDTDTDTDTDTDTDTDTDTDTDTDTDUDUDUDUDUDUDUDUDUDUDUDUDUDVDVDVDVDVDVDVDVDVDVDVDVDVDWDWDWDWDWDWDWDWDWDWDWDWDWDWDXDXDXDXDXDXDXDXDXDXDXDXDXDYDYDYDYDYDYDYDYDYDYDYDYDYDYDZDZDZDZDZDZDZDZDZDZDZDZDZD[D[D[D[D[D[D[D[D[D[D[D[D[D[D\D\D\D\D\D\D\D\D\D\D\D\D\D\D]D]D]D]D]D]D]D]D]D]D]D]D]D]D^D^D^D^D^D^D^D^D^D^D^D^D^D^D_D_D_D_D_D_D_D_D_D_D_D_D_D_D_D`D`D`D`D`D`D`D`D`D`D`D`D`D`DaDaDaDaDaDaDaDaDaDaDaDaDaDaDaDbDbDbDbDbDbDbDbDbDbDbDbDbDbDcDcDcDcDcDcDcDcDcDcDcDcDcDcDcDdDdDdDdDdDdDdDdDdDdDdDdDdDdDdDeDeDeDeDeDeDeDeDeDeDeDeDeDeDeDfDfDfDfDfDfDfDfDfDfDfDfDfDfDfDgDgDgDgDgDgDgDgDgDgDgDgDgDgDgDgDhDhDhDhDhDhDhDhDhDhDhDhDhDhDhDiDiDiDiDiDiDiDiDiDiDiDiDiDiDiDiDjDjDjDjDjDjDjDjDjDjDjDjDjDjDjDkDkDkDkDkDkDkDkDkDkDkDkDkDkDkDkDlDlDlDlDlDlDlDlDlDlDlDlDlDlDlDlDmDmDmDmDmDmDmDmDmDmDmDmDmDmDmDmDnDnDnDnDnDnDnDnDnDnDnDnDnDnDnDnDnDoDoDoDoDoDoDoDoDoDoDoDoDoDoDoDoDpDpDpDpDpDpDpDpDpDpDpDpDpDpDpDpDqDqDqDqDqDqDqDqDqDqDqDqDqDqDqDqDqDrDrDrDrDrDrDrDrDrDrDrDrDrDrDrDrDrDsDsDsDsDsDsDsDsDsDsDsDsDsDsDsDsDsDtDtDtDtDtDtDtDtDtDtDtDtDtDtDtDtDtDuDuDuDuDuDuDuDuDuDuDuDuDuDuDuDuDuDvDvDvDvDvDvDvDvDvDvDvDvDvDvDvDvDvDvDwDwDwDwDwDwDwDwDwDwDwDwDwDwDwDxDxDxDxDxDxDxDxDxDyDyDyDyDyDyDyDyDyDzDzDzDzDzDzDzDzDzD{D{D{D{D{D{D{D{D{D|D|D|D|D|D|D|D|D|D}D}D}D}D}D}D}D}D}D~D~D~D~D~D~D~D~D~D~D
EEEEEEEEEEEEEEEEE
E E E E E E E E E E!E!E!E!E!E!E!E!E!E"E"E"E"E"E"E"E"E"E"E#E#E#E#E#E#E#E#E#E#E$E$E$E$E$E$E$E$E$E%E%E%E%E%E%E%E%E%E%E&E&E&E&E&E&E&E&E&E&E'E'E'E'E'E'E'E'E'E'E(E(E(E(E(E(E(E(E(E(E)E)E)E)E)E)E)E)E)E)E*E*E*E*E*E*E*E*E*E*E+E+E+E+E+E+E+E+E+E+E+E,E,E,E,E,E,E,E,E,E,E-E-E-E-E-E-E-E-E-E-E-E.E.E.E.E.E.E.E.E.E.E/E/E/E/E/E/E/E/E/E/E/E0E0E0E0E0E0E0E0E0E0E0E1E1E1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E:E:E:E:E:E:E:E:E:E:E:E;E;E;E;E;E;E;E;E;E;E;E;E<E<E<E<E<E<E<E<E<E<E<E<E=E=E=E=E=E=E=E=E=E=E=E=E>E>E>E>E>E>E>E>E>E>E>E>E?E?E?E?E?E?E?E?E?E?E?E?E?E@E@E@E@E@E@E@E@E@E@E@E@EAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEGEGEGEGEGEGEGEGEGEGEGEGEGEGEHEHEHEHEHEHEHEHEHEHEHEHEHEIEIEIEIEIEIEIEIEIEIEIEIEIEJEJEJEJEJEJEJEJEJEJEJEJEJEJEKEKEKEKEKEKEKEKEKEKEKEKEKELELELELELELELELELELELELELELEMEMEMEMEMEMEMEMEMEMEMEMEMEMENENENENENENENENENENENENENENEOEOEOEOEOEOEOEOEOEOEOEOEOEOEPEPEPEPEPEPEPEPEPEPEPEPEPEPEQEQEQEQEQEQEQEQEQEQEQEQEQEQERERERERERERERERERERERERERERERESESESESESESESESESESESESESESETETETETETETETETETETETETETETETEUEUEUEUEUEUEUEUEUEUEUEUEUEUEUEVEVEVEVEVEVEVEVEVEVEVEVEVEVEWEWEWEWEWEWEWEWEWEWEWEWEWEWEWEWEXEXEXEXEXEXEXEXEXEXEXEXEXEXEXEYEYEYEYEYEYEYEYEYEYEYEYEYEYEYEZEZEZEZEZEZEZEZEZEZEZEZEZEZEZE[E[E[E[E[E[E[E[E[E[E[E[E[E[E[E[E\E\E\E\E\E\E\E\E\E\E\E\E\E\E\E\E]E]E]E]E]E]E]E]E]E]E]E]E]E]E]E]E^E^E^E^E^E^E^E^E^E^E^E^E^E^E^E^E_E_E_E_E_E_E_E_E_E_E_E_E_E_E_E_E`E`E`E`E`E`E`E`E`E`E`E`E`E`E`E`EaEaEaEaEaEaEaEaEaEaEaEaEaEaEaEaEbEbEbEbEbEbEbEbEbEbEbEbEbEbEbEbEbEcEcEcEcEcEcEcEcEcEcEcEcEcEcEcEcEcEdEdEdEdEdEdEdEdEdEdEdEdEdEdEdEdEeEeEeEeEeEeEeEeEeEeEeEeEeEeEeEeEeEfEfEfEfEfEfEfEfEfEfEfEfEfEfEfEfEfEfEgEgEgEgEgEgEgEgEgEgEgEgEgEgEgEgEgEhEhEhEhEhEhEhEhEhEhEhEhEhEhEhEhEhEiEiEiEiEiEiEiEiEiEiEiEiEiEiEiEjEjEjEjEjEjEjEjEjEkEkEkEkEkEkEkEkEkElElElElElElElElElEmEmEmEmEmEmEmEmEmEnEnEnEnEnEnEnEnEnEoEoEoEoEoEoEoEoEoEpEpEpEpEpEpEpEpEpEpEqEqEqEqEqEqEqEqEqErErErErErErErErErErEsEsEsEsEsEsEsEsEsEtEtEtEtEtEtEtEtEtEtEuEuEuEuEuEuEuEuEuEuEvEvEvEvEvEvEvEvEvEwEwEwEwEwEwEwEwEwEwExExExExExExExExExExEyEyEyEyEyEyEyEyEyEyEzEzEzEzEzEzEzEzEzEzEzE{E{E{E{E{E{E{E{E{E{E|E|E|E|E|E|E|E|E|E|E}E}E}E}E}E}E}E}E}E}E}E~E~E~E~E~E~E~E~E~E~E
N7Imf_3_213DwaCompressor18LossyDctEncoderCscE
N7Imf_3_213DwaCompressor15LossyDctEncoderE
!"$%'(*+-/0235689;<>@ACDFGIKLNOQRTVWYZ\]_abdegijlmoprtuwxz|}
   ! # $ % & ( ) * , - . / 1 2 3 4 6 7 8 : ; < = ? @ A C D E G H I J L M N P Q R T U V W Y Z [ ] ^ _ a b c e f g h j k l n o p r s t v w x z { | ~ 
! !"!#!%!&!'!)!*!,!-!/!0!1!3!4!6!7!9!:!<!=!>!@!A!C!D!F!G!J!M!P!S!V!Y!\!_!a!d!g!j!m!p!s!v!y!|!
"!"$"'"+"."1"4"7":">"A"D"G"J"M"Q"T"W"Z"^"a"d"g"j"n"q"t"w"{"~"
#!#%#(#,#/#2#6#9#=#@#D#G#K#N#Q#U#X#\#_#c#f#j#m#q#t#x#{#
$!$#$%$&$($*$,$.$0$2$4$5$7$9$;$=$?$A$C$D$F$H$J$L$N$P$R$T$U$W$Y$[$]$_$a$c$e$g$i$k$l$n$p$r$t$v$x$z$|$~$
%!%#%%%'%)%+%-%/%2%4%6%8%:%<%>%@%B%E%G%I%K%M%O%Q%S%V%X%Z%\%^%`%b%d%g%i%k%m%o%q%t%v%x%z%|%~%
&!&$&&&(&*&-&/&1&4&6&8&;&=&?&B&D&F&I&K&M&P&R&T&W&Y&[&^&`&b&e&g&i&l&n&p&s&u&x&z&|&
'"'$''')','.'1'3'6'8';'='@'B'E'G'J'L'O'R'T'W'Y'\'^'a'c'f'h'k'm'p's'u'x'z'}'
( (!(#($(%('((()(+(,(-(/(0(1(3(4(6(7(8(:(;(<(>(?(A(B(C(E(F(G(I(J(L(M(N(P(Q(R(T(U(W(X(Y([(\(^(_(`(b(c(e(f(g(i(j(l(m(n(p(q(s(t(u(w(x(z({(}(~(
)!)")$)&)')))*),)-)/)0)2)3)5)6)8)9);)<)>)@)A)C)D)F)G)I)J)L)M)O)Q)R)T)U)W)X)Z)[)])_)`)b)c)e)f)h)j)k)m)n)p)q)s)u)v)x)y){)|)~)
*!*$*(*+*.*2*5*8*<*?*C*F*I*M*P*T*W*Z*^*a*e*h*l*o*r*v*y*}*
+ +$+'+++/+2+6+:+=+A+E+H+L+P+T+W+[+_+b+f+j+m+q+u+y+|+
, ,",$,&,(,*,,,.,0,2,4,6,8,:,<,>,@,B,D,F,H,J,L,N,P,R,T,V,X,Z,\,^,`,b,d,f,i,k,m,o,q,s,u,w,y,{,},
- -"-$-'-)-+---/-2-4-6-8-;-=-?-A-D-F-H-J-M-O-Q-T-V-X-Z-]-_-a-c-f-h-j-m-o-q-s-v-x-z-}-
.!.#.%.(.*.-./.2.4.7.9.<.>.A.C.F.H.K.M.O.R.T.W.Y.\.^.a.c.f.h.k.m.p.r.u.x.z.}.
/ /"/%/(/*/-/0/2/5/8/:/=/@/C/E/H/K/M/P/S/U/X/[/]/`/c/f/h/k/n/p/s/v/y/{/~/
0 0!0#0$0&0'0(0*0+0-0.000103040607080:0;0=0>0@0A0C0D0F0G0I0J0K0M0N0P0Q0S0T0V0W0Y0Z0\0]0_0`0b0c0e0f0h0i0k0l0n0o0q0r0t0u0w0x0z0{0}0~0
1!1"1$1&1'1)1+1,1.1/1113141618191;1<1>1@1A1C1E1F1H1J1K1M1O1P1R1T1U1W1Y1Z1\1^1_1a1b1d1f1g1i1k1l1n1p1r1s1u1w1x1z1|1}1
2 2"2$2&2'2)2+2-2/2022242628292;2=2?2A2B2D2F2H2J2K2M2O2Q2S2T2V2X2Z2\2^2_2a2c2e2g2i2j2l2n2p2r2t2u2w2y2{2}2
3!3%3)3-3135393=3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4"4$4&4(4+4-4/41434547494<4>4@4B4D4F4H4K4M4O4Q4S4U4W4Z4\4^4`4b4d4g4i4k4m4o4r4t4v4x4z4}4
5!5#5&5(5*5-5/515456595;5=5@5B5E5G5I5L5N5Q5S5U5X5Z5]5_5b5d5f5i5k5n5p5s5u5w5z5|5
6!6#6&6)6+6.616366686;6>6@6C6F6H6K6N6P6S6U6X6[6]6`6c6e6h6k6m6p6s6v6x6{6~6
7 7#7&7)7,7/7174777:7=7@7C7E7H7K7N7Q7T7W7Y7\7_7b7e7h7k7n7q7t7v7y7|7
8!8"8$8%8'8(8*8+8-8/808283858688898;8<8>8@8A8C8D8F8G8I8K8L8N8O8Q8R8T8V8W8Y8Z8\8]8_8a8b8d8e8g8i8j8l8m8o8p8r8t8u8w8x8z8|8}8
9 9"9$9&9'9)9+9-9.9092949597999;9<9>9@9B9C9E9G9I9J9L9N9P9Q9S9U9W9X9Z9\9^9_9a9c9e9g9h9j9l9n9o9q9s9u9w9x9z9|9~9
: :":$:&:(:*:,:.:/:1:3:5:7:9:;:=:?:A:C:E:G:H:J:L:N:P:R:T:V:X:Z:\:^:`:b:d:f:g:i:k:m:o:q:s:u:w:y:{:}:
; ;";$;&;(;*;,;/;1;3;5;7;9;;;=;?;A;C;E;H;J;L;N;P;R;T;V;X;Z;];_;a;c;e;g;i;k;m;o;r;t;v;x;z;|;~;
<"<$<&<(<+<-</<2<4<6<9<;<=<?<B<D<G<I<K<N<P<R<U<W<Y<\<^<a<c<f<h<j<m<o<r<t<w<y<{<~<
="=%='=*=-=0=3=6=9=;=>=A=D=G=J=M=P=S=V=Y=[=^=a=d=g=j=m=p=s=v=y=|=
>">&>)>,>0>3>7>:>>>A>D>H>K>O>R>V>Y>]>`>d>g>k>n>r>u>y>|>
?!?%?)?-?1?5?9?=?A?E?I?M?Q?U?Y?]?a?e?i?m?q?u?y?~?
@ @"@%@'@)@,@.@0@2@5@7@9@<@>@@@C@E@G@J@L@N@Q@S@V@X@Z@]@_@b@d@f@i@k@n@p@s@u@w@z@|@
A A#A&A)A+A.A1A4A7A:A=A?ABAEAHAKANAQATAWAZA]A`AcAeAhAkAnAqAtAwAzA}A
B B$B'B*B.B1B5B8B;B?BBBFBIBMBPBTBWBZB^BbBeBiBlBpBsBwBzB~B
C#C'C*C.C2C6C:C>CBCFCJCNCRCVCZC^CbCgCkCoCsCwC{C
D!D#D&D(D*D,D/D1D3D6D8D:D=D?DADDDFDHDKDMDODRDTDVDYD[D^D`DbDeDgDjDlDoDqDsDvDxD{D}D
E!E$E'E*E,E/E2E5E8E;E>E@ECEFEIELEOEREUEXE[E^EaEdEgEjEmEpEsEvEyE|E
F!F%F(F,F/F2F6F9F=F@FCFGFJFNFQFUFXF\F_FcFfFjFmFqFtFxF|F
G G$G(G,G0G4G8G<G@GDGHGLGPGTGXG\G`GdGhGlGpGtGxG}G
H H"H$H&H)H+H-H0H2H4H6H9H;H=H@HBHDHGHIHLHNHPHSHUHWHZH\H_HaHcHfHhHkHmHpHrHtHwHyH|H~H
I"I(I-I3I9I?IDIJIPIVI\IbIhInItIzI
J&J-J4J:JAJHJOJVJ]JdJkJrJyJ
K%K-K5K=KEKMKUK]KeKnKvK~K
L#L'L,L0L5L:L>LCLHLLLQLVL[L_LdLiLnLsLxL}L
M M&M,M1M7M=MCMHMNMTMZM`MfMlMrMxM~M
N$N+N1N8N?NFNMNTN[NbNiNpNwN~N
O#O+O3O;OCOKOSO[OcOkOsO{O
P!P&P*P/P4P8P=PAPFPKPPPTPYP^PcPhPlPqPvP{P
Q$Q*Q0Q5Q;QAQGQLQRQXQ^QdQjQpQvQ|Q
R"R)R/R6R=RDRKRRRYR`RgRnRuR|R
S!S(S0S8S@SHSPSXS`SiSqSyS
T T$T)T-T2T7T;T@TETITNTSTXT\TaTfTkTpTuTzT
U"U(U.U4U9U?UEUKUPUVU\UbUhUnUtUzU
V V&V-V4V;VBVIVPVWV]VeVlVsVzV
W&W.W6W>WFWNWVW^WfWnWvW
X#X'X,X1X5X:X?XCXHXMXQXVX[X`XeXiXnXsXxX}X
Y!Y&Y,Y2Y7Y=YCYIYOYTYZY`YfYlYrYxY~Y
Z$Z+Z2Z9Z@ZFZMZTZ[ZbZiZpZxZ
[#[+[3[;[C[K[S[[[c[l[t[|[
\!\&\+\/\4\8\=\B\F\K\P\U\Y\^\c\h\m\r\w\{\
]%]*]0]6];]A]G]M]S]X]^]d]j]p]v]|]
^"^)^0^7^=^D^K^R^Y^`^g^n^u^|^
_!_)_1_9_A_I_Q_Y_a_i_q_y_
` `%`)`.`2`7`<`@`E`J`N`S`X`]`b`f`k`p`u`z`
a#a(a.a4a:a?aEaKaQaWa]abahanataza
b'b4bBbPb^blbzb
c.c>cNc^coc
d(d1d:dDdMdVd`djdsd}d
e'e2e>eIeUeaelexe
f+f9fGfUfcfqf
g$g4gDgTgdgtg
h"h+h4h=hGhPhZhchmhwh
i+i6iAiMiYieiqi}i
j#j0j>jLjZjhjvj
k)k9kIkYkikzk
l%l.l7lAlJlSl]lglplzl
m#m.m:mEmQm]mimum
n'n5nCnPn^nln{n
o/o?oOo_ooo
p(p1p:pDpMpWp`pjptp~p
q'q2q>qIqUqaqmqyq
r,r9rGrUrcrqr
s$s4sDsTsdsus
t"t+t4t>tGtPtZtdtmtwt
u u+u6uBuMuYueuqu}u
v#v1v>vLvZvhvvv
w*w:wJwZwjwzw
x%x.x8xAxJxTx]xgxqxzx
y#y/y:yFyQy]yiyuy
z(z5zCzQz_zmz{z
{/{?{O{_{p{
N7Imf_3_213DwaCompressor18LossyDctDecoderCscE
N7Imf_3_213DwaCompressor15LossyDctDecoderE
N7Imf_3_214TypedAttributeINS_6EnvmapEEE
CN7Imf_3_214TypedAttributeIfEE
N7Imf_3_214TypedAttributeINSt3__16vectorIfNS1_9allocatorIfEEEEEE
N7Imf_3_216GenericInputFileE
N7Imf_3_217GenericOutputFileE
N7Imf_3_214TypedAttributeINS_20CompressedIDManifestEEE
N7Imf_3_29InputFileE
N7Imf_3_214TypedAttributeIiEE
N7Imf_3_27IStreamE
N7Imf_3_27OStreamE
N7Imf_3_214TypedAttributeINS_7KeyCodeEEE
N7Imf_3_214TypedAttributeINS_9LineOrderEEE
N7Imf_3_214TypedAttributeIN9Imath_3_28Matrix33IfEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_28Matrix33IdEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_28Matrix44IfEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_28Matrix44IdEEEE
NSt3__112codecvt_utf8IwLm1114111ELNS_12codecvt_modeE0EEE
N7Imf_3_218MultiPartInputFileE
N7Imf_3_215OpaqueAttributeE
N7Imf_3_210OutputFileE
N7Imf_3_212_GLOBAL__N_114LineBufferTaskE
N7Imf_3_213PizCompressorE
N7Imf_3_214TypedAttributeINS_12PreviewImageEEE
N7Imf_3_215Pxr24CompressorE
N7Imf_3_214TypedAttributeINS_8RationalEEE
N7Imf_3_214RgbaOutputFileE
N7Imf_3_213RgbaInputFileE
F"4=
N7Imf_3_213RleCompressorE
N7Imf_3_217ScanLineInputFileE
N7Imf_3_212_GLOBAL__N_117LineBufferTaskIIFE
N7Imf_3_212_GLOBAL__N_114LineBufferTaskE
N7Imf_3_211StdIFStreamE
N7Imf_3_211StdISStreamE
N7Imf_3_211StdOFStreamE
N7Imf_3_211StdOSStreamE
N7Imf_3_214TypedAttributeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
N7Imf_3_214TypedAttributeINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEE
N7Imf_3_214TypedAttributeINS_15TileDescriptionEEE
N7Imf_3_214TiledInputFileE
N7Imf_3_212_GLOBAL__N_114TileBufferTaskE
N7Imf_3_215TiledOutputFileE
N7Imf_3_212_GLOBAL__N_114TileBufferTaskE
N7Imf_3_219TiledRgbaOutputFileE
N7Imf_3_218TiledRgbaInputFileE
N7Imf_3_214TypedAttributeINS_8TimeCodeEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec2IiEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec2IfEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec2IdEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec3IiEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec3IfEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec3IdEEEE
N7Imf_3_213ZipCompressorE
eenWindowCenter
screenWindowCentscreenWindowWidth


 &+0369;=@ACEFHIJKLMOPPQRSTUUVWXXYYZ[[\\]]^__```aabbcccddeeefffgghhhiiiijjjkkkllllmmmmnnnoooopppppqqqqrrrrrssssstttttuuuuuvvvvvvwwwwwxxxxxxyyyyyyyzzzzzz{{{{{{{|||||||}}}}}}}}~~~~~~~
 )059<@BEGIKLNPQRSUVWXYZ[\\]^_``abbccdeeffgghhiijjkklllmmnnnoopppqqqrrrsssstttuuuvvvvwwwwxxxxyyyyzzzzz{{{{|||||}}}}}~~~~~
]  09@EILPRUWY[\^`abcefghijkllmnoppqrrsstuuvvwwxxyyzz{{|||}}~~~
UTF8String
stringByExpandingTildeInPath
stringWithUTF8String:
XXXX PNG chunk not known
}@g(
}tD(
Failed to compress texture
Failed to decompress texture
Failed to load texture
Images are identical
Images differ. RMS:%.2f MSE:%.2f PSNR:%.2f
Examining %s
File Not Found!
Building cubemap texture %s
Building volume texture %s
Building array texture %s
Building mip mapped texture %s
Converting %s
No converter for format (%s)
vector
basic_string
com.apple.TextureConverter.compress
version
compressor
format
options
^v8@?0
atcFormatUnknown
atcFormatR8Unorm
atcFormatR16F16
atcFormatR32F32
atcFormatRg8Unorm
atcFormatRg16F16
atcFormatRg32F32
atcFormatRgb8Unorm
atcFormatRgb16F16
atcFormatRgb32F32
atcFormatRgba8Unorm
atcFormatRgba16F16
atcFormatRgba32F32
atcFormatBgra8Unorm
atcFormatBc1Unorm
atcFormatBc2Unorm
atcFormatBc3Unorm
atcFormatBc4Snorm
atcFormatBc4Unorm
atcFormatBc5Snorm
atcFormatBc5Unorm
atcFormatBc6Sf16
atcFormatBc6Uf16
atcFormatBc7Unorm
atcFormatAstc4x4Unorm
atcFormatAstc4x4F16
atcFormatAstc5x4Unorm
atcFormatAstc5x4F16
atcFormatAstc5x5Unorm
atcFormatAstc5x5F16
atcFormatAstc6x5Unorm
atcFormatAstc6x5F16
atcFormatAstc6x6Unorm
atcFormatAstc6x6F16
atcFormatAstc8x5Unorm
atcFormatAstc8x5F16
atcFormatAstc8x6Unorm
atcFormatAstc8x6F16
atcFormatAstc8x8Unorm
atcFormatAstc8x8F16
atcFormatAstc10x5Unorm
atcFormatAstc10x5F16
atcFormatAstc10x6Unorm
atcFormatAstc10x6F16
atcFormatAstc10x8Unorm
atcFormatAstc10x8F16
atcFormatAstc10x10Unorm
atcFormatAstc10x10F16
atcFormatAstc12x10Unorm
atcFormatAstc12x10F16
atcFormatAstc12x12Unorm
atcFormatAstc12x12F16
atcFormatEacR11Snorm
atcFormatEacR11Unorm
atcFormatEacRg11Snorm
atcFormatEacRg11Unorm
atcFormatEacRgba8Unorm
atcFormatEtc2Rgb8Unorm
atcFormatEtc2Rgb8A1Unorm
atcFormatPvrtcRgb2BppUnorm
atcFormatPvrtcRgb4BppUnorm
atcFormatPvrtcRgba2BppUnorm
atcFormatPvrtcRgba4BppUnorm
atcFormatR8Srgb
atcFormatRg8Srgb
atcFormatRgb8Srgb
atcFormatRgba8Srgb
atcFormatBgra8Srgb
atcFormatBc1Srgb
atcFormatBc2Srgb
atcFormatBc3Srgb
atcFormatBc7Srgb
atcFormatEacRgba8Srgb
atcFormatEtc2Rgb8Srgb
atcFormatEtc2Rgb8A1Srgb
atcFormatPvrtcRgb2BppSrgb
atcFormatPvrtcRgb4BppSrgb
atcFormatPvrtcRgba2BppSrgb
atcFormatPvrtcRgba4BppSrgb
atcFormatAstc4x4Srgb
atcFormatAstc5x4Srgb
atcFormatAstc5x5Srgb
atcFormatAstc6x5Srgb
atcFormatAstc6x6Srgb
atcFormatAstc8x5Srgb
atcFormatAstc8x6Srgb
atcFormatAstc8x8Srgb
atcFormatAstc10x5Srgb
atcFormatAstc10x6Srgb
atcFormatAstc10x8Srgb
atcFormatAstc10x10Srgb
atcFormatAstc12x10Srgb
atcFormatAstc12x12Srgb
atcColorGamutUnknown
atcColorGamutSRGB
atcColorGamutDisplayP3
atcColorGamutNone
atcTextureType2D
atcTextureTypeCube
atcTextureType3D
atcTextureType2DArray
Unknown pixel format
Unknown color gamut
Unknown texture type
KTX2
Error: options == nullptr
Error: invalid options->format - %s
Error: invalid options->format - %i
Error: invalid gammaIn - %f
Error: invalid gammaOut - %f
Error: invalid rgbmRange - %f
Error: invalid compression format - %s
Error: invalid compression format - %i
Error: invalid compressor - %i
Error: invalid quality - %i
Error: invalid alphaMode - %i
Error: invalid alphaMode - %f
Error: invalid channelWeighting - %i
Error: invalid maxMipmaps - %i, maximum is 
Error: invalid mipmapFilter - %i
Error: invalid maxExtent - %i, maximum is 
Error: invalid resizeRoundMode - %i
Error: invalid resizeFilter - %i
Error: invalid wrapMode - %i
Error: invalid pvrtcPunchThroughMode - %i
Error: unsupported decompression format - %s
Error: invalid decompression format - %i
Error: invalid decompressor - %i
Error: invalid %s width - %i
Error: invalid %s height - %i
Error: invalid %s numMipLevels - %i, should be in range 1-%i 
Error: invalid %s type - %i
Error: invalid %s depth (%i) - should be > 1 and <= %u 
Error: invalid %s elements (%i) - should be > 1 and <= %ui
Warning: invalid %s elements (%i) - should be 1
Error: invalid %s->format - %u
Error: %s == nullptr
Error: invalid ATC_Surface(element %u, mipLevel %u) width - %i, should be %i or 0
Error: invalid ATC_Surface(element %u, mipLevel %u) height - %i, should be %i or 0
Error: invalid ATC_Surface(element %u, mipLevel %u) rowBytes - %i, should be 0 for compressed formats
Error: invalid ATC_Surface(element %u, mipLevel %u) rowBytes - %i, should be >= %i or 0
Error: invalid %s.surface[%i][%i].size - %i, should be == %i
Error: invalid %s.surface[%i][%i].data - NULL
Error: destTex == nullptr
ATC_Texture
Error: ATC_Context should set both memoryAllocator & memoryDeallocator, or neither.
sourceTex
Error: invalid sourceTex format - %s
Error: invalid sourceTex format - %i
Error: invalid fileFormat - %i
ATC_Decompress: Unsupported destination format: %s
refTex
compTex
TC_Version
TC_Options
KTXmetalPixelFormat
com.apple.image.premultipliedAlpha
com.apple.image.colorGamut
com.apple.image.colorTransfer
false
Did not recognize parameter %d '%s'
TextureConverter %s
Usage: %s%s Arguments...
 [Options]
=value
Options:
--%s
 (default: "
Widths Differ: (%d != %d)
Heights Differ: (%d != %d)
Depths Differ: (%d != %d)
Texture Typed Differ: (%d != %d)
NumFaces Differ: (%d != %d)
NumElements Differ: (%d != %d)
NumMipmaps Differ: (%d != %d)
0123456789abcdefxp
0123456789ABCDEFXP
null
_KMGT
_kMGT
Error: 
Warning: 
----------
Progress [%s] %.0f%%
Progress [
] %.0f%%
unknown
GenericGray
GenericRGB
GenericCMYK
DisplayP3
GenericRGBLinear
AdobeRGB1998
GenericGrayGamma2_2
GenericXYZ
GenericLab
ACESCGLinear
ITUR_709_PQ
ITUR_709_HLG
ITUR_2020
ITUR_2020_sRGBGamma
ROMMRGB
DCIP3
LinearITUR_2020
ExtendedITUR_2020
ExtendedLinearITUR_2020
LinearDisplayP3
ExtendedDisplayP3
ExtendedLinearDisplayP3
ITUR_2100_PQ
ITUR_2100_HLG
DisplayP3_PQ
DisplayP3_HLG
ExtendedSRGB
LinearSRGB
ExtendedLinearSRGB
ExtendedGray
LinearGray
ExtendedLinearGray
Could not create vImageConverterRef: %s [%ld]
Could not convert image: %s [%ld]
kvImageRoiLargerThanInputBuffer
kvImageInvalidKernelSize
kvImageInvalidEdgeStyle
kvImageInvalidOffset_X
kvImageInvalidOffset_Y
kvImageMemoryAllocationError
kvImageNullPointerArgument
kvImageInvalidParameter
kvImageBufferSizeMismatch
kvImageUnknownFlagsBit
kvImageInternalError
kvImageInvalidRowBytes
kvImageInvalidImageFormat
kvImageColorSyncIsAbsent
kvImageOutOfPlaceOperationRequired
kvImageInvalidImageObject
kvImageInvalidCVImageFormat
kvImageUnsupportedConversion
kvImageCoreVideoIsAbsent
Auto
Compression info is not available for the selected compressor (%i)
Unsupported auto compression format: "
Using Compressor: %s
Compression format (%s) is not supported by the selected compressor (%s)
Output texture is more recent than the input texture
 but
Output texture
 was compressed with an older version of TextureConverter
 and
 compression options are compatible
%s, skipping.
Converting
Compressing
%s mipmap level %d/%d for slice %d/%d (width: %d, height: %d, depth: %d)...
%s mipmap level %d/%d for element %d/%d (width: %d, height: %d, depth: %d)...
%s mipmap level %d/%d for face %d/%d (width: %d, height: %d, depth: %d)...
%s mipmap level %d/%d (width: %d, height: %d, depth: %d)...
 RMS: %.2f, MSE: %.2f, PSNR: %.2f
Processing time: %.2fms (%.2f MPix/s)
RMS: %.2f, MSE: %.2f, PSNR: %.2f
, line 
, NVTT assertion failed "
Unsupported auto decompression format: (%s)
Compression format (%s) is not supported by the selected decompressor
Unsupported decompressed texture type for selected file type
Unsupported decompressed texture type
Error: File not found (%s)
KTXwriter
Source texture color space [%s] overridden by options [%s] 
Size:   
 mip-levels
Format: 
Colorspace: 
Alpha: Premultiplied
Compressed with TextureConverter: 
Compression options: 
Cubemap images require six faces.!
Cubemap
face
Volume
slice
Array
element
%s failed loading image %u = "%s"!
%s %s %u error: "%s" is not a 2D texture!
%s %s %u error: "%s" is not a square texture!
%s %s %u error: "%s" dimensions (%ux%u) do not match %s 0 (%ux%u)!
%s %s %u error: "%s" number of miplevels (%u) does not match %s 0 (%u)!
%s %s %u error: "%s" format (%s) does not match %s 0 (%s)!
%s %s %u error: "%s" isNormalMap (%s) does not match %s 0 (%s)!
True
False
%s %s %u error: "%s" number of channels (%u) does not match %s 0! (%u)
Mipmap
%s %s %u error: "%s" dimensions (%ux%u) do not match expected %s (%ux%u)>>%d = (%ux%u)!
Unsupported KTX Texture Format
(KTX) %s
Image content is uniform, resized image from (w: %d, h: %d, d: %d) to (w: %d, h: %d, d: %d)!
Resized image to (width: %d, height: %d, depth: %d)
alpha_mode
alpha_reference
alpha_to_coverage
alpha_weight
build_array
build_cubemap
build_volume
build_mips
channel_weighting
check_date
check_details
gamut_out
compare
compression_format
compression_quality
crop_uniform_content
decompressor
decompressed
decompression_format
disable_annotation
disable_multithreading
file_format
flip_x
flip_y
flip_z
gamma_out
max_extent
max_mipmaps
mipmap_filter
normal_map
output
progressbar
pvrtc_punch_through
metrics
resize_filter
resize_round_mode
rgbm_encoding
rgbm_range
scale_range
srgb_format
verbose
wrap_mode
Ignore
Premultiply
Kaiser
Normal
Production
NearestMultipleOfFour
NearestPowerOfTwo
NextMultipleOfFour
NextPowerOfTwo
PreviousMultipleOfFour
PreviousPowerOfTwo
Mirror
Unused
Perceptual
Compression format is not supported by the selected compressor
Compression format is not supported by the selected decompressor
Use alpha to coverage
Use alpha weight when compressing
Decode KTX ASTC images as HDR
Crop images with uniform content
Disable KTX file annotation
Disable multithreading
Flip image along x-axis
Flip image along y-axis
Flip image along z-axis
Treat image as normal map
Display progress bar
Report error metrics
Use RGBM encoding
Scale image to entire color range
Use sRGB pixel format
Output processing time in milliseconds
Verbose output
Build a 2D texture array by combining input textures. Can not be combined with --
, --
 or --
Build a cubemap by combining input textures. Input textures should be specified in +X/-X/+Y/-Y/+Z/-Z order. Can not be combined with --
Build a volume by combining input textures. Can not be combined with --
Build a 2D mip mapped image by combining input textures. Only 2D source images can be combined and each image must be half the width and height of the previous image. Can not be combined with --
Compare the date/time of the source file to the output file (if present) & skip compression if the output file is newer. Can be combined with --
Compare the compression options and TextureConverter version against the output file (if present) & skip compression if not needed. Only supported for KTX files. Can be combined with --
Alpha reference for alpha to coverage
Range for RGBM encoding
Maximum image extent
Maximum number of mipmaps. If set to 0 uses the number of mipmaps in the intput texture
Alpha mode
Channel weighting
Compression format
Compression quality
Compressor library
Decompressor library
Decompression format
Color gamut of input texture.
Color gamut for output texture.
Format
Gamma for input image, "
" or float value.
Gamma for output texture, "
Filter for mipmap generation
Operation mode
File format
Output file path
Decompressed file path
Comparison file path
PVRTC punch through mode
Resize filter
Resize round mode
Wrap mode
TextureConverter
Usage options:
       TextureConverter --h : Detailed Usage
       TextureConverter -h  : TextureTool Compatibility Mode Usage
Missing input file path!
Can not combine --
 with --
 requires at least two input textures!
 requires at size input textures!
Unsupported number of arguments!
Unsupported mode "
Unsupported file format "
Unsupported alpha mode "
Unsupported mipmap filter "
Unsupported resize filter "
Unsupported resize round mode "
Unsupported wrap mode "
Unsupported Channel weighting mode "
Unsupported PVRTC punch through mode "
The value for the RGBM range must be greater than or equal to 1.0!
Unsupported gamut_in mode "
Unsupported compression format "
Unsupported compression quality "
Unsupported compressor "
Unsupported decompressor "
No output path specified!
No decompressed output path specified!
No comparison path specified!
No copy output path specified!
Unexpected mode!
Compressors
Decompressors
Uncompressed formats
ARM compression formats
ETC2COMP compression formats
ISPC compression formats
NVTT compression formats
PVRTC compression formats
PVRTC support in Metal is now deprecated. Usage of ASTC/ETC2/BC formats is recommended instead.
STB compression formats
Input file formats
Output file formats
Operation modes
Compression qualities
Alpha modes
Color gamuts
Channel weighting modes
Resize filters
Resize round modes
Mipmap filters
Wrap modes
PVRTC punch through modes
Examples
========
To compress a source file to ASTC4x4 at highest quality with mip-maps:
TextureConverter --compression_format=ASTC4x4 --compression_quality=Highest --output=Output.ktx2 Input.png
To compress a source file to BC1 at highest quality with no mip-maps:
TextureConverter --max_mipmaps=1 --compression_format=BC1 --compression_quality=Highest --output=Output.ktx2 Input.png
To build a cube map from multiple source files:
TextureConverter --mode=convert --build_cubemap --output=Cubemap.ktx2 X_Pos.png X_Neg.png Y_Pos.png Y_Neg.png Z_Pos.png Z_Neg.png
To build a volume texture from multiple source files and compress to BC1:
TextureConverter --compression_format=BC1 --build_volume --output=Volume.ktx2 Slice1.png Slice2.png Slice3.png Slice4.png
To decompress a source file:
TextureConverter --mode=decompress --output=Output.ktx2 Input.ktx2
To compare two images:
TextureConverter --mode=compare --compare=Input2.ktx2 Input1.ktx2
, %s
DDS file support only supports 2D images
Compression format %s not supported for DDS files
Could not create file %s
fileName != __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/StdStream.h
FILE *nv::fileOpen(const char *, const char *)
BGRA8
RGBA8
RGBA4
BGRA4
ABGR4
R5G6B5
B5G6R5
RGB5A1
BGR5A1
A1RGB5
A1BGR5
BGR10A2
RGB10A2
R16_Snorm
RGB16
RGB32
RGBA16
RGBA32
RG11B10
RGB9E5
ASTC4x2
ASTC4x2_HDR
ASTC4x4
ASTC4x4_HDR
ASTC5x4
ASTC5x4_HDR
ASTC5x5
ASTC5x5_HDR
ASTC6x5
ASTC6x5_HDR
ASTC6x6
ASTC6x6_HDR
ASTC8x4
ASTC8x4_HDR
ASTC8x5
ASTC8x5_HDR
ASTC8x6
ASTC8x6_HDR
ASTC8x8
ASTC8x8_HDR
ASTC10x5_HDR
ASTC10x6_HDR
ASTC10x8_HDR
ASTC10x10
ASTC10x10_HDR
ASTC12x10
ASTC12x10_HDR
ASTC12x12
ASTC12x12_HDR
EAC_R11
EAC_RGBA8
ETC2_RGB8
ETC2_RGB8A1
PVRTC_RGB_2BPP
PVRTC_RGB_4BPP
PVRTC_RGBA_2BPP
PVRTC_RGBA_4BPP
Unknown pixel format!
The selected pixelformat does not support sRGB
Unknown pixel format "
Unsupported KTX2 Image Format
Operation was successful
The data in the file is inconsistent with the spec.
The file is a pipe or named pipe.
The target file could not be opened.
The operation would exceed the max file size.
n error occurred while reading from the file.
An error occurred while seeking in the file.
File does not have enough data to satisfy request.
An error occurred while writing to the file.
GL operations resulted in an error.
The operation is not allowed in the current state.
A parameter value was not valid.
Requested key was not found.
Not enough memory to complete the operation.
Transcoding of block compressed texture failed.
The file not a KTX file.
The KTX file specifies an unsupported texture type.
Feature not included in in-use library or not yet implemented.
Library dependency (OpenGL or Vulkan) not linked into application.
Compression format %s not supported for %s files.
Unknown texture type
Apple TextureConverter 
// %s.h
#include <stdint.h>
#include "AppleTextureConverter.h"
const uint32_t %s_type = %s;
const uint32_t %s_format = %s;
const uint32_t %s_colorGamut = %s;
const uint32_t %s_width = %u;
const uint32_t %s_height = %u;
const uint32_t %s_depth = %u;
const uint32_t %s_numMipmaps = %u;
const uint32_t %s_numElements = %u;
const uint32_t %s_numChannels = %u;
Element
Face
Slice
uint8_t %s_Mip%u[%u] = { 
uint8_t %s_Mip%u%s%u[%u] = { 
0x%02x, 
static void SetSurface%s(const ATC_Texture* pTexture, uint32_t element, uint32_t level, uint32_t width, uint32_t height, uint32_t size, uint8_t* data)
ATC_Surface* surface = NULL;
ATC_GetSurface( NULL, pTexture, element, level, &surface );
surface->width = width;
surface->height = height;
surface->rowBytes = 0;
surface->data = data;
surface->size = size;
const ATC_Texture* Get%s()
const ATC_Texture* pTexture = NULL;
ATC_CreateTexture2D( NULL, %u, %u, %u, %s, %s, %s, &pTexture );
true
ATC_CreateTexture2DArray( NULL, %u, %u, %u, %u, %s, %s, %s, &pTexture );
ATC_CreateTexture3D( NULL, %u, %u, %u, %u, %s, %s, %s, &pTexture );
ATC_CreateTextureCube( NULL, %u, %u, %s, %s, %s, &pTexture );
SetSurface%s(pTexture, %u, %u, %u, %u, %u, %s_Mip%u
%s%u
return pTexture;
, build: %b %d %Y, %T
TextureConverter TextureTool Compatibility Mode
Usage: TextureConverter [-hl]
       TextureConverter -c <reference_image> <input_image>
       TextureConverter [-ms] [-e <encoder>] [-p <preview_file>] -o <output> [-f <format>] <input_image>
       TextureConverter [-m] [-e <encoder>] -o <output> [-f <format>] <input_image>
       first form:
         -h       Display this help menu.
         -l       List available encoders, individual encoder options, and file formats.
       second form:
         -c       Compare <input_image> to <reference_image> and report differences.
       third form:
         -m       Generate a complete mipmap chain from the input image.
         -s       Report numerical differences between <input_image> and the encoded image.
         -e       Encode texture levels with <encoder>.
         -p       Output a PNG preview of the encoded output to <preview_file>. Requires -e option.
         -o       Write processed image to <output>.
         -f       Set file <format> for <output> image.
For detailed usage: TextureConverter --h
Encoders:
  PVRTC
    --bits-per-pixel-2
    --bits-per-pixel-4
    --punchthrough-unused
    --punchthrough-allowed
    --punchthrough-forced
    --alpha-is-independent
    --alpha-is-opacity
    --channel-weighting-linear
    --channel-weighting-perceptual
  ASTC
    --block-width-4
    --block-width-5
    --block-width-6
    --block-width-8
    --block-width-10
    --block-width-12
    --compression-mode-veryfast
    --compression-mode-fast
    --compression-mode-medium
    --compression-mode-thorough
    --compression-mode-exhaustive
    --srgb-yes
    --srgb-no
    --block-height-4
    --block-height-5
    --block-height-6
    --block-height-8
    --block-height-10
    --block-height-12
Formats:
  KTX
bits-per-pixel-2
bits-per-pixel-4
punchthrough-unused
punchthrough-allowed
punchthrough-forced
alpha-is-independent
alpha-is-opacity
channel-weighting-linear
channel-weighting-perceptual
block-width-4
block-width-5
block-width-6
block-width-8
block-width-10
block-width-12
compression-mode-veryfast
compression-mode-fast
compression-mode-medium
compression-mode-thorough
compression-mode-exhaustive
srgb-yes
srgb-no
block-height-4
block-height-5
block-height-6
block-height-8
block-height-10
block-height-12
h?lke:d:p:o:mf:c:s:r:
%s: no input file specified
%s: no output file specified
%s: -p option requires that -e is set
%s: decode mode not supported
%s: no reference file specified
%s: compare does not produce an output file
%s: compare does not produce a preview file
%s: generate mipmaps cannot be used with compare
%s: compare mode not supported
--time
--metrics
ASTC
--compressor=Auto
--compression_format=ASTC
--srgb_format
--compression_quality=Fastest
--compression_quality=Normal
--compression_quality=Production
--compression_quality=Highest
PVRTC
--compression_format=PVRTC_RGB_2BPP
--compression_format=PVRTC_RGBA_2BPP
--compression_format=PVRTC_RGB_4BPP
--compression_format=PVRTC_RGBA_4BPP
--pvrtc_punch_through=Allowed
--pvrtc_punch_through=Forced
--pvrtc_punch_through=Unused
--channel_weighting=Perceptual
--channel_weighting=Linear
--mipmap_filter=Box
--max_mipmaps=0
--file_format=KTX
--output=
Texture-Converter TextureTool Compatibility Mode
Migrate to the Texture-Converter interface for greater control
TextureConverter --h for more details
Calling 
beginScope
endScope
MTLAccelerationStructureBoundingBoxGeometryDescriptor
MTLAccelerationStructureDescriptor
MTLAccelerationStructureGeometryDescriptor
MTLAccelerationStructureTriangleGeometryDescriptor
MTLArgument
MTLArgumentDescriptor
MTLArrayType
MTLAttribute
MTLAttributeDescriptor
MTLAttributeDescriptorArray
MTLBinaryArchiveDescriptor
MTLBlitPassDescriptor
MTLBlitPassSampleBufferAttachmentDescriptor
MTLBlitPassSampleBufferAttachmentDescriptorArray
MTLBufferLayoutDescriptor
MTLBufferLayoutDescriptorArray
MTLCaptureDescriptor
MTLCaptureManager
MTLCommandBufferDescriptor
MTLCompileOptions
MTLComputePassDescriptor
MTLComputePassSampleBufferAttachmentDescriptor
MTLComputePassSampleBufferAttachmentDescriptorArray
MTLComputePipelineDescriptor
MTLComputePipelineReflection
MTLCounterSampleBufferDescriptor
MTLDepthStencilDescriptor
MTLFunctionConstant
MTLFunctionConstantValues
MTLFunctionDescriptor
MTLHeapDescriptor
MTLIndirectCommandBufferDescriptor
MTLInstanceAccelerationStructureDescriptor
MTLIntersectionFunctionDescriptor
MTLIntersectionFunctionTableDescriptor
MTLLinkedFunctions
MTLPipelineBufferDescriptor
MTLPipelineBufferDescriptorArray
MTLPointerType
MTLPrimitiveAccelerationStructureDescriptor
MTLRasterizationRateLayerArray
MTLRasterizationRateLayerDescriptor
MTLRasterizationRateMapDescriptor
MTLRasterizationRateSampleArray
MTLRenderPassAttachmentDescriptor
MTLRenderPassColorAttachmentDescriptor
MTLRenderPassColorAttachmentDescriptorArray
MTLRenderPassDepthAttachmentDescriptor
MTLRenderPassDescriptor
MTLRenderPassSampleBufferAttachmentDescriptor
MTLRenderPassSampleBufferAttachmentDescriptorArray
MTLRenderPassStencilAttachmentDescriptor
MTLRenderPipelineColorAttachmentDescriptor
MTLRenderPipelineColorAttachmentDescriptorArray
MTLRenderPipelineDescriptor
MTLRenderPipelineReflection
MTLResourceStatePassDescriptor
MTLResourceStatePassSampleBufferAttachmentDescriptor
MTLResourceStatePassSampleBufferAttachmentDescriptorArray
MTLSamplerDescriptor
MTLSharedEventHandle
MTLSharedEventListener
MTLSharedTextureHandle
MTLStageInputOutputDescriptor
MTLStencilDescriptor
MTLStructMember
MTLStructType
MTLTextureDescriptor
MTLTextureReferenceType
MTLTileRenderPipelineColorAttachmentDescriptor
MTLTileRenderPipelineColorAttachmentDescriptorArray
MTLTileRenderPipelineDescriptor
MTLType
MTLVertexAttribute
MTLVertexAttributeDescriptor
MTLVertexAttributeDescriptorArray
MTLVertexBufferLayoutDescriptor
MTLVertexBufferLayoutDescriptorArray
MTLVertexDescriptor
MTLVisibleFunctionTableDescriptor
GPUEndTime
GPUStartTime
accelerationStructureCommandEncoder
accelerationStructureSizesWithDescriptor:
access
addCompletedHandler:
addComputePipelineFunctionsWithDescriptor:error:
addDebugMarker:range:
addPresentedHandler:
addRenderPipelineFunctionsWithDescriptor:error:
addScheduledHandler:
addTileRenderPipelineFunctionsWithDescriptor:error:
alignment
allocatedSize
allowDuplicateIntersectionFunctionInvocation
allowGPUOptimizedContents
alphaBlendOperation
areBarycentricCoordsSupported
areProgrammableSamplePositionsSupported
areRasterOrderGroupsSupported
argumentBuffersSupport
argumentDescriptor
argumentIndex
argumentIndexStride
arguments
arrayLength
arrayType
attributeIndex
attributeType
attributes
backFaceStencil
binaryArchives
binaryFunctions
blitCommandEncoder
blitCommandEncoderWithDescriptor:
blitPassDescriptor
borderColor
boundingBoxBuffer
boundingBoxBufferOffset
boundingBoxCount
boundingBoxStride
buffer
bufferAlignment
bufferBytesPerRow
bufferDataSize
bufferDataType
bufferIndex
bufferOffset
bufferPointerType
bufferStructType
buffers
buildAccelerationStructure:descriptor:scratchBuffer:scratchBufferOffset:
captureObject
clearBarrier
clearColor
clearDepth
clearStencil
colorAttachments
column
commandBuffer
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
commandQueue
commandTypes
commit
compareFunction
computeCommandEncoder
computeCommandEncoderWithDescriptor:
computeCommandEncoderWithDispatchType:
computeFunction
computePassDescriptor
concurrentDispatchThreadgroups:threadsPerThreadgroup:
concurrentDispatchThreads:threadsPerThreadgroup:
constantBlockAlignment
constantDataAtIndex:
constantValues
contents
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
copyAccelerationStructure:toAccelerationStructure:
copyAndCompactAccelerationStructure:toAccelerationStructure:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:toTexture:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
copyParameterDataToBuffer:offset:
counterSet
counterSets
counters
cpuCacheMode
currentAllocatedSize
dataSize
dataType
dealloc
debugLocation
debugSignposts
defaultCaptureScope
defaultRasterSampleCount
depth
depthAttachment
depthAttachmentPixelFormat
depthCompareFunction
depthFailureOperation
depthPlane
depthResolveFilter
depthStencilPassOperation
descriptor
destination
destinationAlphaBlendFactor
destinationRGBBlendFactor
device
didModifyRange:
dispatchQueue
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
dispatchThreadsPerTile:
dispatchType
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawableID
elementArrayType
elementIsArgumentBuffer
elementPointerType
elementStructType
elementTextureReferenceType
elementType
encodeSignalEvent:value:
encodeWaitForEvent:value:
encodedLength
encoderLabel
endEncoding
endOfEncoderSampleIndex
endOfFragmentSampleIndex
endOfVertexSampleIndex
enqueue
error
errorOptions
errorState
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
executeCommandsInBuffer:withRange:
fastMathEnabled
fillBuffer:range:value:
firstMipmapInTail
fragmentArguments
fragmentBuffers
fragmentFunction
frontFaceStencil
function
functionConstantsDictionary
functionCount
functionDescriptor
functionHandleWithFunction:
functionName
functionNames
functionType
functions
generateMipmapsForTexture:
geometryDescriptors
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
getDefaultSamplePositions:count:
getSamplePositions:count:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
groups
hasUnifiedMemory
hazardTrackingMode
heap
heapBufferSizeAndAlignWithLength:options:
heapOffset
heapTextureSizeAndAlignWithDescriptor:
height
horizontal
horizontalSampleStorage
imageblockMemoryLengthForDimensions:
imageblockSampleLength
index
indexBuffer
indexBufferIndex
indexBufferOffset
indexType
indirectComputeCommandAtIndex:
indirectRenderCommandAtIndex:
inheritBuffers
inheritPipelineState
init
initWithDispatchQueue:
initWithSampleCount:
initWithSampleCount:horizontal:vertical:
inputPrimitiveTopology
insertDebugCaptureBoundary
insertDebugSignpost:
insertLibraries
installName
instanceCount
instanceDescriptorBuffer
instanceDescriptorBufferOffset
instanceDescriptorStride
instancedAccelerationStructures
intersectionFunctionTableDescriptor
intersectionFunctionTableOffset
iosurface
iosurfacePlane
isActive
isAliasable
isAlphaToCoverageEnabled
isAlphaToOneEnabled
isBlendingEnabled
isCapturing
isDepth24Stencil8PixelFormatSupported
isDepthTexture
isDepthWriteEnabled
isFramebufferOnly
isHeadless
isLowPower
isPatchControlPointData
isPatchData
isRasterizationEnabled
isRemovable
isShareable
isSparse
isTessellationFactorScaleEnabled
kernelEndTime
kernelStartTime
label
languageVersion
layerAtIndex:
layerCount
layers
layouts
length
level
libraries
libraryType
line
linkedFunctions
loadAction
location
locationNumber
lodAverage
lodMaxClamp
lodMinClamp
logs
magFilter
makeAliasable
mapPhysicalToScreenCoordinates:forLayer:
mapScreenToPhysicalCoordinates:forLayer:
maxAnisotropy
maxArgumentBufferSamplerCount
maxAvailableSizeWithAlignment:
maxBufferLength
maxCallStackDepth
maxFragmentBufferBindCount
maxKernelBufferBindCount
maxTessellationFactor
maxThreadgroupMemoryLength
maxThreadsPerThreadgroup
maxTotalThreadsPerThreadgroup
maxTransferRate
maxVertexAmplificationCount
maxVertexBufferBindCount
memberByName:
members
memoryBarrierWithResources:count:
memoryBarrierWithResources:count:afterStages:beforeStages:
memoryBarrierWithScope:
memoryBarrierWithScope:afterStages:beforeStages:
minFilter
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
mipFilter
mipmapLevelCount
mutability
name
newAccelerationStructureWithDescriptor:
newAccelerationStructureWithSize:
newArgumentEncoderForBufferAtIndex:
newArgumentEncoderWithArguments:
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
newBinaryArchiveWithDescriptor:error:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newBufferWithLength:options:
newBufferWithLength:options:offset:
newCaptureScopeWithCommandQueue:
newCaptureScopeWithDevice:
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
newComputePipelineStateWithAdditionalBinaryFunctions:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newCounterSampleBufferWithDescriptor:error:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newDepthStencilStateWithDescriptor:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newEvent
newFence
newFunctionWithDescriptor:completionHandler:
newFunctionWithDescriptor:error:
newFunctionWithName:
newFunctionWithName:constantValues:completionHandler:
newFunctionWithName:constantValues:error:
newHeapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newIntersectionFunctionTableWithDescriptor:
newIntersectionFunctionWithDescriptor:completionHandler:
newIntersectionFunctionWithDescriptor:error:
newLibraryWithData:error:
newLibraryWithFile:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithSource:options:error:
newLibraryWithURL:error:
newRasterizationRateMapWithDescriptor:
newRemoteBufferViewForDevice:
newRemoteTextureViewForDevice:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newSamplerStateWithDescriptor:
newSharedEvent
newSharedEventHandle
newSharedEventWithHandle:
newSharedTextureHandle
newSharedTextureWithDescriptor:
newSharedTextureWithHandle:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newTextureWithDescriptor:offset:
newTextureWithDescriptor:offset:bytesPerRow:
newVisibleFunctionTableWithDescriptor:
normalizedCoordinates
notifyListener:atValue:block:
objectAtIndexedSubscript:
offset
opaque
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeIndirectCommandBuffer:withRange:
outputURL
parallelRenderCommandEncoderWithDescriptor:
parameterBufferSizeAndAlign
parentRelativeLevel
parentRelativeSlice
parentTexture
patchControlPointCount
patchType
peerCount
peerGroupID
peerIndex
physicalGranularity
physicalSizeForLayer:
pixelFormat
pointerType
popDebugGroup
preprocessorMacros
present
presentAfterMinimumDuration:
presentAtTime:
presentDrawable:
presentDrawable:afterMinimumDuration:
presentDrawable:atTime:
presentedTime
preserveInvariance
pushDebugGroup:
rAddressMode
rasterSampleCount
rasterizationRateMap
rasterizationRateMapDescriptorWithScreenSize:
rasterizationRateMapDescriptorWithScreenSize:layer:
rasterizationRateMapDescriptorWithScreenSize:layerCount:layers:
readMask
readWriteTextureSupport
recommendedMaxWorkingSetSize
refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:
registryID
remoteStorageBuffer
remoteStorageTexture
removeAllDebugMarkers
renderCommandEncoder
renderCommandEncoderWithDescriptor:
renderPassDescriptor
renderTargetArrayLength
renderTargetHeight
renderTargetWidth
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
required
reset
resetCommandsInBuffer:withRange:
resetTextureAccessCounters:region:mipLevel:slice:
resetWithRange:
resolveCounterRange:
resolveCounters:inRange:destinationBuffer:destinationOffset:
resolveDepthPlane
resolveLevel
resolveSlice
resolveTexture
resourceOptions
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
resourceStatePassDescriptor
retainedReferences
rgbBlendOperation
rootResource
sAddressMode
sampleBuffer
sampleBufferAttachments
sampleCount
sampleCountersInBuffer:atSampleIndex:withBarrier:
sampleTimestamps:gpuTimestamp:
screenSize
serializeToURL:error:
setAccelerationStructure:atBufferIndex:
setAccelerationStructure:atIndex:
setAccess:
setAllowDuplicateIntersectionFunctionInvocation:
setAllowGPUOptimizedContents:
setAlphaBlendOperation:
setAlphaToCoverageEnabled:
setAlphaToOneEnabled:
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
setArrayLength:
setBackFaceStencil:
setBarrier
setBinaryArchives:
setBinaryFunctions:
setBlendColorRed:green:blue:alpha:
setBlendingEnabled:
setBorderColor:
setBoundingBoxBuffer:
setBoundingBoxBufferOffset:
setBoundingBoxCount:
setBoundingBoxStride:
setBuffer:offset:atIndex:
setBufferIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
setBytes:length:atIndex:
setCaptureObject:
setClearColor:
setClearDepth:
setClearStencil:
setColorStoreAction:atIndex:
setColorStoreActionOptions:atIndex:
setCommandTypes:
setCompareFunction:
setComputeFunction:
setComputePipelineState:
setComputePipelineState:atIndex:
setComputePipelineStates:withRange:
setConstantBlockAlignment:
setConstantValue:type:atIndex:
setConstantValue:type:withName:
setConstantValues:
setConstantValues:type:withRange:
setCounterSet:
setCpuCacheMode:
setCullMode:
setDataType:
setDefaultCaptureScope:
setDefaultRasterSampleCount:
setDepth:
setDepthAttachment:
setDepthAttachmentPixelFormat:
setDepthBias:slopeScale:clamp:
setDepthClipMode:
setDepthCompareFunction:
setDepthFailureOperation:
setDepthPlane:
setDepthResolveFilter:
setDepthStencilPassOperation:
setDepthStencilState:
setDepthStoreAction:
setDepthStoreActionOptions:
setDepthWriteEnabled:
setDestination:
setDestinationAlphaBlendFactor:
setDestinationRGBBlendFactor:
setDispatchType:
setEndOfEncoderSampleIndex:
setEndOfFragmentSampleIndex:
setEndOfVertexSampleIndex:
setErrorOptions:
setFastMathEnabled:
setFormat:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentBytes:length:atIndex:
setFragmentFunction:
setFragmentSamplerState:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentSamplerStates:withRange:
setFragmentTexture:atIndex:
setFragmentTextures:withRange:
setFrontFaceStencil:
setFrontFacingWinding:
setFunction:atIndex:
setFunctionCount:
setFunctions:
setFunctions:withRange:
setGeometryDescriptors:
setGroups:
setHazardTrackingMode:
setHeight:
setImageblockSampleLength:
setImageblockWidth:height:
setIndex:
setIndexBuffer:
setIndexBufferIndex:
setIndexBufferOffset:
setIndexType:
setIndirectCommandBuffer:atIndex:
setIndirectCommandBuffers:withRange:
setInheritBuffers:
setInheritPipelineState:
setInputPrimitiveTopology:
setInsertLibraries:
setInstallName:
setInstanceCount:
setInstanceDescriptorBuffer:
setInstanceDescriptorBufferOffset:
setInstanceDescriptorStride:
setInstancedAccelerationStructures:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTable:atIndex:
setIntersectionFunctionTableOffset:
setIntersectionFunctionTables:withBufferRange:
setIntersectionFunctionTables:withRange:
setKernelBuffer:offset:atIndex:
setLabel:
setLanguageVersion:
setLayer:atIndex:
setLevel:
setLibraries:
setLibraryType:
setLinkedFunctions:
setLoadAction:
setLodAverage:
setLodMaxClamp:
setLodMinClamp:
setMagFilter:
setMaxAnisotropy:
setMaxCallStackDepth:
setMaxFragmentBufferBindCount:
setMaxKernelBufferBindCount:
setMaxTessellationFactor:
setMaxTotalThreadsPerThreadgroup:
setMaxVertexAmplificationCount:
setMaxVertexBufferBindCount:
setMinFilter:
setMipFilter:
setMipmapLevelCount:
setMutability:
setName:
setNormalizedCoordinates:
setObject:atIndexedSubscript:
setOffset:
setOpaque:
setOpaqueTriangleIntersectionFunctionWithSignature:atIndex:
setOpaqueTriangleIntersectionFunctionWithSignature:withRange:
setOptions:
setOutputURL:
setPixelFormat:
setPreprocessorMacros:
setPreserveInvariance:
setPurgeableState:
setRAddressMode:
setRasterSampleCount:
setRasterizationEnabled:
setRasterizationRateMap:
setReadMask:
setRenderPipelineState:
setRenderPipelineState:atIndex:
setRenderPipelineStates:withRange:
setRenderTargetArrayLength:
setRenderTargetHeight:
setRenderTargetWidth:
setResolveDepthPlane:
setResolveLevel:
setResolveSlice:
setResolveTexture:
setResourceOptions:
setRetainedReferences:
setRgbBlendOperation:
setSAddressMode:
setSampleBuffer:
setSampleCount:
setSamplePositions:count:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setSamplerStates:withRange:
setScissorRect:
setScissorRects:count:
setScreenSize:
setSignaledValue:
setSize:
setSlice:
setSourceAlphaBlendFactor:
setSourceRGBBlendFactor:
setSpecializedName:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
setStageInputDescriptor:
setStartOfEncoderSampleIndex:
setStartOfFragmentSampleIndex:
setStartOfVertexSampleIndex:
setStencilAttachment:
setStencilAttachmentPixelFormat:
setStencilCompareFunction:
setStencilFailureOperation:
setStencilFrontReferenceValue:backReferenceValue:
setStencilReferenceValue:
setStencilResolveFilter:
setStencilStoreAction:
setStencilStoreActionOptions:
setStepFunction:
setStepRate:
setStorageMode:
setStoreAction:
setStoreActionOptions:
setStride:
setSupportAddingBinaryFunctions:
setSupportArgumentBuffers:
setSupportIndirectCommandBuffers:
setSwizzle:
setTAddressMode:
setTessellationControlPointIndexType:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorFormat:
setTessellationFactorScale:
setTessellationFactorScaleEnabled:
setTessellationFactorStepFunction:
setTessellationOutputWindingOrder:
setTessellationPartitionMode:
setTexture:
setTexture:atIndex:
setTextureType:
setTextures:withRange:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setThreadgroupMemoryLength:
setThreadgroupMemoryLength:atIndex:
setThreadgroupMemoryLength:offset:atIndex:
setThreadgroupSizeMatchesTileSize:
setTileBuffer:offset:atIndex:
setTileBufferOffset:atIndex:
setTileBuffers:offsets:withRange:
setTileBytes:length:atIndex:
setTileFunction:
setTileHeight:
setTileSamplerState:atIndex:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTileSamplerStates:withRange:
setTileTexture:atIndex:
setTileTextures:withRange:
setTileWidth:
setTriangleCount:
setTriangleFillMode:
setType:
setUrl:
setUsage:
setVertexAmplificationCount:viewMappings:
setVertexBuffer:
setVertexBuffer:offset:atIndex:
setVertexBufferOffset:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexBytes:length:atIndex:
setVertexDescriptor:
setVertexFunction:
setVertexSamplerState:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexSamplerStates:withRange:
setVertexStride:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setViewport:
setViewports:count:
setVisibilityResultBuffer:
setVisibilityResultMode:offset:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTable:atIndex:
setVisibleFunctionTables:withBufferRange:
setVisibleFunctionTables:withRange:
setWidth:
setWriteMask:
sharedCaptureManager
signaledValue
size
sourceAlphaBlendFactor
sourceRGBBlendFactor
sparseTileSizeInBytes
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
specializedName
stageInputAttributes
stageInputDescriptor
stageInputOutputDescriptor
startCaptureWithCommandQueue:
startCaptureWithDescriptor:error:
startCaptureWithDevice:
startCaptureWithScope:
startOfEncoderSampleIndex
startOfFragmentSampleIndex
startOfVertexSampleIndex
staticThreadgroupMemoryLength
status
stencilAttachment
stencilAttachmentPixelFormat
stencilCompareFunction
stencilFailureOperation
stencilResolveFilter
stepFunction
stepRate
stopCapture
storageMode
storeAction
storeActionOptions
stride
structType
supportAddingBinaryFunctions
supportArgumentBuffers
supportIndirectCommandBuffers
supports32BitFloatFiltering
supports32BitMSAA
supportsBCTextureCompression
supportsCounterSampling:
supportsDestination:
supportsDynamicLibraries
supportsFamily:
supportsFeatureSet:
supportsFunctionPointers
supportsPullModelInterpolation
supportsQueryTextureLOD
supportsRasterizationRateMapWithLayerCount:
supportsRaytracing
supportsShaderBarycentricCoordinates
supportsTextureSampleCount:
supportsVertexAmplificationCount:
swizzle
synchronizeResource:
synchronizeTexture:slice:level:
tAddressMode
tailSizeInBytes
tessellationControlPointIndexType
tessellationFactorFormat
tessellationFactorStepFunction
tessellationOutputWindingOrder
tessellationPartitionMode
texture
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
textureBarrier
textureBufferDescriptorWithPixelFormat:width:resourceOptions:usage:
textureCubeDescriptorWithPixelFormat:size:mipmapped:
textureDataType
textureReferenceType
textureType
threadExecutionWidth
threadGroupSizeIsMultipleOfThreadExecutionWidth
threadgroupMemoryAlignment
threadgroupMemoryDataSize
threadgroupMemoryLength
threadgroupSizeMatchesTileSize
tileArguments
tileBuffers
tileFunction
tileHeight
tileWidth
triangleCount
type
updateFence:
updateFence:afterStages:
updateTextureMapping:mode:indirectBuffer:indirectBufferOffset:
updateTextureMapping:mode:region:mipLevel:slice:
updateTextureMappings:mode:regions:mipLevels:slices:numRegions:
usage
useHeap:
useHeap:stages:
useHeaps:count:
useHeaps:count:stages:
useResource:usage:
useResource:usage:stages:
useResources:count:usage:
useResources:count:usage:stages:
usedSize
vertexArguments
vertexAttributes
vertexBuffer
vertexBufferOffset
vertexBuffers
vertexDescriptor
vertexFunction
vertexStride
vertical
verticalSampleStorage
visibilityResultBuffer
visibleFunctionTableDescriptor
waitForFence:
waitForFence:beforeStages:
waitUntilCompleted
waitUntilScheduled
width
writeCompactedAccelerationStructureSize:toBuffer:offset:
writeMask
NSArray
NSAutoreleasePool
NSBundle
NSCondition
NSDate
NSDictionary
NSError
NSNumber
NSObject
NSProcessInfo
NSSet
NSString
NSURL
NSValue
addObject:
activeProcessorCount
allBundles
allFrameworks
allObjects
alloc
appStoreReceiptURL
array
arrayWithObject:
arrayWithObjects:count:
automaticTerminationSupportEnabled
autorelease
beginActivityWithOptions:reason:
boolValue
broadcast
builtInPlugInsPath
builtInPlugInsURL
bundleIdentifier
bundlePath
bundleURL
bundleWithPath:
bundleWithURL:
characterAtIndex:
charValue
countByEnumeratingWithState:objects:count:
cStringUsingEncoding:
code
compare:
copy
count
dateWithTimeIntervalSinceNow:
descriptionWithLocale:
disableAutomaticTermination:
disableSuddenTermination
debugDescription
description
dictionary
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
domain
doubleValue
drain
enableAutomaticTermination:
enableSuddenTermination
endActivity:
environment
errorWithDomain:code:userInfo:
executablePath
executableURL
fileSystemRepresentation
fileURLWithPath:
floatValue
fullUserName
getValue:size:
globallyUniqueString
hash
hostName
infoDictionary
initFileURLWithPath:
initWithBool:
initWithBytes:objCType:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithChar:
initWithCoder:
initWithCString:encoding:
initWithDomain:code:userInfo:
initWithDouble:
initWithFloat:
initWithInt:
initWithLong:
initWithLongLong:
initWithObjects:count:
initWithObjects:forKeys:count:
initWithPath:
initWithShort:
initWithString:
initWithUnsignedChar:
initWithUnsignedInt:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithUnsignedShort:
initWithURL:
integerValue
intValue
isEqual:
isEqualToNumber:
isEqualToString:
isEqualToValue:
isiOSAppOnMac
isLoaded
isLowPowerModeEnabled
isMacCatalystApp
isOperatingSystemAtLeastVersion:
keyEnumerator
lengthOfBytesUsingEncoding:
load
loadAndReturnError:
localizedDescription
localizedFailureReason
localizedInfoDictionary
localizedRecoveryOptions
localizedRecoverySuggestion
localizedStringForKey:value:table:
lock
longValue
longLongValue
mainBundle
maximumLengthOfBytesUsingEncoding:
methodSignatureForSelector:
mutableBytes
nextObject
numberWithBool:
numberWithChar:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithLong:
numberWithLongLong:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objCType
object
objectAtIndex:
objectEnumerator
objectForInfoDictionaryKey:
objectForKey:
operatingSystem
operatingSystemVersion
operatingSystemVersionString
pathForAuxiliaryExecutable:
performActivityWithOptions:reason:usingBlock:
performExpiringActivityWithReason:usingBlock:
physicalMemory
pointerValue
preflightAndReturnError:
privateFrameworksPath
privateFrameworksURL
processIdentifier
processInfo
processName
processorCount
rangeOfString:options:
release
resourcePath
resourceURL
respondsToSelector:
retain
retainCount
setAutomaticTerminationSupportEnabled:
setProcessName:
sharedFrameworksPath
sharedFrameworksURL
sharedSupportPath
sharedSupportURL
shortValue
showPools
signal
string
stringValue
stringWithString:
stringWithCString:encoding:
stringByAppendingString:
systemUptime
thermalState
unload
unlock
unsignedCharValue
unsignedIntegerValue
unsignedIntValue
unsignedLongValue
unsignedLongLongValue
unsignedShortValue
URLForAuxiliaryExecutable:
userInfo
userName
UTF8String
valueWithBytes:objCType:
valueWithPointer:
wait
waitUntilDate:
v24@?0^v8^v16
//  astc.metal
//  ASTCRuntime
//  Created by Georgi Rakidov on 28/01/2020.
//  Copyright 2020 APPLE. All rights reserved.
#include <metal_stdlib>
// Including header shared between this Metal shader code and Swift/C code executing Metal API commands
//#import "ShaderTypes.h"
#define BLOCKS_IN_GROUP_COUNT 64
using namespace metal;
//FUNCTION CONSTANTS
////////////////////////////////////////
constant int astc_block_width       [[ function_constant(0) ]];
constant int astc_block_height      [[ function_constant(1) ]];
constant int astc_channels          [[ function_constant(2) ]];
constant uint astc_packed_mode      [[ function_constant(3) ]];
////////////////////////////////////////
#define swap(a, b) {auto t = a; a=b; b=t;}
struct astc_settings
    int width;
    int height;
    int blocks_count;
    int width_in_blocks;
struct astc_block_data
    uint8_t weights[64];
    uint8_t endpoints[8];
struct range_values
    int levels_m;
    int levels_m_rcp;
    int levels_e;
    int levels;
struct pixel_set
    threadgroup uint32_t* restrict pixels;
    
    int width;
    int height;
float4 get_pixel_f(threadgroup const uint32_t* pixels, int x, int y)
    return unpack_unorm4x8_to_float(pixels[y*astc_block_width + x])*255.0;
//#define get_pixel(t,p,x,y) (unpack_unorm4x8_to_##t(p[y*astc_block_width + x])*t(255.0))
template<typename T>
void get_pixel(T out[], threadgroup const uint32_t* pixels, int x, int y)
    if(is_same<T, float>::value)
    {
        float4 tmp = unpack_unorm4x8_to_float(pixels[y*astc_block_width + x])*255.0;
        for(int i=0;i<4;++i)out[i] = tmp[i];
    }
    else
    {
        half4 tmp =  unpack_unorm4x8_to_half(pixels[y*astc_block_width + x])*255.0;
        for(int i=0;i<4;++i)out[i] = tmp[i];
    }
template <typename T>
T sq(T v)
    return v*v;
template <typename T>
T clamp(T v, int a, int b)
    return clamp(v, (T)a, (T)b);
template <typename T>
T dot3(T a[3], T b[3])
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
template <typename T>
inline T dot4(T a[4], T b[4])
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
template <typename T>
void ssymv3(T a[4], T covar[10], T b[4])
    a[0] = covar[0] * b[0] + covar[1] * b[1] + covar[2] * b[2];
    a[1] = covar[1] * b[0] + covar[4] * b[1] + covar[5] * b[2];
    a[2] = covar[2] * b[0] + covar[5] * b[1] + covar[7] * b[2];
template <typename T>
void ssymv4(T a[4], T covar[10], T b[4])
    a[0] = covar[0] * b[0] + covar[1] * b[1] + covar[2] * b[2] + covar[3] * b[3];
    a[1] = covar[1] * b[0] + covar[4] * b[1] + covar[5] * b[2] + covar[6] * b[3];
    a[2] = covar[2] * b[0] + covar[5] * b[1] + covar[7] * b[2] + covar[8] * b[3];
    a[3] = covar[3] * b[0] + covar[6] * b[1] + covar[8] * b[2] + covar[9] * b[3];
uint32_t get_field(uint32_t input, int a, int b)
    return (input >> b) & ((1 << (a - b + 1)) - 1);
int get_bits(uint32_t value, int from, int to)
    return (value >> from) & ((1 << (to + 1 - from)) - 1);
uint32_t get_bit(uint32_t input, int a)
    return get_field(input, a, a);
struct astc_block
    int width; // 2..8 <= 2^3
    int height;
    int dual_plane;
    int weight_range;
    int color_component_selector;
    int partitions;
    int partition_id;
    int color_endpoint_pairs;
    int channels;
    int color_endpoint_modes[4];
    int endpoint_range;
    
    astc_block(const uint32_t mode)
    {
        // uniform parameters
        width = int(2 + get_field(mode, 15, 13)); // 2..8 <= 2^3
        height = int(2 + get_field(mode, 18, 16)); // 2..8 <= 2^3
        dual_plane = int(get_field(mode, 19, 19));// 0 or 1
        partitions = 1;
        
        int colorEndpointModes0 = int(get_field(mode, 7, 6) * 2 + 6); // 6, 8, 10 or 12
        color_endpoint_pairs = 1 + (colorEndpointModes0 / 4);
        channels = (colorEndpointModes0 > 8) ? 4 : 3;
        // varying parameters
        weight_range = get_bits(mode, 0, 3);  // 0..11 <= 2^4
        color_component_selector = get_bits(mode, 4, 5);  // 0..2 <= 2^2
        partition_id = 0;
        color_endpoint_modes[0] = get_bits(mode, 6, 7) * 2 + 6; // 6, 8, 10 or 12
        endpoint_range = get_bits(mode, 8, 12); // 0..20 <= 2^5
    }
void accumulate_stats(float stats[15], float4 rgba, int channels)
    stats[10] += rgba[0];
    stats[11] += rgba[1];
    stats[12] += rgba[2];
    stats[0] += rgba[0] * rgba[0];
    stats[1] += rgba[0] * rgba[1];
    stats[2] += rgba[0] * rgba[2];
    stats[4] += rgba[1] * rgba[1];
    stats[5] += rgba[1] * rgba[2];
    stats[7] += rgba[2] * rgba[2];
    if (channels == 4)
    {
        stats[13] += rgba[3];
        stats[3] += rgba[0] * rgba[3];
        stats[6] += rgba[1] * rgba[3];
        stats[8] += rgba[2] * rgba[3];
        stats[9] += rgba[3] * rgba[3];
    }
void covar_from_stats(float covar[10], float stats[15], int channels)
    covar[0] = stats[0] - stats[10 + 0] * stats[10 + 0] / stats[14];
    covar[1] = stats[1] - stats[10 + 0] * stats[10 + 1] / stats[14];
    covar[2] = stats[2] - stats[10 + 0] * stats[10 + 2] / stats[14];
    covar[4] = stats[4] - stats[10 + 1] * stats[10 + 1] / stats[14];
    covar[5] = stats[5] - stats[10 + 1] * stats[10 + 2] / stats[14];
    covar[7] = stats[7] - stats[10 + 2] * stats[10 + 2] / stats[14];
    if (channels == 4)
    {
        covar[3] = stats[3] - stats[10 + 0] * stats[10 + 3] / stats[14];
        covar[6] = stats[6] - stats[10 + 1] * stats[10 + 3] / stats[14];
        covar[8] = stats[8] - stats[10 + 2] * stats[10 + 3] / stats[14];
        covar[9] = stats[9] - stats[10 + 3] * stats[10 + 3] / stats[14];
    }
void compute_axis(float axis[4], float covar[10], const int powerIterations, int channels)
    float vec[4] = { 1, 1, 1, 1 };
    for (int i = 0; i < powerIterations; i++)
    {
        if (channels == 3) ssymv3(axis, covar, vec);
        if (channels == 4) ssymv4(axis, covar, vec);
        for (int p = 0; p < channels; p++) vec[p] = axis[p];
        if (i % 2 == 1) // renormalize every other iteration
        {
            float norm_sq = 0;
            for (int p = 0; p < channels; p++)
                norm_sq += axis[p] * axis[p];
            float rnorm = rsqrt(norm_sq);
            for (int p = 0; p < channels; p++)
            {
                vec[p] *= rnorm;
            }
        }
    }
    for (int p = 0; p < channels; p++) axis[p] = vec[p];
void process_block(threadgroup uint32_t* restrict pixels, texture2d<half> src,
                uint xx, uint yy, uint width, uint height,
                bool zero_based, float dc[], float dir[])
    float stats[15] = { 0 };
    
    for (uint y = 0; y < height; y++)
    {
        for (uint x = 0; x < width; x++)
        {
            uint2 crd(xx * width + x, yy * height + y);
            
            half4 h_rgba = src.read(crd);
            float4 rgba = float4(h_rgba);
            //rgba.xyz = 1.0;
            rgba.w = 1.0;
            //rgba = float4(1,1,1,1);
            float4 rgba255 = rgba * 255.0f;
            
            accumulate_stats(stats, rgba255, 4);
            
            uint packed = pack_float_to_unorm4x8(rgba);
            pixels[y*astc_block_width + x] = packed;
        }
    }
    
    //width and height here are dimensions of the commpressed block
    //this function must be called only for blocks with the same dimesion as the global grid
    stats[14] += height * width;
    
    float cov[10];
    
    if (zero_based)
    {
        for (int p = 0; p < 4; p++) stats[10 + p] = 0;
    }
    covar_from_stats(cov, stats, 4);
    for (int p = 0; p < 4; p++)
        dc[p] = stats[10 + p] / stats[14];
    
    //Should work fine with 2,4,6,8,10
    int powerIterations = 2;
    float eps = sq(0.001) * 1000;
    cov[0] += eps;
    cov[4] += eps;
    cov[7] += eps;
    cov[9] += eps;
    
    compute_axis(dir, cov, powerIterations, 4);
void process_block_fast(threadgroup uint32_t* restrict pixels, texture2d<half> src,
                        //uint xx, uint yy, uint width, uint height, float ep[])
                        uint xx, uint yy, uint width, uint height, thread half3& ep_min, thread half3& ep_max)
    //half3 ep_min,ep_max;
    half lum_min = 1000.0h;
    half lum_max = 0.0h;
    for (uint y = 0; y < height; y++)
    {
        for (uint x = 0; x < width; x++)
        {
            uint2 crd(xx * width + x, yy * height + y);
            
            half3 rgb = src.read(crd).xyz;
            half lum = dot(rgb, half3(0.2126h, 0.7152h, 0.0722h));
            if(lum_max < lum)
            {
                lum_max = lum;
                ep_max = rgb;
            }
            if(lum_min > lum)
            {
                lum_min = lum;
                ep_min = rgb;
            }
            
            uint packed = pack_half_to_unorm4x8(half4(rgb, 1.0));
            pixels[y*width + x] = packed;
        }
    }
    
    ep_min *= 255.0;
    ep_max *= 255.0;
void fill_range_values(range_values values[], int _range[])
    int range = *_range;
    int range_div3 = (range * 21846) >> 16;
    int range_mod3 = range - range_div3 * 3;
    int levels_m = max(2, 5 - range_mod3 * 2);
    int levels_e = max(0, range_mod3 + range_div3 - 1);
    if (range == 0) levels_m = 2;
    int levels_m_rcp = 0x10000 / 2 + 1;
    if (levels_m == 3) levels_m_rcp = 0x10000 / 3 + 1;
    if (levels_m == 5) levels_m_rcp = 0x10000 / 5 + 1;
    values->levels_e = levels_e;
    values->levels_m = levels_m;
    values->levels_m_rcp = levels_m_rcp;
    values->levels = levels_m << levels_e;
range_values get_range_values(int range)
    range_values values;
    fill_range_values(&values, &range);
    return values;
int code_value(int value, range_values range)
    int coded = value;
    if (range.levels_m != 2 && range.levels > 5)
    {
        int value2 = value;
        if (value >= range.levels / 2) value2 = (range.levels - 1) - value;
        int q = (value2 * range.levels_m_rcp) >> 16;
        int r = value2 - q * range.levels_m;
        coded = q + r * (1 << (range.levels_e - 1));
        coded = coded * 2 + ((value >= range.levels / 2) ? 1 : 0);
    }
    return coded;
void code_block(const astc_block block[], threadgroup astc_block_data* restrict block_data)
    int num_weights = block->width * block->height * (block->dual_plane ? 2 : 1);
    range_values weight_range_values = get_range_values(block->weight_range);
    for (int i = 0; i < num_weights; i++)
    {
        block_data->weights[i] = code_value(block_data->weights[i], weight_range_values);
    }
    range_values endpoint_range_values = get_range_values(block->endpoint_range);
    for (int i = 0; i < 2 * block->color_endpoint_pairs; i++)
    {
        block_data->endpoints[i] = code_value(block_data->endpoints[i], endpoint_range_values);
    }
bool can_store(int value, int bits)
    if (value < 0) return false;
    if (value >= 1 << bits) return false;
    return true;
//TODO: Could this be a lookup table?
int pack_block_mode(const astc_block block[])
    int block_mode = 0;
    int D = !!block->dual_plane;
    int H = !!(block->weight_range >= 6);
    int DH = D * 2 + H;
    int R = block->weight_range + 2 - ((H > 0) ? 6 : 0);
    R = R / 2 + R % 2 * 4;
    if (can_store(block->width - 4, 2) && can_store(block->height - 2, 2))
    {
        int B = block->width - 4;
        int A = block->height - 2;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | (R & 3);
    }
    if (can_store(block->width - 8, 2) && can_store(block->height - 2, 2))
    {
        int B = block->width - 8;
        int A = block->height - 2;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | 4 | (R & 3);
    }
    if (can_store(block->width - 2, 2) && can_store(block->height - 8, 2))
    {
        int A = block->width - 2;
        int B = block->height - 8;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | 8 | (R & 3);
    }
    if (can_store(block->width - 2, 2) && can_store(block->height - 6, 1))
    {
        int A = block->width - 2;
        int B = block->height - 6;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | 12 | (R & 3);
    }
    if (can_store(block->width - 2, 1) && can_store(block->height - 2, 2))
    {
        int B = block->width;
        int A = block->height - 2;
        block_mode = (DH << 9) | (B << 7) | (A << 5) | ((R & 4) << 2) | 12 | (R & 3);
    }
    if (DH == 0 && can_store(block->width - 6, 2) && can_store(block->height - 6, 2))
    {
        int A = block->width - 6;
        int B = block->height - 6;
        block_mode = (B << 9) | 256 | (A << 5) | (R << 2);
    }
    return block_mode;
constant static const int range_table[][3] =
    //2^ 3^ 5^
    { 1, 0, 0 }, // 0..1
    { 0, 1, 0 }, // 0..2
    { 2, 0, 0 }, // 0..3
    { 0, 0, 1 }, // 0..4
    { 1, 1, 0 }, // 0..5
    { 3, 0, 0 }, // 0..7
    { 1, 0, 1 }, // 0..9
    { 2, 1, 0 }, // 0..11
    { 4, 0, 0 }, // 0..15
    { 2, 0, 1 }, // 0..19
    { 3, 1, 0 }, // 0..23
    { 5, 0, 0 }, // 0..31
    { 3, 0, 1 }, // 0..39
    { 4, 1, 0 }, // 0..47
    { 6, 0, 0 }, // 0..63
    { 4, 0, 1 }, // 0..79
    { 5, 1, 0 }, // 0..95
    { 7, 0, 0 }, // 0..127
    { 5, 0, 1 }, // 0..159
    { 6, 1, 0 }, // 0..191
    { 8, 0, 0 }, // 0..255
int get_levels(int range)
    return (1 + 2 * range_table[range][1] + 4 * range_table[range][2]) << range_table[range][0];
int sequence_bits(int count, int range)
    int bits = count * range_table[range][0];
    bits += (count * range_table[range][1] * 8 + 4) / 5;
    bits += (count * range_table[range][2] * 7 + 2) / 3;
    return bits;
void set_bits(thread uint32_t data[4], thread int* pos, int bits, uint32_t value)
    int pos_val = *pos;
    
    int shift_left = pos_val % 32;
    
    int index = pos_val / 32;
    data[index] |= value << shift_left;
    
    int shifted_bits = 32 - shift_left;
    if(shifted_bits < bits)
    {
        data[index+1] |= value >> shifted_bits;
    }
    
    *pos = pos_val + bits;
void pack_five_trits(uint32_t data[4], int sequence[5], thread int* pos, int n)
    int t[5];
    int m[5];
    for (int i = 0; i < 5; i++)
    {
        t[i] = sequence[i] >> n;
        m[i] = sequence[i] - (t[i] << n);
    }
    int C;
    if (t[1] == 2 && t[2] == 2)
    {
        C = 3 * 4 + t[0];
    }
    else if (t[2] == 2)
    {
        C = t[1] * 16 + t[0] * 4 + 3;
    }
    else
    {
        C = t[2] * 16 + t[1] * 4 + t[0];
    }
    int T;
    if (t[3] == 2 && t[4] == 2)
    {
        T = get_field(C, 4, 2) * 32 + 7 * 4 + get_field(C, 1, 0);
    }
    else
    {
        T = get_field(C, 4, 0);
        if (t[4] == 2)
        {
            T += t[3] * 128 + 3 * 32;
        }
        else
        {
            T += t[4] * 128 + t[3] * 32;
        }
    }
    uint32_t pack1 = 0;
    pack1 |= m[0];
    pack1 |= get_field(T, 1, 0) << n;
    pack1 |= m[1] << (2 + n);
    uint32_t pack2 = 0;
    pack2 |= get_field(T, 3, 2);
    pack2 |= m[2] << 2;
    pack2 |= get_field(T, 4, 4) << (2 + n);
    pack2 |= m[3] << (3 + n);
    pack2 |= get_field(T, 6, 5) << (3 + n * 2);
    pack2 |= m[4] << (5 + n * 2);
    pack2 |= get_field(T, 7, 7) << (5 + n * 3);
    set_bits(data, pos, 2 + n * 2, pack1);
    set_bits(data, pos, 6 + n * 3, pack2);
void pack_three_quint(uint32_t data[4], int sequence[3], thread int* pos, int n)
    int q[3];
    int m[3];
    for (int i = 0; i < 3; i++)
    {
        q[i] = sequence[i] >> n;
        m[i] = sequence[i] - (q[i] << n);
    }
    int Q;
    if (q[0] == 4 && q[1] == 4)
    {
        Q = get_field(q[2], 1, 0) * 8 + 3 * 2 + get_bit(q[2], 2);
    }
    else
    {
        int C;
        if (q[1] == 4)
        {
            C = (q[0] << 3) + 5;
        }
        else
        {
            C = (q[1] << 3) + q[0];
        }
        if (q[2] == 4)
        {
            Q = get_field(~C, 2, 1) * 32 + get_field(C, 4, 3) * 8 + 3 * 2 + get_bit(C, 0);
        }
        else
        {
            Q = q[2] * 32 + get_field(C, 4, 0);
        }
    }
    uint32_t pack = 0;
    pack |= m[0];
    pack |= get_field(Q, 2, 0) << n;
    pack |= m[1] << (3 + n);
    pack |= get_field(Q, 4, 3) << (3 + n * 2);
    pack |= m[2] << (5 + n * 2);
    pack |= get_field(Q, 6, 5) << (5 + n * 3);
    set_bits(data, pos, 7 + n * 3, pack);
void pack_integer_sequence(uint32_t output_data[4], threadgroup const uint8_t* sequence, int pos, int count, int range)
    int n = range_table[range][0];
    int bits = sequence_bits(count, range);
    int pos0 = pos;
    uint32_t data[5] = { 0 };
    if (range_table[range][1] == 1)
    {
        for (int j = 0; j < (count + 4) / 5; j++)
        {
            int temp[5] = { 0 };
            for (int i = 0; i < min(count - j * 5, 5); i++) temp[i] = sequence[j * 5 + i];
            pack_five_trits(data, temp, &pos, n);
        }
    }
    else if (range_table[range][2] == 1)
    {
        for (int j = 0; j < (count + 2) / 3; j++)
        {
            int temp[3] = { 0 };
            for (int i = 0; i < min(count - j * 3, 3); i++) temp[i] = sequence[j * 3 + i];
            pack_three_quint(data, temp, &pos, n);
        }
    }
    else
    {
        for (int i = 0; i < count; i++)
        {
            set_bits(data, &pos, n, sequence[i]);
        }
    }
    if (pos0 + bits < 96) data[3] = 0;
    if (pos0 + bits < 64) data[2] = 0;
    if (pos0 + bits < 32) data[1] = 0;
    data[(pos0 + bits) / 32] &= (1 << ((pos0 + bits) % 32)) - 1;
    for (int k = 0; k < 4; k++) output_data[k] |= data[k];
void pack_block(uint32_t data[4],
                const astc_block block[],
                threadgroup const astc_block_data* restrict block_data)
    data[0] = 0;
    data[1] = 0;
    data[2] = 0;
    data[3] = 0;
    int pos = 0;
    set_bits(data, &pos, 11, pack_block_mode(block));
    int num_weights = block->width * block->height * (block->dual_plane ? 2 : 1);
    int weight_bits = sequence_bits(num_weights, block->weight_range);
    int extra_bits = 0;
    set_bits(data, &pos, 2, block->partitions - 1);
    set_bits(data, &pos, 4, block->color_endpoint_modes[0]);
    
    if (block->dual_plane)
    {
        extra_bits += 2;
        int pos2 = 128 - weight_bits - extra_bits;
        set_bits(data, &pos2, 2, block->color_component_selector);
    }
    int config_bits = pos + extra_bits;
    int remaining_bits = 128 - config_bits - weight_bits;
    int num_cem_pairs = 0;
    for (int j = 0; j < block->partitions; j++) num_cem_pairs += 1 + block->color_endpoint_modes[j] / 4;
    int endpoint_range = -1;
    for (int range = 20; range>0; range--)
    {
        int bits = sequence_bits(2 * num_cem_pairs, range);
        if (bits <= remaining_bits)
        {
            endpoint_range = range;
            break;
        }
    }
    pack_integer_sequence(data, block_data->endpoints, pos, 2 * num_cem_pairs, endpoint_range);
    
    uint32_t rdata[4] = { 0, 0, 0, 0 };
    pack_integer_sequence(rdata, block_data->weights, 0, num_weights, block->weight_range);
    for (int i = 0; i < 4; i++) data[i] |= reverse_bits(rdata[3 - i]);
/*void compute_pca_endpoints(float ep[8], pixel_set block[],
                                const threadgroup uint32_t* restrict pixels,
                                int channels, float dc[4], float dir[4])
    float ext[2] = { 1000, -1000 };
    for (int y = 0; y < astc_block_height; y++)
    for (int x = 0; x < astc_block_width; x++)
    {
        float proj = 0;
        
        float4 rgba = get_pixel_f(pixels, x, y);
        for (int p = 0; p < channels; p++)
            proj += (rgba[p] - dc[p]) * dir[p];
        ext[0] = min(ext[0], proj);
        ext[1] = max(ext[1], proj);
    }
    if (ext[1] - 1.0f < ext[0])
    {
        ext[1] += 0.5f;
        ext[0] -= 0.5f;
    }
    
    for (int i = 0; i < 2; i++)
    for (int p = 0; p < channels; p++)
    {
        ep[p * 2 + i] = dc[p] + dir[p] * ext[i];
    }
template <typename T>
void compute_pca_endpoints_fast(T ep[8], pixel_set block[],
                                const threadgroup uint32_t* restrict pixels,
                                int channels, T dc[4], T dir[4])
    T ext[2] = { 1000, -1000 };
    for (int y = 0; y < astc_block_height; y++)
    for (int x = 0; x < astc_block_width; x++)
    {
        T proj = 0;
        
        T rgba[4];
        get_pixel(rgba, pixels, x, y);
        for (int p = 0; p < channels; p++)
            proj += (rgba[p] - dc[p]) * dir[p];
        ext[0] = min(ext[0], proj);
        ext[1] = max(ext[1], proj);
    }
    if (ext[1] - 1.0f < ext[0])
    {
        ext[1] += 0.5f;
        ext[0] -= 0.5f;
    }
    
    for (int i = 0; i < 2; i++)
    for (int p = 0; p < channels; p++)
    {
        ep[p * 2 + i] = dc[p] + dir[p] * ext[i];
    }
template <typename T>
int quant_endpoint(T value, int levels)
    return clamp(value / T(255.0) * (levels - 1) + T(0.5), 0, levels - 1);
template <typename T>
void quantize_endpoints_scale(const astc_block block[],
                              threadgroup astc_block_data* restrict block_data,
                              T endpoints[4])
    int ep_levels = get_levels(block->endpoint_range);
    T near[3];
    T far[3];
    for (int p = 0; p < 3; p++)
    {
        near[p] = endpoints[p * 2 + 0];
        far[p] = endpoints[p * 2 + 1];
    }
    for (int p = 0; p < 3; p++)
        block_data->endpoints[p] = quant_endpoint(far[p], ep_levels);
    T sq_norm = dot3(far, far) + 0.00001;
    T scale = dot3(far, near) / sq_norm;
    block_data->endpoints[3] = quant_endpoint(scale * 256, ep_levels);
    if (block->color_endpoint_modes[0] > 8)
    {
        block_data->endpoints[4] = quant_endpoint(endpoints[3 * 2 + 0], ep_levels);
        block_data->endpoints[5] = quant_endpoint(endpoints[3 * 2 + 1], ep_levels);
    }
bool compare_endpoints(threadgroup uint8_t* endpoints, const astc_block block[])
    int sum = 0;
    for (int p = 0; p < 3; p++)
    {
        sum += endpoints[p * 2 + 0];
        sum -= endpoints[p * 2 + 1];
    }
    
    if (-2 <= sum && sum <= 2)
    {
        // avoid being too close so we don't need proper rounding
        for (int p = 0; p < 3; p++)
        {
            if (sum<=0)
                endpoints[p * 2 + 0] = clamp(endpoints[p * 2 + 0] - 1, 0, get_levels(block->endpoint_range) - 1);
            if (sum>0)
                endpoints[p * 2 + 1] = clamp(endpoints[p * 2 + 1] - 1, 0, get_levels(block->endpoint_range) - 1);
        }
        sum = 0;
        for (int p = 0; p < 3; p++)
        {
            sum += endpoints[p * 2 + 0];
            sum -= endpoints[p * 2 + 1];
        }
    }
    return sum > 0;
void reorder_endpoints(threadgroup uint8_t* endpoints, const astc_block block[], bool blue_contract)
    if (compare_endpoints(endpoints, block) == !blue_contract)
    for (int p = 0; p < 4; p++) swap(endpoints[p * 2], endpoints[p * 2 + 1]);
template <typename T>
void quantize_endpoints_pair(const astc_block block[],
                             threadgroup astc_block_data* restrict block_data,
                             T endpoints[6])
    int ep_levels = get_levels(block->endpoint_range);
    bool blue_contract = true;
    T blue_compressed[6];
    for (int i = 0; i < 2; i++)
    {
        blue_compressed[i + 0] = endpoints[i + 0] * 2 - endpoints[i + 4];
        blue_compressed[i + 2] = endpoints[i + 2] * 2 - endpoints[i + 4];
        blue_compressed[i + 4] = endpoints[i + 4];
        if (blue_compressed[i + 0] < 0) blue_contract = false;
        if (blue_compressed[i + 0] > 255) blue_contract = false;
        if (blue_compressed[i + 2] < 0) blue_contract = false;
        if (blue_compressed[i + 2] > 255) blue_contract = false;
    }
    
    if (blue_contract)
    {
        for (int p = 0; p < 3; p++)
        {
            block_data->endpoints[p * 2 + 0] = quant_endpoint(blue_compressed[p * 2 + 0], ep_levels);
            block_data->endpoints[p * 2 + 1] = quant_endpoint(blue_compressed[p * 2 + 1], ep_levels);
        }
    }
    else
    {
        for (int p = 0; p < 3; p++)
        {
            block_data->endpoints[p * 2 + 0] = quant_endpoint(endpoints[p * 2 + 0], ep_levels);
            block_data->endpoints[p * 2 + 1] = quant_endpoint(endpoints[p * 2 + 1], ep_levels);
        }
    }
    
    if (block->color_endpoint_modes[0] > 8)
    {
        block_data->endpoints[6] = quant_endpoint(endpoints[3 * 2 + 0], ep_levels);
        block_data->endpoints[7] = quant_endpoint(endpoints[3 * 2 + 1], ep_levels);
    }
    reorder_endpoints(block_data->endpoints, block, blue_contract);
template<typename T>
void quantize_endpoints(const astc_block block[],
                        threadgroup astc_block_data* restrict block_data,
                        T endpoints[])
    bool zero_based = (block->color_endpoint_modes[0] % 4) == 2;
    if (zero_based)
    {
        quantize_endpoints_scale(block, block_data, endpoints);
    }
    else
    {
        quantize_endpoints_pair(block, block_data, endpoints);
    }
inline int clamp_unorm8(int value)
    if (value < 0) return 0;
    if (value > 255) return 255;
    return value;
#define apply_blue_contract(r, g, b) { r = (r + b) >> 1; g = (g + b) >> 1; }
template <typename T>
void decode_endpoints(T endpoints[8], uint8_t coded_endpoints[], int mode)
    if ((mode % 4) == 2)
    {
        int v0 = coded_endpoints[0];
        int v1 = coded_endpoints[1];
        int v2 = coded_endpoints[2];
        int v3 = coded_endpoints[3];
        int v4 = coded_endpoints[4];
        int v5 = coded_endpoints[5];
        endpoints[0] = (v0 * v3) >> 8;
        endpoints[1] = (v1 * v3) >> 8;
        endpoints[2] = (v2 * v3) >> 8;
        endpoints[3] = 0xFF;
        endpoints[4] = v0;
        endpoints[5] = v1;
        endpoints[6] = v2;
        endpoints[7] = 0xFF;
        if (mode > 8)
        {
            endpoints[3] = clamp_unorm8(v4);
            endpoints[7] = clamp_unorm8(v5);
        }
    }
    if ((mode % 4) == 0)
    {
        int v0 = coded_endpoints[0];
        int v1 = coded_endpoints[1];
        int v2 = coded_endpoints[2];
        int v3 = coded_endpoints[3];
        int v4 = coded_endpoints[4];
        int v5 = coded_endpoints[5];
        int v6 = coded_endpoints[6];
        int v7 = coded_endpoints[7];
        bool swap_endpoints = v1 + v3 + v5 < v0 + v2 + v4;
        if (swap_endpoints)
        {
            swap(v0, v1);
            swap(v2, v3);
            swap(v4, v5);
            swap(v6, v7);
            apply_blue_contract(v0, v2, v4);
            apply_blue_contract(v1, v3, v5);
        }
        endpoints[0] = clamp_unorm8(v0);
        endpoints[1] = clamp_unorm8(v2);
        endpoints[2] = clamp_unorm8(v4);
        endpoints[3] = 0xFF;
        endpoints[4] = clamp_unorm8(v1);
        endpoints[5] = clamp_unorm8(v3);
        endpoints[6] = clamp_unorm8(v5);
        endpoints[7] = 0xFF;
        if (mode > 8)
        {
            endpoints[3] = clamp_unorm8(v6);
            endpoints[7] = clamp_unorm8(v7);
        }
    }
template <typename T>
void dequant_decode_endpoints(T endpoints[8], const threadgroup uint8_t* block_endpoints, int mode, int range)
    int levels = get_levels(range);
    int num_cem_pairs = 1 + mode / 4;
    uint8_t dequant_endpoints[8];
    for (int k = 0; k < 2 * num_cem_pairs; k++)
    {
        dequant_endpoints[k] = (int)(((int)block_endpoints[k]) * 255.0 / (levels - 1) + 0.5);
    }
    decode_endpoints(endpoints, dequant_endpoints, mode);
template <typename T>
void opt_weights_fast(threadgroup const uint32_t* restrict scaled_pixels,
                 const astc_block block[],
                 T rec_endpoints[],
                 threadgroup astc_block_data* restrict block_data)
    const int channels = 4;
    T w_levels = get_levels(block->weight_range);
    T dir[4]; dir[3] = 0;
    for (int p = 0; p < channels; p++) dir[p] = rec_endpoints[4 + p] - rec_endpoints[0 + p];
    T sq_norm = dot4(dir, dir) + 0.00001;
    for (int p = 0; p < channels; p++) dir[p] *= (w_levels - 1) / sq_norm;
    
    for (int y = 0; y < astc_block_height; y++)
    for (int x = 0; x < astc_block_width; x++)
    {
        T pixel[4]; pixel[3] = 0;
        
        T rgba[4];
        get_pixel(rgba, scaled_pixels, x, y);
        for (int p = 0; p < channels; ++p)
            pixel[p] = rgba[p] - rec_endpoints[0 + p];
        
        T q = clamp(dot4(pixel, dir) + 0.5, 0.0, w_levels - 1.0);
        block_data->weights[y * astc_block_width + x] = q;
    }
void endpoints_and_weights(threadgroup uint32_t* restrict scaled_pixels,
                    const astc_block block[],
                    threadgroup astc_block_data* restrict block_data,
                    float dc[],
                    float dir[]
                    )
    pixel_set pset;
    pset.pixels = scaled_pixels;
    pset.width = block->width;
    pset.height = block->height;
    float ep[8];
    //compute_pca_endpoints(ep, &pset, scaled_pixels, 4, dc, dir);
    compute_pca_endpoints_fast(ep, &pset, scaled_pixels, 4, dc, dir);
    
    quantize_endpoints(block, block_data, ep);
    
    float rec_endpoints[8];
    dequant_decode_endpoints(rec_endpoints, block_data->endpoints,
                             block->color_endpoint_modes[0], block->endpoint_range);
    opt_weights_fast(scaled_pixels, block, rec_endpoints, block_data);
kernel void astc_encode(texture2d<half>            inTexture               [[ texture(0) ]],
                        device uint*               dst                     [[ buffer(0) ]],
                        constant astc_settings*    settings                [[ buffer(1) ]],
                        uint                       block_index_in_group    [[ thread_index_in_threadgroup ]],
                        uint                       block_id                [[ thread_position_in_grid ]],
                        threadgroup uchar*         tg_mem_pool             [[threadgroup(0)]])
    if(block_id >= (uint)settings->blocks_count)
        return;
    
    threadgroup uint32_t*         _pixels = (threadgroup uint32_t*)tg_mem_pool;
    uint pixels_offset = (BLOCKS_IN_GROUP_COUNT) * (astc_block_width * astc_block_height);
    threadgroup astc_block_data*  _block_data = (threadgroup astc_block_data*)(_pixels + pixels_offset);
    
    threadgroup uint32_t* restrict pixels = &_pixels[astc_block_width * astc_block_height * block_index_in_group];
    threadgroup astc_block_data* block_data = &_block_data[block_index_in_group];
    
    uint width_in_blocks = settings->width_in_blocks;
    uint2 block_crd(block_id % width_in_blocks, block_id / width_in_blocks);
    
    const astc_block block(astc_packed_mode);
    float dc[4];
    float dir[4];
    bool zero_based = (block.color_endpoint_modes[0] % 4) == 2;
    process_block(pixels, inTexture,
                  block_crd.x, block_crd.y,
                  astc_block_width, astc_block_height,
                  zero_based, dc, dir);
    
    endpoints_and_weights(pixels, &block, block_data, dc, dir);
    
    code_block(&block, block_data);
    
    uint32_t data[4];
    pack_block(data, &block, block_data);
    for (int i = 0; i < 4; i++)
    {
        int outIndex = (block_crd.y * width_in_blocks + block_crd.x) * 4 + i;
        dst[outIndex] = data[i];
    }
kernel void astc_encode_fast(texture2d<half>       inTexture               [[ texture(0) ]],
                        device uint*               dst                     [[ buffer(0) ]],
                        constant astc_settings*    settings                [[ buffer(1) ]],
                        uint                       block_index_in_group    [[ thread_index_in_threadgroup ]],
                        uint                       block_id                [[ thread_position_in_grid ]],
                        threadgroup uchar*         tg_mem_pool             [[threadgroup(0)]])
    threadgroup uint32_t*         _pixels = (threadgroup uint32_t*)tg_mem_pool;
    uint pixels_offset = (BLOCKS_IN_GROUP_COUNT) * (astc_block_width * astc_block_height);
    threadgroup astc_block_data*  _block_data = (threadgroup astc_block_data*)(_pixels + pixels_offset);
    
    threadgroup uint32_t* restrict pixels = &_pixels[astc_block_width * astc_block_height * block_index_in_group];
    threadgroup astc_block_data* block_data = &_block_data[block_index_in_group];
    
    uint width_in_blocks = settings->width_in_blocks;
    uint2 block_crd(block_id % width_in_blocks, block_id / width_in_blocks);
    half3 ep_min, ep_max;
    process_block_fast(pixels, inTexture, block_crd.x, block_crd.y,
                       astc_block_width, astc_block_height, ep_min, ep_max);
    
    float ep[8];
    for(int p=0;p<3;++p)
    {
        ep[p*2 + 0] = ep_min[p];
        ep[p*2 + 1] = ep_max[p];
    }
    
    ep[6] = 255.0;
    ep[7] = 255.0;
    
    const astc_block block(astc_packed_mode);
    quantize_endpoints(&block, block_data, ep);
    
    float rec_endpoints[8];
    dequant_decode_endpoints(rec_endpoints, block_data->endpoints,
                             block.color_endpoint_modes[0],
                             block.endpoint_range);
    
    opt_weights_fast(pixels, &block, rec_endpoints, block_data);
    
    code_block(&block, block_data);
    
    uint32_t data[4];
    pack_block(data, &block, block_data);
    for (int i = 0; i < 4; i++)
    {
        int outIndex = (block_crd.y * width_in_blocks + block_crd.x) * 4 + i;
        dst[outIndex] = data[i];
    }
///////////////////////////
//BC1/BC3 encoding
void swap_ints(int u[], int v[], int n)
    for (int i=0; i<n; i++)
    {
        int t = u[i];
        u[i] = v[i];
        v[i] = t;
    }
int stb__Mul8Bit(int a, int b)
  int t = a*b + 128;
  return (t + (t >> 8)) >> 8;
ushort stb__As16Bit(int r, int g, int b)
   return (stb__Mul8Bit(r,31) << 11) + (stb__Mul8Bit(g,63) << 5) + stb__Mul8Bit(b,31);
ushort enc_rgb565(float c[3])
    return stb__As16Bit((int)c[0], (int)c[1], (int)c[2]);
void dec_rgb565(float c[3], int p)
    int c2 = (p>>0)&31;
    int c1 = (p>>5)&63;
    int c0 = (p>>11)&31;
    c[0] = (c0<<3)+(c0>>2);
    c[1] = (c1<<2)+(c1>>4);
    c[2] = (c2<<3)+(c2>>2);
uint fast_quant(threadgroup const uint* pixels, int p0, int p1)
    float c0[3];
    float c1[3];
    dec_rgb565(c0, p0);
    dec_rgb565(c1, p1);
    float dir[3];
    for (int p=0; p<3; p++) dir[p] = c1[p]-c0[p];
    
    float sq_norm = 0;
    for (int p=0; p<3; p++) sq_norm += sq(dir[p]);
    float rsq_norm = 1.0/sq_norm;
    for (int p=0; p<3; p++) dir[p] *= rsq_norm*3;
    float bias = 0.5;
    for (int p=0; p<3; p++) bias -= c0[p]*dir[p];
    uint bits = 0;
    uint scaler = 1;
    for(int y=0;y<astc_block_height;++y)
    {
        for(int x=0;x<astc_block_height;++x)
        {
            float dot = 0;
            float4 rgba = get_pixel_f(pixels, x, y);
            for (int p=0; p<3; p++)
            {
                dot += rgba[p]*dir[p];
            }
            int q = clamp((int)(dot+bias), 0, 3);
            bits += q*scaler;
            scaler *= 4;
        }
    }
    
    return bits;
uint fix_qbits(uint qbits)
    const uint mask_01b = 0x55555555;
    const uint mask_10b = 0xAAAAAAAA;
    uint qbits0 = qbits&mask_01b;
    uint qbits1 = qbits&mask_10b;
    qbits = (qbits1>>1) + (qbits1 ^ (qbits0<<1));
    return qbits;
kernel void bc1_encode_fast(texture2d<half>       inTexture               [[ texture(0) ]],
                    device uint*               dst                     [[ buffer(0) ]],
                    constant astc_settings*    settings                [[ buffer(1) ]],
                    uint                       block_index_in_group    [[ thread_index_in_threadgroup ]],
                    uint                       block_id                [[ thread_position_in_grid ]],
                    threadgroup uchar*         tg_mem_pool             [[threadgroup(0)]])
    threadgroup uint32_t*         _pixels = (threadgroup uint32_t*)tg_mem_pool;
    threadgroup uint32_t* restrict pixels = &_pixels[astc_block_width * astc_block_height * block_index_in_group];
    
    uint width_in_blocks = settings->width_in_blocks;
    uint2 block_crd(block_id % width_in_blocks, block_id / width_in_blocks);
    
    float c0[3];
    float c1[3];
    half3 ep_min, ep_max;
    process_block_fast(pixels, inTexture, block_crd.x, block_crd.y,
                       astc_block_width, astc_block_height, ep_min, ep_max);
    
    for(int i=0;i<3;++i)
    {
        c0[i] = ep_min[i];
        c1[i] = ep_max[i];
    }
    
    int p[2];
    p[0] = enc_rgb565(c0);
    p[1] = enc_rgb565(c1);
    if (p[0]<p[1]) swap_ints(&p[0], &p[1], 1);
    
    uint data[2];
    data[0] = (1<<16)*p[1]+p[0];
    data[1] = fast_quant(pixels, p[0], p[1]);
    
    data[1] = fix_qbits(data[1]);
    
    int out_index = (block_crd.y * width_in_blocks + block_crd.x) * 2;
    dst[out_index] = data[0];
    dst[out_index + 1] = data[1];
#include <metal_stdlib>
using namespace metal;
kernel void
simpleDecompress(texture2d<float, access::read> inTexture  [[texture(0)]],
                 texture2d<uint, access::write> outTexture [[texture(1)]],
                 uint2                          gid        [[thread_position_in_grid]])
    float4 fColour = inTexture.read(gid);
    outTexture.write(uint4(fColour*255.0), gid);
kernel void
simpleDecompress16F(texture2d<float, access::read> inTexture  [[texture(0)]],
                    texture2d<half, access::write> outTexture [[texture(1)]],
                    uint2                          gid        [[thread_position_in_grid]])
    float4 fColour = inTexture.read(gid);
    outTexture.write(half4(fColour), gid);
simpleDecompress16F
simpleDecompress
Compression
EXR File format does not support compression format %s
EXR file format does not support multiple miplevels
EXR file format does not support non-2D textures
Bad checkerboard mod value %d (this isn't supposed to happen!)
Bad threshold mod value %d (this isn't supposed to happen!)
Bad mod value %d (this isn't supposed to happen!)
Bit replication is wrong! (%d, %d)
Bit extra replication is wrong! (%d, %d, %d, %d)
PVRTC requires a square image.
PVRTC requires a first mip level with a width/height >= 8.
PVRTC requires a width/height of power of two.
Could not create vImage_Buffer: %s [%ld]
Retaining %s
Could not load image as expected CGImage format!
Retaining unknown colorspace
ASTCENC_SUCCESS
ASTCENC_ERR_OUT_OF_MEM
ASTCENC_ERR_BAD_CPU_FLOAT
ASTCENC_ERR_BAD_PARAM
ASTCENC_ERR_BAD_BLOCK_SIZE
ASTCENC_ERR_BAD_PROFILE
ASTCENC_ERR_BAD_QUALITY
ASTCENC_ERR_BAD_FLAGS
ASTCENC_ERR_BAD_SWIZZLE
ASTCENC_ERR_BAD_CONTEXT
ASTCENC_ERR_NOT_IMPLEMENTED
ASTCENC_ERR_BAD_DECODE_MODE
WARNING: %s using %d thread%s due to thread creation error
EtcImage.cpp
Encode
m_paucEncodingBits == nullptr
effortblocks = %d
pass %u
    %u unfinished blocks
Finished %d Blocks out of %d
    %u iterated blocks
IterateThroughWorstBlocks
a_uiMultithreadingStride > 0
FindEncodingWarningTypesForCurFormat
ETC1
RGB8
SRGB8
RGB8A1
SRGB8A1
SRGBA8
SIGNED_R11
RG11
SIGNED_RG11
UNKNOWN
RunFirstPass
SetEncodingBits
GetError
EtcBlock4x4Encoding.h
m_fError >= 0.0f
thread constructor failed
InitFromSource
EtcBlock4x4.cpp
InitFromEtcEncodingBits
PLANAR
CalcPixelError
EtcBlock4x4Encoding.cpp
a_fDecodedAlpha >= 0.0f
PerformIteration
EtcBlock4x4Encoding_ETC1.cpp
!m_boolDone
CalculateSourceAverages
(fWeightSumLeft + fWeightSumRight) > 0.0f
(fWeightSumTop + fWeightSumBottom) > 0.0f
fWeightSumRight > 0.0f
fWeightSumLeft > 0.0f
fWeightSumBottom > 0.0f
fWeightSumTop > 0.0f
TryDifferential
encodingTry.m_fError < FLT_MAX
ptryBest1 != nullptr
ptryBest2 != nullptr
iDRed >= -4 && iDRed < 4
iDGreen >= -4 && iDGreen < 4
iDBlue >= -4 && iDBlue < 4
TryDifferentialHalf
iRed >= 0 && iRed <= 31
iGreen >= 0 && iGreen <= 31
iBlue >= 0 && iBlue <= 31
ptry < &a_phalf->m_atry[DifferentialTrys::Half::MAX_TRYS]
ptry->m_fError < FLT_MAX
TryIndividualHalf
iRed >= 0 && iRed <= 15
iGreen >= 0 && iGreen <= 15
iBlue >= 0 && iBlue <= 15
ptry < &a_phalf->m_atry[IndividualTrys::Half::MAX_TRYS]
m_mode == MODE_ETC1
iDRed2 >= -4 && iDRed2 < 4
iDGreen2 >= -4 && iDGreen2 < 4
iDBlue2 >= -4 && iDBlue2 < 4
InitFromEncodingBits
EtcBlock4x4Encoding_R11.cpp
CalculateR11
fMinRed <= fMaxRed
EtcBlock4x4Encoding_RG11.cpp
CalculateG11
fMinGrn <= fMaxGrn
EtcBlock4x4Encoding_RGB8.cpp
CalculateBaseColorsForTAndH
uiTransparentPixels < PIXELS
SetEncodingBits_T
m_mode == MODE_T
m_boolDiff == true
iRed2 < 0 || iRed2 > 31
SetEncodingBits_H
m_mode == MODE_H
iRed2 >= 0 && iRed2 <= 31
iGreen2 < 0 || iGreen2 > 31
SetEncodingBits_Planar
m_mode == MODE_PLANAR
iGreen2 >= 0 && iGreen2 <= 31
iBlue2 < 0 || iBlue2 > 31
EtcBlock4x4Encoding_RGB8A1.cpp
!m_boolOpaque
!m_boolTransparent
SetEncodingBits_ETC1
m_boolDiff
!m_boolPunchThroughPixels
m_boolTransparent
m_uiEncodingIterations == 0
EtcBlock4x4Encoding_RGBA8.cpp
CalculateA8
fMinAlpha <= fMaxAlpha
DifferentialTrys
EtcDifferentialTrys.cpp
a_uiRadius <= MAX_RADIUS
iRed1 >= (signed)(0 + a_uiRadius) && iRed1 <= (signed)(31 - a_uiRadius)
iRed2 >= (signed)(0 + a_uiRadius) && iRed2 <= (signed)(31 - a_uiRadius)
iGreen1 >= (signed)(0 + a_uiRadius) && iGreen1 <= (signed)(31 - a_uiRadius)
iGreen2 >= (signed)(0 + a_uiRadius) && iGreen2 <= (signed)(31 - a_uiRadius)
iBlue1 >= (signed)(0+a_uiRadius) && iBlue1 <= (signed)(31 - a_uiRadius)
iBlue2 >= (signed)(0 + a_uiRadius) && iBlue2 <= (signed)(31 - a_uiRadius)
IndividualTrys
EtcIndividualTrys.cpp
AddBlock
EtcSortedBlockList.cpp
m_uiAddedBlocks < m_uiImageBlocks
Sort
m_uiAddedBlocks == m_uiImageBlocks
pbucket->plinkLast->GetNext() == nullptr
%3d: e=%.3f rms=%.6f %u
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc6h/zohone.cpp
float ZOH::refineone(const Tile &, int, const FltEndpts *, char *)
data && availdatabits > 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc6h/bits.h
ZOH::Bits::Bits(const char *, int)
nbits >= 0 && nbits < 32
int ZOH::Bits::read(int)
bptr < bend
int ZOH::Bits::readone()
bw[10],bw[11],bw[12],bw[13],bw[14],bw[15],bx[3:0],gw[10],gw[11],gw[12],gw[13],gw[14],gw[15],gx[3:0],rw[10],rw[11],rw[12],rw[13],rw[14],rw[15],rx[3:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
bw[10],bw[11],bx[7:0],gw[10],gw[11],gx[7:0],rw[10],rw[11],rx[7:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
bw[10],bx[8:0],gw[10],gx[8:0],rw[10],rx[8:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
bx[9:0],gx[9:0],rx[9:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
data && maxdatabits > 0
ZOH::Bits::Bits(char *, int)
void ZOH::Bits::write(int, int)
void ZOH::Bits::writeone(int)
bptr < maxbits
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc6h/zohtwo.cpp
float ZOH::refinetwo(const Tile &, int, const FltEndpts *, char *)
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bz[1],bw[10],bx[3:0],gz[3:0],bz[0],gw[10],gx[3:0],gy[3:0],rw[10],rx[4:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
d[4:0],bz[3],gy[4],rz[3:0],bz[2],bz[0],ry[3:0],by[3:0],bz[1],bw[10],bx[3:0],gz[3:0],gw[10],gx[4:0],gy[3:0],gz[4],rw[10],rx[3:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
d[4:0],bz[3],bz[4],rz[3:0],bz[2:1],ry[3:0],by[3:0],bw[10],bx[4:0],gz[3:0],bz[0],gw[10],gx[3:0],gy[3:0],by[4],rw[10],rx[3:0],bw[9:0],gw[9:0],rw[9:0],m[4:0]
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bz[1],bx[4:0],gz[3:0],bz[0],gx[4:0],gy[3:0],gz[4],rx[4:0],bw[9:0],gw[9:0],rw[9:0],bz[4],by[4],gy[4],m[1:0]
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bz[1],bx[4:0],gz[3:0],bz[0],gx[4:0],gy[3:0],gz[4],rx[4:0],bz[4],bw[8:0],gy[4],gw[8:0],by[4],rw[8:0],m[4:0]
d[4:0],rz[5:0],ry[5:0],by[3:0],bz[1],bx[4:0],gz[3:0],bz[0],gx[4:0],gy[3:0],rx[5:0],bz[4:3],bw[7:0],gy[4],bz[2],gw[7:0],by[4],gz[4],rw[7:0],m[4:0]
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bz[1],bx[4:0],gz[3:0],gx[5:0],gy[3:0],gz[4],rx[4:0],bz[4],gz[5],bw[7:0],gy[4],gy[5],gw[7:0],by[4],bz[0],rw[7:0],m[4:0]
d[4:0],bz[3],rz[4:0],bz[2],ry[4:0],by[3:0],bx[5:0],gz[3:0],bz[0],gx[4:0],gy[3:0],gz[4],rx[4:0],bz[4],bz[5],bw[7:0],gy[4],by[5],gw[7:0],by[4],bz[1],rw[7:0],m[4:0]
d[4:0],rz[5:0],ry[5:0],by[3:0],bx[5:0],gz[3:0],gx[5:0],gy[3:0],rx[5:0],bz[4],bz[5],bz[3],bw[6:0],gy[4],bz[2],by[5],gw[6:0],by[4],bz[1:0],rw[6:0],gz[5:4],gy[5],m[1:0]
d[4:0],rz[5:0],ry[5:0],by[3:0],bx[5:0],gz[3:0],gx[5:0],gy[3:0],rx[5:0],bz[4],bz[5],bz[3],gz[5],bw[5:0],gy[4],bz[2],by[5],gy[5],gw[5:0],by[4],bz[1:0],gz[4],rw[5:0],m[4:0]
in.getptr() == AVPCL::BITSIZE
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode0.cpp
void AVPCL::decompress_mode0(const char *, Tile &)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/bits.h
AVPCL::Bits::Bits(const char *, int)
void read_header(Bits &, IntEndptsRGB_2 *, int &, Pattern &, int &)
in.getptr() == patterns[pat_index].modebits
in.getptr() == 83
int AVPCL::Bits::read(int)
int AVPCL::Bits::readone()
compr_endpts.A[j] < 16
void compress_one(const IntEndptsRGB &, IntEndptsRGB_2 &)
compr_endpts.B[j] < 16
shapes[((shapeindex)&3)*4+((shapeindex)>>2)*64+(x)+(y)*16] == region
void swap_indices(IntEndptsRGB_2 *, int (*)[4], int)
orig_indices[i] != -1
float optimize_one(const Vector4 *, const float *, int, float, const IntEndptsRGB_2 &, const RegionPrec &, IntEndptsRGB_2 &)
new_indices[i] != -1
out.getptr() == AVPCL::BITSIZE
void emit_block(const IntEndptsRGB_2 *, int, const Pattern &, const int (*)[4], char *)
AVPCL::Bits::Bits(char *, int)
out.getptr() == 83
void write_header(const IntEndptsRGB_2 *, int, const Pattern &, Bits &)
void AVPCL::Bits::write(int, int)
void AVPCL::Bits::writeone(int)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode1.cpp
void AVPCL::decompress_mode1(const char *, Tile &)
void read_header(Bits &, IntEndptsRGB_1 *, int &, Pattern &, int &)
in.getptr() == 82
compr_endpts.A[j] < 64
void compress_one(const IntEndptsRGB &, IntEndptsRGB_1 &)
compr_endpts.B[j] < 64
void swap_indices(IntEndptsRGB_1 *, int (*)[4], int)
float optimize_one(const Vector4 *, const float *, int, float, const IntEndptsRGB_1 &, const RegionPrec &, IntEndptsRGB_1 &)
void emit_block(const IntEndptsRGB_1 *, int, const Pattern &, const int (*)[4], char *)
out.getptr() == 82
void write_header(const IntEndptsRGB_1 *, int, const Pattern &, Bits &)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode2.cpp
void AVPCL::decompress_mode2(const char *, Tile &)
void read_header(Bits &, IntEndptsRGB *, int &, Pattern &, int &)
in.getptr() == 99
void swap_indices(IntEndptsRGB *, int (*)[4], int)
float optimize_one(const Vector4 *, const float *, int, float, const IntEndptsRGB &, const RegionPrec &, IntEndptsRGB &)
void emit_block(const IntEndptsRGB *, int, const Pattern &, const int (*)[4], char *)
out.getptr() == 99
void write_header(const IntEndptsRGB *, int, const Pattern &, Bits &)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode3.cpp
void AVPCL::decompress_mode3(const char *, Tile &)
in.getptr() == 98
compr_endpts.A[j] < 128
compr_endpts.B[j] < 128
out.getptr() == 98
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode4.cpp
void AVPCL::decompress_mode4(const char *, Tile &)
void read_header(Bits &, IntEndptsRGBA *, int &, int &, int &, Pattern &, int &)
in.getptr() == 50
void assign_indices(const Tile &, int, int, int, IntEndptsRGBA *, const PatternPrec &, int (*)[4][4], float *)
orig_indices[j][i] != -1
float optimize_one(const Vector4 *, const float *, int, int, int, float, const IntEndptsRGBA &, const RegionPrec &, IntEndptsRGBA &)
float map_colors(const Vector4 *, const float *, int, int, int, const IntEndptsRGBA &, const RegionPrec &, float, int (*)[16])
void emit_block(const IntEndptsRGBA *, int, const Pattern &, const int (*)[4][4], int, int, char *)
out.getptr() == 50
void write_header(const IntEndptsRGBA *, int, const Pattern &, int, int, Bits &)
(indices[((indexmode == INDEXMODE_ALPHA_IS_2BITS) ? 1 : 0)][0][0] & (1<<(2-1))) == 0
void write_indices(const int (*)[4][4], int, int, Bits &)
(indices[((indexmode == INDEXMODE_ALPHA_IS_3BITS) ? 1 : 0)][0][0] & (1<<(3-1))) == 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode5.cpp
void AVPCL::decompress_mode5(const char *, Tile &)
in.getptr() == 66
out.getptr() == 66
(indices[((indexmode == INDEXMODE_ALPHA_IS_3BITS) ? 1 : 0)][0][0] & (1<<(2-1))) == 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode6.cpp
void AVPCL::decompress_mode6(const char *, Tile &)
void read_header(Bits &, IntEndptsRGBA_2 *, int &, Pattern &, int &)
in.getptr() == 65
void compress_one(const IntEndptsRGBA &, IntEndptsRGBA_2 &)
float optimize_one(const Vector4 *, const float *, int, float, const IntEndptsRGBA_2 &, const RegionPrec &, IntEndptsRGBA_2 &)
void emit_block(const IntEndptsRGBA_2 *, int, const Pattern &, const int (*)[4], char *)
out.getptr() == 65
void write_header(const IntEndptsRGBA_2 *, int, const Pattern &, Bits &)
(indices[0][0] & (1<<(4-1))) == 0
void write_indices(const int (*)[4], int, Bits &)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_mode7.cpp
void AVPCL::decompress_mode7(const char *, Tile &)
compr_endpts.A[j] < 32
compr_endpts.B[j] < 32
void swap_indices(IntEndptsRGBA_2 *, int (*)[4], int)
denom == 3 || denom == 7 || denom == 15
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/bc7/avpcl_utils.cpp
static int AVPCL::Utils::lerp(int, int, int, int, int)
i >= 0 && i <= denom
bias >= 0 && bias <= denom/2
a >= 0 && b >= 0
static Vector4 AVPCL::Utils::lerp(Vector4::Arg, Vector4::Arg, int, int, int)
prec > 3
static int AVPCL::Utils::unquantize(int, int)
static int AVPCL::Utils::quantize(float, int)
unq <= 255
q >= 0 && q < (1 << prec)
(R==r) && (A==a)
static float AVPCL::Utils::premult(float, float)
Dumping stacktrace:
s_sig_handler_enabled != true
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/Debug.cpp
void nv::debug::enableSigHandler(bool)
s_sig_handler_enabled == true
void nv::debug::disableSigHandler()
  In: '%s'
  In: [%s] '%s'
Got signal %d, faulty address is %p, from %p
Got signal %d, faulty address is %p
Breakpoint hit.
Got signal %d
*** Assertion failed: %s
    On file: %s
    On function: %s
    On line: %d
*** Assertion failed: %s
    On file: %s
    On line: %d
base >= 2
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/StrLib.cpp
StringBuilder &nv::StringBuilder::number(int, int)
base <= 36
StringBuilder &nv::StringBuilder::number(uint, int)
size_hint != 0
StringBuilder &nv::StringBuilder::reserve(uint)
s != __null
StringBuilder &nv::StringBuilder::copy(const char *)
StringBuilder &nv::StringBuilder::copy(const char *, uint)
s.m_size == 0
StringBuilder &nv::StringBuilder::copy(const StringBuilder &)
!isNull()
void nv::Path::appendSeparator(char)
m_str != __null
void nv::Path::stripFileName()
void nv::Path::stripExtension()
str != __null
static const char *nv::Path::fileName(const char *)
static const char *nv::Path::extension(const char *)
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
count < 0xFFFF
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/StrLib.h
void nv::String::setRefCount(uint16)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/TextWriter.cpp
nv::TextWriter::TextWriter(Stream *)
s->isSaving()
channel >= 0 && channel < 4
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/ColorBlock.cpp
void nv::AlphaBlock4x4::init(const ColorBlock &, uint)
(rmask & gmask) == 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/DirectDrawSurface.cpp
void nv::DDSHeader::setPixelFormat(uint, uint, uint, uint, uint)
(rmask & bmask) == 0
(rmask & amask) == 0
(gmask & bmask) == 0
(gmask & amask) == 0
(bmask & amask) == 0
bitcount > 0 && bitcount <= 32
Flags: 0x%.8X
Height: %d
Width: %d
Depth: %d
Pitch: %d
Linear size: %d
Mipmap count: %d
Flags: 0x%.8X
FourCC: '%c%c%c%c' (0x%.8X)
Swizzle: '%c%c%c%c' (0x%.8X)
Bit count: %d
Red mask:   0x%.8X
Green mask: 0x%.8X
Blue mask:  0x%.8X
Alpha mask: 0x%.8X
Caps 1: 0x%.8X
Caps 2: 0x%.8X
Caps 3: 0x%.8X
Caps 4: 0x%.8X
DXGI Format: %u (%s)
Resource dimension: %u (%s)
Misc flag: %u
Array size: %u
NVIDIA Texture Tools %d.%d.%d
User Version: %d
R32G32B32A32_TYPELESS
R32G32B32A32_FLOAT
R32G32B32A32_UINT
R32G32B32A32_SINT
R32G32B32_TYPELESS
R32G32B32_FLOAT
R32G32B32_UINT
R32G32B32_SINT
R16G16B16A16_TYPELESS
R16G16B16A16_FLOAT
R16G16B16A16_UNORM
R16G16B16A16_UINT
R16G16B16A16_SNORM
R16G16B16A16_SINT
R32G32_TYPELESS
R32G32_FLOAT
R32G32_UINT
R32G32_SINT
R32G8X24_TYPELESS
D32_FLOAT_S8X24_UINT
R32_FLOAT_X8X24_TYPELESS
X32_TYPELESS_G8X24_UINT
R10G10B10A2_TYPELESS
R10G10B10A2_UNORM
R10G10B10A2_UINT
R11G11B10_FLOAT
R8G8B8A8_TYPELESS
R8G8B8A8_UNORM
R8G8B8A8_UNORM_SRGB
R8G8B8A8_UINT
R8G8B8A8_SNORM
R8G8B8A8_SINT
R16G16_TYPELESS
R16G16_FLOAT
R16G16_UNORM
R16G16_UINT
R16G16_SNORM
R16G16_SINT
R32_TYPELESS
D32_FLOAT
R32_FLOAT
R32_UINT
R32_SINT
R24G8_TYPELESS
D24_UNORM_S8_UINT
R24_UNORM_X8_TYPELESS
X24_TYPELESS_G8_UINT
R8G8_TYPELESS
R8G8_UNORM
R8G8_UINT
R8G8_SNORM
R8G8_SINT
R16_TYPELESS
R16_FLOAT
D16_UNORM
R16_UNORM
R16_UINT
R16_SNORM
R16_SINT
R8_TYPELESS
R8_UNORM
R8_UINT
R8_SNORM
R8_SINT
A8_UNORM
R1_UNORM
R9G9B9E5_SHAREDEXP
R8G8_B8G8_UNORM
G8R8_G8B8_UNORM
BC1_TYPELESS
BC1_UNORM
BC1_UNORM_SRGB
BC2_TYPELESS
BC2_UNORM
BC2_UNORM_SRGB
BC3_TYPELESS
BC3_UNORM
BC3_UNORM_SRGB
BC4_TYPELESS
BC4_UNORM
BC4_SNORM
BC5_TYPELESS
BC5_UNORM
BC5_SNORM
B5G6R5_UNORM
B5G5R5A1_UNORM
B8G8R8A8_UNORM
B8G8R8X8_UNORM
BUFFER
TEXTURE1D
TEXTURE2D
TEXTURE3D
Pixel Format:
Caps:
Version:
DX10 Header:
DDSCAPS2_CUBEMAP
DDSCAPS2_CUBEMAP_NEGATIVEZ
DDSCAPS2_CUBEMAP_POSITIVEZ
DDSCAPS2_CUBEMAP_NEGATIVEY
DDSCAPS2_CUBEMAP_POSITIVEY
DDSCAPS2_CUBEMAP_NEGATIVEX
DDSCAPS2_CUBEMAP_POSITIVEX
DDSCAPS2_CUBEMAP_ALL_FACES
DDSCAPS2_VOLUME
DDSCAPS_MIPMAP
DDSCAPS_TEXTURE
DDSCAPS_COMPLEX
DDPF_NORMAL
DDPF_ALPHAPREMULT
DDPF_PALETTEINDEXED8
DDPF_PALETTEINDEXED4
DDPF_PALETTEINDEXED2
DDPF_PALETTEINDEXED1
DDPF_ALPHA
DDPF_ALPHAPIXELS
DDPF_FOURCC
DDPF_LUMINANCE
DDPF_RGB
DDSD_MIPMAPCOUNT
DDSD_LINEARSIZE
DDSD_PITCH
DDSD_DEPTH
DDSD_HEIGHT
DDSD_WIDTH
DDSD_PIXELFORMAT
DDSD_CAPS
%d: %f
m_windowSize == 3
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/Filter.cpp
void nv::Kernel2::initEdgeDetection()
m_windowSize == 9
void nv::Kernel2::initBlendedSobel(const Vector4 &)
%d: 
 %6.4f
img != __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/FloatImage.cpp
void nv::FloatImage::initFrom(const Image *)
num <= 4
Image *nv::FloatImage::createImage(uint, uint) const
baseComponent + num <= m_componentCount
m_componentCount == 4
Image *nv::FloatImage::createImageGammaCorrect(float) const
src < m_componentCount
void nv::FloatImage::copyChannel(uint, uint)
dst < m_componentCount
baseComponent + 3 <= m_componentCount
void nv::FloatImage::normalize(uint)
baseComponent + 4 <= m_componentCount
void nv::FloatImage::transform(uint, const Matrix &, Vector4::Arg)
void nv::FloatImage::swizzle(uint, uint, uint, uint, uint)
r < 7 && g < 7 && b < 7 && a < 7
alpha < m_componentCount
FloatImage *nv::FloatImage::resize(const Filter &, uint, uint, WrapMode, uint) const
FloatImage *nv::FloatImage::resize(const Filter &, uint, uint, uint, WrapMode, uint) const
right - left <= windowSize
void nv::FloatImage::applyKernelY(const PolyphaseKernel &, int, int, uint, WrapMode, float *, int) const
void nv::FloatImage::applyKernelZ(const PolyphaseKernel &, int, int, uint, WrapMode, float *) const
void nv::FloatImage::applyKernelY(const PolyphaseKernel &, int, int, uint, uint, WrapMode, float *, int) const
.tga
.ppm
.hdr
.dds
image != __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/ImageIO.cpp
bool nv::ImageIO::saveFloat(const char *, Stream &, const FloatImage *, uint, uint)
unknown image type
bad png sig
bad bits_per_channel
multiple IHDR
bad IHDR len
too large
1/2/4/8/16-bit only
bad ctype
bad comp method
bad filter method
bad interlace method
0-pixel image
first not IHDR
invalid PLTE
tRNS after IDAT
tRNS before PLTE
bad tRNS len
tRNS with alpha
no PLTE
outofmem
outofdata
no IDAT
bad zlib header
no preset dict
bad compression
zlib corrupt
read past buffer
output buffer limit
bad sizes
bad codelengths
bad huffman code
bad dist
not enough pixels
invalid filter
invalid width
unsupported
bad offset
invalid
bad bpp
bad masks
not BMP
bad BMP
unknown BMP
BMP RLE
BMP JPEG/PNG
bad Image Descriptor
missing color table
unknown code
not GIF
no clear code
too many codes
illegal code in raster
not PSD
wrong version
wrong channel count
unsupported bit depth
wrong color format
corrupt
PICT
bad file
bad format
no SOI
no SOF
expected marker
bad DRI len
bad DQT type
bad DQT table
bad DHT header
bad COM len
bad APP len
unknown marker
bad code lengths
bad SOF len
only 8-bit
no header height
0 width
bad component count
bad H
bad V
bad TQ
bad DNL len
bad DNL height
bad SOS component count
bad SOS len
bad DC huff
bad AC huff
bad SOS
can't merge dc and ac
max value > 65535
#?RADIANCE
#?RADIANCE
#?RGBE
not HDR
FORMAT=32-bit_rle_rgbe
unsupported format
unsupported data layout
invalid decoded scanline length
bad palette
!s.isError()
bool saveTGA(Stream &, const Image *)
img->pixels() != __null
mem == __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvimage/TgaFile.h
void nv::TgaFile::allocate()
%d %d
s.isLoading()
FloatImage *loadFloatDDS(Stream &)
s.isSaving()
bool saveFloatDDS(Stream &, const FloatImage *, uint, uint)
p->name == __null
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvthread/Thread.cpp
void nv::Thread::setName(const char *)
thread pool
worker %d
bitCount <= 32
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/CompressionOptions.cpp
void nvtt::CompressionOptions::setPixelFormat(uint, uint, uint, uint, uint)
maxMask > rmask
maxMask > gmask
maxMask > bmask
maxMask > amask
rsize <= 32 && gsize <= 32 && bsize <= 32 && asize <= 32
void nvtt::CompressionOptions::setPixelFormat(uint8, uint8, uint8, uint8)
alphaThreshold >= 0 && alphaThreshold < 256
void nvtt::CompressionOptions::setQuantization(bool, bool, bool, int)
output_channel >= 0 && output_channel < 4
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/CompressorETC.cpp
void nv::decompress_eac(const void *, Vector4 *, int)
input_channel >= 0 && input_channel < 4
float nv::compress_eac(Vector4 *, float *, int, int, bool, void *)
data.mode == ETC_Data::Mode_ETC1
table_idx < 8
void get_diff_subblock_palette(uint16, uint, Color32 *)
bool get_diff_subblock_palette(uint16, uint16, uint, Color32 *)
void get_abs_subblock_palette(uint16, uint, Color32 *)
int get_partition(const ETC_Data &, int, int)
data.mode == ETC_Data::Mode_Planar
void decode_etc2_planar(const ETC_Data &, Vector4 *)
options.onebit_alpha == false
float compress_etc(Vector4 *, float *, const ETC_Options &, void *)
success
Vector3 unpack_color_555(uint32, uint32)
float compress_etc_a1(Vector4 *, float *, const ETC_Options &, void *)
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/CompressorRGB.cpp
virtual void nv::PixelFormatConverter::compress(nvtt::AlphaMode, uint, uint, uint, const float *, nvtt::TaskDispatcher *, const nvtt::CompressionOptions::Private &, const nvtt::OutputOptions::Private &)
arraySize == 1
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/Context.cpp
bool nvtt::Compressor::Private::outputHeader(nvtt::TextureType, int, int, int, int, int, bool, const CompressionOptions::Private &, const OutputOptions::Private &) const
m_count == 0
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvcore/RefCounted.h
virtual nv::RefCounted::~RefCounted()
m_count > 0
uint nv::WeakProxy::release() const
uint nv::RefCounted::release() const
i < deviceCount()
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/cuda/CudaUtils.cpp
bool nv::cuda::setDevice(int)
Unsupported block format, cannot decompress image data!
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/nvidia-texture-tools/src/nvtt/Surface.cpp
bool nvtt::Surface::load(const char *, bool *)
bool nvtt::Surface::save(const char *, bool, bool) const
image resized %dx%d -> %dx%d (error=%f)
image can't be resized further (error=%f)
Unspecified error code
No error detected
Error (generic)
Unknown frame descriptor
Version not supported
Unsupported frame parameter
Frame requires too much memory for decoding
Corrupted block detected
Restored data doesn't match checksum
Unsupported parameter
Parameter is out of bound
Context should be init first
Allocation error : not enough memory
workSpace buffer is not large enough
Operation not authorized at current processing stage
tableLog requires too much memory : unsupported
Unsupported max Symbol Value : too large
Specified maxSymbolValue is too small
Dictionary is corrupted
Dictionary mismatch
Cannot create Dictionary from provided samples
Destination buffer is too small
Src size is incorrect
Operation on NULL destination buffer
Frame index is too large
An I/O error occurred when reading/seeking
Destination buffer is wrong
Source buffer is wrong
1.4.9
WARNING: The maximum dictionary size %u is too large compared to the source size %u! size(source)/size(dictionary) = %f, but it should be >= 10! This may lead to a subpar dictionary! We recommend training on sources at least 10x, and preferably 100x the size of the dictionary! 
Cover parameters incorrect
Cover must have at least one input file
dictBufferCapacity must be at least %u
Failed to allocate dmer map: out of memory
Building dictionary
Constructed dictionary of size %u
Incorrect parameters
Trying %u different sets of parameters
d=%u
Failed to initialize context
k=%u
Failed to allocate parameters
%u%%       
%79s
FASTCOVER parameters incorrect
FASTCOVER must have at least one input file
Incorrect splitPoint
Incorrect accel
Incorrect k
%70s
statistics ... 
Total samples size is too large (%u MB), maximum size is %u MB
Total number of training samples is %u and is invalid.
Total number of testing samples is %u and is invalid.
Training on %u samples of total size %u
Testing on %u samples of total size %u
Failed to allocate scratch buffers
Constructing partial suffix array
Computing frequencies
Breaking content into %u epochs of size %u
Failed to allocate buffers: out of memory
Failed to select dictionary
Total number of training samples is %u and is invalid
Total number of testing samples is %u and is invalid.
Failed to allocate scratch buffers 
Failed to allocate frequency table 
Not enough memory 
 HUF_buildCTable error 
warning : pathological dataset : literals are not compressible : samples are noisy or too regular 
FSE_normalizeCount error with offcodeCount 
FSE_normalizeCount error with matchLengthCount 
FSE_normalizeCount error with litLengthCount 
HUF_writeCTable error 
FSE_writeNCount error with offcodeNCount 
FSE_writeNCount error with matchLengthNCount 
FSE_writeNCount error with litlengthNCount 
not enough space to write RepOffsets 
warning : ZSTD_compressBegin_usingCDict failed 
warning : could not compress sample size %u 
 %u segments found, of total size %u 
list %u best segments 
%3u:%3u bytes at pos %8u, savings %7u bytes |
!  warning : selected content significantly smaller than requested (%u < %u) 
!  consider increasing the number of samples (total size : %u MB)
!  consider increasing selectivity to produce larger dictionary (-s%u) 
!  note : larger dictionaries are not necessarily better, test its efficiency on samples 
!  note : calculated dictionary significantly larger than requested (%u > %u) 
!  consider increasing dictionary size, or produce denser dictionary (-s%u) 
!  always test dictionary efficiency on real samples 
sample set too large : reduced to %u MB ...
sorting %u files of total size %u MB ...
finding patterns ... 
minimum ratio : %u 
%4.2f %% 
found %3u matches of length >= %i at pos %7u  
Selected dict at position %u, of length %u : saves %u (ratio: %.2f)  
KTXorientation
S=%c,T=%c,R=%c
KTXanimData
 / libktx 
Unidentified app
__default__
v4.0.__default__
v4.0
KTXcubemapIncomplete
KTXglFormat
KTXdxgiFormat__
KTXswizzle
KTXwriterScParams
KTXastcDecodeMode
IEXDEBUGTHROW
Attempt to set the number of threads in a thread pool to a negative value.
Not implemented on this platform
Cannot register image file attribute type "
". The type has already been registered.
Cannot create image file attribute of unknown type "
Error decompressing data (input data are shorter than expected).
Error decompressing data (input data are longer than expected).
Integer multiplication overflow.
Integer addition overflow.
Unexpected attribute type.
box2i
box2f
Image channel name cannot be an empty string.
Cannot find image channel "
chlist
channel name
Invalid 
: it is more than 
 characters long.
Bad chromaticities: white.y cannot be zero
Bad chromaticities: RGBtoXYZ matrix is degenerate
chromaticities
ZBack
Deep data provided to CompositeDeepScanLine is missing a Z channel
Deep data provided to CompositeDeepScanLine is missing an alpha channel
Deep data provided to CompositeDeepScanLine has a different displayWindow to previously provided data
X and/or y subsampling factors of "
" channel in framebuffer are not 1
Cannot composite scanline: total sample count on scanline exceeds limit set by CompositeDeepScanLine::setMaximumSampleCount()
compression
Unknown compression type
Frame buffer slice name cannot be an empty string.
Cannot find frame buffer slice "
The type of sample count slice should be UINT.
deepImageState
scanlineimage
tiledimage
deepscanline
Can't build a DeepScanLineInputFile from a type-mismatched part.
Expected a deep scanline file but the file is tiled.
Expected a deep scanline file but the file is not a deep image.
Version 
 not supported for deepscanline images in this version of the library
Deep scanline image size 
 exceeds maximum size
Bad type for channel 
 initializing deepscanline reader
Cannot read image file "
" channel of input file "
" are not compatible with the frame buffer's subsampling factors.
Invalid base pointer, please set a proper sample count slice.
No frame buffer specified as pixel data destination.
Tried to read scan line outside the image file's data window.
Tried to read scan line without knowing the sample counts, pleaseread the sample counts first.
Error reading pixel data from image file "
Scan line 
 is missing.
Unexpected part number 
, should be 
Unexpected data block y coordinate.
readPixelSampleCounts(rawPixelData,frameBuffer,
) called with incorrect start scanline - should be 
) called with incorrect end scanline - should be 
readPixelSampleCounts called with no valid frame buffer
Tried to read scan line sample counts outside the image file's data window.
Error reading sample count data from image file "
Invalid chunk size
unrecognized exception
This version of the library does not support 
the allocation of data with size  > 
 file unpacked size :
 file packed size   :
Incorrect size for decompressed data. Expected 
 got 
 bytes
Incorrect size for uncompressed data. Expected 
Unexpected part number.
Bad sampleCountTableDataSize read from chunk 
: expected 
 or less, got 
This version of the library does not
support the allocation of data with size  > 
 file table size    :
Deep scanline data corrupt at chunk 
 (sampleCountTableDataSize error)
Deep scanline sampleCount data corrupt at chunk 
 (negative sample count detected)
: pixel data only contains 
 bytes of data but table references at least 
 bytes of sample data
Cannot open image file "
Can't build a DeepTiledInputFile from a part of type 
Expected a deep tiled file but the file is not deep tiled.
Expected a deep tiled file but the file is not a deep image.
 not supported for deeptiled images in this version of the library
Deep tile size exceeds maximum permitted area
Level coordinate (
) is invalid.
Tile (
) is not a valid tile.
Tried to read a tile outside the image file's data window.
) is missing.
Unexpected tile x coordinate.
Unexpected tile y coordinate.
Unexpected tile x level number coordinate.
Unexpected tile y level number coordinate.
Error calling numLevels() on image file "
" (numLevels() is not defined for files with RIPMAP level mode).
Error calling levelWidth() on image file "
Error calling levelHeight() on image file "
Error calling numXTiles() on image file "
" (Argument is not in valid range).
Error calling numYTiles() on image file "
Error calling dataWindowForLevel() on image file "
Arguments not in valid range.
Error calling dataWindowForTile() on image file "
Bad sampleCountTableDataSize read from tile 
Deep scanline data corrupt at tile 
Deep tile sampleCount data corrupt at tile 
Deep scanline sampleCount data corrupt at tile 
Unknown LevelMode format.
size mismatch when reading deep tile: expected 
bytes of uncompressed data but got 
double
Row pointers and types mismatch in count
Only 1 and 3 channel encoding is supported
Error uncompressing DWA data (packed AC buffer too small).
Data compression (zlib) failed.
Error compressing RLE'd data.
Error uncompressing DWA data(truncated header).
Error uncompressing DWA data(truncated file).
Error uncompressing DWA data (corrupt header).
Error uncompressing DWA data (corrupt header file).
Error uncompressing DWA data (truncated file).
Invalid version of compressed data block
Error uncompressing DWA data(corrupt header).
Error uncompressing UNKNOWN data.
Data decompression (zlib) failed.
AC data corrupt.
Unknown AC Compression
DC data corrupt.
Error uncompressing RLE data.
RLE data corrupted
Bad DWA compression type detected
DWA data corrupt
Unhandled compression scheme case
Error uncompressing DWA data (truncated rule).
Error uncompressing DWA data (corrupt cscIdx rule).
Error uncompressing DWA data (corrupt scheme rule).
Error uncompressing DWA data (corrupt rule).
envmap
Error decoding Huffman table (Truncated table data).
Error decoding Huffman table (Run beyond end of table).
Huffman decode error (Invalid symbol in header).
Huffman decode error (Overrun).
Error choosing Huffman decoder implementation (insufficient number of bits).
Huffman decode error (Decoded an invalid symbol).
Huffman decode error (RLE code with no previous symbol).
Huffman decode error (Symbol run beyond expected output buffer length).
Huffman decode error (Invalid RLE length)
Huffman decode error (Compressed data remains after filling expected output buffer).
float
floatvector
Invalid pixel type.
File is not an image file.
Cannot read version 
 image files.  Current file format version is 
The file format version number's flag field contains unrecognized flags.
Image attribute name cannot be an empty string.
dwaCompressionLevel
Cannot assign a value of type "
" to image attribute "
" of type "
Cannot find image attribute "
displayWindow
dataWindow
pixelAspectRatio
screenWindowCenter
screenWindowWidth
channels
lineOrder
is not a supported image type.
The following are supported: 
 or 
view
We can only process version 1
chunkCount
tiles
preview
Invalid display window in image header.
Invalid data window in image header.
The width of the data window exceeds the maximum width of 
pixels.
The height of the data window exceeds the maximum height of 
chunkCount exceeds maximum area of 
 pixels.
Invalid pixel aspect ratio in image header.
Invalid screen window width in image header.
Headers in a multipart file should have name attribute.
Headers in a multipart file should have type attribute.
Tiled image has no tile description attribute.
Invalid tile size in image header.
The width of the tiles exceeds the maximum width of 
Invalid level mode in image header.
Invalid level rounding mode in image header.
Invalid line order in image header.
Unknown compression type in image header.
Compression type in header not valid for deep data
Missing or empty channel list in header
Pixel type of "
" image channel is invalid.
The x subsampling factor for the "
" channel is not 1.
The y subsampling factor for the "
" channel is invalid.
The minimum x coordinate of the image's data window is not a multiple of the x subsampling factor of the "
" channel.
The minimum y coordinate of the image's data window is not a multiple of the y subsampling factor of the "
Number of pixels per row in the image's data window is not a multiple of the x subsampling factor of the "
Number of pixels per column in the image's data window is not a multiple of the y subsampling factor of the "
attribute name
attribute type name
Invalid size field in header attribute
Unexpected type for image attribute "
Invalid pixel aspect ratio
Error in Huffman-encoded data (decoded data are shorter than expected).
Error in Huffman-encoded data (invalid code table size).
Error in Huffman-encoded data (unexpected end of code table data).
Error in Huffman-encoded data (code table is longer than expected).
Error in header for Huffman-encoded data (invalid number of bits).
Error in Huffman-encoded data (invalid code table entry).
Error in Huffman-encoded data (invalid code).
Error in Huffman-encoded data (decoded data are longer than expected).
custom
MurmurHash3_32
MurmurHash3_64
Unrecognized IDmanifest version
Bad common string length in IDmanifest string table
IDManifest too small
Bad mapping table entry in IDManifest
ID manifest contains multiple entries for the same ID
Bad string index in IDManifest
IDManifest decompression (zlib) failed.
IDManifest decompression (zlib) failed: mismatch in decompressed data size
Error - IDManifest size error
ID manifest compression failed
attempt to change number of components in manifest once entries have been added
Cannot insert single component attribute into manifest with multiple components
mismatch between number of components in manifest and number of components in inserted entry
Cannot compute hash: unknown hashing scheme
not enough components inserted into previous entry in ID table before inserting new entry
attempt to insert too many strings into entry, or attempt to insert text before ID integer
Internal error: too many strings in component
IDManifest too small for string size
IDManifest too small for string
IDManifest too small for variable length integer
IDManifest too small for string list size
idmanifest
Invalid size field reading idmanifest attribute
Invalid pixel type
Non-image files must have a 'type' attribute
InputFile cannot handle parts of type 
Unknown pixel data type.
Tried to read a raw scanline from a deep image.
Tried to read a raw scanline from a tiled image.
Tried to read a raw tile from a scanline-based image.
Error reading tile data from image file "
Cannot get a TiledInputFile pointer from an InputFile that is not tiled.
Attempt to perform a memory-mapped read on a file that is not memory mapped.
Invalid key code film manufacturer code (must be between 0 and 99).
Invalid key code film type (must be between 0 and 99).
Invalid key code prefix (must be between 0 and 999999).
Invalid key code count (must be between 0 and 9999).
Invalid key code perforation offset (must be between 0 and 119).
Invalid key code number of perforations per frame (must be between 1 and 15).
Invalid key code number of perforations per count (must be between 20 and 120).
keycode
m33f
m33d
m44f
m44d
Unknown pixel type.
unsupported header type to get chunk offset table size
3.2.1
wstring_convert: from_bytes error
 MultiPartInputFile::header called with invalid part 
 on file with 
 parts
Multipart files cannot have the tiled bit set
Files must contain at least one header
Every header in a multipart file should have a type
Every header in a multipart file should have a name
Header name 
 is not a unique name.
 has non-conforming shared attributes: 
cannot reconstruct incomplete file: part with missing type
cannot reconstruct incomplete file: part with unknown type 
Unknown compression method in chunk offset reconstruction
part number out of range
part not tiled
invalid tile coordinates
y out of range
chunk index out of range
File pointer overflow during reconstruction
MultiPartInputFile::getPart called with invalid part 
MultiPartInputFile::partComplete called with invalid part 
Cannot copy the value of an image file attribute of type "
" to an attribute of type "
Can't build a OutputFile from a type-mismatched part.
Cannot initialize output part "
" channel of output file "
" is not compatible with the frame buffer's pixel type.
No frame buffer specified as pixel data source.
Tried to write more scan lines than specified by the data window.
Failed to write pixel data to image file "
Cannot copy pixels from image file "
" to image file "
". The input file is tiled, but the output file is not. Try using TiledOutputFile::copyPixels instead.
". The files have different data windows.
Quick pixel copy from image file "
" failed. The files have different line orders.
" failed. The files use different compression methods.
" failed.  The files have different channel lists.
" failed. "
" already contains pixel data.
Cannot update preview image pixels. File "
" does not contain a preview image.
Cannot update preview image pixels for file "
Cannot overwrite scan line 
. The scan line has not yet been stored in file "
Cannot determine current file position (%T).
PIZ compressed data too short
Error in header for PIZ-compressed data (invalid bitmap size).
Error in header for PIZ-compressed data (invalid array length).
Invalid dimensions in Preview Image Attribute
Mismatch between Preview Image Attribute size and dimensions
rational
No frame buffer was specified as the pixel data source for image file "
No frame buffer was specified as the pixel data destination for image file "
ScanLine size too large for RleCompressor
Data decoding (rle) failed.
maximum bytes per scanline exceeds maximum permissible size
Failed to allocate memory for scanline buffers
Can't build a ScanLineInputFile from a type-mismatched part.
Reading raw pixel data to a buffer is not supported for memory mapped streams.
Invalid scan line 
 requested or missing.
Unexpected data block length.
originalDataWindow
worldToCamera
worldToNDC
sensorCenterOffset
sensorOverallDimensions
sensorPhotositePitch
sensorAcquisitionRectangle
ascFramingDecisionList
xDensity
longitude
latitude
altitude
cameraMake
cameraModel
cameraSerialNumber
cameraFirmwareVersion
cameraUuid
cameraLabel
cameraCCTSetting
cameraTintSetting
cameraColorBalance
isoSpeed
expTime
shutterAngle
captureRate
lensMake
lensModel
lensSerialNumber
lensFirmwareVersion
nominalFocalLength
pinholeFocalLength
effectiveFocalLength
entrancePupilOffset
aperture
tStop
focus
owner
comments
capDate
utcOffset
keyCode
timeCode
framesPerSecond
imageCounter
reelName
whiteLuminance
adoptedNeutral
renderingTransform
lookModTransform
wrapmodes
multiView
idManifest
Unexpected end of file.
(string)
Early end of file: read 
 out of 
 requested bytes.
File output failed.
stringvector
Invalid size field reading stringvector attribute
tiledesc
Can't build a TiledInputFile from a type-mismatched part.
Expected a tiled file but the file is not tiled.
File is not a regular tiled image.
TiledInputFile used for non-tiledimage part.
Tile size too large for OpenEXR format
File contains an invalid tile
rawTileData read the wrong tile
Unexpected tile block length.
Unexpected part number in readNextTileData
Argument not in valid range.
Maximum number of tiles exceeded
Bad level mode getting chunk offset table size
Can't build a TiledOutputFile from a type-mismatched part.
All channels in a tiled file must havesampling (1,1).
Tile coordinates are invalid.
Cannot perform a quick pixel copy from image file "
".  The output file is tiled, but the input file is not.  Try using OutputFile::copyPixels() instead.
" failed. The files have different tile descriptions.
" (numLevels() is not defined for RIPMAPs).
Cannot overwrite tile (
). The tile has not yet been stored in file "
Attempt to write tile (
) more than once.
Invalid tile description
Cannot open file "
" for writing.  Tiled image files do not support subsampled chroma channels.
Bad initialisation of TileOffsets object
Invalid deep tile size
Invalid tile size
Wrong offset count, not able to read from this array
Bad level mode getting tile order
Cannot set hours field in time code. New value is out of range.
Cannot set minutes field in time code. New value is out of range.
Cannot set seconds field in time code. New value is out of range.
Cannot set frame field in time code. New value is out of range.
Cannot extract binary group from time code user data.  Group number is out of range.
timecode
Data compression failed.
Data decompression failed.
Missing list to compute size
Expected output pointer
Invalid / unhandled type '%s' for attribute '%s', unable to compute size
Invalid output pointer passed to find_by_name
Invalid name passed to find_by_name
Invalid list pointer passed to find_by_name
Invalid type to add_by_type
Entry '%s' already in list but with different type ('%s' vs requested '%s')
Provided name '%s' too long for file (len %d, max %d)
Provided type name '%s' too long for file (len %d, max %d)
Entry '%s' already in list but with different type ('%s')
Invalid type enum for '%s': the opaque type is not actually a built-in type
Invalid type enum for '%s' in create by builtin type (type %d)
NULL attribute passed to remove
Invalid list pointer to remove attribute
Attribute not in list
Invalid list pointer to attr_list_add
Invalid output attribute pointer location to attr_list_add
Extra data storage requested negative length (%d)
Extra data storage output pointer must be provided when requesting extra data (%d)
Invalid name to add_by_type
Attribute '%s' (type %s) already in list but requesting additional data
Invalid / unimplemented type (%s) in attr_init
Received request to allocate negative sized string (%d)
Invalid reference to string object to initialize
Invalid static string argument to initialize
Invalid string too long for attribute
Invalid (NULL) arguments to string create with length
Invalid string argument to string set
Received request to assign a negative sized string (%d)
Invalid reference to string vector object to assign to
Received request to allocate negative sized string vector (%d entries)
Invalid too large size for string vector (%d entries)
Invalid index (%d of %d) initializing string vector
Invalid reference to string vector object to initialize index %d
Invalid index (%d of %d) assigning string vector ('%s', len %d)
<nil>
Received request to allocate negative sized float vector (%d entries)
Invalid too large size for float vector (%d entries)
Invalid reference to float vector object to initialize
Invalid reference to float array object to initialize
Invalid (NULL) arguments to float vector create
Invalid channel list pointer to chlist_add_with_length
Negative number of channels requested (%d)
Channel name must not be empty, received '%s'
<NULL>
Channel name must shorter than length allowed by file (%d), received '%s' (%d)
Invalid pixel type specified (%d) adding channel '%s' to list
Invalid perceptual linear flag value (%d) adding channel '%s' to list
Invalid pixel sampling (x %d y %d) adding channel '%s' to list
Attempt to add duplicate channel '%s' to channel list
Invalid reference to opaque data object to initialize
Invalid size for opaque data (%llu bytes, must be <= INT32_MAX)
No unpack provider specified for opaque data
No pack provider specified for opaque data
Pack function failed finding pack buffer size, unpacked size %d
Pack function failed to pack data, unpacked size %d, packed buffer size %d
Opaque data given invalid negative size (%d)
Invalid very large size for preview image (%u x %u - %llu bytes)
Invalid reference to preview object to initialize
Success
Unable to allocate memory
Context argument to function is not valid
Invalid argument to function
Argument to function out of valid range
Unable to open file (path does not exist or permission denied)
File is not an OpenEXR file or has a bad header value
File not opened for read
File not opened for write
File opened for write, but header not yet written
Error reading from stream
Error writing to stream
Text too long for file flags
Missing required attribute in part header
Invalid attribute in part header
No attribute by that name in part header
Attribute type mismatch
Attribute type vs. size mismatch
Attempt to use a scanline accessor function for a tiled image
Attempt to use a tiled accessor function for a scanline image
Attempt to modify a value when in update mode with different size
File in write mode, but header already written, can no longer edit attributes
Unexpected or corrupt values in data block leader vs computed value
Corrupt data block data, unable to decode
Previous part not yet finished writing
Invalid data block to write at this point
Use deep scanline write with the sample count table arguments
Use deep tile write with the sample count table arguments
Use non-deep scanline write (sample count table invalid for this part type)
Use non-deep tile write (sample count table invalid for this part type)
Invalid sample data table value
Feature not yet implemented, please use C++ library
Unknown error code
EXR_ERR_SUCCESS
EXR_ERR_OUT_OF_MEMORY
EXR_ERR_MISSING_CONTEXT_ARG
EXR_ERR_INVALID_ARGUMENT
EXR_ERR_ARGUMENT_OUT_OF_RANGE
EXR_ERR_FILE_ACCESS
EXR_ERR_FILE_BAD_HEADER
EXR_ERR_NOT_OPEN_READ
EXR_ERR_NOT_OPEN_WRITE
EXR_ERR_HEADER_NOT_WRITTEN
EXR_ERR_READ_IO
EXR_ERR_WRITE_IO
EXR_ERR_NAME_TOO_LONG
EXR_ERR_MISSING_REQ_ATTR
EXR_ERR_INVALID_ATTR
EXR_ERR_NO_ATTR_BY_NAME
EXR_ERR_ATTR_TYPE_MISMATCH
EXR_ERR_ATTR_SIZE_MISMATCH
EXR_ERR_SCAN_TILE_MIXEDAPI
EXR_ERR_TILE_SCAN_MIXEDAPI
EXR_ERR_MODIFY_SIZE_CHANGE
EXR_ERR_ALREADY_WROTE_ATTRS
EXR_ERR_BAD_CHUNK_LEADER
EXR_ERR_CORRUPT_CHUNK
EXR_ERR_INCORRECT_PART
EXR_ERR_INCORRECT_CHUNK
EXR_ERR_USE_SCAN_DEEP_WRITE
EXR_ERR_USE_TILE_DEEP_WRITE
EXR_ERR_USE_SCAN_NONDEEP_WRITE
EXR_ERR_USE_TILE_NONDEEP_WRITE
EXR_ERR_INVALID_SAMPLE_DATA
EXR_ERR_FEATURE_NOT_IMPLEMENTED
EXR_ERR_UNKNOWN
Invalid filename passed to test file header function
Invalid context handle passed to start_read function
Invalid filename passed to start_read function
Invalid filename passed to start_write function
Invalid type to register_attr_handler
Provided type name '%s' is a reserved / internal type name
Attribute handler for '%s' previously registered
Unable to register custom handler for type '%s'
Part %d, attribute '%s' (type '%s') has a name too long for new longname setting (%d)
Part %d, channel '%s' has a name too long for new longname setting (%d)
No parts defined in file prior to writing data
Part %d is missing channel list
read requested with no output offset pointer
Unable to open file for read: %s
Invalid file handle pointer
Invalid file descriptor
Unable to read %llu bytes: %s
Unable to rename temporary file: %s
write requested with no output offset pointer
tmp.%d
Invalid assumption in temporary filename
Unable to create %llu bytes for temporary filename
Unable to open file for write: %s
Unable to write %llu bytes to stream, wrote %lld: %s
Unable to allocate temporary memory
%s: (%s) %s
Context 0x%p: (%s) %s
<ERROR>: %s
Part index (%d) out of range
Source part index (%d) out of range
NULL output for '%s'
Invalid required attribute type '%s' for '%s'
No channels provided for channel list
Missing value for data window assignment
'lineOrder' value for line order (%d) out of range (%d - %d)
Invalid required attribute type '%s' for 'tiles'
Attempt to set tile descriptor on scanline part
NULL output for 'name'
Invalid required attribute type '%s' for 'name'
Invalid string passed trying to set 'name'
String too large to store (%llu bytes) into 'name'
Existing string 'name' has length %d, requested %d, unable to change
Invalid name for box2i attribute query
'%s' requested type 'box2i', but stored attributes is type '%s'
No input value for setting '%s', type '%s'
Invalid name for box2f attribute query
'%s' requested type 'box2f', but stored attributes is type '%s'
Invalid name for chlist attribute query
'%s' requested type 'chlist', but stored attributes is type '%s'
No input values for setting '%s', type 'chlist'
Invalid name for chromaticities attribute query
'%s' requested type 'chromaticities', but stored attributes is type '%s'
Invalid name for uc attribute query
'%s' requested type 'uc', but stored attributes is type '%s'
'%s' value for compression type (%d) out of range (%d - %d)
Invalid name for d attribute query
'%s' requested type 'd', but stored attributes is type '%s'
'%s' value for envmap (%d) out of range (%d - %d)
Invalid name for f attribute query
'%s' requested type 'f', but stored attributes is type '%s'
Invalid name for floatvector attribute query
'%s' requested type 'floatvector', but stored attributes is type '%s'
Invalid size (%d) for float vector '%s'
No input values for setting '%s', type 'floatvector'
'%s' requested type 'floatvector', but attribute is type '%s'
Existing float vector '%s' has %d, requested %d, unable to change
Invalid name for i attribute query
'%s' requested type 'i', but stored attributes is type '%s'
Invalid name for keycode attribute query
'%s' requested type 'keycode', but stored attributes is type '%s'
'%s' value for line order enum (%d) out of range (%d - %d)
Invalid name for m33f attribute query
'%s' requested type 'm33f', but stored attributes is type '%s'
Invalid name for m33d attribute query
'%s' requested type 'm33d', but stored attributes is type '%s'
Invalid name for m44f attribute query
'%s' requested type 'm44f', but stored attributes is type '%s'
Invalid name for m44d attribute query
'%s' requested type 'm44d', but stored attributes is type '%s'
Invalid name for preview attribute query
'%s' requested type 'preview', but stored attributes is type '%s'
No input value for setting '%s', type 'preview'
'%s' requested type 'preview', but attribute is type '%s'
Existing preview '%s' is %u x %u, requested is %u x %u, unable to change
Invalid name for rational attribute query
'%s' requested type 'rational', but stored attributes is type '%s'
Invalid name for string attribute query
'%s' requested type 'string', but stored attributes is type '%s'
Part type attribute must be implicitly only when adding a part
String too large to store (%llu bytes) into '%s'
'%s' requested type 'string', but attribute is type '%s'
Existing string '%s' has length %d, requested %d, unable to change
Invalid name for stringvector attribute query
'%s' requested type 'stringvector', but stored attributes is type '%s'
size parameter required to query stringvector
'%s' array buffer too small (%d) to hold string values (%d)
Invalid size (%d) for string vector '%s'
No input string values for setting '%s', type 'stringvector'
'%s' requested type 'stringvector', but attribute is type '%s'
'%s' received NULL string in string vector
'%s' string %d in string vector is different size (old %d new %d), unable to update
Existing string vector '%s' has %d strings, but given %d, unable to change
Invalid name for tiledesc attribute query
'%s' requested type 'tiledesc', but stored attributes is type '%s'
Invalid name for timecode attribute query
'%s' requested type 'timecode', but stored attributes is type '%s'
Invalid name for v2i attribute query
'%s' requested type 'v2i', but stored attributes is type '%s'
Invalid name for v2f attribute query
'%s' requested type 'v2f', but stored attributes is type '%s'
Invalid name for v2d attribute query
'%s' requested type 'v2d', but stored attributes is type '%s'
Invalid name for v3i attribute query
'%s' requested type 'v3i', but stored attributes is type '%s'
Invalid name for v3f attribute query
'%s' requested type 'v3f', but stored attributes is type '%s'
Invalid name for v3d attribute query
'%s' requested type 'v3d', but stored attributes is type '%s'
Invalid name for opaque attribute query
'%s' requested type 'opaque', but stored attributes is type '%s'
'%s' requested type '%s', but stored attributes is type '%s'
Invalid data window x dims (%d, %d) resulting in invalid tile level size (%lld) for level %d
Invalid data window y dims (%d, %d) resulting in invalid tile level size (%lld) for level %d
Error during file initialization
Invalid combination of version flags: single part found, but also marked as deep (%d) or multipart (%d)
Unable to extract header byte
Unable to go to next part definition
Unable to read magic and version flags
File is not an OpenEXR file: magic 0x%08X (%d) flags 0x%08X
File is of an unsupported version: %d, magic 0x%08X flags 0x%08X
File has an unsupported flags: magic 0x%08X flags 0x%08X
End of file attempting to read header
attribute type
Invalid empty string encountered parsing attribute name
Invalid empty string encountered parsing attribute type for attribute '%s'
Unable to read attribute size for attribute '%s', type '%s'
Unable to initialize attribute '%s', type '%s'
Invalid type '%s' for attribute '%s'
Invalid %s encountered: start '%s' (max %d)
Duplicate copy of required attribute 'channels' encountered
Required attribute 'channels': Invalid type '%s'
Unable to initialize attribute '%s', type 'chlist'
Duplicate copy of required attribute '%s' encountered
Required attribute '%s': Invalid type '%s'
Unable to initialize attribute '%s', type 'compression'
Duplicate copy of required attribute 'chunkCount' encountered
attribute 'chunkCount': Invalid type '%s'
Required attribute 'chunkCount': Invalid size %d (exp 4)
Unable to read chunkCount data
Unable to initialize attribute '%s', type 'int'
Unable to initialize attribute '%s', type 'box2i'
Unable to initialize attribute '%s', type 'lineOrder'
Duplicate copy of required attribute 'name' encountered
attribute 'name': Invalid type '%s'
Unable to initialize attribute '%s', type 'string'
Unable to read 'name' data
Required attribute '%s': Invalid size %d (exp 4)
Attribute '%s': Unable to read data (%d bytes)
Unable to initialize attribute '%s', type 'float'
Required attribute '%s': Invalid size %d (exp %llu)
Unable to initialize attribute '%s', type 'v2f'
Duplicate copy of required attribute 'tiles' encountered
Required attribute 'tiles': Invalid type '%s'
Required attribute 'tiles': Invalid size %d (exp %llu)
Unable to read 'tiles' data
Unable to initialize attribute '%s', type 'tiledesc'
Duplicate copy of required attribute 'type' encountered
Required attribute 'type': Invalid type '%s'
deeptile
attribute 'type': Invalid type string '%s'
Duplicate copy of required attribute 'version' encountered
attribute 'version': Invalid type '%s'
attribute 'version': Invalid size %d (exp 4)
Unable to read version data
Invalid version %d: expect 1
Attribute '%s', type '%s': Invalid negative size %d
Attribute '%s', type '%s': Invalid size %d
Attribute '%s': Invalid size %d (exp '%s' size 4 * n, found odd bytes %d)
Attribute '%s': Invalid size %d (exp '%s' size 4 * %d (%d))
Unable to read '%s' %s data
Out of data parsing '%s', last channel '%s'
Attribute '%s': Invalid size %d (exp '%s' size 1)
Attribute '%s' (type '%s'): Invalid value %d (max allowed %d)
Attribute '%s': Invalid size %d (exp '%s' size 8 * %d (%d))
Attribute '%s': Invalid size %d (exp '%s' size >= 8)
Attribute '%s': Unable to read preview sizes
Attribute '%s': Invalid size %d (exp '%s' %u x %u * 4 + sizevals)
Attribute '%s', type '%s': Invalid size for preview %u x %u
Attribute '%s': Unable to read preview data (%d bytes)
Attribute '%s': Unable to read string length
Attribute '%s': Invalid size (%d) encountered parsing string vector
Attribute '%s': Unable to read string of length (%d)
Attribute '%s': Invalid size %d (exp '%s' size %d)
Attribute '%s': Invalid tile level specification encountered: found enum %d
Attribute '%s': Invalid tile rounding specification encountered: found enum %d
Attribute '%s': Unable to read opaque %s data (%d bytes)
Invalid chunk count (%d) for part '%s'
<first>
Invalid chunk count (%d) for part '%s', expect (%d)
'channels' attribute not found
'compression' attribute not found
'dataWindow' attribute not found
'displayWindow' attribute not found
'lineOrder' attribute not found
'pixelAspectRatio' attribute not found
'screenWindowCenter' attribute not found
'screenWindowWidth' attribute not found
'name' attribute for multipart file not found
'type' attribute for v2+ file not found
'version' attribute for deep file not found
'chunkCount' attribute for multipart / deep file not found
Invalid display window (%d, %d - %d, %d)
Invalid data window (%d, %d - %d, %d)
Invalid width (%lld) too large (max %d)
Invalid height (%lld) too large (max %d)
Invalid chunkCount (%lld) exceeds maximum area of %lld
Invalid pixel aspect ratio %g
Invalid screen window width %g
Missing required channels attribute to validate against
request to validate channel list, but data window not set to validate against
At least one channel required
channel '%s': x subsampling factor is invalid (%d)
channel '%s': y subsampling factor is invalid (%d)
channel '%s': minimum x coordinate (%d) of the data window is not a multiple of the x subsampling factor (%d)
channel '%s': minimum y coordinate (%d) of the data window is not a multiple of the y subsampling factor (%d)
channel '%s': row width (%lld) of the data window is not a multiple of the x subsampling factor (%d)
channel '%s': column height (%lld) of the data window is not a multiple of the y subsampling factor (%d)
attribute 'type': Mismatch between file flags and type string '%s', believing file flags
attribute 'type': Mismatch between file flags and type attribute, unable to fix
'tiles' attribute for tiled file not found
Invalid tile description size (%u x %u)
Width of tile exceeds max size (%d vs max %d)
Invalid level mode (%d) in tile description header
Invalid rounding mode (%d) in tile description header
channel '%s': x subsampling factor is not 1 (%d) for a tiled image
channel '%s': y subsampling factor is not 1 (%d) for a tiled image
Invalid compression for deep data
channel '%s': x subsampling factor is not 1 (%d) for a deep image
channel '%s': y subsampling factor is not 1 (%d) for a deep image
File '%s': ver %d flags%s%s%s%s
 singletile
 longnames
 shortnames
 deep
 multipart
 parts: %d
File '%s':
 part %d: %s
<single>
  tiled image has levels: x %d y %d
    x tile count:
 %d (sz %d)
    y tile count:
%s: 
[ %d, %d - %d %d ] %d x %d
[ %g, %g - %g %g ]
%d channels
   '%s': %s samp %d %d
uint
half
<UNKNOWN>
r[%g, %g] g[%g, %g] b[%g, %g] w[%g, %g]
none
zips
pxr24
b44a
dwaa
dwab
'%s'
 (0x%02X)
latlong
cube
[%d entries]:
mfgc %d film %d prefix %d count %d perf_off %d ppf %d ppc %d
%d (%s)
increasing
decreasing
random
[ [%g %g %g] [%g %g %g] [%g %g %g] ]
[ [%g %g %g %g] [%g %g %g %g] [%g %g %g %g] [%g %g %g %g] ]
%u x %u
%d / %u
 (%g)
[%d entries]:
    '%s'
single image
mipmap
ripmap
size %u x %u level %u (%s) round %u (%s)
down
time %u user %u
[ %d, %d ]
[ %g, %g ]
[ %d, %d, %d ]
[ %g, %g, %g ]
(size %d unp size %d hdlrs %p %p %p)
<ERROR Unknown type '%s'>
))))))))))))))))))))))))))))))))))))))))))))))
KKKKKKKKKKKKKKKKKKKKKKKKKKKKKK
KKKKKKK
KKKKK
**********************************************
..............................
.......
.....
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
]xEc
vH7B
W4vC
MbP?-C
]r2<
 9^;
cZK;#
%9)0
GTg8^
v?8i
-(;aU,$
G#]X
Q)b9
z@c"J
BN$N(
s\a=
$qE}
#a%
10WriterNull
 #&),/258;>ADGJMR
HKNQTWZ]`cfilorux}
10Compressor
11NonCopyable
N12_GLOBAL__N_113AssertHandlerE
N2nv13AssertHandlerE
12Decompressor
N12_GLOBAL__N_113AssertHandlerE
6Writer
9BaseImage
N4nvtt13OutputHandlerE
11BaseSurface
2468:<>17UncompressedImage
19UncompressedSurface
;compression_quality=
9WriterDds
17CompressedSurface
15CompressedImage
(5<?B
2BsRGB
DisplayP3
DCIP3
BT709
BT2020
BT2100
Adobe-RGB-1998
CIE-1931-XYZ
ACEScg
linear
sRGB
KTX 11
%<9WriterKtx
6R12WriterHeader
3.0.171300
17DecompressorMetal
NSt3__117bad_function_callE
13CompressorArm
15DecompressorArm
18CompressorEtc2Comp
9WriterExr
14CompressorIspc
14CompressorNull
16DecompressorNull
14CompressorNvtt
N4nvtt24SequentialTaskDispatcherE
N4nvtt14TaskDispatcherE
16DecompressorNvtt
 $(,048<
15CompressorPvrtc
17DecompressorPvrtc
13CompressorStb

   !! "
!!!""!$
"""##"%
###$$#$$$$$%%$%%%%%&&%&&&&&''&'''''(('((((())()))))**)*****++*(0+++,,+)1,,,--,+0---..-,1...//..0///00.0/1.0001102/1112214.2223325/333443444445545555566566666776777778878888899899999::9:::::;;:;;;;;<<;<<<<<==<=====>>=>>>>>??>????
?%!!?
9?JBB?
Z?^cc?
<?BAA?
?k
"%(+.1479
?/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:771:5: Assertion failed: bits>=2 && bits<=4 
PPPP@@@@TTTT@PPT
@@PPTTU@PTU
@PPTUU
@T@TUU
TPP@P@@
DDDD
PPAT
UPPPPU
TTPPh
@PZj
UUPPZZ
@@jj
$$$$
P(i(iD
fffDDD
TRJ*33
33DD
0033
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1072:2: Assertion failed: bits >= 4 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1163:2: Assertion failed: mode <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1183:3: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1163:2: Assertion failed: mode <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1183:3: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1189:5: Assertion failed: mode <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1215:3: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1189:5: Assertion failed: mode <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1215:3: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1280:3: Assertion failed: best_q>=0 && best_q<=levels-1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1280:3: Assertion failed: best_q>=0 && best_q<=levels-1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1799:2: Assertion failed: (qblock[0]&15) < levels/2 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1799:2: Assertion failed: (qblock[0]&15) < levels/2 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1831:2: Assertion failed: v<pow2(bits) 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1831:2: Assertion failed: v<pow2(bits) 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1844:3: Assertion failed: from > 64+10 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1951:13: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:1951:13: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2203:5: Assertion failed: span > 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2217:5: Assertion failed: mode_bits > 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2482:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2482:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2502:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 15 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2503:13: Assertion failed: -16 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2554:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 31 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2555:13: Assertion failed: -32 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2627:13: Assertion failed: qep[i * 4 + p] - qep[p] <= (1<<bits)/2 - 1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2628:13: Assertion failed: -(1<<bits)/2 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2738:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 15 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2739:13: Assertion failed: -16 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2810:13: Assertion failed: qep[i * 4 + p] - qep[p] <= (1<<bits)/2 - 1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2811:13: Assertion failed: -(1<<bits)/2 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2971:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 255 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2972:13: Assertion failed: -256 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3008:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 127 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3009:13: Assertion failed: -128 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3045:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3046:13: Assertion failed: -8 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3072:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2502:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 15 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2503:13: Assertion failed: -16 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2554:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 31 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2555:13: Assertion failed: -32 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2627:13: Assertion failed: qep[i * 4 + p] - qep[p] <= (1<<bits)/2 - 1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2628:13: Assertion failed: -(1<<bits)/2 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2738:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 15 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2739:13: Assertion failed: -16 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2810:13: Assertion failed: qep[i * 4 + p] - qep[p] <= (1<<bits)/2 - 1 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2811:13: Assertion failed: -(1<<bits)/2 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2971:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 255 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:2972:13: Assertion failed: -256 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3008:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 127 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3009:13: Assertion failed: -128 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3045:13: Assertion failed: qep[i * 4 + p] - qep[p] <= 7 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3046:13: Assertion failed: -8 <= qep[i * 4 + p] - qep[p] 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3072:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3356:9: Assertion failed: best_q >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3356:9: Assertion failed: best_q >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3493:9: Assertion failed: idx < 165 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel.ispc:3493:9: Assertion failed: idx < 165 
 Ef$ 
e!@t
e\!Ptl!
%At#%Bt3%CtC%DsS%Enc%Fis%Gf
q+'Pt;'QjK'
)DT$)EO4)FKD)GHT)
+PT,+QL<+
H|+ T
1DT#1ET31FRC1GOS1HKc1IHs1JE
3BJ+3
G[4 Tk4!T{4"Q
j"6At26BtB6CtR6Dtb6Etr6Fr
g:8@tJ8ArZ8Bjj8
9Qr*9Rj:9
Sr;AT
<KK"<
>CM*>DH:>
E:?PTJ?QTZ?RRj?SMz?TH
E*@ T:@!TJ@"TZ@#Tj@$Nz@%E
CF4$CG34CH/DCI,TCJ*dCK&tC
',E@4<EA4LEB.\EC(lE
'<FP4LFQ4\FR.lFS(|F
F 4G!4
G"4,G#.<G$'LG`4\Ga4lGb.|Gc(
PH4#PI33PJ1CPK.SP
R@4+RA4;RB4KRC/[RD+kRE%{R
Ub4+Uc/;Ud+KUe%[U
taWAtqWBt
ZDk)ZEe9Z
jI[PtY[Qti[Rty[So
gY\ ti\!ty\"t
_B4"_C42_D4B_E4R_F4b_G4r_H4
e 4*e!4:e"4Je#4Ze$4je%4ze&1
fg'*f
iGT!iHT1iITAiJTQiKTai
E9k@TIkATYkBTikCTykDS
EImPTYmQTimRTymST
o%T)o&Q9o'LIo(EYo`TioaTyobT
4QrD4arE4qrF4
uJ))uK%9u
*9wQ4IwR4YwS4iwT4ywU4
%9y!4Iy"4Yy#4iy$4yy%4
zd4)ze49zf4Izg2Yzh.izi+yzj)
80?e
46=A
>r1F
>r1F
OyL?
295<295<
OyL?
_'?UM0
qo=UM0
_'?E,N?I
$H%?
$H%?
E,N?
<=2V
F"t=
A?~p^
7=~p^
A?F"t=
.R?z
;ge{
ek?;
C{;5{
s=Q/x
=ge{
Q/x=
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:570:5: Assertion failed: n <= 16 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:591:13: Assertion failed: e <= n 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:570:5: Assertion failed: n <= 16 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:591:13: Assertion failed: e <= n 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:609:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:609:9: Assertion failed: false 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1247:5: Assertion failed: state->fastSkipTreshold <= 64 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1286:5: Assertion failed: count >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1247:5: Assertion failed: state->fastSkipTreshold <= 64 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1286:5: Assertion failed: count >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1247:5: Assertion failed: state->fastSkipTreshold <= 64 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1286:5: Assertion failed: count >= 0 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1988:5: Assertion failed: pitch <= 64 
/AppleInternal/Library/BuildRoots/6eda5a34-3946-11ef-a2f8-a2cee5656455/Library/Caches/com.apple.xbs/Sources/TextureConverter/ThirdParty/ispc-texture-compressor/ispc_texcomp/kernel_astc.ispc:1988:5: Assertion failed: pitch <= 64 
 !"#$%&'()*+,-./0123456789:;<=>?
Iqoa^[
?fff?
?33s?
?fff?
 A33
?33s?
?fff?
 Aff
?NSt3__110__function6__funcIZ22astcenc_compress_imageP15astcenc_contextP13astcenc_imagePK15astcenc_swizzlePhmjE3$_0NS_9allocatorISA_EEFjvEEE
NSt3__110__function6__baseIFjvEEE
Z22astcenc_compress_imageP15astcenc_contextP13astcenc_imagePK15astcenc_swizzlePhmjE3$_0
NSt3__110__function6__funcIZ22astcenc_compress_imageP15astcenc_contextP13astcenc_imagePK15astcenc_swizzlePhmjE3$_1NS_9allocatorISA_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
Z22astcenc_compress_imageP15astcenc_contextP13astcenc_imagePK15astcenc_swizzlePhmjE3$_1
 !"$%&()*01245689:#'/37;,-.@ABDEFHIJPQRTUVXYZCGOSW[LMN
`abdefhijpqrtuvxyzcgosw{lmn
<=>\]^
 !"#$()*+,0123489:;<%-5=
@ABCDHIJKLPQRSTXYZ[\EMU]
`abcdhijklpqrstxyz{|emu}
fgFG&noNO.vwVW6~
^_>'/7?
*3-30B
CrQjRjAZSJQ
B8R8S8C03
*B"Q"
2A*B
RTCD
OOwB
"b Q
lb,O
aysqSiCYAK
q"sH![
,!.R,3|
ry_p
hbaSYnXaMRsYC
3!+.
"C]"1#q"
r`B9m8
wbl3
.n7B$m
,"%Ql
aSarQ
QGPC
IFHbI7
0%Ra*
!q"!Cs8
RE05HR
*Q#%
2UQ%
5b
_8SAC9bA78G8sq
1HiF0
2v0M*
Xn0$)a*
POp!
+%"s(eH
q"E(-
4QERdb\
%B,r
5q
X4eZP
S4Q$U
HKP~HDS
qyh9C1
1_8S1n070
0b1O0u0;
(sQsP
)J z F HA
#D9e $
Q2I 
%3<R
]>4
=#
uPGHSQUI
F@7@
a61v0s1
@7A!;
#e %
Q%R5I
3DC<5l
XFY(YtQoX
1v870U)
)'0~(
+G(b1sQ6I_(
 &!HAn 
!e!!S
R5<"-
fxd{
yuyjh
ta(a
aT[cQV
kK8H9S1Z841
`sYv0
(a2u(
 $-n _(
 6)G@7 
' O@F8
9sHU
2-QU
'.#
Bq
adcuQD]fX
ITSt
@cIJA
9rA~8Z@
1V0+)F1'1
hn(s!b)
 O@S!C)
 6!;
#u K
]tQM
$/B<#
(qdct
4]fXuYTS
IyAc
hV0F1
1H1aZ
H8HS) C)s!
!+!!
"'!s
(z +
]<><
{(qtyyadk
ij`$gD
ITHo
@aBd@~@Z8
2H1_0S)
0C)
(+Ib)n(
)s!'!
b,!.
d}34
->q
TQM]D1
333?
Iy^!I)>
H.yrH&3
F9'gF$y
333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIImmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
88888888888888888888888888888888888888888888888888888888TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
..............................................EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ttttttttttttttttttttttttttttttttttttttttttttttt
""""""""""""""""""""""""""""""""""3333333333333333333333333333333333DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUffffffffffffffffffffffffffffffffffwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
(((((((((((((((((((((((((((666666666666666666666666666CCCCCCCCCCCCCCCCCCCCCCCCCCPPPPPPPPPPPPPPPPPPPPPPPPPPP^^^^^^^^^^^^^^^^^^^^^^^^^^^kkkkkkkkkkkkkkkkkkkkkkkkkkkyyyyyyyyyyyyyyyyyyyyyyyyyyy
!!!!!!!!!!!!!!!!!!!!!!,,,,,,,,,,,,,,,,,,,,,,7777777777777777777777BBBBBBBBBBBBBBBBBBBBBBMMMMMMMMMMMMMMMMMMMMMMXXXXXXXXXXXXXXXXXXXXXXccccccccccccccccccccccnnnnnnnnnnnnnnnnnnnnnnyyyyyyyyyyyyyyyyyyyyyyyy
!!!!!!!!!!!!!!!!!))))))))))))))))111111111111111199999999999999999BBBBBBBBBBBBBBBBBJJJJJJJJJJJJJJJJRRRRRRRRRRRRRRRRZZZZZZZZZZZZZZZZZccccccccccccccccckkkkkkkkkkkkkkkkssssssssssssssss{{{{{{{{{{{{{{{{{
             '''''''''''''-------------4444444444444:::::::::::::AAAAAAAAAAAAAGGGGGGGGGGGGGNNNNNNNNNNNNNTTTTTTTTTTTTT[[[[[[[[[[[[[aaaaaaaaaaaaahhhhhhhhhhhhhnnnnnnnnnnnnnuuuuuuuuuuuuu{{{{{{{{{{{{{{{
           &&&&&&&&&&&++++++++++0000000000066666666666;;;;;;;;;;;AAAAAAAAAAAFFFFFFFFFFFLLLLLLLLLLLQQQQQQQQQQVVVVVVVVVVV\\\\\\\\\\\aaaaaaaaaaagggggggggggllllllllllqqqqqqqqqqqwwwwwwwwwww||||||||||||

        $$$$$$$$((((((((,,,,,,,,000000004444444488888888<<<<<<<<<AAAAAAAAAEEEEEEEEIIIIIIIIMMMMMMMMQQQQQQQQUUUUUUUUYYYYYYYY]]]]]]]]aaaaaaaaeeeeeeeeiiiiiiiimmmmmmmmqqqqqqqquuuuuuuuyyyyyyyy}}}}}}}}}
      ######&&&&&&&*******------0000003333336666666:::::::======@@@@@@CCCCCCCGGGGGGGJJJJJJMMMMMMPPPPPPSSSSSSSWWWWWWWZZZZZZ]]]]]]```````dddddddggggggjjjjjjmmmmmmppppppptttttttwwwwwwzzzzzz}}}}}}}}
      #####%%%%%((((((+++++-----0000003333355555888888;;;;;=====@@@@@@CCCCCCFFFFFHHHHHKKKKKKNNNNNPPPPPSSSSSSVVVVVXXXXX[[[[[[^^^^^`````ccccccfffffhhhhhkkkkkknnnnnpppppssssssvvvvvxxxxx{{{{{{~~~~~~

    """"$$$$&&&&((((****,,,,....00002222444466668888::::<<<<>>>>@@@@BBBBDDDDFFFFHHHHJJJJLLLLNNNNPPPPRRRRTTTTVVVVXXXXZZZZ\\\\^^^^````bbbbddddffffhhhhjjjjllllnnnnpppprrrrttttvvvvxxxxzzzz||||~~~~~
   !!!###$$$&&&&((()))+++,,,....0001113334446666888999;;;<<<>>>>@@@AAACCCDDDFFFFHHHIIIKKKLLLNNNNPPPQQQSSSTTTVVVVXXXYYY[[[\\\^^^^```aaacccdddffffhhhiiikkklllnnnnpppqqqssstttvvvvxxxyyy{{{|||~~~~~
   !!"""$$$%%&&&((())***,,,--...000112224445566688899:::<<<==>>>@@@AABBBDDDEEFFFHHHIIJJJLLLMMNNNPPPQQRRRTTTUUVVVXXXYYZZZ\\\]]^^^```aabbbdddeefffhhhiijjjlllmmnnnpppqqrrrtttuuvvvxxxyyzzz|||}}~~~~
  !!""##$$%%&&''(())**++,,--..//00112233445566778899::;;<<==>>??@@AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]]^^__``aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~




       
"""""""

$$$$$$$
&&&&&&&&''''''''
%%%%%%%
#######
!!!!!!!
      
""""""
$$$$$
&&&&&&
((((((
******
,,,,,
......//////
-----
++++++
))))))
''''''
%%%%%
######
!!!!!!

    !!!!""""####$$$$%%%%&&&&''''(((())))****++++,,,,----..../////0000111122223333444455556666777788889999::::;;;;<<<<====>>>>???
   000@@@@
"""222BBBB
$$$4444DDD
&&&6666FFF
((((888HHH
****:::JJJ
,,,<<<LLL
...>>>NNNNOOOO???///
MMM===---
KKK;;;++++
III999))))
GGG7777'''
EEE5555%%%
CCCC333###
AAAA111!!!
   @@@
"""BBB
$$$DDD
&&&FFF
((HHH
**JJJ,,LLL
..NNN
000PPP
222RRR
444TTT
666VVV
888XXX
:::ZZZ
<<<\\\
>>>^^^___???
]]]===
[[[;;;
YYY999
WWW777
UUU555
SSS333
QQQ111
OOO//
MMM--
KKK++
III))
GGG'''
EEE%%%
CCC###
AAA!!!
  !!""##$$%%&&''(())**++,,--..//00112233445566778899::;;<<==>>???@@AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]]^^__``aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~
 @@`
"BBb
$DDd
&FFf
(HHh
*JJj
,LLl
.NNn
0PPp
2RRr
4TTt
6VVv
8XXx
:ZZz
<\\|
>^^~
}]]=
{[[;
yYY9
wWW7
uUU5
sSS3
qQQ1
oOO/
mMM-
kKK+
iII)
gGG'
eEE%
cCC#
aAA!
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
"3DUfw
!)19BJRZcks{
 $(,048<AEIMQUY]aeimquy}
 "$&(*,.02468:<>@BDFHJLNPRTVXZ\^`bdfhjlnprtvxz|~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~




%.7@
%.7@
$+29@
$)/5;@
#'+/48<@
#'+/48<@
#&)-037:=@
"%(*-0358;>@
"$&(*,.02468:<>@
"$&(*,.02468:<>@
>@NSt3__120__shared_ptr_pointerIPhZN3Etc13EncodeMipmapsEPfjjNS2_5Image6FormatENS2_11ErrorMetricEfjjjjPNS2_8RawImageEPibE3$_0NS_9allocatorIhEEEE
ZN3Etc13EncodeMipmapsEPfjjNS_5Image6FormatENS_11ErrorMetricEfjjjjPNS_8RawImageEPibE3$_0
NSt3__119__async_assoc_stateIvNS_12__async_funcIMN3Etc5ImageEFvjjEJPS3_ijEEEEE
NSt3__119__async_assoc_stateIjNS_12__async_funcIMN3Etc5ImageEFjjjjEJPS3_jijEEEEE
NSt3__113__assoc_stateIjEE
?N3Etc16Block4x4EncodingE
".Lr
N3Etc21Block4x4Encoding_ETC1E
N3Etc20Block4x4Encoding_R11E
!4>X
N3Etc21Block4x4Encoding_RG11E
N3Etc21Block4x4Encoding_RGB8E
N3Etc23Block4x4Encoding_RGB8A1E
N3Etc30Block4x4Encoding_RGB8A1_OpaqueE
N3Etc35Block4x4Encoding_RGB8A1_TransparentE
N3Etc22Block4x4Encoding_RGBA8E
N3Etc29Block4x4Encoding_RGBA8_OpaqueE
N3Etc34Block4x4Encoding_RGBA8_TransparentE
N12_GLOBAL__N_117UnixAssertHandlerE
$" &4206
gnpr
*******************%
************** "*****************************$
N2nv14StdInputStreamE
N2nv9StdStreamE
N2nv6StreamE
DDS |
NVTT
DX10
?UUU
?N2nv6FilterE
N2nv9BoxFilterE
N2nv14TriangleFilterE
N2nv15QuadraticFilterE
N2nv11CubicFilterE
N2nv13BSplineFilterE
N2nv14MitchellFilterE
N2nv13LanczosFilterE
N2nv10SincFilterE
N2nv12KaiserFilterE
N2nv14GaussianFilterE
!(0)"
#*1892+$
%,3:;4-&
'.5<=6/7>????????????????RGB
N2nv15StdOutputStreamE
KTX 11
F#DS
]p$o
S%'1
F(DS
]p)o
S*'1
F-DS
]p.o
S/'1
F2DS
]p3o
S4'1
F7DS
]p8o
S9'1
F<DS
]p=o
S>'1
FADS
]pBo
SC'1
FFDS
]pGo
SH'1
FKDS
]pLo
SM'1
FPDS
]pQo
SR'1
FUDS
]pVo
SW'1
FZDS
]p[o
N2nv20ColorBlockCompressorE
N2nv19CompressorInterfaceE
N2nv20FloatColorCompressorE
N2nv14CompressorDXT1E
N2nv18CompressorBC3_RGBME
N2nv14CompressorETC1E
N2nv16CompressorETC2_RE
N2nv17CompressorETC2_RGE
N2nv18CompressorETC2_RGBE
N2nv19CompressorETC2_RGBAE
N2nv19CompressorETC2_RGBME
DXT1DXT1DXT3DXT5DXT5ATI1ATI2DXT1
BC6HBC7LDXT5ETC1
ETC2
PVR0PVR1PVR2PVR3
N2nv17FastCompressorBC4E
N2nv17FastCompressorBC5E
N2nv23ProductionCompressorBC4E
N2nv23ProductionCompressorBC5E
N2nv13CompressorBC6E
N2nv13CompressorBC7E
N2nv19FastCompressorDXT1aE
N2nv18FastCompressorDXT3E
N2nv18FastCompressorDXT5E
N2nv19FastCompressorDXT5nE
N2nv15CompressorDXT1aE
N2nv19CompressorDXT1_LumaE
N2nv14CompressorDXT3E
N2nv14CompressorDXT5E
N2nv15CompressorDXT5nE
?%!!?
9?JBB?
Z?^cc?
,IIII
IIIIIIIIIIIIIIID
*GGGG
GGGGGGGGGGGGGGGB
%<<<<
<<<<<<<<<<<<<<<:N2nv20PixelFormatConverterE
 i+t6
N4nvtt22ParallelTaskDispatcherE
N4nvtt11CubeSurface7PrivateE
N2nv10RefCountedE
!)19BJRZcks{
AEIMQUY]aeimquy}
?%!!?
9?JBB?
Z?^cc?
<?BAA?
N4nvtt20DefaultOutputHandlerE
NNN___FFFLLL<<<TTTTTTTTT
#*>>>1
7XN4nvtt7Surface7PrivateE
N8nvsquish9ColourFitE
N8nvsquish18WeightedClusterFitE
(w)T
-269&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
=AE&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
9<?C
MSY_chl
#%')+-/VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV13579VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV;=?
68:<>@BDF
  !!""##$$$$%%%%&&&&&&&&''''''''(((((((((((((((())))))))))))))))********************************
\ww_,
zk&_
~NX4
_H^zvd
x`tm6
Sr]?
$8'S
$ffn
rq7x;P
)n/h%fPn
,!MbDg[
>ZF9
rT+6ZNw
izc}
Nl9\
x=9v
"f^n[
5nsfZ
^[L6
Vgh$
2aNuE
BTcq
2,THh
/fxLf
]k_W
Z/K]
(U$;s
hm~iD
KTX 11
KTX 20
@@@@@@@@@@@@
wwwwwwwwwwww
KTX 11
KTX 20
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa[[
[[[[[[
++++
xxxf
MMMMhhhh
KTX 11
KTX 20
KTX 20
N7Iex_3_27BaseExcE
N7Iex_3_26ArgExcE
N7Iex_3_28LogicExcE
N7Iex_3_28InputExcE
N7Iex_3_25IoExcE
N7Iex_3_27MathExcE
N7Iex_3_28ErrnoExcE
N7Iex_3_29NoImplExcE
N7Iex_3_27NullExcE
N7Iex_3_27TypeExcE
N7Iex_3_28EpermExcE
N7Iex_3_29EnoentExcE
N7Iex_3_28EsrchExcE
N7Iex_3_28EintrExcE
N7Iex_3_26EioExcE
N7Iex_3_28EnxioExcE
N7Iex_3_28E2bigExcE
N7Iex_3_210EnoexecExcE
N7Iex_3_28EbadfExcE
N7Iex_3_29EchildExcE
N7Iex_3_29EagainExcE
N7Iex_3_29EnomemExcE
N7Iex_3_29EaccesExcE
N7Iex_3_29EfaultExcE
N7Iex_3_210EnotblkExcE
N7Iex_3_28EbusyExcE
N7Iex_3_29EexistExcE
N7Iex_3_28ExdevExcE
N7Iex_3_29EnodevExcE
N7Iex_3_210EnotdirExcE
N7Iex_3_29EisdirExcE
N7Iex_3_29EinvalExcE
N7Iex_3_29EnfileExcE
N7Iex_3_29EmfileExcE
N7Iex_3_29EnottyExcE
N7Iex_3_210EtxtbsyExcE
N7Iex_3_28EfbigExcE
N7Iex_3_29EnospcExcE
N7Iex_3_29EspipeExcE
N7Iex_3_28ErofsExcE
N7Iex_3_29EmlinkExcE
N7Iex_3_28EpipeExcE
N7Iex_3_27EdomExcE
N7Iex_3_29ErangeExcE
N7Iex_3_29EnomsgExcE
N7Iex_3_28EidrmExcE
N7Iex_3_29EchrngExcE
N7Iex_3_211El2nsyncExcE
N7Iex_3_29El3hltExcE
N7Iex_3_29El3rstExcE
N7Iex_3_29ElnrngExcE
N7Iex_3_210EunatchExcE
N7Iex_3_29EnocsiExcE
N7Iex_3_29El2hltExcE
N7Iex_3_210EdeadlkExcE
N7Iex_3_29EnolckExcE
N7Iex_3_28EbadeExcE
N7Iex_3_28EbadrExcE
N7Iex_3_29ExfullExcE
N7Iex_3_29EnoanoExcE
N7Iex_3_210EbadrqcExcE
N7Iex_3_210EbadsltExcE
N7Iex_3_212EdeadlockExcE
N7Iex_3_29EbfontExcE
N7Iex_3_29EnostrExcE
N7Iex_3_210EnodataExcE
N7Iex_3_28EtimeExcE
N7Iex_3_28EnosrExcE
N7Iex_3_29EnonetExcE
N7Iex_3_29EnopkgExcE
N7Iex_3_210EremoteExcE
N7Iex_3_210EnolinkExcE
N7Iex_3_27EadvExcE
N7Iex_3_29EsrmntExcE
N7Iex_3_28EcommExcE
N7Iex_3_29EprotoExcE
N7Iex_3_212EmultihopExcE
N7Iex_3_210EbadmsgExcE
N7Iex_3_215EnametoolongExcE
N7Iex_3_212EoverflowExcE
N7Iex_3_211EnotuniqExcE
N7Iex_3_29EbadfdExcE
N7Iex_3_210EremchgExcE
N7Iex_3_210ElibaccExcE
N7Iex_3_210ElibbadExcE
N7Iex_3_210ElibscnExcE
N7Iex_3_210ElibmaxExcE
N7Iex_3_211ElibexecExcE
N7Iex_3_29EilseqExcE
N7Iex_3_29EnosysExcE
N7Iex_3_28EloopExcE
N7Iex_3_211ErestartExcE
N7Iex_3_211EstrpipeExcE
N7Iex_3_212EnotemptyExcE
N7Iex_3_29EusersExcE
N7Iex_3_211EnotsockExcE
N7Iex_3_215EdestaddrreqExcE
N7Iex_3_211EmsgsizeExcE
N7Iex_3_213EprototypeExcE
N7Iex_3_214EnoprotooptExcE
N7Iex_3_218EprotonosupportExcE
N7Iex_3_218EsocktnosupportExcE
N7Iex_3_213EopnotsuppExcE
N7Iex_3_215EpfnosupportExcE
N7Iex_3_215EafnosupportExcE
N7Iex_3_213EaddrinuseExcE
N7Iex_3_216EaddrnotavailExcE
N7Iex_3_211EnetdownExcE
N7Iex_3_214EnetunreachExcE
N7Iex_3_212EnetresetExcE
N7Iex_3_215EconnabortedExcE
N7Iex_3_213EconnresetExcE
N7Iex_3_210EnobufsExcE
N7Iex_3_210EisconnExcE
N7Iex_3_211EnotconnExcE
N7Iex_3_212EshutdownExcE
N7Iex_3_215EtoomanyrefsExcE
N7Iex_3_212EtimedoutExcE
N7Iex_3_215EconnrefusedExcE
N7Iex_3_212EhostdownExcE
N7Iex_3_215EhostunreachExcE
N7Iex_3_211EalreadyExcE
N7Iex_3_214EinprogressExcE
N7Iex_3_29EstaleExcE
N7Iex_3_211EioresidExcE
N7Iex_3_210EucleanExcE
N7Iex_3_210EnotnamExcE
N7Iex_3_210EnavailExcE
N7Iex_3_29EisnamExcE
N7Iex_3_212EremoteioExcE
N7Iex_3_28EinitExcE
N7Iex_3_210EremdevExcE
N7Iex_3_212EcanceledExcE
N7Iex_3_213EnolimfileExcE
N7Iex_3_211EproclimExcE
N7Iex_3_212EdisjointExcE
N7Iex_3_211EnologinExcE
N7Iex_3_212EloginlimExcE
N7Iex_3_213EgrouploopExcE
N7Iex_3_212EnoattachExcE
N7Iex_3_210EnotsupExcE
N7Iex_3_210EnoattrExcE
N7Iex_3_216EdircorruptedExcE
N7Iex_3_29EdquotExcE
N7Iex_3_213EnfsremoteExcE
N7Iex_3_214EcontrollerExcE
N7Iex_3_217EnotcontrollerExcE
N7Iex_3_212EenqueuedExcE
N7Iex_3_215EnotenqueuedExcE
N7Iex_3_210EjoinedExcE
N7Iex_3_213EnotjoinedExcE
N7Iex_3_210EnoprocExcE
N7Iex_3_211EmustrunExcE
N7Iex_3_214EnotstoppedExcE
N7Iex_3_212EclockcpuExcE
N7Iex_3_214EinvalstateExcE
N7Iex_3_211EnoexistExcE
N7Iex_3_214EendofminorExcE
N7Iex_3_211EbufsizeExcE
N7Iex_3_29EemptyExcE
N7Iex_3_215EnointrgroupExcE
N7Iex_3_213EinvalmodeExcE
N7Iex_3_214EcantextentExcE
N7Iex_3_213EinvaltimeExcE
N7Iex_3_213EdestroyedExcE
N7Iex_3_211OverflowExcE
N7Iex_3_212UnderflowExcE
N7Iex_3_210DivzeroExcE
N7Iex_3_210InexactExcE
N7Iex_3_214InvalidFpOpExcE
N13IlmThread_3_24TaskE
N13IlmThread_3_218ThreadPoolProviderE
N13IlmThread_3_210ThreadPoolE
NSt3__120__shared_ptr_emplaceIN13IlmThread_3_212_GLOBAL__N_125DefaultThreadPoolProviderENS_9allocatorIS3_EEEE
N13IlmThread_3_212_GLOBAL__N_125DefaultThreadPoolProviderE
NSt3__120__shared_ptr_emplaceIN13IlmThread_3_212_GLOBAL__N_121DefaultThreadPoolDataENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_pointerIPN13IlmThread_3_218ThreadPoolProviderENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN13IlmThread_3_218ThreadPoolProviderEE27__shared_ptr_default_deleteIS2_S2_EE
N13IlmThread_3_29SemaphoreE
N7Imf_3_29AttributeE
N7Imf_3_213B44CompressorE
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
< < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<!<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<"<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<#<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<$<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<%<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<&<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<'<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<(<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<)<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<*<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<+<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<,<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.<.</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<0<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<1<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<2<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<3<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<8<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<9<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<=<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<?<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<@<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<A<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<B<C<C<C<C<C<C<C<C<C<C<C<C<C<C<C<D<D<D<D<D<D<D<D<D<D<D<D<D<D<D<E<E<E<E<E<E<E<E<E<E<E<E<E<E<E<F<F<F<F<F<F<F<F<F<F<F<F<F<F<F<G<G<G<G<G<G<G<G<G<G<G<G<G<G<G<H<H<H<H<H<H<H<H<H<H<H<H<H<H<H<I<I<I<I<I<I<I<I<I<I<I<I<I<I<I<J<J<J<J<J<J<J<J<J<J<J<J<J<J<J<K<K<K<K<K<K<K<K<K<K<K<K<K<K<K<L<L<L<L<L<L<L<L<L<L<L<L<L<L<L<M<M<M<M<M<M<M<M<M<M<M<M<M<M<M<N<N<N<N<N<N<N<N<N<N<N<N<N<N<N<O<O<O<O<O<O<O<O<O<O<O<O<O<O<O<P<P<P<P<P<P<P<P<P<P<P<P<P<P<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<Q<R<R<R<R<R<R<R<R<R<R<R<R<R<R<R<S<S<S<S<S<S<S<S<S<S<S<S<S<S<S<T<T<T<T<T<T<T<T<T<T<T<T<T<T<T<U<U<U<U<U<U<U<U<U<U<U<U<U<U<V<V<V<V<V<V<V<V<V<V<V<V<V<V<V<W<W<W<W<W<W<W<W<W<W<W<W<W<W<W<X<X<X<X<X<X<X<X<X<X<X<X<X<X<X<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Y<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<Z<[<[<[<[<[<[<[<[<[<[<[<[<[<[<[<\<\<\<\<\<\<\<\<\<\<\<\<\<\<]<]<]<]<]<]<]<]<]<]<]<]<]<]<]<^<^<^<^<^<^<^<^<^<^<^<^<^<^<^<_<_<_<_<_<_<_<_<_<_<_<_<_<_<`<`<`<`<`<`<`<`<`<`<`<`<`<`<`<a<a<a<a<a<a<a<a<a<a<a<a<a<a<a<b<b<b<b<b<b<b<b<b<b<b<b<b<b<c<c<c<c<c<c<c<c<c<c<c<c<c<c<c<d<d<d<d<d<d<d<d<d<d<d<d<d<d<e<e<e<e<e<e<e<e<e<e<e<e<e<e<e<f<f<f<f<f<f<f<f<f<f<f<f<f<f<f<g<g<g<g<g<g<g<g<g<g<g<g<g<g<h<h<h<h<h<h<h<h<h<h<h<h<h<h<h<i<i<i<i<i<i<i<i<i<i<i<i<i<i<j<j<j<j<j<j<j<j<j<j<j<j<j<j<j<k<k<k<k<k<k<k<k<k<k<k<k<k<k<l<l<l<l<l<l<l<l<l<l<l<l<l<l<l<m<m<m<m<m<m<m<m<m<m<m<m<m<m<n<n<n<n<n<n<n<n<n<n<n<n<n<n<o<o<o<o<o<o<o<o<o<o<o<o<o<o<o<p<p<p<p<p<p<p<p<p<p<p<p<p<p<q<q<q<q<q<q<q<q<q<q<q<q<q<q<q<r<r<r<r<r<r<r<r<r<r<r<r<r<r<s<s<s<s<s<s<s<s<s<s<s<s<s<s<s<t<t<t<t<t<t<t<t<t<t<t<t<t<t<u<u<u<u<u<u<u<u<u<u<u<u<u<u<v<v<v<v<v<v<v<v<v<v<v<v<v<v<v<w<w<w<w<w<w<w<w<w<w<w<w<w<w<x<x<x<x<x<x<x<x<x<x<x<x<x<x<y<y<y<y<y<y<y<y<y<y<y<y<y<y<y<z<z<z<z<z<z<z<z<z<z<z<z<z<z<{<{<{<{<{<{<{<{<{<{<{<{<{<{<|<|<|<|<|<|<|<|<|<|<|<|<|<|<}<}<}<}<}<}<}<}<}<}<}<}<}<}<}<~<~<~<~<~<~<~<~<~<~<~<~<~<~<
=======
= = = = = = =!=!=!=!=!=!="="="="="="=#=#=#=#=#=$=$=$=%=%=%=&=&=&='='='=(=(=(=)=)=)=*=*=*=+=+=+=,=,=,=-=-=-=-=.=.=.=/=/=/=0=0=0=1=1=1=2=2=2=3=3=3=4=4=4=5=5=5=6=6=6=7=7=7=8=8=8=9=9=9=:=:=:=:=;=;=;=<=<=<=======>=>=>=?=?=?=@=@=@=A=A=A=B=B=B=C=C=C=D=D=D=E=E=E=F=F=F=G=G=G=H=H=H=I=I=I=J=J=J=K=K=K=L=L=L=M=M=M=N=N=N=O=O=O=P=P=P=Q=Q=Q=R=R=R=S=S=S=T=T=T=U=U=U=V=V=V=W=W=W=X=X=X=Y=Y=Y=Z=Z=Z=[=[=[=\=\=\=]=]=]=^=^=^=_=_=_=`=`=`=a=a=a=b=b=b=c=c=c=d=d=d=e=e=e=f=f=f=g=g=g=h=h=h=i=i=i=j=j=j=k=k=k=l=l=l=m=m=m=n=n=n=o=o=o=p=p=p=q=q=r=r=r=s=s=s=t=t=t=u=u=u=v=v=v=w=w=w=x=x=x=y=y=y=z=z=z={={={=|=|=|=}=}=}=~=~=~=
>>>
> > > >!>!>!>">">#>#>#>$>$>%>%>%>&>&>&>'>'>(>(>(>)>)>*>*>*>+>+>+>,>,>->->->.>.>/>/>/>0>0>0>1>1>2>2>2>3>3>4>4>4>5>5>5>6>6>7>7>7>8>8>9>9>9>:>:>;>;>;><><><>=>=>>>>>>>?>?>@>@>@>A>A>B>B>B>C>C>D>D>D>E>E>E>F>F>G>G>G>H>H>I>I>I>J>J>K>K>K>L>L>M>M>M>N>N>O>O>O>P>P>P>Q>Q>R>R>R>S>S>T>T>T>U>U>V>V>V>W>W>X>X>X>Y>Y>Z>Z>Z>[>[>\>\>\>]>]>^>^>^>_>_>`>`>`>a>a>b>b>b>c>c>d>d>d>e>e>f>f>f>g>g>h>h>h>i>i>j>j>j>k>k>l>l>l>m>m>n>n>n>o>o>p>p>p>q>q>r>r>r>s>s>t>t>t>u>u>v>v>v>w>w>x>x>x>y>y>z>z>z>{>{>|>|>|>}>}>~>~>
? ?!?!?"?#?$?%?&?'?(?)?*?*?+?,?-?.?/?0?1?2?2?3?4?5?6?7?8?9?:?;?<?<?=?>???@?A?B?C?D?E?E?F?G?H?I?J?K?L?M?N?O?P?P?Q?R?S?T?U?V?W?X?Y?Z?[?[?\?]?^?_?`?a?b?c?d?e?f?f?g?h?i?j?k?l?m?n?o?p?q?r?s?s?t?u?v?w?x?y?z?{?|?}?~?
@@@
@ @ @!@!@"@"@#@#@$@$@%@%@&@&@'@'@(@(@)@*@*@+@+@,@,@-@-@.@.@/@/@0@0@1@1@2@2@3@3@4@5@5@6@6@7@7@8@8@9@9@:@:@;@;@<@<@=@=@>@?@?@@@@@A@A@B@B@C@C@D@D@E@E@F@G@G@H@H@I@I@J@J@K@K@L@L@M@N@N@O@O@P@P@Q@Q@R@R@S@S@T@U@U@V@V@W@W@X@X@Y@Y@Z@Z@[@\@\@]@]@^@^@_@_@`@`@a@b@b@c@c@d@d@e@e@f@g@g@h@h@i@i@j@j@k@k@l@m@m@n@n@o@o@p@p@q@r@r@s@s@t@t@u@u@v@w@w@x@x@y@y@z@{@{@|@|@}@}@~@~@
AAA
A A!A!A"A"A#A$A$A%A&A&A'A(A(A)A*A*A+A+A,A-A-A.A/A/A0A1A1A2A3A3A4A5A5A6A7A7A8A8A9A:A:A;A<A<A=A>A>A?A@A@AAABABACADADAEAFAFAGAHAHAIAJAJAKALALAMANANAOAPAPAQARARASATATAUAVAVAWAXAXAYAZAZA[A\A\A]A^A^A_A`A`AaAbAbAcAdAdAeAfAfAgAhAhAiAjAjAkAlAlAmAnAnAoApAqArAtAuAwAxAyA{A|A}A
B B!B#B$B&B(B)B+B,B.B/B1B2B4B5B7B9B:B<B=B?B@BBBCBEBGBHBJBKBMBNBPBRBSBUBVBXBZB[B]B^B`BbBcBeBfBhBiBkBmBnBpBrBsBuBvBxBzB{B}B~B
C C"C$C%C'C)C+C-C.C0C2C4C6C7C9C;C=C?C@CBCDCFCHCJCKCMCOCQCSCTCVCXCZC\C^C`CaCcCeCgCiCkClCnCpCrCtCvCxCyC{C}C
D D!D"D#D$D%D&D'D(D)D*D+D,D-D.D0D1D2D3D4D5D6D7D8D9D:D;D<D=D>D?D@DADCDDDEDFDGDHDIDJDKDLDMDNDODPDRDSDTDUDVDWDXDYDZD[D\D]D_D`DaDbDcDdDeDfDgDhDjDkDlDmDnDoDpDqDrDsDuDvDwDxDyDzD{D|D~D
E E!E"E#E%E&E'E)E*E+E,E.E/E0E2E3E4E6E7E8E9E;E<E=E?E@EAECEDEEEGEHEIEKELEMENEPEQERETEUEVEXEYEZE\E]E^E`EaEcEdEeEgEhEiEkElEmEoEpEqEsEtEvEwExEzE{E|E~E
F F"F#F%F&F(F)F+F,F.F0F1F3F4F6F7F9F:F<F>F?FAFBFDFEFGFIFJFLFMFOFPFRFTFUFWFXFZF[F]F_F`FbFcFeFgFhFjFkFmFoFpFrFsFuFwFxFzF|F}F
G G"G$G&G(G)G+G-G/G1G2G4G6G8G:G;G=G?GAGCGDGFGHGJGLGNGOGQGSGUGWGYGZG\G^G`GbGdGgGkGoGrGvGzG~G
H!H#H%H'H)H,H.H0H2H4H6H8H:H<H>HAHCHEHGHIHKHMHPHRHTHVHXHZH]H_HaHcHeHhHjHlHnHpHsHuHwHyH|H~H
I!I$I&I)I+I.I1I3I6I8I;I>I@ICIFIHIKIMIPISIUIXI[I]I`IcIfIhIkInIpIsIvIyI{I~I
J!J$J'J*J-J0J3J6J9J<J?JCJFJIJLJOJRJUJYJ\J_JbJeJiJlJoJrJuJyJ|J
K#K&K*K-K1K5K8K<K?KCKGKJKNKRKUKYK]K`KdKhKkKoKsKwKzK~K
L!L#L&L(L*L,L.L0L2L4L6L8L:L=L?LALCLELGLILLLNLPLRLTLVLXL[L]L_LaLcLfLhLjLlLnLqLsLuLwLzL|L~L
M!M$M'M)M,M.M1M3M6M9M;M>MAMCMFMHMKMNMPMSMVMXM[M^M`McMfMiMkMnMqMsMvMyM|M~M
N!N$N'N*N-N0N3N6N:N=N@NCNFNINLNONSNVNYN\N_NcNfNiNlNoNsNvNyN|N
O#O'O*O.O1O5O9O<O@OCOGOKONOROVOYO]OaOdOhOlOpOsOwO{O~O
P P"P$P&P(P*P,P.P0P2P4P6P9P;P=P?PAPCPEPGPJPLPNPPPRPTPWPYP[P]P_PaPdPfPhPjPlPoPqPsPuPxPzP|P~P
Q"Q$Q'Q)Q,Q/Q1Q4Q6Q9Q<Q>QAQCQFQIQKQNQQQSQVQYQ[Q^QaQcQfQiQlQnQqQtQvQyQ|Q
R!R$R'R*R-R1R4R7R:R=R@RCRFRJRMRPRSRVRYR]R`RcRfRiRlRpRsRvRyR}R
S S'S.S5S=SDSKSRSZSaSiSpSwS
T"T&T*T.T3T7T;T?TCTHTLTPTUTYT]TbTfTjToTsTxT|T
U%U*U/U4U9U>UDUIUNUTUYU^UdUiUoUtUyU
V"V(V.V4V:V@VGVMVSVZV`VfVmVsVzV
W$W+W2W9WAWHWOWVW^WeWmWtW|W
X X$X(X,X1X5X9X=XBXFXJXNXSXWX[X`XdXiXmXqXvXzX
Y"Y'Y-Y2Y7Y<YAYGYLYQYWY\YaYgYlYrYwY|Y
Z%Z+Z1Z7Z>ZDZJZQZWZ]ZdZjZpZwZ}Z
[![([/[6[=[E[L[S[[[b[i[q[x[
\"\&\+\/\3\7\;\@\D\H\L\Q\U\Y\^\b\g\k\o\t\x\}\
] ]%]*]/]5]:]?]D]J]O]T]Z]_]d]j]o]u]z]
^"^(^/^5^;^A^G^N^T^Z^a^g^n^t^z^
_%_,_3_:_A_I_P_W___f_m_u_|_
` `%`)`-`1`5`:`>`B`F`K`O`S`W`\```e`i`m`r`v`{`
a#a(a-a2a7a=aBaGaMaRaWa]abagamaraxa}a
b&b,b2b8b>bEbKbQbXb^bdbkbqbxb~b
c!c)c0c7c>cEcMcTc[cccjcrcyc
d#d'd+d/d3d8d<d@dDdIdMdQdVdZd^dcdgdkdpdtdyd}d
e e&e+e0e5e:e@eEeJeOeUeZe_eeejepeue{e
f#f)f/f5f<fBfHfNfUf[fafhfnfuf{f
g%g-g4g;gBgIgQgXg_gggngvg}g
h!h%h)h-h2h6h:h>hBhGhKhOhThXh\hahehihnhrhwh{h
i#i(i.i3i8i=iCiHiMiRiXi]ibihimisixi~i
j&j3j?jLjXjejrj
k"k0k?kMk\kkkzk
l#l,l4l<lElMlVl_lhlplyl
m&m1m;mEmPm[mempm{m
n*n6nCnOn\ninun
o&o4oCoRo`ooo~o
p%p.p6p?pGpPpXpapjpsp|p
q)q3q>qHqSq^qhqsq~q
r!r-r9rFrSr_rlryr
s*s8sGsVsdsss
t t(t0t9tAtJtRt[tdtltut~t
u"u,u6uAuKuVuaukuvu
v$v1v=vIvVvcvpv}v
w w.w<wKwZwhwww
x"x*x2x;xCxLxUx]xfxoxxx
y$y/y9yDyNyYydynyyy
z(z4z@zMzZzfzsz
{${2{A{O{^{m{{{
;~;~;~;~;~;~;~;~;};};};};};};};};};|;|;|;|;|;|;|;|;{;{;{;{;{;{;{;{;{;z;z;z;z;z;z;z;z;y;y;y;y;y;y;y;y;y;x;x;x;x;x;x;x;x;x;w;w;w;w;w;w;w;w;v;v;v;v;v;v;v;v;v;u;u;u;u;u;u;u;u;t;t;t;t;t;t;t;t;t;s;s;s;s;s;s;s;s;s;r;r;r;r;r;r;r;r;q;q;q;q;q;q;q;q;q;p;p;p;p;p;p;p;p;o;o;o;o;o;o;o;o;o;n;n;n;n;n;n;n;n;n;m;m;m;m;m;m;m;m;l;l;l;l;l;l;l;l;l;k;k;k;k;k;k;k;k;j;j;j;j;j;j;j;j;j;i;i;i;i;i;i;i;i;i;h;h;h;h;h;h;h;h;g;g;g;g;g;g;g;g;g;f;f;f;f;f;f;f;f;f;e;e;e;e;e;e;e;e;d;d;d;d;d;d;d;d;d;c;c;c;c;c;c;c;c;c;b;b;b;b;b;b;b;b;a;a;a;a;a;a;a;a;a;`;`;`;`;`;`;`;`;`;_;_;_;_;_;_;_;_;^;^;^;^;^;^;^;^;^;];];];];];];];];];\;\;\;\;\;\;\;\;[;[;[;[;[;[;[;[;[;Z;Z;Z;Z;Z;Z;Z;Z;Z;Y;Y;Y;Y;Y;Y;Y;Y;X;X;X;X;X;X;X;X;X;W;W;W;W;W;W;W;W;W;V;V;V;V;V;V;V;V;V;U;U;U;U;U;U;U;U;T;T;T;T;T;T;T;T;T;S;S;S;S;S;S;S;S;S;R;R;R;R;R;R;R;R;R;Q;Q;Q;Q;Q;Q;Q;Q;P;P;P;P;P;P;P;P;P;O;O;O;O;O;O;O;O;O;N;N;N;N;N;N;N;N;N;M;M;M;M;M;M;M;M;L;L;L;L;L;L;L;L;L;K;K;K;K;K;K;K;K;K;J;J;J;J;J;J;J;J;J;I;I;I;I;I;I;I;I;H;H;H;H;H;H;H;H;H;G;G;G;G;G;G;G;G;G;F;F;F;F;F;F;F;F;F;E;E;E;E;E;E;E;E;E;D;D;D;D;D;D;D;D;C;C;C;C;C;C;C;C;C;B;B;B;B;B;B;B;B;B;A;A;A;A;A;A;A;A;A;@;@;@;@;@;@;@;@;@;?;?;?;?;?;?;?;?;?;>;>;>;>;>;>;>;>;=;=;=;=;=;=;=;=;=;<;<;<;<;<;<;<;<;<;;;;;;;;;;;;;;;;;;;:;:;:;:;:;:;:;:;:;9;9;9;9;9;9;9;9;9;8;8;8;8;8;8;8;8;8;7;7;7;7;7;7;7;7;6;6;6;6;6;6;6;6;6;5;5;5;5;5;5;5;5;5;4;4;4;4;4;4;4;4;4;3;3;3;3;3;3;3;3;3;2;2;2;2;2;2;2;2;2;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;/;/;/;/;/;/;/;/;/;.;.;.;.;.;.;.;.;-;-;-;-;-;-;-;-;-;,;,;,;,;,;,;,;,;,;+;+;+;+;+;+;+;+;+;*;*;*;*;*;*;*;*;*;);););););););););(;(;(;(;(;(;(;(;(;';';';';';';';';';&;&;&;&;&;&;&;&;&;%;%;%;%;%;%;%;%;%;$;$;$;$;$;$;$;$;$;#;#;#;#;#;#;#;#;#;";";";";";";";";";!;!;!;!;!;!;!;!;!; ; ; ; ; ; ; ; ; ;
;;;;;;
:~:~:~:~:~:}:}:}:}:}:|:|:|:|:|:{:{:{:{:{:z:z:z:z:z:y:y:y:y:x:x:x:x:x:w:w:w:w:w:v:v:v:v:v:u:u:u:u:u:t:t:t:t:t:s:s:s:s:s:r:r:r:r:r:q:q:q:q:q:p:p:p:p:p:o:o:o:o:o:n:n:n:n:n:m:m:m:m:m:l:l:l:l:l:k:k:k:k:k:j:j:j:j:j:i:i:i:i:i:h:h:h:h:h:g:g:g:g:g:f:f:f:f:f:e:e:e:e:e:d:d:d:d:d:c:c:c:c:c:b:b:b:b:b:a:a:a:a:a:`:`:`:`:`
:::
9~9~9~9}9}9|9|9|9{9{9{9z9z9z9y9y9y9x9x9x9w9w9w9v9v9v9u9u9u9t9t9t9s9s9s9r9r9r9q9q9q9p9p9p9o9o9n9n9n9m9m9m9l9l9l9k9k9k9j9j9j9i9i9i9h9h9h9g9g9g9f9f9f9e9e9e9d9d9d9c9c9c9b9b9b9a9a9a9`9`9`9_9_9_9^9^9^9]9]9]9\9\9\9[9[9[9Z9Z9Z9Y9Y9Y9X9X9X9W9W9W9V9V9V9U9U9U9T9T9T9S9S9S9R9R9R9Q9Q9Q9P9P9P9O9O9O9N9N9N9M9M9M9L9L9L9K9K9K9J9J9J9I9I9I9H9H9H9G9G9G9F9F9F9E9E9E9D9D9D9C9C9C9B9B9B9A9A9A9@9@9@9?9?9?9>9>9>9=9=9=9<9<9<9<9;9;9;9:9:9:9999999898989797979696969595959494949393939292929191919090909/9/9/9.9.9.9.9-9-9-9,9,9,9+9+9+9*9*9*9)9)9)9(9(9(9'9'9'9&9&9&9%9%9%9$9$9$9$9#9#9#9"9"9"9!9!9!9 9 9 9
9999
8~8}8}8|8|8{8{8z8y8y8x8x8w8w8v8v8u8t8t8s8s8r8r8q8q8p8o8o8n8n8m8m8l8l8k8j8j8i8i8h8h8g8g8f8f8e8d8d8c8c8b8b8a8a8`8_8_8^8^8]8]8\8\8[8[8Z8Y8Y8X8X8W8W8V8V8U8U8T8T8S8R8R8Q8Q8P8P8O8O8N8N8M8M8L8K8K8J8J8I8I8H8H8G8G8F8F8E8D8D8C8C8B8B8A8A8@8@8?8?8>8>8=8=8<8;8;8:8:898988888787868685858484838282818180808/8/8.8.8-8-8,8,8+8+8*8*8)8)8(8(8'8&8&8%8%8$8$8#8#8"8"8!8!8 8 8
888
7~7}7|7{7z7y7x7w7v7u7u7t7s7r7q7p7o7n7m7l7k7j7i7h7h7g7f7e7d7c7b7a7`7_7^7]7\7\7[7Z7Y7X7W7V7U7T7S7R7Q7Q7P7O7N7M7L7K7J7I7H7G7G7F7E7D7C7B7A7@7?7>7=7=7<7;7:79787776757474737271707/7.7-7,7+7+7*7)7(7'7&7%7$7#7"7"7!7 7
6~6}6}6|6{6z6y6y6x6w6v6u6u6t6s6r6q6p6p6o6n6m6l6l6k6j6i6h6h6g6f6e6d6d6c6b6a6`6`6_6^6]6\6\6[6Z6Y6Y6X6W6V6U6U6T6S6R6Q6Q6P6O6N6M6M6L6K6J6J6I6H6G6F6F6E6D6C6B6B6A6@6?6?6>6=6<6;6;6:696868676665646463626161606/6.6-6-6,6+6*6*6)6(6'6'6&6%6$6#6#6"6!6 6 6
5~5}5{5z5x5w5v5t5s5r5p5o5n5l5k5i5h5g5e5d5c5a5`5_5]5\5[5Y5X5W5U5T5S5Q5P5O5M5L5K5I5H5G5E5D5C5A5@5?5>5<5;5:585756545352505/5.5-5+5*5)5'5&5%5$5"5!5 5
4~4}4{4z4y4x4w4v4u4t4s4q4p4o4n4m4l4k4j4i4g4f4e4d4c4b4a4`4_4^4]4[4Z4Y4X4W4V4U4T4S4R4Q4P4N4M4L4K4J4I4H4G4F4E4D4C4B4A4?4>4=4<4;4:494847464544434241404/4.4-4+4*4)4(4'4&4%4$4#4"4!4 4
3}3|3z3x3v3t3r3p3o3m3k3i3g3e3c3b3`3^3\3Z3X3W3U3S3Q3O3M3L3J3H3F3D3B3A3?3=3;3938363432303/3-3+3)3'3&3$3"3 3
2}2{2z2x2w2u2s2r2p2o2m2k2j2h2g2e2c2b2`2_2]2[2Z2X2W2U2S2R2P2O2M2L2J2H2G2E2D2B2A2?2=2<2:2927262423212/2.2,2+2)2(2&2%2#2"2 2
1~1|1{1y1x1w1u1t1s1q1p1o1m1l1k1i1h1f1e1d1b1a1`1^1]1\1Z1Y1X1V1U1T1R1Q1P1N1M1L1J1I1H1F1E1D1B1A1@1?1=1<1;19181715141311101/1.1,1+1*1(1'1&1%1#1"1!1
0}0|0{0z0y0x0w0v0u0s0r0q0p0o0n0m0l0k0i0h0g0f0e0d0c0b0a0`0^0]0\0[0Z0Y0X0W0V0U0S0P0N0L0J0H0F0C0A0?0=0;09070503000.0,0*0(0&0$0"0 0
/{/w/t/p/l/i/e/a/^/Z/V/R/O/K/H/D/@/=/9/5/2/./+/'/#/ /
.}.y.v.s.p.m.i.f.c.`.].Y.V.S.P.M.J.F.C.@.=.:.7.4.1...*.'.$.!.
-|-y-v-t-q-n-l-i-f-c-a-^-[-Y-V-S-Q-N-K-I-F-D-A->-<-9-6-4-1-/-,-)-'-$-"-
,~,|,z,x,u,s,q,o,m,j,h,f,d,a,_,],[,Y,W,T,R,P,N,L,J,H,E,C,A,?,=,;,9,7,4,2,0,.,,,*,(,&,$,", ,
+{+w+s+p+l+h+d+a+]+Y+V+R+N+K+G+D+@+<+9+5+1+.+*+'+#+ +
*|*y*v*s*o*l*i*f*c*_*\*Y*V*S*P*L*I*F*C*@*=*:*7*3*0*-***'*$*!*
)~)|)y)v)s)q)n)k)i)f)c)`)^)[)X)V)S)P)N)K)H)F)C)A)>);)9)6)4)1).),)))')$)!)
(~(|(z(w(u(s(q(n(l(j(h(f(c(a(_(]([(Y(V(T(R(P(N(L(I(G(E(C(A(?(=(;(8(6(4(2(0(.(,(*(((&($(!(
'~'z'w's'o'k'h'd'`']'Y'U'R'N'J'G'C'?'<'8'5'1'-'*'&'#'
&|&y&v&r&o&l&i&e&b&_&\&Y&V&R&O&L&I&F&C&@&<&9&6&3&0&-&*&'&$&!&
%~%{%y%v%s%p%n%k%h%f%c%`%^%[%X%U%S%P%N%K%H%F%C%@%>%;%8%6%3%1%.%+%)%&%$%!%
$~$y$u$p$l$h$c$_$Z$V$R$M$I$E$A$<$8$4$0$,$'$#$
#z#s#k#d#\#U#N#F#?#8#1#)#"#
"x"r"l"e"_"X"R"L"E"?"9"3"-"&" "
!~!x!s!m!h!c!]!X!S!M!H!C!=!8!3!.!)!#!
 { w r n j e a \ X T O K G C > : 6 2 - ) % ! 
|skbYPH?7.&
/70v0
021q1
1-2k2
2&3d3
4.4M4l4
5%5D5c5
696W6v6
7,7J7h7
8,8;8J8Y8h8w8
9)989G9U9d9s9
:":1:?:N:\:k:y:
;&;4;B;Q;_;m;|;
<!<(</<6<=<D<K<R<Y<`<g<n<u<|<
=!=(=/=5=<=C=J=Q=W=^=e=l=r=y=
> >'>->4>:>A>G>N>U>[>b>h>o>u>|>
?$?*?1?7?>?D?J?Q?W?]?d?j?p?w?}?
@ @#@&@)@,@/@2@5@8@;@>@A@D@H@K@N@Q@T@W@Z@]@`@c@f@i@l@o@r@u@x@{@~@
A!A$A'A*A-A0A2A5A8A;A>AAADAGAJALAOARAUAXA[A^A`AcAfAiAlAoArAtAwAzA}A
B!B$B'B)B,B/B1B4B7B:B<B?BBBDBGBJBMBOBRBUBWBZB]B_BbBeBgBjBmBoBrBuBwBzB}B
C!C$C'C)C,C.C1C3C6C8C;C>C@CCCECHCJCMCOCRCTCWCYC\C^CaCcCfCiCkCnCpCsCuCxCzC}C
D D!D#D$D%D&D'D(D*D+D,D-D.D0D1D2D3D4D6D7D8D9D:D;D=D>D?D@DADBDDDEDFDGDHDJDKDLDMDNDODQDRDSDTDUDVDXDYDZD[D\D]D^D`DaDbDcDdDeDgDhDiDjDkDlDmDoDpDqDrDsDtDvDwDxDyDzD{D|D~D
E E!E"E#E$E%E&E'E(E)E*E+E,E-E.E0E1E2E3E4E5E6E7E8E9E:E;E<E=E>E?E@EAEBECEDEEEFEGEHEJEKELEMENEOEPEQERESETEUEVEWEXEYEZE[E\E]E^E_E`EaEbEcEdEeEfEgEhEiEjEkElEmEnEoEpEqErEsEtEuEvEwExEyEzE|E}E~E
F F"F$F&F'F)F+F-F/F1F3F4F6F8F:F<F>F?FAFCFEFGFIFJFLFNFPFRFSFUFWFYF[F]F^F`FbFdFfFgFiFkFmFoFpFrFtFvFwFyF{F}F
G!G"G$G&G'G)G+G,G.G/G1G3G4G6G8G9G;G<G>G@GAGCGEGFGHGIGKGMGNGPGQGSGUGVGXGYG[G]G^G`GaGcGeGfGhGiGkGlGnGpGqGsGtGvGwGyG{G|G~G
H H!H!H"H#H$H$H%H&H&H'H(H)H)H*H+H+H,H-H.H.H/H0H0H1H2H2H3H4H5H5H6H7H7H8H9H9H:H;H;H<H=H>H>H?H@H@HAHBHBHCHDHDHEHFHGHGHHHIHIHJHKHKHLHMHMHNHOHOHPHQHQHRHSHSHTHUHVHVHWHXHXHYHZHZH[H\H\H]H^H^H_H`H`HaHbHbHcHdHdHeHfHfHgHhHhHiHjHjHkHlHlHmHnHnHoHpHpHqHrHrHsHtHtHuHvHvHwHwHxHyHyHzH{H{H|H}H}H~H
III
I I I!I!I"I"I#I#I$I%I%I&I&I'I'I(I(I)I*I*I+I+I,I,I-I-I.I.I/I0I0I1I1I2I2I3I3I4I4I5I6I6I7I7I8I8I9I9I:I:I;I<I<I=I=I>I>I?I?I@I@IAIAIBICICIDIDIEIEIFIFIGIGIHIHIIIIIJIKIKILILIMIMININIOIOIPIPIQIQIRISISITITIUIUIVIVIWIWIXIXIYIYIZIZI[I[I\I]I]I^I^I_I_I`I`IaIaIbIbIcIcIdIdIeIeIfIfIgIgIhIhIiIjIjIkIkIlIlImImInInIoIoIpIpIqIqIrIrIsIsItItIuIuIvIvIwIwIxIxIyIyIzIzI{I{I|I|I}I}I~I~I
J J!J"J#J$J%J%J&J'J(J)J*J+J+J,J-J.J/J0J1J1J2J3J4J5J6J6J7J8J9J:J;J<J<J=J>J?J@JAJAJBJCJDJEJFJFJGJHJIJJJKJKJLJMJNJOJPJPJQJRJSJTJTJUJVJWJXJYJYJZJ[J\J]J]J^J_J`JaJbJbJcJdJeJfJfJgJhJiJjJjJkJlJmJnJnJoJpJqJrJrJsJtJuJvJvJwJxJyJzJzJ{J|J}J~J~J
KKK
K K!K!K"K#K#K$K%K%K&K'K'K(K)K)K*K+K+K,K-K-K.K/K/K0K1K1K2K3K3K4K5K5K6K7K7K8K9K9K:K;K;K<K=K=K>K?K?K@KAKAKBKBKCKDKDKEKFKFKGKHKHKIKJKJKKKLKLKMKMKNKOKOKPKQKQKRKSKSKTKUKUKVKVKWKXKXKYKZKZK[K\K\K]K]K^K_K_K`KaKaKbKcKcKdKdKeKfKfKgKhKhKiKiKjKkKkKlKmKmKnKnKoKpKpKqKrKrKsKsKtKuKuKvKwKwKxKxKyKzKzK{K{K|K}K}K~K
LLLLL
L L L L L!L!L!L!L"L"L"L"L#L#L#L#L$L$L$L$L%L%L%L%L&L&L&L&L'L'L'L'L(L(L(L(L)L)L*L*L+L+L,L,L-L-L.L.L/L/L0L0L1L1L2L2L3L3L4L4L5L5L6L6L6L7L7L8L8L9L9L:L:L;L;L<L<L=L=L>L>L?L?L@L@LALALBLBLCLCLCLDLDLELELFLFLGLGLHLHLILILJLJLKLKLKLLLLLMLMLNLNLOLOLPLPLQLQLRLRLRLSLSLTLTLULULVLVLWLWLWLXLXLYLYLZLZL[L[L\L\L\L]L]L^L^L_L_L`L`LaLaLaLbLbLcLcLdLdLeLeLeLfLfLgLgLhLhLiLiLiLjLjLkLkLlLlLlLmLmLnLnLoLoLpLpLpLqLqLrLrLsLsLsLtLtLuLuLvLvLvLwLwLxLxLyLyLyLzLzL{L{L|L|L|L}L}L~L~L
MMMM
M M M M!M!M!M"M"M"M"M#M#M#M$M$M$M%M%M%M&M&M&M&M'M'M'M(M(M(M)M)M)M)M*M*M*M+M+M+M,M,M,M-M-M-M-M.M.M.M/M/M/M0M0M0M0M1M1M1M2M2M2M2M3M3M3M4M4M4M5M5M5M5M6M6M6M7M7M7M8M8M8M8M9M9M9M:M:M:M:M;M;M;M<M<M<M=M=M=M=M>M>M>M?M?M?M?M@M@M@MAMAMAMAMBMBMBMCMCMCMCMDMDMDMEMEMEMEMFMFMFMGMGMGMGMHMHMHMIMIMIMIMJMJMJMKMKMKMKMLMLMLMMMMMMMMMNMNMNMOMOMOMOMPMPMPMQMQMQMQMRMRMRMSMSMSMSMTMTMTMTMUMUMUMVMVMVMVMWMWMWMXMXMXMXMYMYMYMYMZMZMZM[M[M[M[M\M\M\M\M]M]M]M^M^M^M^M_M_M_M_M`M`M`MaMaMaMaMbMbMbMbMcMcMcMdMdMdMdMeMeMeMeMfMfMfMgMgMgMgMhMhMhMhMiMiMiMiMjMjMjMkMkMkMkMlMlMlMlMmMmMmMmMnMnMnMoMoMoMoMpMpMpMpMqMqMqMqMrMrMrMrMsMsMsMtMtMtMtMuMuMuMuMvMvMvMvMwMwMwMwMxMxMxMxMyMyMyMzMzMzMzM{M{M{M{M|M|M|M|M}M}M}M}M~M~M~M~M
NNNN
N N N!N!N!N"N"N"N#N#N$N$N$N%N%N%N&N&N'N'N'N(N(N(N)N)N)N*N*N+N+N+N,N,N,N-N-N.N.N.N/N/N/N0N0N0N1N1N2N2N2N3N3N3N4N4N4N5N5N5N6N6N7N7N7N8N8N8N9N9N9N:N:N:N;N;N<N<N<N=N=N=N>N>N>N?N?N?N@N@N@NANANBNBNBNCNCNCNDNDNDNENENENFNFNFNGNGNGNHNHNHNININJNJNJNKNKNKNLNLNLNMNMNMNNNNNNNONONONPNPNPNQNQNQNRNRNRNSNSNSNTNTNTNUNUNUNVNVNVNWNWNWNXNXNXNYNYNYNZNZNZN[N[N[N\N\N\N]N]N]N^N^N^N_N_N_N`N`N`NaNaNaNbNbNbNcNcNcNdNdNdNeNeNeNfNfNfNgNgNgNhNhNhNiNiNiNjNjNjNkNkNkNlNlNlNmNmNmNmNnNnNnNoNoNoNpNpNpNqNqNqNrNrNrNsNsNsNtNtNtNuNuNuNuNvNvNvNwNwNwNxNxNxNyNyNyNzNzNzN{N{N{N{N|N|N|N}N}N}N~N~N~N
OOO
O O O O!O!O"O"O#O#O$O$O%O%O%O&O&O'O'O(O(O)O)O)O*O*O+O+O,O,O-O-O-O.O.O/O/O0O0O1O1O1O2O2O3O3O4O4O4O5O5O6O6O7O7O7O8O8O9O9O:O:O;O;O;O<O<O=O=O>O>O>O?O?O@O@OAOAOAOBOBOCOCOCODODOEOEOFOFOFOGOGOHOHOIOIOIOJOJOKOKOKOLOLOMOMONONONOOOOOPOPOPOQOQOROROSOSOSOTOTOUOUOUOVOVOWOWOWOXOXOYOYOYOZOZO[O[O[O\O\O]O]O]O^O^O_O_O`O`O`OaOaObObObOcOcOcOdOdOeOeOeOfOfOgOgOgOhOhOiOiOiOjOjOkOkOkOlOlOmOmOmOnOnOoOoOoOpOpOpOqOqOrOrOrOsOsOtOtOtOuOuOuOvOvOwOwOwOxOxOyOyOyOzOzOzO{O{O|O|O|O}O}O}O~O~O
PPPPPPPP
P P P P P P P P P!P!P!P!P!P!P!P!P"P"P"P"P"P"P"P"P#P#P#P#P#P#P#P#P$P$P$P$P$P$P$P%P%P%P%P%P%P%P%P&P&P&P&P&P&P&P&P'P'P'P'P'P'P'P'P(P(P(P(P(P(P(P(P)P)P)P)P)P*P*P*P*P+P+P+P+P,P,P,P,P-P-P-P-P.P.P.P.P/P/P/P/P0P0P0P0P1P1P1P1P2P2P2P2P2P3P3P3P3P4P4P4P4P5P5P5P5P6P6P6P6P7P7P7P7P7P8P8P8P8P9P9P9P9P:P:P:P:P;P;P;P;P;P<P<P<P<P=P=P=P=P>P>P>P>P>P?P?P?P?P@P@P@P@PAPAPAPAPAPBPBPBPBPCPCPCPCPCPDPDPDPDPEPEPEPEPEPFPFPFPFPGPGPGPGPGPHPHPHPHPIPIPIPIPIPJPJPJPJPKPKPKPKPKPLPLPLPLPMPMPMPMPMPNPNPNPNPNPOPOPOPOPPPPPPPPPPPQPQPQPQPQPRPRPRPRPSPSPSPSPSPTPTPTPTPTPUPUPUPUPVPVPVPVPVPWPWPWPWPWPXPXPXPXPXPYPYPYPYPYPZPZPZPZPZP[P[P[P[P\P\P\P\P\P]P]P]P]P]P^P^P^P^P^P_P_P_P_P_P`P`P`P`P`PaPaPaPaPaPbPbPbPbPbPcPcPcPcPcPdPdPdPdPdPePePePePePfPfPfPfPfPgPgPgPgPgPhPhPhPhPhPiPiPiPiPiPiPjPjPjPjPjPkPkPkPkPkPlPlPlPlPlPmPmPmPmPmPnPnPnPnPnPnPoPoPoPoPoPpPpPpPpPpPqPqPqPqPqPrPrPrPrPrPrPsPsPsPsPsPtPtPtPtPtPtPuPuPuPuPuPvPvPvPvPvPwPwPwPwPwPwPxPxPxPxPxPyPyPyPyPyPyPzPzPzPzPzP{P{P{P{P{P{P|P|P|P|P|P}P}P}P}P}P}P~P~P~P~P~P
QQQQQQ
`Q`Q`Q`Q`Q`QaQaQaQaQaQaQaQbQbQbQbQbQbQbQcQcQcQcQcQcQcQdQdQdQdQdQdQdQeQeQeQeQeQeQeQfQfQfQfQfQfQgQgQgQgQgQgQgQhQhQhQhQhQhQhQiQiQiQiQiQiQiQjQjQjQjQjQjQjQkQkQkQkQkQkQkQlQlQlQlQlQlQlQmQmQmQmQmQmQmQmQnQnQnQnQnQnQnQoQoQoQoQoQoQoQpQpQpQpQpQpQpQqQqQqQqQqQqQqQrQrQrQrQrQrQrQsQsQsQsQsQsQsQsQtQtQtQtQtQtQtQuQuQuQuQuQuQuQvQvQvQvQvQvQvQvQwQwQwQwQwQwQwQxQxQxQxQxQxQxQxQyQyQyQyQyQyQyQzQzQzQzQzQzQzQ{Q{Q{Q{Q{Q{Q{Q{Q|Q|Q|Q|Q|Q|Q|Q}Q}Q}Q}Q}Q}Q}Q}Q~Q~Q~Q~Q~Q~Q~Q~Q
RRRRRRRR
`R`R`R`R`RaRaRaRaRbRbRbRbRbRcRcRcRcRcRdRdRdRdReReReReReRfRfRfRfRfRgRgRgRgRhRhRhRhRhRiRiRiRiRiRjRjRjRjRjRkRkRkRkRlRlRlRlRlRmRmRmRmRmRnRnRnRnRnRoRoRoRoRoRpRpRpRpRpRqRqRqRqRqRrRrRrRrRsRsRsRsRsRtRtRtRtRtRuRuRuRuRuRvRvRvRvRvRwRwRwRwRwRxRxRxRxRxRyRyRyRyRyRzRzRzRzRzRzR{R{R{R{R{R|R|R|R|R|R}R}R}R}R}R~R~R~R~R~R
SSSSS
S S S S S S!S!S!S!S"S"S"S"S"S#S#S#S#S#S$S$S$S$S$S%S%S%S%S%S&S&S&S&S&S'S'S'S'S'S(S(S(S(S(S)S)S)S)S)S*S*S*S*S*S+S+S+S+S+S,S,S,S,S,S-S-S-S-S-S.S.S.S.S.S.S/S/S/S/S/S0S0S0S0S0S1S1S1S1S1S2S2S2S2S2S3S3S3S3S3S3S4S4S4S4S4S5S5S5S5S5S6S6S6S6S6S7S7S7S7S7S7S8S8S8S8S8S9S9S9S9S9S:S:S:S:S:S:S;S;S;S;S;S<S<S<S<S<S=S=S=S=S=S=S>S>S>S>S>S?S?S?S?S?S?S@S@S@S@S@SASASASASASASBSBSBSBSBSCSCSCSCSCSCSDSDSDSDSDSDSESESESESESFSFSFSFSFSFSGSGSGSGSGSHSHSHSHSHSHSISISISISISISJSJSJSJSJSJSKSKSKSKSKSLSLSLSLSLSLSMSMSMSMSMSMSNSNSNSNSNSNSOSOSOSOSOSPSPSPSPSPSPSQSQSQSQSQSQSRSRSRSRSRSRSSSSSSSSSSSSSTSTSTSTSTSTSUSUSUSUSUSUSVSVSVSVSVSVSWSWSWSWSWSWSXSXSXSXSXSXSYSYSYSYSYSYSZSZSZSZSZSZS[S[S[S[S[S[S\S\S\S\S\S\S]S]S]S]S]S]S]S^S^S^S^S^S^S_S_S_S_S_S_S`S`S`S`S`S`SaSaSaSaSaSaSbSbSbSbSbSbSbScScScScScScSdSdSdSdSdSdSeSeSeSeSeSeSeSfSfSfSfSfSfSgSgSgSgSgSgSgShShShShShShSiSiSiSiSiSiSjSjSjSjSjSjSjSkSkSkSkSkSkSlSlSlSlSlSlSlSmSmSmSmSmSmSnSnSnSnSnSnSnSoSoSoSoSoSoSoSpSpSpSpSpSpSqSqSqSqSqSqSqSrSrSrSrSrSrSrSsSsSsSsSsSsStStStStStStStSuSuSuSuSuSuSuSvSvSvSvSvSvSvSwSwSwSwSwSwSxSxSxSxSxSxSxSySySySySySySySzSzSzSzSzSzSzS{S{S{S{S{S{S{S|S|S|S|S|S|S|S}S}S}S}S}S}S}S~S~S~S~S~S~S~S
TTTTTTTTTTTTTT
T T T T T T T T T T T T T T T T!T!T!T!T!T!T!T!T!T!T!T!T!T!T!T"T"T"T"T"T"T"T"T"T"T"T"T"T"T"T#T#T#T#T#T#T#T#T#T#T#T#T#T#T#T$T$T$T$T$T$T$T$T$T$T$T$T$T$T$T$T%T%T%T%T%T%T%T%T%T%T%T%T%T%T%T&T&T&T&T&T&T&T&T&T&T&T&T&T&T&T&T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T(T(T(T(T(T(T(T(T(T(T(T(T(T(T(T(T)T)T)T)T)T)T)T)T)T*T*T*T*T*T*T*T*T+T+T+T+T+T+T+T+T,T,T,T,T,T,T,T,T,T-T-T-T-T-T-T-T-T.T.T.T.T.T.T.T.T/T/T/T/T/T/T/T/T/T0T0T0T0T0T0T0T0T1T1T1T1T1T1T1T1T1T2T2T2T2T2T2T2T2T3T3T3T3T3T3T3T3T3T4T4T4T4T4T4T4T4T4T5T5T5T5T5T5T5T5T6T6T6T6T6T6T6T6T6T7T7T7T7T7T7T7T7T7T8T8T8T8T8T8T8T8T8T9T9T9T9T9T9T9T9T9T:T:T:T:T:T:T:T:T:T:T;T;T;T;T;T;T;T;T;T<T<T<T<T<T<T<T<T<T=T=T=T=T=T=T=T=T=T>T>T>T>T>T>T>T>T>T>T?T?T?T?T?T?T?T?T?T@T@T@T@T@T@T@T@T@T@TATATATATATATATATATATBTBTBTBTBTBTBTBTBTCTCTCTCTCTCTCTCTCTCTDTDTDTDTDTDTDTDTDTDTETETETETETETETETETETFTFTFTFTFTFTFTFTFTFTGTGTGTGTGTGTGTGTGTGTHTHTHTHTHTHTHTHTHTHTHTITITITITITITITITITITJTJTJTJTJTJTJTJTJTJTKTKTKTKTKTKTKTKTKTKTKTLTLTLTLTLTLTLTLTLTLTMTMTMTMTMTMTMTMTMTMTMTNTNTNTNTNTNTNTNTNTNTNTOTOTOTOTOTOTOTOTOTOTPTPTPTPTPTPTPTPTPTPTPTQTQTQTQTQTQTQTQTQTQTQTRTRTRTRTRTRTRTRTRTRTRTSTSTSTSTSTSTSTSTSTSTSTTTTTTTTTTTTTTTTTTTTTTTTTUTUTUTUTUTUTUTUTUTUTUTVTVTVTVTVTVTVTVTVTVTVTWTWTWTWTWTWTWTWTWTWTWTWTXTXTXTXTXTXTXTXTXTXTXTYTYTYTYTYTYTYTYTYTYTYTYTZTZTZTZTZTZTZTZTZTZTZTZT[T[T[T[T[T[T[T[T[T[T[T[T\T\T\T\T\T\T\T\T\T\T\T\T]T]T]T]T]T]T]T]T]T]T]T]T^T^T^T^T^T^T^T^T^T^T^T^T_T_T_T_T_T_T_T_T_T_T_T_T`T`T`T`T`T`T`T`T`T`T`T`TaTaTaTaTaTaTaTaTaTaTaTaTaTbTbTbTbTbTbTbTbTbTbTbTbTcTcTcTcTcTcTcTcTcTcTcTcTcTdTdTdTdTdTdTdTdTdTdTdTdTdTeTeTeTeTeTeTeTeTeTeTeTeTfTfTfTfTfTfTfTfTfTfTfTfTfTgTgTgTgTgTgTgTgTgTgTgTgTgThThThThThThThThThThThThThTiTiTiTiTiTiTiTiTiTiTiTiTiTiTjTjTjTjTjTjTjTjTjTjTjTjTjTkTkTkTkTkTkTkTkTkTkTkTkTkTlTlTlTlTlTlTlTlTlTlTlTlTlTlTmTmTmTmTmTmTmTmTmTmTmTmTmTmTnTnTnTnTnTnTnTnTnTnTnTnTnToToToToToToToToToToToToToToTpTpTpTpTpTpTpTpTpTpTpTpTpTpTqTqTqTqTqTqTqTqTqTqTqTqTqTqTrTrTrTrTrTrTrTrTrTrTrTrTrTrTsTsTsTsTsTsTsTsTsTsTsTsTsTsTsTtTtTtTtTtTtTtTtTtTtTtTtTtTtTuTuTuTuTuTuTuTuTuTuTuTuTuTuTuTvTvTvTvTvTvTvTvTvTvTvTvTvTvTwTwTwTwTwTwTwTwTwTwTwTwTwTwTwTxTxTxTxTxTxTxTxTxTxTxTxTxTxTxTyTyTyTyTyTyTyTyTyTyTyTyTyTyTyTzTzTzTzTzTzTzTzTzTzTzTzTzTzTzT{T{T{T{T{T{T{T{T{T{T{T{T{T{T{T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T}T}T}T}T}T}T}T}T}T}T}T}T}T}T}T~T~T~T~T~T~T~T~T~T~T~T~T~T~T~T~T
UUUUUUUUUUUU
U U U U U U U U U U U U U U U!U!U!U!U!U!U!U!U!U!U!U!U!U!U"U"U"U"U"U"U"U"U"U"U"U"U"U"U#U#U#U#U#U#U#U#U#U#U#U#U#U#U$U$U$U$U$U$U$U$U$U$U$U$U$U$U%U%U%U%U%U%U%U%U%U%U%U%U%U%U%U&U&U&U&U&U&U&U&U&U&U&U&U&U&U'U'U'U'U'U'U'U'U'U'U'U'U'U'U'U(U(U(U(U(U(U(U(U(U(U(U(U(U(U(U)U)U)U)U)U)U)U)U)U)U)U)U)U)U*U*U*U*U*U*U*U*U*U*U*U*U*U*U*U+U+U+U+U+U+U+U+U+U+U+U+U+U+U+U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U-U-U-U-U-U-U-U-U-U-U-U-U-U-U-U-U.U.U.U.U.U.U.U.U.U.U.U.U.U.U.U/U/U/U/U/U/U/U/U/U/U/U/U/U/U/U/U0U0U0U0U0U0U0U0U0U0U0U0U0U0U0U1U1U1U1U1U1U1U1U1U1U1U1U1U1U1U1U2U2U2U2U2U2U2U2U2U2U2U2U2U2U2U2U3U3U3U3U3U3U3U3U3U3U3U4U4U4U4U4U4U4U4U5U5U5U5U5U5U5U5U6U6U6U6U6U6U6U6U7U7U7U7U7U7U7U7U8U8U8U8U8U8U8U8U8U9U9U9U9U9U9U9U9U:U:U:U:U:U:U:U:U:U;U;U;U;U;U;U;U;U<U<U<U<U<U<U<U<U<U=U=U=U=U=U=U=U=U>U>U>U>U>U>U>U>U>U?U?U?U?U?U?U?U?U?U@U@U@U@U@U@U@U@U@UAUAUAUAUAUAUAUAUAUBUBUBUBUBUBUBUBUBUCUCUCUCUCUCUCUCUCUDUDUDUDUDUDUDUDUDUEUEUEUEUEUEUEUEUEUFUFUFUFUFUFUFUFUFUGUGUGUGUGUGUGUGUGUGUHUHUHUHUHUHUHUHUHUIUIUIUIUIUIUIUIUIUIUJUJUJUJUJUJUJUJUJUKUKUKUKUKUKUKUKUKUKULULULULULULULULULULUMUMUMUMUMUMUMUMUMUMUNUNUNUNUNUNUNUNUNUOUOUOUOUOUOUOUOUOUOUPUPUPUPUPUPUPUPUPUPUQUQUQUQUQUQUQUQUQUQUQURURURURURURURURURURUSUSUSUSUSUSUSUSUSUSUTUTUTUTUTUTUTUTUTUTUUUUUUUUUUUUUUUUUUUUUUUVUVUVUVUVUVUVUVUVUVUWUWUWUWUWUWUWUWUWUWUWUXUXUXUXUXUXUXUXUXUXUXUYUYUYUYUYUYUYUYUYUYUYUZUZUZUZUZUZUZUZUZUZU[U[U[U[U[U[U[U[U[U[U[U\U\U\U\U\U\U\U\U\U\U\U]U]U]U]U]U]U]U]U]U]U]U]U^U^U^U^U^U^U^U^U^U^U^U_U_U_U_U_U_U_U_U_U_U_U`U`U`U`U`U`U`U`U`U`U`UaUaUaUaUaUaUaUaUaUaUaUaUbUbUbUbUbUbUbUbUbUbUbUcUcUcUcUcUcUcUcUcUcUcUcUdUdUdUdUdUdUdUdUdUdUdUdUeUeUeUeUeUeUeUeUeUeUeUeUfUfUfUfUfUfUfUfUfUfUfUfUgUgUgUgUgUgUgUgUgUgUgUgUhUhUhUhUhUhUhUhUhUhUhUhUiUiUiUiUiUiUiUiUiUiUiUiUjUjUjUjUjUjUjUjUjUjUjUjUkUkUkUkUkUkUkUkUkUkUkUkUkUlUlUlUlUlUlUlUlUlUlUlUlUmUmUmUmUmUmUmUmUmUmUmUmUmUnUnUnUnUnUnUnUnUnUnUnUnUoUoUoUoUoUoUoUoUoUoUoUoUoUpUpUpUpUpUpUpUpUpUpUpUpUpUqUqUqUqUqUqUqUqUqUqUqUqUqUrUrUrUrUrUrUrUrUrUrUrUrUrUsUsUsUsUsUsUsUsUsUsUsUsUsUtUtUtUtUtUtUtUtUtUtUtUtUtUtUuUuUuUuUuUuUuUuUuUuUuUuUuUvUvUvUvUvUvUvUvUvUvUvUvUvUvUwUwUwUwUwUwUwUwUwUwUwUwUwUxUxUxUxUxUxUxUxUxUxUxUxUxUxUyUyUyUyUyUyUyUyUyUyUyUyUyUyUzUzUzUzUzUzUzUzUzUzUzUzUzUzU{U{U{U{U{U{U{U{U{U{U{U{U{U{U|U|U|U|U|U|U|U|U|U|U|U|U|U|U}U}U}U}U}U}U}U}U}U}U}U}U}U}U~U~U~U~U~U~U~U~U~U~U~U~U~U~U~U
N7Imf_3_214TypedAttributeIN9Imath_3_23BoxINS1_4Vec2IiEEEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_23BoxINS1_4Vec2IfEEEEEE
N7Imf_3_214TypedAttributeINS_11ChannelListEEE
>N7Imf_3_214TypedAttributeINS_14ChromaticitiesEEE
N7Imf_3_221CompositeDeepScanLineE
N7Imf_3_212_GLOBAL__N_117LineCompositeTaskE
N7Imf_3_214TypedAttributeINS_11CompressionEEE
#+4=L
09'BN7Imf_3_210CompressorE
M[epN7Imf_3_215DeepCompositingE
N7Imf_3_214TypedAttributeINS_14DeepImageStateEEE
N7Imf_3_221DeepScanLineInputFileE
N7Imf_3_212_GLOBAL__N_114LineBufferTaskE
N7Imf_3_218DeepTiledInputFileE
N7Imf_3_212_GLOBAL__N_114TileBufferTaskE
N7Imf_3_214TypedAttributeIdEE
?ff&@
?xxx@33
R@ZZ
9@33
0@xxx@ZZ
l@33
@ff.A
$Aff
Aff&A
4A33
!Aff
A333A
$Aff
 '-46
!&.37<
"%/28;=#$019:>?
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
   ! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ 
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!<!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P!Q!R!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"p"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&~&
' '!'"'#'$'%'&'''(')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'L'M'N'O'P'Q'R'S'T'U'V'W'X'Y'Z'['\']'^'_'`'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
+ +!+"+#+$+%+&+'+(+)+*+++,+-+.+/+0+1+2+3+4+5+6+7+8+9+:+;+<+=+>+?+@+A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+[+\+]+^+_+`+a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z+{+|+}+~+
, ,!,",#,$,%,&,',(,),*,+,,,-,.,/,0,1,2,3,4,5,6,7,8,9,:,;,<,=,>,?,@,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,[,\,],^,_,`,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,{,|,},~,
- -!-"-#-$-%-&-'-(-)-*-+-,---.-/-0-1-2-3-4-5-6-7-8-9-:-;-<-=->-?-@-A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-[-\-]-^-_-`-a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z-{-|-}-~-
. .!.".#.$.%.&.'.(.).*.+.,.-.../.0.1.2.3.4.5.6.7.8.9.:.;.<.=.>.?.@.A.B.C.D.E.F.G.H.I.J.K.L.M.N.O.P.Q.R.S.T.U.V.W.X.Y.Z.[.\.].^._.`.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.{.|.}.~.
/ /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
0 0!0"0#0$0%0&0'0(0)0*0+0,0-0.0/000102030405060708090:0;0<0=0>0?0@0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
1 1!1"1#1$1%1&1'1(1)1*1+1,1-1.1/101112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2D2E2F2G2H2I2J2K2L2M2N2O2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2~2
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
4 4!4"4#4$4%4&4'4(4)4*4+4,4-4.4/404142434445464748494:4;4<4=4>4?4@4A4B4C4D4E4F4G4H4I4J4K4L4M4N4O4P4Q4R4S4T4U4V4W4X4Y4Z4[4\4]4^4_4`4a4b4c4d4e4f4g4h4i4j4k4l4m4n4o4p4q4r4s4t4u4v4w4x4y4z4{4|4}4~4
5 5!5"5#5$5%5&5'5(5)5*5+5,5-5.5/505152535455565758595:5;5<5=5>5?5@5A5B5C5D5E5F5G5H5I5J5K5L5M5N5O5P5Q5R5S5T5U5V5W5X5Y5Z5[5\5]5^5_5`5a5b5c5d5e5f5g5h5i5j5k5l5m5n5o5p5q5r5s5t5u5v5w5x5y5z5{5|5}5~5
6 6!6"6#6$6%6&6'6(6)6*6+6,6-6.6/606162636465666768696:6;6<6=6>6?6@6A6B6C6D6E6F6G6H6I6J6K6L6M6N6O6P6Q6R6S6T6U6V6W6X6Y6Z6[6\6]6^6_6`6a6b6c6d6e6f6g6h6i6j6k6l6m6n6o6p6q6r6s6t6u6v6w6x6y6z6{6|6}6~6
7 7!7"7#7$7%7&7'7(7)7*7+7,7-7.7/707172737475767778797:7;7<7=7>7?7@7A7B7C7D7E7F7G7H7I7J7K7L7M7N7O7P7Q7R7S7T7U7V7W7X7Y7Z7[7\7]7^7_7`7a7b7c7d7e7f7g7h7i7j7k7l7m7n7o7p7q7r7s7t7u7v7w7x7y7z7{7|7}7~7
8 8!8"8#8$8%8&8'8(8)8*8+8,8-8.8/808182838485868788898:8;8<8=8>8?8@8A8B8C8D8E8F8G8H8I8J8K8L8M8N8O8P8Q8R8S8T8U8V8W8X8Y8Z8[8\8]8^8_8`8a8b8c8d8e8f8g8h8i8j8k8l8m8n8o8p8q8r8s8t8u8v8w8x8y8z8{8|8}8~8
9 9!9"9#9$9%9&9'9(9)9*9+9,9-9.9/909192939495969798999:9;9<9=9>9?9@9A9B9C9D9E9F9G9H9I9J9K9L9M9N9O9P9Q9R9S9T9U9V9W9X9Y9Z9[9\9]9^9_9`9a9b9c9d9e9f9g9h9i9j9k9l9m9n9o9p9q9r9s9t9u9v9w9x9y9z9{9|9}9~9
: :!:":#:$:%:&:':(:):*:+:,:-:.:/:0:1:2:3:4:5:6:7:8:9:::;:<:=:>:?:@:A:B:C:D:E:F:G:H:I:J:K:L:M:N:O:P:Q:R:S:T:U:V:W:X:Y:Z:[:\:]:^:_:`:a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:q:r:s:t:u:v:w:x:y:z:{:|:}:~:
; ;!;";#;$;%;&;';(;);*;+;,;-;.;/;0;1;2;3;4;5;6;7;8;9;:;;;<;=;>;?;@;A;B;C;D;E;F;G;H;I;J;K;L;M;N;O;P;Q;R;S;T;U;V;W;X;Y;Z;[;\;];^;_;`;a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;{;|;};~;
< <!<"<#<$<%<&<'<(<)<*<+<,<-<.</<0<1<2<3<4<5<6<7<8<9<:<;<<<=<><?<@<A<B<C<D<E<F<G<H<I<J<K<L<M<N<O<P<Q<R<S<T<U<V<W<X<Y<Z<[<\<]<^<_<`<a<b<c<d<e<f<g<h<i<j<k<l<m<n<o<p<q<r<s<t<u<v<w<x<y<z<{<|<}<~<
= =!="=#=$=%=&='=(=)=*=+=,=-=.=/=0=1=2=3=4=5=6=7=8=9=:=;=<===>=?=@=A=B=C=D=E=F=G=H=I=J=K=L=M=N=O=P=Q=R=S=T=U=V=W=X=Y=Z=[=\=]=^=_=`=a=b=c=d=e=f=g=h=i=j=k=l=m=n=o=p=q=r=s=t=u=v=w=x=y=z={=|=}=~=
> >!>">#>$>%>&>'>(>)>*>+>,>->.>/>0>1>2>3>4>5>6>7>8>9>:>;><>=>>>?>@>A>B>C>D>E>F>G>H>I>J>K>L>M>N>O>P>Q>R>S>T>U>V>W>X>Y>Z>[>\>]>^>_>`>a>b>c>d>e>f>g>h>i>j>k>l>m>n>o>p>q>r>s>t>u>v>w>x>y>z>{>|>}>~>
? ?!?"?#?$?%?&?'?(?)?*?+?,?-?.?/?0?1?2?3?4?5?6?7?8?9?:?;?<?=?>???@?A?B?C?D?E?F?G?H?I?J?K?L?M?N?O?P?Q?R?S?T?U?V?W?X?Y?Z?[?\?]?^?_?`?a?b?c?d?e?f?g?h?i?j?k?l?m?n?o?p?q?r?s?t?u?v?w?x?y?z?{?|?}?~?
@ @!@"@#@$@%@&@'@(@)@*@+@,@-@.@/@0@1@2@3@4@5@6@7@8@9@:@;@<@=@>@?@@@A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@[@\@]@^@_@`@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@{@|@}@~@
A A!A"A#A$A%A&A'A(A)A*A+A,A-A.A/A0A1A2A3A4A5A6A7A8A9A:A;A<A=A>A?A@AAABACADAEAFAGAHAIAJAKALAMANAOAPAQARASATAUAVAWAXAYAZA[A\A]A^A_A`AaAbAcAdAeAfAgAhAiAjAkAlAmAnAoApAqArAsAtAuAvAwAxAyAzA{A|A}A~A
B B!B"B#B$B%B&B'B(B)B*B+B,B-B.B/B0B1B2B3B4B5B6B7B8B9B:B;B<B=B>B?B@BABBBCBDBEBFBGBHBIBJBKBLBMBNBOBPBQBRBSBTBUBVBWBXBYBZB[B\B]B^B_B`BaBbBcBdBeBfBgBhBiBjBkBlBmBnBoBpBqBrBsBtBuBvBwBxByBzB{B|B}B~B
C C!C"C#C$C%C&C'C(C)C*C+C,C-C.C/C0C1C2C3C4C5C6C7C8C9C:C;C<C=C>C?C@CACBCCCDCECFCGCHCICJCKCLCMCNCOCPCQCRCSCTCUCVCWCXCYCZC[C\C]C^C_C`CaCbCcCdCeCfCgChCiCjCkClCmCnCoCpCqCrCsCtCuCvCwCxCyCzC{C|C}C~C
D D!D"D#D$D%D&D'D(D)D*D+D,D-D.D/D0D1D2D3D4D5D6D7D8D9D:D;D<D=D>D?D@DADBDCDDDEDFDGDHDIDJDKDLDMDNDODPDQDRDSDTDUDVDWDXDYDZD[D\D]D^D_D`DaDbDcDdDeDfDgDhDiDjDkDlDmDnDoDpDqDrDsDtDuDvDwDxDyDzD{D|D}D~D
E E!E"E#E$E%E&E'E(E)E*E+E,E-E.E/E0E1E2E3E4E5E6E7E8E9E:E;E<E=E>E?E@EAEBECEDEEEFEGEHEIEJEKELEMENEOEPEQERESETEUEVEWEXEYEZE[E\E]E^E_E`EaEbEcEdEeEfEgEhEiEjEkElEmEnEoEpEqErEsEtEuEvEwExEyEzE{E|E}E~E
F F!F"F#F$F%F&F'F(F)F*F+F,F-F.F/F0F1F2F3F4F5F6F7F8F9F:F;F<F=F>F?F@FAFBFCFDFEFFFGFHFIFJFKFLFMFNFOFPFQFRFSFTFUFVFWFXFYFZF[F\F]F^F_F`FaFbFcFdFeFfFgFhFiFjFkFlFmFnFoFpFqFrFsFtFuFvFwFxFyFzF{F|F}F~F
G G!G"G#G$G%G&G'G(G)G*G+G,G-G.G/G0G1G2G3G4G5G6G7G8G9G:G;G<G=G>G?G@GAGBGCGDGEGFGGGHGIGJGKGLGMGNGOGPGQGRGSGTGUGVGWGXGYGZG[G\G]G^G_G`GaGbGcGdGeGfGgGhGiGjGkGlGmGnGoGpGqGrGsGtGuGvGwGxGyGzG{G|G}G~G
H H!H"H#H$H%H&H'H(H)H*H+H,H-H.H/H0H1H2H3H4H5H6H7H8H9H:H;H<H=H>H?H@HAHBHCHDHEHFHGHHHIHJHKHLHMHNHOHPHQHRHSHTHUHVHWHXHYHZH[H\H]H^H_H`HaHbHcHdHeHfHgHhHiHjHkHlHmHnHoHpHqHrHsHtHuHvHwHxHyHzH{H|H}H~H
I I!I"I#I$I%I&I'I(I)I*I+I,I-I.I/I0I1I2I3I4I5I6I7I8I9I:I;I<I=I>I?I@IAIBICIDIEIFIGIHIIIJIKILIMINIOIPIQIRISITIUIVIWIXIYIZI[I\I]I^I_I`IaIbIcIdIeIfIgIhIiIjIkIlImInIoIpIqIrIsItIuIvIwIxIyIzI{I|I}I~I
J J!J"J#J$J%J&J'J(J)J*J+J,J-J.J/J0J1J2J3J4J5J6J7J8J9J:J;J<J=J>J?J@JAJBJCJDJEJFJGJHJIJJJKJLJMJNJOJPJQJRJSJTJUJVJWJXJYJZJ[J\J]J^J_J`JaJbJcJdJeJfJgJhJiJjJkJlJmJnJoJpJqJrJsJtJuJvJwJxJyJzJ{J|J}J~J
K K!K"K#K$K%K&K'K(K)K*K+K,K-K.K/K0K1K2K3K4K5K6K7K8K9K:K;K<K=K>K?K@KAKBKCKDKEKFKGKHKIKJKKKLKMKNKOKPKQKRKSKTKUKVKWKXKYKZK[K\K]K^K_K`KaKbKcKdKeKfKgKhKiKjKkKlKmKnKoKpKqKrKsKtKuKvKwKxKyKzK{K|K}K~K
L L!L"L#L$L%L&L'L(L)L*L+L,L-L.L/L0L1L2L3L4L5L6L7L8L9L:L;L<L=L>L?L@LALBLCLDLELFLGLHLILJLKLLLMLNLOLPLQLRLSLTLULVLWLXLYLZL[L\L]L^L_L`LaLbLcLdLeLfLgLhLiLjLkLlLmLnLoLpLqLrLsLtLuLvLwLxLyLzL{L|L}L~L
M M!M"M#M$M%M&M'M(M)M*M+M,M-M.M/M0M1M2M3M4M5M6M7M8M9M:M;M<M=M>M?M@MAMBMCMDMEMFMGMHMIMJMKMLMMMNMOMPMQMRMSMTMUMVMWMXMYMZM[M\M]M^M_M`MaMbMcMdMeMfMgMhMiMjMkMlMmMnMoMpMqMrMsMtMuMvMwMxMyMzM{M|M}M~M
N N!N"N#N$N%N&N'N(N)N*N+N,N-N.N/N0N1N2N3N4N5N6N7N8N9N:N;N<N=N>N?N@NANBNCNDNENFNGNHNINJNKNLNMNNNONPNQNRNSNTNUNVNWNXNYNZN[N\N]N^N_N`NaNbNcNdNeNfNgNhNiNjNkNlNmNnNoNpNqNrNsNtNuNvNwNxNyNzN{N|N}N~N
O O!O"O#O$O%O&O'O(O)O*O+O,O-O.O/O0O1O2O3O4O5O6O7O8O9O:O;O<O=O>O?O@OAOBOCODOEOFOGOHOIOJOKOLOMONOOOPOQOROSOTOUOVOWOXOYOZO[O\O]O^O_O`OaObOcOdOeOfOgOhOiOjOkOlOmOnOoOpOqOrOsOtOuOvOwOxOyOzO{O|O}O~O
P P!P"P#P$P%P&P'P(P)P*P+P,P-P.P/P0P1P2P3P4P5P6P7P8P9P:P;P<P=P>P?P@PAPBPCPDPEPFPGPHPIPJPKPLPMPNPOPPPQPRPSPTPUPVPWPXPYPZP[P\P]P^P_P`PaPbPcPdPePfPgPhPiPjPkPlPmPnPoPpPqPrPsPtPuPvPwPxPyPzP{P|P}P~P
Q Q!Q"Q#Q$Q%Q&Q'Q(Q)Q*Q+Q,Q-Q.Q/Q0Q1Q2Q3Q4Q5Q6Q7Q8Q9Q:Q;Q<Q=Q>Q?Q@QAQBQCQDQEQFQGQHQIQJQKQLQMQNQOQPQQQRQSQTQUQVQWQXQYQZQ[Q\Q]Q^Q_Q`QaQbQcQdQeQfQgQhQiQjQkQlQmQnQoQpQqQrQsQtQuQvQwQxQyQzQ{Q|Q}Q~Q
R R!R"R#R$R%R&R'R(R)R*R+R,R-R.R/R0R1R2R3R4R5R6R7R8R9R:R;R<R=R>R?R@RARBRCRDRERFRGRHRIRJRKRLRMRNRORPRQRRRSRTRURVRWRXRYRZR[R\R]R^R_R`RaRbRcRdReRfRgRhRiRjRkRlRmRnRoRpRqRrRsRtRuRvRwRxRyRzR{R|R}R~R
S S!S"S#S$S%S&S'S(S)S*S+S,S-S.S/S0S1S2S3S4S5S6S7S8S9S:S;S<S=S>S?S@SASBSCSDSESFSGSHSISJSKSLSMSNSOSPSQSRSSSTSUSVSWSXSYSZS[S\S]S^S_S`SaSbScSdSeSfSgShSiSjSkSlSmSnSoSpSqSrSsStSuSvSwSxSySzS{S|S}S~S
T T!T"T#T$T%T&T'T(T)T*T+T,T-T.T/T0T1T2T3T4T5T6T7T8T9T:T;T<T=T>T?T@TATBTCTDTETFTGTHTITJTKTLTMTNTOTPTQTRTSTTTUTVTWTXTYTZT[T\T]T^T_T`TaTbTcTdTeTfTgThTiTjTkTlTmTnToTpTqTrTsTtTuTvTwTxTyTzT{T|T}T~T
U U!U"U#U$U%U&U'U(U)U*U+U,U-U.U/U0U1U2U3U4U5U6U7U8U9U:U;U<U=U>U?U@UAUBUCUDUEUFUGUHUIUJUKULUMUNUOUPUQURUSUTUUUVUWUXUYUZU[U\U]U^U_U`UaUbUcUdUeUfUgUhUiUjUkUlUmUnUoUpUqUrUsUtUuUvUwUxUyUzU{U|U}U~U
V V!V"V#V$V%V&V'V(V)V*V+V,V-V.V/V0V1V2V3V4V5V6V7V8V9V:V;V<V=V>V?V@VAVBVCVDVEVFVGVHVIVJVKVLVMVNVOVPVQVRVSVTVUVVVWVXVYVZV[V\V]V^V_V`VaVbVcVdVeVfVgVhViVjVkVlVmVnVoVpVqVrVsVtVuVvVwVxVyVzV{V|V}V~V
W W!W"W#W$W%W&W'W(W)W*W+W,W-W.W/W0W1W2W3W4W5W6W7W8W9W:W;W<W=W>W?W@WAWBWCWDWEWFWGWHWIWJWKWLWMWNWOWPWQWRWSWTWUWVWWWXWYWZW[W\W]W^W_W`WaWbWcWdWeWfWgWhWiWjWkWlWmWnWoWpWqWrWsWtWuWvWwWxWyWzW{W|W}W~W
X X!X"X#X$X%X&X'X(X)X*X+X,X-X.X/X0X1X2X3X4X5X6X7X8X9X:X;X<X=X>X?X@XAXBXCXDXEXFXGXHXIXJXKXLXMXNXOXPXQXRXSXTXUXVXWXXXYXZX[X\X]X^X_X`XaXbXcXdXeXfXgXhXiXjXkXlXmXnXoXpXqXrXsXtXuXvXwXxXyXzX{X|X}X~X
Y Y!Y"Y#Y$Y%Y&Y'Y(Y)Y*Y+Y,Y-Y.Y/Y0Y1Y2Y3Y4Y5Y6Y7Y8Y9Y:Y;Y<Y=Y>Y?Y@YAYBYCYDYEYFYGYHYIYJYKYLYMYNYOYPYQYRYSYTYUYVYWYXYYYZY[Y\Y]Y^Y_Y`YaYbYcYdYeYfYgYhYiYjYkYlYmYnYoYpYqYrYsYtYuYvYwYxYyYzY{Y|Y}Y~Y
Z Z!Z"Z#Z$Z%Z&Z'Z(Z)Z*Z+Z,Z-Z.Z/Z0Z1Z2Z3Z4Z5Z6Z7Z8Z9Z:Z;Z<Z=Z>Z?Z@ZAZBZCZDZEZFZGZHZIZJZKZLZMZNZOZPZQZRZSZTZUZVZWZXZYZZZ[Z\Z]Z^Z_Z`ZaZbZcZdZeZfZgZhZiZjZkZlZmZnZoZpZqZrZsZtZuZvZwZxZyZzZ{Z|Z}Z~Z
[ [!["[#[$[%[&['[([)[*[+[,[-[.[/[0[1[2[3[4[5[6[7[8[9[:[;[<[=[>[?[@[A[B[C[D[E[F[G[H[I[J[K[L[M[N[O[P[Q[R[S[T[U[V[W[X[Y[Z[[[\[][^[_[`[a[b[c[d[e[f[g[h[i[j[k[l[m[n[o[p[q[r[s[t[u[v[w[x[y[z[{[|[}[~[
\ \!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\0\1\2\3\4\5\6\7\8\9\:\;\<\=\>\?\@\A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z\[\\\]\^\_\`\a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z\{\|\}\~\
] ]!]"]#]$]%]&]'](])]*]+],]-].]/]0]1]2]3]4]5]6]7]8]9]:];]<]=]>]?]@]A]B]C]D]E]F]G]H]I]J]K]L]M]N]O]P]Q]R]S]T]U]V]W]X]Y]Z][]\]]]^]_]`]a]b]c]d]e]f]g]h]i]j]k]l]m]n]o]p]q]r]s]t]u]v]w]x]y]z]{]|]}]~]
^ ^!^"^#^$^%^&^'^(^)^*^+^,^-^.^/^0^1^2^3^4^5^6^7^8^9^:^;^<^=^>^?^@^A^B^C^D^E^F^G^H^I^J^K^L^M^N^O^P^Q^R^S^T^U^V^W^X^Y^Z^[^\^]^^^_^`^a^b^c^d^e^f^g^h^i^j^k^l^m^n^o^p^q^r^s^t^u^v^w^x^y^z^{^|^}^~^
_ _!_"_#_$_%_&_'_(_)_*_+_,_-_._/_0_1_2_3_4_5_6_7_8_9_:_;_<_=_>_?_@_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X_Y_Z_[_\_]_^___`_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_{_|_}_~_
` `!`"`#`$`%`&`'`(`)`*`+`,`-`.`/`0`1`2`3`4`5`6`7`8`9`:`;`<`=`>`?`@`A`B`C`D`E`F`G`H`I`J`K`L`M`N`O`P`Q`R`S`T`U`V`W`X`Y`Z`[`\`]`^`_```a`b`c`d`e`f`g`h`i`j`k`l`m`n`o`p`q`r`s`t`u`v`w`x`y`z`{`|`}`~`
a a!a"a#a$a%a&a'a(a)a*a+a,a-a.a/a0a1a2a3a4a5a6a7a8a9a:a;a<a=a>a?a@aAaBaCaDaEaFaGaHaIaJaKaLaMaNaOaPaQaRaSaTaUaVaWaXaYaZa[a\a]a^a_a`aaabacadaeafagahaiajakalamanaoapaqarasatauavawaxayaza{a|a}a~a
b b!b"b#b$b%b&b'b(b)b*b+b,b-b.b/b0b1b2b3b4b5b6b7b8b9b:b;b<b=b>b?b@bAbBbCbDbEbFbGbHbIbJbKbLbMbNbObPbQbRbSbTbUbVbWbXbYbZb[b\b]b^b_b`babbbcbdbebfbgbhbibjbkblbmbnbobpbqbrbsbtbubvbwbxbybzb{b|b}b~b
c c!c"c#c$c%c&c'c(c)c*c+c,c-c.c/c0c1c2c3c4c5c6c7c8c9c:c;c<c=c>c?c@cAcBcCcDcEcFcGcHcIcJcKcLcMcNcOcPcQcRcScTcUcVcWcXcYcZc[c\c]c^c_c`cacbcccdcecfcgchcicjckclcmcncocpcqcrcsctcucvcwcxcyczc{c|c}c~c
d d!d"d#d$d%d&d'd(d)d*d+d,d-d.d/d0d1d2d3d4d5d6d7d8d9d:d;d<d=d>d?d@dAdBdCdDdEdFdGdHdIdJdKdLdMdNdOdPdQdRdSdTdUdVdWdXdYdZd[d\d]d^d_d`dadbdcdddedfdgdhdidjdkdldmdndodpdqdrdsdtdudvdwdxdydzd{d|d}d~d
e e!e"e#e$e%e&e'e(e)e*e+e,e-e.e/e0e1e2e3e4e5e6e7e8e9e:e;e<e=e>e?e@eAeBeCeDeEeFeGeHeIeJeKeLeMeNeOePeQeReSeTeUeVeWeXeYeZe[e\e]e^e_e`eaebecedeeefegeheiejekelemeneoepeqereseteuevewexeyeze{e|e}e~e
f f!f"f#f$f%f&f'f(f)f*f+f,f-f.f/f0f1f2f3f4f5f6f7f8f9f:f;f<f=f>f?f@fAfBfCfDfEfFfGfHfIfJfKfLfMfNfOfPfQfRfSfTfUfVfWfXfYfZf[f\f]f^f_f`fafbfcfdfefffgfhfifjfkflfmfnfofpfqfrfsftfufvfwfxfyfzf{f|f}f~f
g g!g"g#g$g%g&g'g(g)g*g+g,g-g.g/g0g1g2g3g4g5g6g7g8g9g:g;g<g=g>g?g@gAgBgCgDgEgFgGgHgIgJgKgLgMgNgOgPgQgRgSgTgUgVgWgXgYgZg[g\g]g^g_g`gagbgcgdgegfggghgigjgkglgmgngogpgqgrgsgtgugvgwgxgygzg{g|g}g~g
h h!h"h#h$h%h&h'h(h)h*h+h,h-h.h/h0h1h2h3h4h5h6h7h8h9h:h;h<h=h>h?h@hAhBhChDhEhFhGhHhIhJhKhLhMhNhOhPhQhRhShThUhVhWhXhYhZh[h\h]h^h_h`hahbhchdhehfhghhhihjhkhlhmhnhohphqhrhshthuhvhwhxhyhzh{h|h}h~h
i i!i"i#i$i%i&i'i(i)i*i+i,i-i.i/i0i1i2i3i4i5i6i7i8i9i:i;i<i=i>i?i@iAiBiCiDiEiFiGiHiIiJiKiLiMiNiOiPiQiRiSiTiUiViWiXiYiZi[i\i]i^i_i`iaibicidieifigihiiijikiliminioipiqirisitiuiviwixiyizi{i|i}i~i
j j!j"j#j$j%j&j'j(j)j*j+j,j-j.j/j0j1j2j3j4j5j6j7j8j9j:j;j<j=j>j?j@jAjBjCjDjEjFjGjHjIjJjKjLjMjNjOjPjQjRjSjTjUjVjWjXjYjZj[j\j]j^j_j`jajbjcjdjejfjgjhjijjjkjljmjnjojpjqjrjsjtjujvjwjxjyjzj{j|j}j~j
k k!k"k#k$k%k&k'k(k)k*k+k,k-k.k/k0k1k2k3k4k5k6k7k8k9k:k;k<k=k>k?k@kAkBkCkDkEkFkGkHkIkJkKkLkMkNkOkPkQkRkSkTkUkVkWkXkYkZk[k\k]k^k_k`kakbkckdkekfkgkhkikjkkklkmknkokpkqkrksktkukvkwkxkykzk{k|k}k~k
l l!l"l#l$l%l&l'l(l)l*l+l,l-l.l/l0l1l2l3l4l5l6l7l8l9l:l;l<l=l>l?l@lAlBlClDlElFlGlHlIlJlKlLlMlNlOlPlQlRlSlTlUlVlWlXlYlZl[l\l]l^l_l`lalblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl{l|l}l~l
m m!m"m#m$m%m&m'm(m)m*m+m,m-m.m/m0m1m2m3m4m5m6m7m8m9m:m;m<m=m>m?m@mAmBmCmDmEmFmGmHmImJmKmLmMmNmOmPmQmRmSmTmUmVmWmXmYmZm[m\m]m^m_m`mambmcmdmemfmgmhmimjmkmlmmmnmompmqmrmsmtmumvmwmxmymzm{m|m}m~m
n n!n"n#n$n%n&n'n(n)n*n+n,n-n.n/n0n1n2n3n4n5n6n7n8n9n:n;n<n=n>n?n@nAnBnCnDnEnFnGnHnInJnKnLnMnNnOnPnQnRnSnTnUnVnWnXnYnZn[n\n]n^n_n`nanbncndnenfngnhninjnknlnmnnnonpnqnrnsntnunvnwnxnynzn{n|n}n~n
o o!o"o#o$o%o&o'o(o)o*o+o,o-o.o/o0o1o2o3o4o5o6o7o8o9o:o;o<o=o>o?o@oAoBoCoDoEoFoGoHoIoJoKoLoMoNoOoPoQoRoSoToUoVoWoXoYoZo[o\o]o^o_o`oaobocodoeofogohoiojokolomonooopoqorosotouovowoxoyozo{o|o}o~o
p p!p"p#p$p%p&p'p(p)p*p+p,p-p.p/p0p1p2p3p4p5p6p7p8p9p:p;p<p=p>p?p@pApBpCpDpEpFpGpHpIpJpKpLpMpNpOpPpQpRpSpTpUpVpWpXpYpZp[p\p]p^p_p`papbpcpdpepfpgphpipjpkplpmpnpopppqprpsptpupvpwpxpypzp{p|p}p~p
q q!q"q#q$q%q&q'q(q)q*q+q,q-q.q/q0q1q2q3q4q5q6q7q8q9q:q;q<q=q>q?q@qAqBqCqDqEqFqGqHqIqJqKqLqMqNqOqPqQqRqSqTqUqVqWqXqYqZq[q\q]q^q_q`qaqbqcqdqeqfqgqhqiqjqkqlqmqnqoqpqqqrqsqtquqvqwqxqyqzq{q|q}q~q
r r!r"r#r$r%r&r'r(r)r*r+r,r-r.r/r0r1r2r3r4r5r6r7r8r9r:r;r<r=r>r?r@rArBrCrDrErFrGrHrIrJrKrLrMrNrOrPrQrRrSrTrUrVrWrXrYrZr[r\r]r^r_r`rarbrcrdrerfrgrhrirjrkrlrmrnrorprqrrrsrtrurvrwrxryrzr{r|r}r~r
s s!s"s#s$s%s&s's(s)s*s+s,s-s.s/s0s1s2s3s4s5s6s7s8s9s:s;s<s=s>s?s@sAsBsCsDsEsFsGsHsIsJsKsLsMsNsOsPsQsRsSsTsUsVsWsXsYsZs[s\s]s^s_s`sasbscsdsesfsgshsisjskslsmsnsospsqsrssstsusvswsxsyszs{s|s}s~s
t t!t"t#t$t%t&t't(t)t*t+t,t-t.t/t0t1t2t3t4t5t6t7t8t9t:t;t<t=t>t?t@tAtBtCtDtEtFtGtHtItJtKtLtMtNtOtPtQtRtStTtUtVtWtXtYtZt[t\t]t^t_t`tatbtctdtetftgthtitjtktltmtntotptqtrtstttutvtwtxtytzt{t|t}t~t
u u!u"u#u$u%u&u'u(u)u*u+u,u-u.u/u0u1u2u3u4u5u6u7u8u9u:u;u<u=u>u?u@uAuBuCuDuEuFuGuHuIuJuKuLuMuNuOuPuQuRuSuTuUuVuWuXuYuZu[u\u]u^u_u`uaubucudueufuguhuiujukulumunuoupuqurusutuuuvuwuxuyuzu{u|u}u~u
v v!v"v#v$v%v&v'v(v)v*v+v,v-v.v/v0v1v2v3v4v5v6v7v8v9v:v;v<v=v>v?v@vAvBvCvDvEvFvGvHvIvJvKvLvMvNvOvPvQvRvSvTvUvVvWvXvYvZv[v\v]v^v_v`vavbvcvdvevfvgvhvivjvkvlvmvnvovpvqvrvsvtvuvvvwvxvyvzv{v|v}v~v
w w!w"w#w$w%w&w'w(w)w*w+w,w-w.w/w0w1w2w3w4w5w6w7w8w9w:w;w<w=w>w?w@wAwBwCwDwEwFwGwHwIwJwKwLwMwNwOwPwQwRwSwTwUwVwWwXwYwZw[w\w]w^w_w`wawbwcwdwewfwgwhwiwjwkwlwmwnwowpwqwrwswtwuwvwwwxwywzw{w|w}w~w
x x!x"x#x$x%x&x'x(x)x*x+x,x-x.x/x0x1x2x3x4x5x6x7x8x9x:x;x<x=x>x?x@xAxBxCxDxExFxGxHxIxJxKxLxMxNxOxPxQxRxSxTxUxVxWxXxYxZx[x\x]x^x_x`xaxbxcxdxexfxgxhxixjxkxlxmxnxoxpxqxrxsxtxuxvxwxxxyxzx{x|x}x~x
y y!y"y#y$y%y&y'y(y)y*y+y,y-y.y/y0y1y2y3y4y5y6y7y8y9y:y;y<y=y>y?y@yAyByCyDyEyFyGyHyIyJyKyLyMyNyOyPyQyRySyTyUyVyWyXyYyZy[y\y]y^y_y`yaybycydyeyfygyhyiyjykylymynyoypyqyrysytyuyvywyxyyyzy{y|y}y~y
z z!z"z#z$z%z&z'z(z)z*z+z,z-z.z/z0z1z2z3z4z5z6z7z8z9z:z;z<z=z>z?z@zAzBzCzDzEzFzGzHzIzJzKzLzMzNzOzPzQzRzSzTzUzVzWzXzYzZz[z\z]z^z_z`zazbzczdzezfzgzhzizjzkzlzmznzozpzqzrzsztzuzvzwzxzyzzz{z|z}z~z
{ {!{"{#{${%{&{'{({){*{+{,{-{.{/{0{1{2{3{4{5{6{7{8{9{:{;{<{={>{?{@{A{B{C{D{E{F{G{H{I{J{K{L{M{N{O{P{Q{R{S{T{U{V{W{X{Y{Z{[{\{]{^{_{`{a{b{c{d{e{f{g{h{i{j{k{l{m{n{o{p{q{r{s{t{u{v{w{x{y{z{{{|{}{~{
| |!|"|#|$|%|&|'|(|)|*|+|,|-|.|/|0|1|2|3|4|5|6|7|8|9|:|;|<|=|>|?|@|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|[|\|]|^|_|`|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|{|||}|~|
} }!}"}#}$}%}&}'}(})}*}+},}-}.}/}0}1}2}3}4}5}6}7}8}9}:};}<}=}>}?}@}A}B}C}D}E}F}G}H}I}J}K}L}M}N}O}P}Q}R}S}T}U}V}W}X}Y}Z}[}\}]}^}_}`}a}b}c}d}e}f}g}h}i}j}k}l}m}n}o}p}q}r}s}t}u}v}w}x}y}z}{}|}}}~}
~ ~!~"~#~$~%~&~'~(~)~*~+~,~-~.~/~0~1~2~3~4~5~6~7~8~9~:~;~<~=~>~?~@~A~B~C~D~E~F~G~H~I~J~K~L~M~N~O~P~Q~R~S~T~U~V~W~X~Y~Z~[~\~]~^~_~`~a~b~c~d~e~f~g~h~i~j~k~l~m~n~o~p~q~r~s~t~u~v~w~x~y~z~{~|~}~~~
 !
 !
 !
 "
 $
 $
 (&
 (
 (
 (*
 (
 0,
 0,
 01.
@0
@0
@02
@0
@04
@04
@086
@0
@A8
@A8
@A8:
@A8
@A8<
@AC<
@AC<>
@B
@D
@D
@HF
@H
@H
@HJ
@H
@PL
@PL
@PQN
@P
@P
@PR
@P
@PT
@PT
@PXV
@P
@`X
@`X
@`XZ
@`X
@`a\
@`a\
@`a\^
`b
`d
`d
`hf
`h
`h
`hj
`h
`pl
`pl
`pqn
pr
pt
pt
pxv
px
xz
x|
x|
x|~
   ! 
   ! 
   ! 
   " 
   $ 
   $ 
   ( & 
   ( 
   ( 
   ( * 
   ( 
   0 , 
   0 , 
   0 1 . 
 @ 0 
 @ 0 
 @ 0 2 
 @ 0 
 @ 0 4 
 @ 0 4 
 @ 0 8 6 
 @ 0 
 @ A 8 
 @ A 8 
 @ A 8 : 
 @ A 8 
 @ A 8 < 
 @ A C < 
 @ A C < > 
 @ B 
 @ D 
 @ D 
 @ H F 
 @ H 
 @ H 
 @ H J 
 @ H 
 @ P L 
 @ P L 
 @ P Q N 
 @ P 
 @ P 
 @ P R 
 @ P 
 @ P T 
 @ P T 
 @ P X V 
 @ P 
 @ ` X 
 @ ` X 
 @ ` X Z 
 @ ` X 
 @ ` a \ 
 @ ` a \ 
 @ ` a \ ^ 
 ` b 
 ` d 
 ` d 
 ` h f 
 ` h 
 ` h 
 ` h j 
 ` h 
 ` p l 
 ` p l 
 ` p q n 
 p r 
 p t 
 p t 
 p x v 
 p x 
 x z 
 x | 
 x | 
 x | ~ 
! !!!
! !!!
! !!!
! !"!
! !$!
! !$!
! !(!&!
! !(!
! !(!
! !(!*!
! !(!
! !0!,!
! !0!,!
! !0!1!.!
!@!0!
!@!0!
!@!0!2!
!@!0!
!@!0!4!
!@!0!4!
!@!0!8!6!
!@!0!
!@!A!8!
!@!A!8!
!@!A!8!:!
!@!A!8!
!@!A!8!<!
!@!A!C!<!
!@!A!C!<!>!
!@!B!
!@!D!
!@!D!
!@!H!F!
!@!H!
!@!H!
!@!H!J!
!@!H!
!@!P!L!
!@!P!L!
!@!P!Q!N!
!@!P!
!@!P!
!@!P!R!
!@!P!
!@!P!T!
!@!P!T!
!@!P!X!V!
!@!P!
!@!`!X!
!@!`!X!
!@!`!X!Z!
!@!`!X!
!@!`!a!\!
!@!`!a!\!
!@!`!a!\!^!
!`!b!
!`!d!
!`!d!
!`!h!f!
!`!h!
!`!h!
!`!h!j!
!`!h!
!`!p!l!
!`!p!l!
!`!p!q!n!
!p!r!
!p!t!
!p!t!
!p!x!v!
!p!x!
!x!z!
!x!|!
!x!|!
!x!|!~!
" "!"
" "!"
" "!"
" """
" "$"
" "$"
" "("&"
" "("
" "("
" "("*"
" "("
" "0","
" "0","
" "0"1"."
"@"0"
"@"0"
"@"0"2"
"@"0"
"@"0"4"
"@"0"4"
"@"0"8"6"
"@"0"
"@"A"8"
"@"A"8"
"@"A"8":"
"@"A"8"
"@"A"8"<"
"@"A"C"<"
"@"A"C"<">"
"@"B"
"@"D"
"@"D"
"@"H"F"
"@"H"
"@"H"
"@"H"J"
"@"H"
"@"P"L"
"@"P"L"
"@"P"Q"N"
"@"P"
"@"P"
"@"P"R"
"@"P"
"@"P"T"
"@"P"T"
"@"P"X"V"
"@"P"
"@"`"X"
"@"`"X"
"@"`"X"Z"
"@"`"X"
"@"`"a"\"
"@"`"a"\"
"@"`"a"\"^"
"`"b"
"`"d"
"`"d"
"`"h"f"
"`"h"
"`"h"
"`"h"j"
"`"h"
"`"p"l"
"`"p"l"
"`"p"q"n"
"p"r"
"p"t"
"p"t"
"p"x"v"
"p"x"
"x"z"
"x"|"
"x"|"
"x"|"~"
# #!#
# #!#
# #!#
# #"#
# #$#
# #$#
# #(#&#
# #(#
# #(#
# #(#*#
# #(#
# #0#,#
# #0#,#
# #0#1#.#
#@#0#
#@#0#
#@#0#2#
#@#0#
#@#0#4#
#@#0#4#
#@#0#8#6#
#@#0#
#@#A#8#
#@#A#8#
#@#A#8#:#
#@#A#8#
#@#A#8#<#
#@#A#C#<#
#@#A#C#<#>#
#@#B#
#@#D#
#@#D#
#@#H#F#
#@#H#
#@#H#
#@#H#J#
#@#H#
#@#P#L#
#@#P#L#
#@#P#Q#N#
#@#P#
#@#P#
#@#P#R#
#@#P#
#@#P#T#
#@#P#T#
#@#P#X#V#
#@#P#
#@#`#X#
#@#`#X#
#@#`#X#Z#
#@#`#X#
#@#`#a#\#
#@#`#a#\#
#@#`#a#\#^#
#`#b#
#`#d#
#`#d#
#`#h#f#
#`#h#
#`#h#
#`#h#j#
#`#h#
#`#p#l#
#`#p#l#
#`#p#q#n#
#p#r#
#p#t#
#p#t#
#p#x#v#
#p#x#
#x#z#
#x#|#
#x#|#
#x#|#~#
$ $!$
$ $!$
$ $!$
$ $"$
$ $$$
$ $$$
$ $($&$
$ $($
$ $($
$ $($*$
$ $($
$ $0$,$
$ $0$,$
$ $0$1$.$
$@$0$
$@$0$
$@$0$2$
$@$0$
$@$0$4$
$@$0$4$
$@$0$8$6$
$@$0$
$@$A$8$
$@$A$8$
$@$A$8$:$
$@$A$8$
$@$A$8$<$
$@$A$C$<$
$@$A$C$<$>$
$@$B$
$@$D$
$@$D$
$@$H$F$
$@$H$
$@$H$
$@$H$J$
$@$H$
$@$P$L$
$@$P$L$
$@$P$Q$N$
$@$P$
$@$P$
$@$P$R$
$@$P$
$@$P$T$
$@$P$T$
$@$P$X$V$
$@$P$
$@$`$X$
$@$`$X$
$@$`$X$Z$
$@$`$X$
$@$`$a$\$
$@$`$a$\$
$@$`$a$\$^$
$`$b$
$`$d$
$`$d$
$`$h$f$
$`$h$
$`$h$
$`$h$j$
$`$h$
$`$p$l$
$`$p$l$
$`$p$q$n$
$p$r$
$p$t$
$p$t$
$p$x$v$
$p$x$
$x$z$
$x$|$
$x$|$
$x$|$~$
% %!%
% %!%
% %!%
% %"%
% %$%
% %$%
% %(%&%
% %(%
% %(%
% %(%*%
% %(%
% %0%,%
% %0%,%
% %0%1%.%
%@%0%
%@%0%
%@%0%2%
%@%0%
%@%0%4%
%@%0%4%
%@%0%8%6%
%@%0%
%@%A%8%
%@%A%8%
%@%A%8%:%
%@%A%8%
%@%A%8%<%
%@%A%C%<%
%@%A%C%<%>%
%@%B%
%@%D%
%@%D%
%@%H%F%
%@%H%
%@%H%
%@%H%J%
%@%H%
%@%P%L%
%@%P%L%
%@%P%Q%N%
%@%P%
%@%P%
%@%P%R%
%@%P%
%@%P%T%
%@%P%T%
%@%P%X%V%
%@%P%
%@%`%X%
%@%`%X%
%@%`%X%Z%
%@%`%X%
%@%`%a%\%
%@%`%a%\%
%@%`%a%\%^%
%`%b%
%`%d%
%`%d%
%`%h%f%
%`%h%
%`%h%
%`%h%j%
%`%h%
%`%p%l%
%`%p%l%
%`%p%q%n%
%p%r%
%p%t%
%p%t%
%p%x%v%
%p%x%
%x%z%
%x%|%
%x%|%
%x%|%~%
& &!&
& &!&
& &!&
& &"&
& &$&
& &$&
& &(&&&
& &(&
& &(&
& &(&*&
& &(&
& &0&,&
& &0&,&
& &0&1&.&
&@&0&
&@&0&
&@&0&2&
&@&0&
&@&0&4&
&@&0&4&
&@&0&8&6&
&@&0&
&@&A&8&
&@&A&8&
&@&A&8&:&
&@&A&8&
&@&A&8&<&
&@&A&C&<&
&@&A&C&<&>&
&@&B&
&@&D&
&@&D&
&@&H&F&
&@&H&
&@&H&
&@&H&J&
&@&H&
&@&P&L&
&@&P&L&
&@&P&Q&N&
&@&P&
&@&P&
&@&P&R&
&@&P&
&@&P&T&
&@&P&T&
&@&P&X&V&
&@&P&
&@&`&X&
&@&`&X&
&@&`&X&Z&
&@&`&X&
&@&`&a&\&
&@&`&a&\&
&@&`&a&\&^&
&`&b&
&`&d&
&`&d&
&`&h&f&
&`&h&
&`&h&
&`&h&j&
&`&h&
&`&p&l&
&`&p&l&
&`&p&q&n&
&p&r&
&p&t&
&p&t&
&p&x&v&
&p&x&
&x&z&
&x&|&
&x&|&
&x&|&~&
' '!'
' '!'
' '!'
' '"'
' '$'
' '$'
' '('&'
' '('
' '('
' '('*'
' '('
' '0','
' '0','
' '0'1'.'
'@'0'
'@'0'
'@'0'2'
'@'0'
'@'0'4'
'@'0'4'
'@'0'8'6'
'@'0'
'@'A'8'
'@'A'8'
'@'A'8':'
'@'A'8'
'@'A'8'<'
'@'A'C'<'
'@'A'C'<'>'
'@'B'
'@'D'
'@'D'
'@'H'F'
'@'H'
'@'H'
'@'H'J'
'@'H'
'@'P'L'
'@'P'L'
'@'P'Q'N'
'@'P'
'@'P'
'@'P'R'
'@'P'
'@'P'T'
'@'P'T'
'@'P'X'V'
'@'P'
'@'`'X'
'@'`'X'
'@'`'X'Z'
'@'`'X'
'@'`'a'\'
'@'`'a'\'
'@'`'a'\'^'
'`'b'
'`'d'
'`'d'
'`'h'f'
'`'h'
'`'h'
'`'h'j'
'`'h'
'`'p'l'
'`'p'l'
'`'p'q'n'
'p'r'
'p't'
'p't'
'p'x'v'
'p'x'
'x'z'
'x'|'
'x'|'
'x'|'~'
( (!(
( (!(
( (!(
( ("(
( ($(
( ($(
( (((&(
( (((
( (((
( (((*(
( (((
( (0(,(
( (0(,(
( (0(1(.(
(@(0(
(@(0(
(@(0(2(
(@(0(
(@(0(4(
(@(0(4(
(@(0(8(6(
(@(0(
(@(A(8(
(@(A(8(
(@(A(8(:(
(@(A(8(
(@(A(8(<(
(@(A(C(<(
(@(A(C(<(>(
(@(B(
(@(D(
(@(D(
(@(H(F(
(@(H(
(@(H(
(@(H(J(
(@(H(
(@(P(L(
(@(P(L(
(@(P(Q(N(
(@(P(
(@(P(
(@(P(R(
(@(P(
(@(P(T(
(@(P(T(
(@(P(X(V(
(@(P(
(@(`(X(
(@(`(X(
(@(`(X(Z(
(@(`(X(
(@(`(a(\(
(@(`(a(\(
(@(`(a(\(^(
(`(b(
(`(d(
(`(d(
(`(h(f(
(`(h(
(`(h(
(`(h(j(
(`(h(
(`(p(l(
(`(p(l(
(`(p(q(n(
(p(r(
(p(t(
(p(t(
(p(x(v(
(p(x(
(x(z(
(x(|(
(x(|(
(x(|(~(
) )!)
) )!)
) )!)
) )")
) )$)
) )$)
) )()&)
) )()
) )()
) )()*)
) )()
) )0),)
) )0),)
) )0)1).)
)@)0)
)@)0)
)@)0)2)
)@)0)
)@)0)4)
)@)0)4)
)@)0)8)6)
)@)0)
)@)A)8)
)@)A)8)
)@)A)8):)
)@)A)8)
)@)A)8)<)
)@)A)C)<)
)@)A)C)<)>)
)@)B)
)@)D)
)@)D)
)@)H)F)
)@)H)
)@)H)
)@)H)J)
)@)H)
)@)P)L)
)@)P)L)
)@)P)Q)N)
)@)P)
)@)P)
)@)P)R)
)@)P)
)@)P)T)
)@)P)T)
)@)P)X)V)
)@)P)
)@)`)X)
)@)`)X)
)@)`)X)Z)
)@)`)X)
)@)`)a)\)
)@)`)a)\)
)@)`)a)\)^)
)`)b)
)`)d)
)`)d)
)`)h)f)
)`)h)
)`)h)
)`)h)j)
)`)h)
)`)p)l)
)`)p)l)
)`)p)q)n)
)p)r)
)p)t)
)p)t)
)p)x)v)
)p)x)
)x)z)
)x)|)
)x)|)
)x)|)~)
* *!*
* *!*
* *!*
* *"*
* *$*
* *$*
* *(*&*
* *(*
* *(*
* *(***
* *(*
* *0*,*
* *0*,*
* *0*1*.*
*@*0*
*@*0*
*@*0*2*
*@*0*
*@*0*4*
*@*0*4*
*@*0*8*6*
*@*0*
*@*A*8*
*@*A*8*
*@*A*8*:*
*@*A*8*
*@*A*8*<*
*@*A*C*<*
*@*A*C*<*>*
*@*B*
*@*D*
*@*D*
*@*H*F*
*@*H*
*@*H*
*@*H*J*
*@*H*
*@*P*L*
*@*P*L*
*@*P*Q*N*
*@*P*
*@*P*
*@*P*R*
*@*P*
*@*P*T*
*@*P*T*
*@*P*X*V*
*@*P*
*@*`*X*
*@*`*X*
*@*`*X*Z*
*@*`*X*
*@*`*a*\*
*@*`*a*\*
*@*`*a*\*^*
*`*b*
*`*d*
*`*d*
*`*h*f*
*`*h*
*`*h*
*`*h*j*
*`*h*
*`*p*l*
*`*p*l*
*`*p*q*n*
*p*r*
*p*t*
*p*t*
*p*x*v*
*p*x*
*x*z*
*x*|*
*x*|*
*x*|*~*
+ +!+
+ +!+
+ +!+
+ +"+
+ +$+
+ +$+
+ +(+&+
+ +(+
+ +(+
+ +(+*+
+ +(+
+ +0+,+
+ +0+,+
+ +0+1+.+
+@+0+
+@+0+
+@+0+2+
+@+0+
+@+0+4+
+@+0+4+
+@+0+8+6+
+@+0+
+@+A+8+
+@+A+8+
+@+A+8+:+
+@+A+8+
+@+A+8+<+
+@+A+C+<+
+@+A+C+<+>+
+@+B+
+@+D+
+@+D+
+@+H+F+
+@+H+
+@+H+
+@+H+J+
+@+H+
+@+P+L+
+@+P+L+
+@+P+Q+N+
+@+P+
+@+P+
+@+P+R+
+@+P+
+@+P+T+
+@+P+T+
+@+P+X+V+
+@+P+
+@+`+X+
+@+`+X+
+@+`+X+Z+
+@+`+X+
+@+`+a+\+
+@+`+a+\+
+@+`+a+\+^+
+`+b+
+`+d+
+`+d+
+`+h+f+
+`+h+
+`+h+
+`+h+j+
+`+h+
+`+p+l+
+`+p+l+
+`+p+q+n+
+p+r+
+p+t+
+p+t+
+p+x+v+
+p+x+
+x+z+
+x+|+
+x+|+
+x+|+~+
, ,!,
, ,!,
, ,!,
, ,",
, ,$,
, ,$,
, ,(,&,
, ,(,
, ,(,
, ,(,*,
, ,(,
, ,0,,,
, ,0,,,
, ,0,1,.,
,@,0,
,@,0,
,@,0,2,
,@,0,
,@,0,4,
,@,0,4,
,@,0,8,6,
,@,0,
,@,A,8,
,@,A,8,
,@,A,8,:,
,@,A,8,
,@,A,8,<,
,@,A,C,<,
,@,A,C,<,>,
,@,B,
,@,D,
,@,D,
,@,H,F,
,@,H,
,@,H,
,@,H,J,
,@,H,
,@,P,L,
,@,P,L,
,@,P,Q,N,
,@,P,
,@,P,
,@,P,R,
,@,P,
,@,P,T,
,@,P,T,
,@,P,X,V,
,@,P,
,@,`,X,
,@,`,X,
,@,`,X,Z,
,@,`,X,
,@,`,a,\,
,@,`,a,\,
,@,`,a,\,^,
,`,b,
,`,d,
,`,d,
,`,h,f,
,`,h,
,`,h,
,`,h,j,
,`,h,
,`,p,l,
,`,p,l,
,`,p,q,n,
,p,r,
,p,t,
,p,t,
,p,x,v,
,p,x,
,x,z,
,x,|,
,x,|,
,x,|,~,
- -!-
- -!-
- -!-
- -"-
- -$-
- -$-
- -(-&-
- -(-
- -(-
- -(-*-
- -(-
- -0-,-
- -0-,-
- -0-1-.-
-@-0-
-@-0-
-@-0-2-
-@-0-
-@-0-4-
-@-0-4-
-@-0-8-6-
-@-0-
-@-A-8-
-@-A-8-
-@-A-8-:-
-@-A-8-
-@-A-8-<-
-@-A-C-<-
-@-A-C-<->-
-@-B-
-@-D-
-@-D-
-@-H-F-
-@-H-
-@-H-
-@-H-J-
-@-H-
-@-P-L-
-@-P-L-
-@-P-Q-N-
-@-P-
-@-P-
-@-P-R-
-@-P-
-@-P-T-
-@-P-T-
-@-P-X-V-
-@-P-
-@-`-X-
-@-`-X-
-@-`-X-Z-
-@-`-X-
-@-`-a-\-
-@-`-a-\-
-@-`-a-\-^-
-`-b-
-`-d-
-`-d-
-`-h-f-
-`-h-
-`-h-
-`-h-j-
-`-h-
-`-p-l-
-`-p-l-
-`-p-q-n-
-p-r-
-p-t-
-p-t-
-p-x-v-
-p-x-
-x-z-
-x-|-
-x-|-
-x-|-~-
. .!.
. .!.
. .!.
. .".
. .$.
. .$.
. .(.&.
. .(.
. .(.
. .(.*.
. .(.
. .0.,.
. .0.,.
. .0.1...
.@.0.
.@.0.
.@.0.2.
.@.0.
.@.0.4.
.@.0.4.
.@.0.8.6.
.@.0.
.@.A.8.
.@.A.8.
.@.A.8.:.
.@.A.8.
.@.A.8.<.
.@.A.C.<.
.@.A.C.<.>.
.@.B.
.@.D.
.@.D.
.@.H.F.
.@.H.
.@.H.
.@.H.J.
.@.H.
.@.P.L.
.@.P.L.
.@.P.Q.N.
.@.P.
.@.P.
.@.P.R.
.@.P.
.@.P.T.
.@.P.T.
.@.P.X.V.
.@.P.
.@.`.X.
.@.`.X.
.@.`.X.Z.
.@.`.X.
.@.`.a.\.
.@.`.a.\.
.@.`.a.\.^.
.`.b.
.`.d.
.`.d.
.`.h.f.
.`.h.
.`.h.
.`.h.j.
.`.h.
.`.p.l.
.`.p.l.
.`.p.q.n.
.p.r.
.p.t.
.p.t.
.p.x.v.
.p.x.
.x.z.
.x.|.
.x.|.
.x.|.~.
/ /!/
/ /!/
/ /!/
/ /"/
/ /$/
/ /$/
/ /(/&/
/ /(/
/ /(/
/ /(/*/
/ /(/
/ /0/,/
/ /0/,/
/ /0/1/./
/@/0/
/@/0/
/@/0/2/
/@/0/
/@/0/4/
/@/0/4/
/@/0/8/6/
/@/0/
/@/A/8/
/@/A/8/
/@/A/8/:/
/@/A/8/
/@/A/8/</
/@/A/C/</
/@/A/C/</>/
/@/B/
/@/D/
/@/D/
/@/H/F/
/@/H/
/@/H/
/@/H/J/
/@/H/
/@/P/L/
/@/P/L/
/@/P/Q/N/
/@/P/
/@/P/
/@/P/R/
/@/P/
/@/P/T/
/@/P/T/
/@/P/X/V/
/@/P/
/@/`/X/
/@/`/X/
/@/`/X/Z/
/@/`/X/
/@/`/a/\/
/@/`/a/\/
/@/`/a/\/^/
/`/b/
/`/d/
/`/d/
/`/h/f/
/`/h/
/`/h/
/`/h/j/
/`/h/
/`/p/l/
/`/p/l/
/`/p/q/n/
/p/r/
/p/t/
/p/t/
/p/x/v/
/p/x/
/x/z/
/x/|/
/x/|/
/x/|/~/
0 0!0
0 0!0
0 0!0
0 0"0
0 0$0
0 0$0
0 0(0&0
0 0(0
0 0(0
0 0(0*0
0 0(0
0 000,0
0 000,0
0 00010.0
0@000
0@000
0@00020
0@000
0@00040
0@00040
0@0008060
0@000
0@0A080
0@0A080
0@0A080:0
0@0A080
0@0A080<0
0@0A0C0<0
0@0A0C0<0>0
0@0B0
0@0D0
0@0D0
0@0H0F0
0@0H0
0@0H0
0@0H0J0
0@0H0
0@0P0L0
0@0P0L0
0@0P0Q0N0
0@0P0
0@0P0
0@0P0R0
0@0P0
0@0P0T0
0@0P0T0
0@0P0X0V0
0@0P0
0@0`0X0
0@0`0X0
0@0`0X0Z0
0@0`0X0
0@0`0a0\0
0@0`0a0\0
0@0`0a0\0^0
0`0b0
0`0d0
0`0d0
0`0h0f0
0`0h0
0`0h0
0`0h0j0
0`0h0
0`0p0l0
0`0p0l0
0`0p0q0n0
0p0r0
0p0t0
0p0t0
0p0x0v0
0p0x0
0x0z0
0x0|0
0x0|0
0x0|0~0
1 1!1
1 1!1
1 1!1
1 1"1
1 1$1
1 1$1
1 1(1&1
1 1(1
1 1(1
1 1(1*1
1 1(1
1 101,1
1 101,1
1 10111.1
1@101
1@101
1@10121
1@101
1@10141
1@10141
1@1018161
1@101
1@1A181
1@1A181
1@1A181:1
1@1A181
1@1A181<1
1@1A1C1<1
1@1A1C1<1>1
1@1B1
1@1D1
1@1D1
1@1H1F1
1@1H1
1@1H1
1@1H1J1
1@1H1
1@1P1L1
1@1P1L1
1@1P1Q1N1
1@1P1
1@1P1
1@1P1R1
1@1P1
1@1P1T1
1@1P1T1
1@1P1X1V1
1@1P1
1@1`1X1
1@1`1X1
1@1`1X1Z1
1@1`1X1
1@1`1a1\1
1@1`1a1\1
1@1`1a1\1^1
1`1b1
1`1d1
1`1d1
1`1h1f1
1`1h1
1`1h1
1`1h1j1
1`1h1
1`1p1l1
1`1p1l1
1`1p1q1n1
1p1r1
1p1t1
1p1t1
1p1x1v1
1p1x1
1x1z1
1x1|1
1x1|1
1x1|1~1
2 2!2
2 2!2
2 2!2
2 2"2
2 2$2
2 2$2
2 2(2&2
2 2(2
2 2(2
2 2(2*2
2 2(2
2 202,2
2 202,2
2 20212.2
2@202
2@202
2@20222
2@202
2@20242
2@20242
2@2028262
2@202
2@2A282
2@2A282
2@2A282:2
2@2A282
2@2A282<2
2@2A2C2<2
2@2A2C2<2>2
2@2B2
2@2D2
2@2D2
2@2H2F2
2@2H2
2@2H2
2@2H2J2
2@2H2
2@2P2L2
2@2P2L2
2@2P2Q2N2
2@2P2
2@2P2
2@2P2R2
2@2P2
2@2P2T2
2@2P2T2
2@2P2X2V2
2@2P2
2@2`2X2
2@2`2X2
2@2`2X2Z2
2@2`2X2
2@2`2a2\2
2@2`2a2\2
2@2`2a2\2^2
2`2b2
2`2d2
2`2d2
2`2h2f2
2`2h2
2`2h2
2`2h2j2
2`2h2
2`2p2l2
2`2p2l2
2`2p2q2n2
2p2r2
2p2t2
2p2t2
2p2x2v2
2p2x2
2x2z2
2x2|2
2x2|2
2x2|2~2
3 3!3
3 3!3
3 3!3
3 3"3
3 3$3
3 3$3
3 3(3&3
3 3(3
3 3(3
3 3(3*3
3 3(3
3 303,3
3 303,3
3 30313.3
3@303
3@303
3@30323
3@303
3@30343
3@30343
3@3038363
3@303
3@3A383
3@3A383
3@3A383:3
3@3A383
3@3A383<3
3@3A3C3<3
3@3A3C3<3>3
3@3B3
3@3D3
3@3D3
3@3H3F3
3@3H3
3@3H3
3@3H3J3
3@3H3
3@3P3L3
3@3P3L3
3@3P3Q3N3
3@3P3
3@3P3
3@3P3R3
3@3P3
3@3P3T3
3@3P3T3
3@3P3X3V3
3@3P3
3@3`3X3
3@3`3X3
3@3`3X3Z3
3@3`3X3
3@3`3a3\3
3@3`3a3\3
3@3`3a3\3^3
3`3b3
3`3d3
3`3d3
3`3h3f3
3`3h3
3`3h3
3`3h3j3
3`3h3
3`3p3l3
3`3p3l3
3`3p3q3n3
3p3r3
3p3t3
3p3t3
3p3x3v3
3p3x3
3x3z3
3x3|3
3x3|3
3x3|3~3
4 4!4
4 4!4
4 4!4
4 4"4
4 4$4
4 4$4
4 4(4&4
4 4(4
4 4(4
4 4(4*4
4 4(4
4 404,4
4 404,4
4 40414.4
4@404
4@404
4@40424
4@404
4@40444
4@40444
4@4048464
4@404
4@4A484
4@4A484
4@4A484:4
4@4A484
4@4A484<4
4@4A4C4<4
4@4A4C4<4>4
4@4B4
4@4D4
4@4D4
4@4H4F4
4@4H4
4@4H4
4@4H4J4
4@4H4
4@4P4L4
4@4P4L4
4@4P4Q4N4
4@4P4
4@4P4
4@4P4R4
4@4P4
4@4P4T4
4@4P4T4
4@4P4X4V4
4@4P4
4@4`4X4
4@4`4X4
4@4`4X4Z4
4@4`4X4
4@4`4a4\4
4@4`4a4\4
4@4`4a4\4^4
4`4b4
4`4d4
4`4d4
4`4h4f4
4`4h4
4`4h4
4`4h4j4
4`4h4
4`4p4l4
4`4p4l4
4`4p4q4n4
4p4r4
4p4t4
4p4t4
4p4x4v4
4p4x4
4x4z4
4x4|4
4x4|4
4x4|4~4
5 5!5
5 5!5
5 5!5
5 5"5
5 5$5
5 5$5
5 5(5&5
5 5(5
5 5(5
5 5(5*5
5 5(5
5 505,5
5 505,5
5 50515.5
5@505
5@505
5@50525
5@505
5@50545
5@50545
5@5058565
5@505
5@5A585
5@5A585
5@5A585:5
5@5A585
5@5A585<5
5@5A5C5<5
5@5A5C5<5>5
5@5B5
5@5D5
5@5D5
5@5H5F5
5@5H5
5@5H5
5@5H5J5
5@5H5
5@5P5L5
5@5P5L5
5@5P5Q5N5
5@5P5
5@5P5
5@5P5R5
5@5P5
5@5P5T5
5@5P5T5
5@5P5X5V5
5@5P5
5@5`5X5
5@5`5X5
5@5`5X5Z5
5@5`5X5
5@5`5a5\5
5@5`5a5\5
5@5`5a5\5^5
5`5b5
5`5d5
5`5d5
5`5h5f5
5`5h5
5`5h5
5`5h5j5
5`5h5
5`5p5l5
5`5p5l5
5`5p5q5n5
5p5r5
5p5t5
5p5t5
5p5x5v5
5p5x5
5x5z5
5x5|5
5x5|5
5x5|5~5
6 6!6
6 6!6
6 6!6
6 6"6
6 6$6
6 6$6
6 6(6&6
6 6(6
6 6(6
6 6(6*6
6 6(6
6 606,6
6 606,6
6 60616.6
6@606
6@606
6@60626
6@606
6@60646
6@60646
6@6068666
6@606
6@6A686
6@6A686
6@6A686:6
6@6A686
6@6A686<6
6@6A6C6<6
6@6A6C6<6>6
6@6B6
6@6D6
6@6D6
6@6H6F6
6@6H6
6@6H6
6@6H6J6
6@6H6
6@6P6L6
6@6P6L6
6@6P6Q6N6
6@6P6
6@6P6
6@6P6R6
6@6P6
6@6P6T6
6@6P6T6
6@6P6X6V6
6@6P6
6@6`6X6
6@6`6X6
6@6`6X6Z6
6@6`6X6
6@6`6a6\6
6@6`6a6\6
6@6`6a6\6^6
6`6b6
6`6d6
6`6d6
6`6h6f6
6`6h6
6`6h6
6`6h6j6
6`6h6
6`6p6l6
6`6p6l6
6`6p6q6n6
6p6r6
6p6t6
6p6t6
6p6x6v6
6p6x6
6x6z6
6x6|6
6x6|6
6x6|6~6
7 7!7
7 7!7
7 7!7
7 7"7
7 7$7
7 7$7
7 7(7&7
7 7(7
7 7(7
7 7(7*7
7 7(7
7 707,7
7 707,7
7 70717.7
7@707
7@707
7@70727
7@707
7@70747
7@70747
7@7078767
7@707
7@7A787
7@7A787
7@7A787:7
7@7A787
7@7A787<7
7@7A7C7<7
7@7A7C7<7>7
7@7B7
7@7D7
7@7D7
7@7H7F7
7@7H7
7@7H7
7@7H7J7
7@7H7
7@7P7L7
7@7P7L7
7@7P7Q7N7
7@7P7
7@7P7
7@7P7R7
7@7P7
7@7P7T7
7@7P7T7
7@7P7X7V7
7@7P7
7@7`7X7
7@7`7X7
7@7`7X7Z7
7@7`7X7
7@7`7a7\7
7@7`7a7\7
7@7`7a7\7^7
7`7b7
7`7d7
7`7d7
7`7h7f7
7`7h7
7`7h7
7`7h7j7
7`7h7
7`7p7l7
7`7p7l7
7`7p7q7n7
7p7r7
7p7t7
7p7t7
7p7x7v7
7p7x7
7x7z7
7x7|7
7x7|7
7x7|7~7
8 8!8
8 8!8
8 8!8
8 8"8
8 8$8
8 8$8
8 8(8&8
8 8(8
8 8(8
8 8(8*8
8 8(8
8 808,8
8 808,8
8 80818.8
8@808
8@808
8@80828
8@808
8@80848
8@80848
8@8088868
8@808
8@8A888
8@8A888
8@8A888:8
8@8A888
8@8A888<8
8@8A8C8<8
8@8A8C8<8>8
8@8B8
8@8D8
8@8D8
8@8H8F8
8@8H8
8@8H8
8@8H8J8
8@8H8
8@8P8L8
8@8P8L8
8@8P8Q8N8
8@8P8
8@8P8
8@8P8R8
8@8P8
8@8P8T8
8@8P8T8
8@8P8X8V8
8@8P8
8@8`8X8
8@8`8X8
8@8`8X8Z8
8@8`8X8
8@8`8a8\8
8@8`8a8\8
8@8`8a8\8^8
8`8b8
8`8d8
8`8d8
8`8h8f8
8`8h8
8`8h8
8`8h8j8
8`8h8
8`8p8l8
8`8p8l8
8`8p8q8n8
8p8r8
8p8t8
8p8t8
8p8x8v8
8p8x8
8x8z8
8x8|8
8x8|8
8x8|8~8
9 9!9
9 9!9
9 9!9
9 9"9
9 9$9
9 9$9
9 9(9&9
9 9(9
9 9(9
9 9(9*9
9 9(9
9 909,9
9 909,9
9 90919.9
9@909
9@909
9@90929
9@909
9@90949
9@90949
9@9098969
9@909
9@9A989
9@9A989
9@9A989:9
9@9A989
9@9A989<9
9@9A9C9<9
9@9A9C9<9>9
9@9B9
9@9D9
9@9D9
9@9H9F9
9@9H9
9@9H9
9@9H9J9
9@9H9
9@9P9L9
9@9P9L9
9@9P9Q9N9
9@9P9
9@9P9
9@9P9R9
9@9P9
9@9P9T9
9@9P9T9
9@9P9X9V9
9@9P9
9@9`9X9
9@9`9X9
9@9`9X9Z9
9@9`9X9
9@9`9a9\9
9@9`9a9\9
9@9`9a9\9^9
9`9b9
9`9d9
9`9d9
9`9h9f9
9`9h9
9`9h9
9`9h9j9
9`9h9
9`9p9l9
9`9p9l9
9`9p9q9n9
9p9r9
9p9t9
9p9t9
9p9x9v9
9p9x9
9x9z9
9x9|9
9x9|9
9x9|9~9
: :!:
: :!:
: :!:
: :":
: :$:
: :$:
: :(:&:
: :(:
: :(:
: :(:*:
: :(:
: :0:,:
: :0:,:
: :0:1:.:
:@:0:
:@:0:
:@:0:2:
:@:0:
:@:0:4:
:@:0:4:
:@:0:8:6:
:@:0:
:@:A:8:
:@:A:8:
:@:A:8:::
:@:A:8:
:@:A:8:<:
:@:A:C:<:
:@:A:C:<:>:
:@:B:
:@:D:
:@:D:
:@:H:F:
:@:H:
:@:H:
:@:H:J:
:@:H:
:@:P:L:
:@:P:L:
:@:P:Q:N:
:@:P:
:@:P:
:@:P:R:
:@:P:
:@:P:T:
:@:P:T:
:@:P:X:V:
:@:P:
:@:`:X:
:@:`:X:
:@:`:X:Z:
:@:`:X:
:@:`:a:\:
:@:`:a:\:
:@:`:a:\:^:
:`:b:
:`:d:
:`:d:
:`:h:f:
:`:h:
:`:h:
:`:h:j:
:`:h:
:`:p:l:
:`:p:l:
:`:p:q:n:
:p:r:
:p:t:
:p:t:
:p:x:v:
:p:x:
:x:z:
:x:|:
:x:|:
:x:|:~:
; ;!;
; ;!;
; ;!;
; ;";
; ;$;
; ;$;
; ;(;&;
; ;(;
; ;(;
; ;(;*;
; ;(;
; ;0;,;
; ;0;,;
; ;0;1;.;
;@;0;
;@;0;
;@;0;2;
;@;0;
;@;0;4;
;@;0;4;
;@;0;8;6;
;@;0;
;@;A;8;
;@;A;8;
;@;A;8;:;
;@;A;8;
;@;A;8;<;
;@;A;C;<;
;@;A;C;<;>;
;@;B;
;@;D;
;@;D;
;@;H;F;
;@;H;
;@;H;
;@;H;J;
;@;H;
;@;P;L;
;@;P;L;
;@;P;Q;N;
;@;P;
;@;P;
;@;P;R;
;@;P;
;@;P;T;
;@;P;T;
;@;P;X;V;
;@;P;
;@;`;X;
;@;`;X;
;@;`;X;Z;
;@;`;X;
;@;`;a;\;
;@;`;a;\;
;@;`;a;\;^;
;`;b;
;`;d;
;`;d;
;`;h;f;
;`;h;
;`;h;
;`;h;j;
;`;h;
;`;p;l;
;`;p;l;
;`;p;q;n;
;p;r;
;p;t;
;p;t;
;p;x;v;
;p;x;
;x;z;
;x;|;
;x;|;
;x;|;~;
< <!<
< <!<
< <!<
< <"<
< <$<
< <$<
< <(<&<
< <(<
< <(<
< <(<*<
< <(<
< <0<,<
< <0<,<
< <0<1<.<
<@<0<
<@<0<
<@<0<2<
<@<0<
<@<0<4<
<@<0<4<
<@<0<8<6<
<@<0<
<@<A<8<
<@<A<8<
<@<A<8<:<
<@<A<8<
<@<A<8<<<
<@<A<C<<<
<@<A<C<<<><
<@<B<
<@<D<
<@<D<
<@<H<F<
<@<H<
<@<H<
<@<H<J<
<@<H<
<@<P<L<
<@<P<L<
<@<P<Q<N<
<@<P<
<@<P<
<@<P<R<
<@<P<
<@<P<T<
<@<P<T<
<@<P<X<V<
<@<P<
<@<`<X<
<@<`<X<
<@<`<X<Z<
<@<`<X<
<@<`<a<\<
<@<`<a<\<
<@<`<a<\<^<
<`<b<
<`<d<
<`<d<
<`<h<f<
<`<h<
<`<h<
<`<h<j<
<`<h<
<`<p<l<
<`<p<l<
<`<p<q<n<
<p<r<
<p<t<
<p<t<
<p<x<v<
<p<x<
<x<z<
<x<|<
<x<|<
<x<|<~<
= =!=
= =!=
= =!=
= ="=
= =$=
= =$=
= =(=&=
= =(=
= =(=
= =(=*=
= =(=
= =0=,=
= =0=,=
= =0=1=.=
=@=0=
=@=0=
=@=0=2=
=@=0=
=@=0=4=
=@=0=4=
=@=0=8=6=
=@=0=
=@=A=8=
=@=A=8=
=@=A=8=:=
=@=A=8=
=@=A=8=<=
=@=A=C=<=
=@=A=C=<=>=
=@=B=
=@=D=
=@=D=
=@=H=F=
=@=H=
=@=H=
=@=H=J=
=@=H=
=@=P=L=
=@=P=L=
=@=P=Q=N=
=@=P=
=@=P=
=@=P=R=
=@=P=
=@=P=T=
=@=P=T=
=@=P=X=V=
=@=P=
=@=`=X=
=@=`=X=
=@=`=X=Z=
=@=`=X=
=@=`=a=\=
=@=`=a=\=
=@=`=a=\=^=
=`=b=
=`=d=
=`=d=
=`=h=f=
=`=h=
=`=h=
=`=h=j=
=`=h=
=`=p=l=
=`=p=l=
=`=p=q=n=
=p=r=
=p=t=
=p=t=
=p=x=v=
=p=x=
=x=z=
=x=|=
=x=|=
=x=|=~=
> >!>
> >!>
> >!>
> >">
> >$>
> >$>
> >(>&>
> >(>
> >(>
> >(>*>
> >(>
> >0>,>
> >0>,>
> >0>1>.>
>@>0>
>@>0>
>@>0>2>
>@>0>
>@>0>4>
>@>0>4>
>@>0>8>6>
>@>0>
>@>A>8>
>@>A>8>
>@>A>8>:>
>@>A>8>
>@>A>8><>
>@>A>C><>
>@>A>C><>>>
>@>B>
>@>D>
>@>D>
>@>H>F>
>@>H>
>@>H>
>@>H>J>
>@>H>
>@>P>L>
>@>P>L>
>@>P>Q>N>
>@>P>
>@>P>
>@>P>R>
>@>P>
>@>P>T>
>@>P>T>
>@>P>X>V>
>@>P>
>@>`>X>
>@>`>X>
>@>`>X>Z>
>@>`>X>
>@>`>a>\>
>@>`>a>\>
>@>`>a>\>^>
>`>b>
>`>d>
>`>d>
>`>h>f>
>`>h>
>`>h>
>`>h>j>
>`>h>
>`>p>l>
>`>p>l>
>`>p>q>n>
>p>r>
>p>t>
>p>t>
>p>x>v>
>p>x>
>x>z>
>x>|>
>x>|>
>x>|>~>
? ?!?
? ?!?
? ?!?
? ?"?
? ?$?
? ?$?
? ?(?&?
? ?(?
? ?(?
? ?(?*?
? ?(?
? ?0?,?
? ?0?,?
? ?0?1?.?
?@?0?
?@?0?
?@?0?2?
?@?0?
?@?0?4?
?@?0?4?
?@?0?8?6?
?@?0?
?@?A?8?
?@?A?8?
?@?A?8?:?
?@?A?8?
?@?A?8?<?
?@?A?C?<?
?@?A?C?<?>?
?@?B?
?@?D?
?@?D?
?@?H?F?
?@?H?
?@?H?
?@?H?J?
?@?H?
?@?P?L?
?@?P?L?
?@?P?Q?N?
?@?P?
?@?P?
?@?P?R?
?@?P?
?@?P?T?
?@?P?T?
?@?P?X?V?
?@?P?
?@?`?X?
?@?`?X?
?@?`?X?Z?
?@?`?X?
?@?`?a?\?
?@?`?a?\?
?@?`?a?\?^?
?`?b?
?`?d?
?`?d?
?`?h?f?
?`?h?
?`?h?
?`?h?j?
?`?h?
?`?p?l?
?`?p?l?
?`?p?q?n?
?p?r?
?p?t?
?p?t?
?p?x?v?
?p?x?
?x?z?
?x?|?
?x?|?
?x?|?~?
@ @!@
@ @!@
@ @!@
@ @"@
@ @$@
@ @$@
@ @(@&@
@ @(@
@ @(@
@ @(@*@
@ @(@
@ @0@,@
@ @0@,@
@ @0@1@.@
@@@0@
@@@0@
@@@0@2@
@@@0@
@@@0@4@
@@@0@4@
@@@0@8@6@
@@@0@
@@@A@8@
@@@A@8@
@@@A@8@:@
@@@A@8@
@@@A@8@<@
@@@A@C@<@
@@@A@C@<@>@
@@@B@
@@@D@
@@@D@
@@@H@F@
@@@H@
@@@H@
@@@H@J@
@@@H@
@@@P@L@
@@@P@L@
@@@P@Q@N@
@@@P@
@@@P@
@@@P@R@
@@@P@
@@@P@T@
@@@P@T@
@@@P@X@V@
@@@P@
@@@`@X@
@@@`@X@
@@@`@X@Z@
@@@`@X@
@@@`@a@\@
@@@`@a@\@
@@@`@a@\@^@
@`@b@
@`@d@
@`@d@
@`@h@f@
@`@h@
@`@h@
@`@h@j@
@`@h@
@`@p@l@
@`@p@l@
@`@p@q@n@
@p@r@
@p@t@
@p@t@
@p@x@v@
@p@x@
@x@z@
@x@|@
@x@|@
@x@|@~@
A A!A
A A!A
A A!A
A A"A
A A$A
A A$A
A A(A&A
A A(A
A A(A
A A(A*A
A A(A
A A0A,A
A A0A,A
A A0A1A.A
A@A0A
A@A0A
A@A0A2A
A@A0A
A@A0A4A
A@A0A4A
A@A0A8A6A
A@A0A
A@AAA8A
A@AAA8A
A@AAA8A:A
A@AAA8A
A@AAA8A<A
A@AAACA<A
A@AAACA<A>A
A@ABA
A@ADA
A@ADA
A@AHAFA
A@AHA
A@AHA
A@AHAJA
A@AHA
A@APALA
A@APALA
A@APAQANA
A@APA
A@APA
A@APARA
A@APA
A@APATA
A@APATA
A@APAXAVA
A@APA
A@A`AXA
A@A`AXA
A@A`AXAZA
A@A`AXA
A@A`AaA\A
A@A`AaA\A
A@A`AaA\A^A
A`AbA
A`AdA
A`AdA
A`AhAfA
A`AhA
A`AhA
A`AhAjA
A`AhA
A`ApAlA
A`ApAlA
A`ApAqAnA
ApArA
ApAtA
ApAtA
ApAxAvA
ApAxA
AxAzA
AxA|A
AxA|A
AxA|A~A
B B!B
B B!B
B B!B
B B"B
B B$B
B B$B
B B(B&B
B B(B
B B(B
B B(B*B
B B(B
B B0B,B
B B0B,B
B B0B1B.B
B@B0B
B@B0B
B@B0B2B
B@B0B
B@B0B4B
B@B0B4B
B@B0B8B6B
B@B0B
B@BAB8B
B@BAB8B
B@BAB8B:B
B@BAB8B
B@BAB8B<B
B@BABCB<B
B@BABCB<B>B
B@BBB
B@BDB
B@BDB
B@BHBFB
B@BHB
B@BHB
B@BHBJB
B@BHB
B@BPBLB
B@BPBLB
B@BPBQBNB
B@BPB
B@BPB
B@BPBRB
B@BPB
B@BPBTB
B@BPBTB
B@BPBXBVB
B@BPB
B@B`BXB
B@B`BXB
B@B`BXBZB
B@B`BXB
B@B`BaB\B
B@B`BaB\B
B@B`BaB\B^B
B`BbB
B`BdB
B`BdB
B`BhBfB
B`BhB
B`BhB
B`BhBjB
B`BhB
B`BpBlB
B`BpBlB
B`BpBqBnB
BpBrB
BpBtB
BpBtB
BpBxBvB
BpBxB
BxBzB
BxB|B
BxB|B
BxB|B~B
C C!C
C C!C
C C!C
C C"C
C C$C
C C$C
C C(C&C
C C(C
C C(C
C C(C*C
C C(C
C C0C,C
C C0C,C
C C0C1C.C
C@C0C
C@C0C
C@C0C2C
C@C0C
C@C0C4C
C@C0C4C
C@C0C8C6C
C@C0C
C@CAC8C
C@CAC8C
C@CAC8C:C
C@CAC8C
C@CAC8C<C
C@CACCC<C
C@CACCC<C>C
C@CBC
C@CDC
C@CDC
C@CHCFC
C@CHC
C@CHC
C@CHCJC
C@CHC
C@CPCLC
C@CPCLC
C@CPCQCNC
C@CPC
C@CPC
C@CPCRC
C@CPC
C@CPCTC
C@CPCTC
C@CPCXCVC
C@CPC
C@C`CXC
C@C`CXC
C@C`CXCZC
C@C`CXC
C@C`CaC\C
C@C`CaC\C
C@C`CaC\C^C
C`CbC
C`CdC
C`CdC
C`ChCfC
C`ChC
C`ChC
C`ChCjC
C`ChC
C`CpClC
C`CpClC
C`CpCqCnC
CpCrC
CpCtC
CpCtC
CpCxCvC
CpCxC
CxCzC
CxC|C
CxC|C
CxC|C~C
D D!D
D D!D
D D!D
D D"D
D D$D
D D$D
D D(D&D
D D(D
D D(D
D D(D*D
D D(D
D D0D,D
D D0D,D
D D0D1D.D
D@D0D
D@D0D
D@D0D2D
D@D0D
D@D0D4D
D@D0D4D
D@D0D8D6D
D@D0D
D@DAD8D
D@DAD8D
D@DAD8D:D
D@DAD8D
D@DAD8D<D
D@DADCD<D
D@DADCD<D>D
D@DBD
D@DDD
D@DDD
D@DHDFD
D@DHD
D@DHD
D@DHDJD
D@DHD
D@DPDLD
D@DPDLD
D@DPDQDND
D@DPD
D@DPD
D@DPDRD
D@DPD
D@DPDTD
D@DPDTD
D@DPDXDVD
D@DPD
D@D`DXD
D@D`DXD
D@D`DXDZD
D@D`DXD
D@D`DaD\D
D@D`DaD\D
D@D`DaD\D^D
D`DbD
D`DdD
D`DdD
D`DhDfD
D`DhD
D`DhD
D`DhDjD
D`DhD
D`DpDlD
D`DpDlD
D`DpDqDnD
DpDrD
DpDtD
DpDtD
DpDxDvD
DpDxD
DxDzD
DxD|D
DxD|D
DxD|D~D
E E!E
E E!E
E E!E
E E"E
E E$E
E E$E
E E(E&E
E E(E
E E(E
E E(E*E
E E(E
E E0E,E
E E0E,E
E E0E1E.E
E@E0E
E@E0E
E@E0E2E
E@E0E
E@E0E4E
E@E0E4E
E@E0E8E6E
E@E0E
E@EAE8E
E@EAE8E
E@EAE8E:E
E@EAE8E
E@EAE8E<E
E@EAECE<E
E@EAECE<E>E
E@EBE
E@EDE
E@EDE
E@EHEFE
E@EHE
E@EHE
E@EHEJE
E@EHE
E@EPELE
E@EPELE
E@EPEQENE
E@EPE
E@EPE
E@EPERE
E@EPE
E@EPETE
E@EPETE
E@EPEXEVE
E@EPE
E@E`EXE
E@E`EXE
E@E`EXEZE
E@E`EXE
E@E`EaE\E
E@E`EaE\E
E@E`EaE\E^E
E`EbE
E`EdE
E`EdE
E`EhEfE
E`EhE
E`EhE
E`EhEjE
E`EhE
E`EpElE
E`EpElE
E`EpEqEnE
EpErE
EpEtE
EpEtE
EpExEvE
EpExE
ExEzE
ExE|E
ExE|E
ExE|E~E
F F!F
F F!F
F F!F
F F"F
F F$F
F F$F
F F(F&F
F F(F
F F(F
F F(F*F
F F(F
F F0F,F
F F0F,F
F F0F1F.F
F@F0F
F@F0F
F@F0F2F
F@F0F
F@F0F4F
F@F0F4F
F@F0F8F6F
F@F0F
F@FAF8F
F@FAF8F
F@FAF8F:F
F@FAF8F
F@FAF8F<F
F@FAFCF<F
F@FAFCF<F>F
F@FBF
F@FDF
F@FDF
F@FHFFF
F@FHF
F@FHF
F@FHFJF
F@FHF
F@FPFLF
F@FPFLF
F@FPFQFNF
F@FPF
F@FPF
F@FPFRF
F@FPF
F@FPFTF
F@FPFTF
F@FPFXFVF
F@FPF
F@F`FXF
F@F`FXF
F@F`FXFZF
F@F`FXF
F@F`FaF\F
F@F`FaF\F
F@F`FaF\F^F
F`FbF
F`FdF
F`FdF
F`FhFfF
F`FhF
F`FhF
F`FhFjF
F`FhF
F`FpFlF
F`FpFlF
F`FpFqFnF
FpFrF
FpFtF
FpFtF
FpFxFvF
FpFxF
FxFzF
FxF|F
FxF|F
FxF|F~F
G G!G
G G!G
G G!G
G G"G
G G$G
G G$G
G G(G&G
G G(G
G G(G
G G(G*G
G G(G
G G0G,G
G G0G,G
G G0G1G.G
G@G0G
G@G0G
G@G0G2G
G@G0G
G@G0G4G
G@G0G4G
G@G0G8G6G
G@G0G
G@GAG8G
G@GAG8G
G@GAG8G:G
G@GAG8G
G@GAG8G<G
G@GAGCG<G
G@GAGCG<G>G
G@GBG
G@GDG
G@GDG
G@GHGFG
G@GHG
G@GHG
G@GHGJG
G@GHG
G@GPGLG
G@GPGLG
G@GPGQGNG
G@GPG
G@GPG
G@GPGRG
G@GPG
G@GPGTG
G@GPGTG
G@GPGXGVG
G@GPG
G@G`GXG
G@G`GXG
G@G`GXGZG
G@G`GXG
G@G`GaG\G
G@G`GaG\G
G@G`GaG\G^G
G`GbG
G`GdG
G`GdG
G`GhGfG
G`GhG
G`GhG
G`GhGjG
G`GhG
G`GpGlG
G`GpGlG
G`GpGqGnG
GpGrG
GpGtG
GpGtG
GpGxGvG
GpGxG
GxGzG
GxG|G
GxG|G
GxG|G~G
H H!H
H H!H
H H!H
H H"H
H H$H
H H$H
H H(H&H
H H(H
H H(H
H H(H*H
H H(H
H H0H,H
H H0H,H
H H0H1H.H
H@H0H
H@H0H
H@H0H2H
H@H0H
H@H0H4H
H@H0H4H
H@H0H8H6H
H@H0H
H@HAH8H
H@HAH8H
H@HAH8H:H
H@HAH8H
H@HAH8H<H
H@HAHCH<H
H@HAHCH<H>H
H@HBH
H@HDH
H@HDH
H@HHHFH
H@HHH
H@HHH
H@HHHJH
H@HHH
H@HPHLH
H@HPHLH
H@HPHQHNH
H@HPH
H@HPH
H@HPHRH
H@HPH
H@HPHTH
H@HPHTH
H@HPHXHVH
H@HPH
H@H`HXH
H@H`HXH
H@H`HXHZH
H@H`HXH
H@H`HaH\H
H@H`HaH\H
H@H`HaH\H^H
H`HbH
H`HdH
H`HdH
H`HhHfH
H`HhH
H`HhH
H`HhHjH
H`HhH
H`HpHlH
H`HpHlH
H`HpHqHnH
HpHrH
HpHtH
HpHtH
HpHxHvH
HpHxH
HxHzH
HxH|H
HxH|H
HxH|H~H
I I!I
I I!I
I I!I
I I"I
I I$I
I I$I
I I(I&I
I I(I
I I(I
I I(I*I
I I(I
I I0I,I
I I0I,I
I I0I1I.I
I@I0I
I@I0I
I@I0I2I
I@I0I
I@I0I4I
I@I0I4I
I@I0I8I6I
I@I0I
I@IAI8I
I@IAI8I
I@IAI8I:I
I@IAI8I
I@IAI8I<I
I@IAICI<I
I@IAICI<I>I
I@IBI
I@IDI
I@IDI
I@IHIFI
I@IHI
I@IHI
I@IHIJI
I@IHI
I@IPILI
I@IPILI
I@IPIQINI
I@IPI
I@IPI
I@IPIRI
I@IPI
I@IPITI
I@IPITI
I@IPIXIVI
I@IPI
I@I`IXI
I@I`IXI
I@I`IXIZI
I@I`IXI
I@I`IaI\I
I@I`IaI\I
I@I`IaI\I^I
I`IbI
I`IdI
I`IdI
I`IhIfI
I`IhI
I`IhI
I`IhIjI
I`IhI
I`IpIlI
I`IpIlI
I`IpIqInI
IpIrI
IpItI
IpItI
IpIxIvI
IpIxI
IxIzI
IxI|I
IxI|I
IxI|I~I
J J!J
J J!J
J J!J
J J"J
J J$J
J J$J
J J(J&J
J J(J
J J(J
J J(J*J
J J(J
J J0J,J
J J0J,J
J J0J1J.J
J@J0J
J@J0J
J@J0J2J
J@J0J
J@J0J4J
J@J0J4J
J@J0J8J6J
J@J0J
J@JAJ8J
J@JAJ8J
J@JAJ8J:J
J@JAJ8J
J@JAJ8J<J
J@JAJCJ<J
J@JAJCJ<J>J
J@JBJ
J@JDJ
J@JDJ
J@JHJFJ
J@JHJ
J@JHJ
J@JHJJJ
J@JHJ
J@JPJLJ
J@JPJLJ
J@JPJQJNJ
J@JPJ
J@JPJ
J@JPJRJ
J@JPJ
J@JPJTJ
J@JPJTJ
J@JPJXJVJ
J@JPJ
J@J`JXJ
J@J`JXJ
J@J`JXJZJ
J@J`JXJ
J@J`JaJ\J
J@J`JaJ\J
J@J`JaJ\J^J
J`JbJ
J`JdJ
J`JdJ
J`JhJfJ
J`JhJ
J`JhJ
J`JhJjJ
J`JhJ
J`JpJlJ
J`JpJlJ
J`JpJqJnJ
JpJrJ
JpJtJ
JpJtJ
JpJxJvJ
JpJxJ
JxJzJ
JxJ|J
JxJ|J
JxJ|J~J
K K!K
K K!K
K K!K
K K"K
K K$K
K K$K
K K(K&K
K K(K
K K(K
K K(K*K
K K(K
K K0K,K
K K0K,K
K K0K1K.K
K@K0K
K@K0K
K@K0K2K
K@K0K
K@K0K4K
K@K0K4K
K@K0K8K6K
K@K0K
K@KAK8K
K@KAK8K
K@KAK8K:K
K@KAK8K
K@KAK8K<K
K@KAKCK<K
K@KAKCK<K>K
K@KBK
K@KDK
K@KDK
K@KHKFK
K@KHK
K@KHK
K@KHKJK
K@KHK
K@KPKLK
K@KPKLK
K@KPKQKNK
K@KPK
K@KPK
K@KPKRK
K@KPK
K@KPKTK
K@KPKTK
K@KPKXKVK
K@KPK
K@K`KXK
K@K`KXK
K@K`KXKZK
K@K`KXK
K@K`KaK\K
K@K`KaK\K
K@K`KaK\K^K
K`KbK
K`KdK
K`KdK
K`KhKfK
K`KhK
K`KhK
K`KhKjK
K`KhK
K`KpKlK
K`KpKlK
K`KpKqKnK
KpKrK
KpKtK
KpKtK
KpKxKvK
KpKxK
KxKzK
KxK|K
KxK|K
KxK|K~K
L L!L
L L!L
L L!L
L L"L
L L$L
L L$L
L L(L&L
L L(L
L L(L
L L(L*L
L L(L
L L0L,L
L L0L,L
L L0L1L.L
L@L0L
L@L0L
L@L0L2L
L@L0L
L@L0L4L
L@L0L4L
L@L0L8L6L
L@L0L
L@LAL8L
L@LAL8L
L@LAL8L:L
L@LAL8L
L@LAL8L<L
L@LALCL<L
L@LALCL<L>L
L@LBL
L@LDL
L@LDL
L@LHLFL
L@LHL
L@LHL
L@LHLJL
L@LHL
L@LPLLL
L@LPLLL
L@LPLQLNL
L@LPL
L@LPL
L@LPLRL
L@LPL
L@LPLTL
L@LPLTL
L@LPLXLVL
L@LPL
L@L`LXL
L@L`LXL
L@L`LXLZL
L@L`LXL
L@L`LaL\L
L@L`LaL\L
L@L`LaL\L^L
L`LbL
L`LdL
L`LdL
L`LhLfL
L`LhL
L`LhL
L`LhLjL
L`LhL
L`LpLlL
L`LpLlL
L`LpLqLnL
LpLrL
LpLtL
LpLtL
LpLxLvL
LpLxL
LxLzL
LxL|L
LxL|L
LxL|L~L
M M!M
M M!M
M M!M
M M"M
M M$M
M M$M
M M(M&M
M M(M
M M(M
M M(M*M
M M(M
M M0M,M
M M0M,M
M M0M1M.M
M@M0M
M@M0M
M@M0M2M
M@M0M
M@M0M4M
M@M0M4M
M@M0M8M6M
M@M0M
M@MAM8M
M@MAM8M
M@MAM8M:M
M@MAM8M
M@MAM8M<M
M@MAMCM<M
M@MAMCM<M>M
M@MBM
M@MDM
M@MDM
M@MHMFM
M@MHM
M@MHM
M@MHMJM
M@MHM
M@MPMLM
M@MPMLM
M@MPMQMNM
M@MPM
M@MPM
M@MPMRM
M@MPM
M@MPMTM
M@MPMTM
M@MPMXMVM
M@MPM
M@M`MXM
M@M`MXM
M@M`MXMZM
M@M`MXM
M@M`MaM\M
M@M`MaM\M
M@M`MaM\M^M
M`MbM
M`MdM
M`MdM
M`MhMfM
M`MhM
M`MhM
M`MhMjM
M`MhM
M`MpMlM
M`MpMlM
M`MpMqMnM
MpMrM
MpMtM
MpMtM
MpMxMvM
MpMxM
MxMzM
MxM|M
MxM|M
MxM|M~M
N N!N
N N!N
N N!N
N N"N
N N$N
N N$N
N N(N&N
N N(N
N N(N
N N(N*N
N N(N
N N0N,N
N N0N,N
N N0N1N.N
N@N0N
N@N0N
N@N0N2N
N@N0N
N@N0N4N
N@N0N4N
N@N0N8N6N
N@N0N
N@NAN8N
N@NAN8N
N@NAN8N:N
N@NAN8N
N@NAN8N<N
N@NANCN<N
N@NANCN<N>N
N@NBN
N@NDN
N@NDN
N@NHNFN
N@NHN
N@NHN
N@NHNJN
N@NHN
N@NPNLN
N@NPNLN
N@NPNQNNN
N@NPN
N@NPN
N@NPNRN
N@NPN
N@NPNTN
N@NPNTN
N@NPNXNVN
N@NPN
N@N`NXN
N@N`NXN
N@N`NXNZN
N@N`NXN
N@N`NaN\N
N@N`NaN\N
N@N`NaN\N^N
N`NbN
N`NdN
N`NdN
N`NhNfN
N`NhN
N`NhN
N`NhNjN
N`NhN
N`NpNlN
N`NpNlN
N`NpNqNnN
NpNrN
NpNtN
NpNtN
NpNxNvN
NpNxN
NxNzN
NxN|N
NxN|N
NxN|N~N
O O!O
O O!O
O O!O
O O"O
O O$O
O O$O
O O(O&O
O O(O
O O(O
O O(O*O
O O(O
O O0O,O
O O0O,O
O O0O1O.O
O@O0O
O@O0O
O@O0O2O
O@O0O
O@O0O4O
O@O0O4O
O@O0O8O6O
O@O0O
O@OAO8O
O@OAO8O
O@OAO8O:O
O@OAO8O
O@OAO8O<O
O@OAOCO<O
O@OAOCO<O>O
O@OBO
O@ODO
O@ODO
O@OHOFO
O@OHO
O@OHO
O@OHOJO
O@OHO
O@OPOLO
O@OPOLO
O@OPOQONO
O@OPO
O@OPO
O@OPORO
O@OPO
O@OPOTO
O@OPOTO
O@OPOXOVO
O@OPO
O@O`OXO
O@O`OXO
O@O`OXOZO
O@O`OXO
O@O`OaO\O
O@O`OaO\O
O@O`OaO\O^O
O`ObO
O`OdO
O`OdO
O`OhOfO
O`OhO
O`OhO
O`OhOjO
O`OhO
O`OpOlO
O`OpOlO
O`OpOqOnO
OpOrO
OpOtO
OpOtO
OpOxOvO
OpOxO
OxOzO
OxO|O
OxO|O
OxO|O~O
P P!P
P P!P
P P!P
P P"P
P P$P
P P$P
P P(P&P
P P(P
P P(P
P P(P*P
P P(P
P P0P,P
P P0P,P
P P0P1P.P
P@P0P
P@P0P
P@P0P2P
P@P0P
P@P0P4P
P@P0P4P
P@P0P8P6P
P@P0P
P@PAP8P
P@PAP8P
P@PAP8P:P
P@PAP8P
P@PAP8P<P
P@PAPCP<P
P@PAPCP<P>P
P@PBP
P@PDP
P@PDP
P@PHPFP
P@PHP
P@PHP
P@PHPJP
P@PHP
P@PPPLP
P@PPPLP
P@PPPQPNP
P@PPP
P@PPP
P@PPPRP
P@PPP
P@PPPTP
P@PPPTP
P@PPPXPVP
P@PPP
P@P`PXP
P@P`PXP
P@P`PXPZP
P@P`PXP
P@P`PaP\P
P@P`PaP\P
P@P`PaP\P^P
P`PbP
P`PdP
P`PdP
P`PhPfP
P`PhP
P`PhP
P`PhPjP
P`PhP
P`PpPlP
P`PpPlP
P`PpPqPnP
PpPrP
PpPtP
PpPtP
PpPxPvP
PpPxP
PxPzP
PxP|P
PxP|P
PxP|P~P
Q Q!Q
Q Q!Q
Q Q!Q
Q Q"Q
Q Q$Q
Q Q$Q
Q Q(Q&Q
Q Q(Q
Q Q(Q
Q Q(Q*Q
Q Q(Q
Q Q0Q,Q
Q Q0Q,Q
Q Q0Q1Q.Q
Q@Q0Q
Q@Q0Q
Q@Q0Q2Q
Q@Q0Q
Q@Q0Q4Q
Q@Q0Q4Q
Q@Q0Q8Q6Q
Q@Q0Q
Q@QAQ8Q
Q@QAQ8Q
Q@QAQ8Q:Q
Q@QAQ8Q
Q@QAQ8Q<Q
Q@QAQCQ<Q
Q@QAQCQ<Q>Q
Q@QBQ
Q@QDQ
Q@QDQ
Q@QHQFQ
Q@QHQ
Q@QHQ
Q@QHQJQ
Q@QHQ
Q@QPQLQ
Q@QPQLQ
Q@QPQQQNQ
Q@QPQ
Q@QPQ
Q@QPQRQ
Q@QPQ
Q@QPQTQ
Q@QPQTQ
Q@QPQXQVQ
Q@QPQ
Q@Q`QXQ
Q@Q`QXQ
Q@Q`QXQZQ
Q@Q`QXQ
Q@Q`QaQ\Q
Q@Q`QaQ\Q
Q@Q`QaQ\Q^Q
Q`QbQ
Q`QdQ
Q`QdQ
Q`QhQfQ
Q`QhQ
Q`QhQ
Q`QhQjQ
Q`QhQ
Q`QpQlQ
Q`QpQlQ
Q`QpQqQnQ
QpQrQ
QpQtQ
QpQtQ
QpQxQvQ
QpQxQ
QxQzQ
QxQ|Q
QxQ|Q
QxQ|Q~Q
R R!R
R R!R
R R!R
R R"R
R R$R
R R$R
R R(R&R
R R(R
R R(R
R R(R*R
R R(R
R R0R,R
R R0R,R
R R0R1R.R
R@R0R
R@R0R
R@R0R2R
R@R0R
R@R0R4R
R@R0R4R
R@R0R8R6R
R@R0R
R@RAR8R
R@RAR8R
R@RAR8R:R
R@RAR8R
R@RAR8R<R
R@RARCR<R
R@RARCR<R>R
R@RBR
R@RDR
R@RDR
R@RHRFR
R@RHR
R@RHR
R@RHRJR
R@RHR
R@RPRLR
R@RPRLR
R@RPRQRNR
R@RPR
R@RPR
R@RPRRR
R@RPR
R@RPRTR
R@RPRTR
R@RPRXRVR
R@RPR
R@R`RXR
R@R`RXR
R@R`RXRZR
R@R`RXR
R@R`RaR\R
R@R`RaR\R
R@R`RaR\R^R
R`RbR
R`RdR
R`RdR
R`RhRfR
R`RhR
R`RhR
R`RhRjR
R`RhR
R`RpRlR
R`RpRlR
R`RpRqRnR
RpRrR
RpRtR
RpRtR
RpRxRvR
RpRxR
RxRzR
RxR|R
RxR|R
RxR|R~R
S S!S
S S!S
S S!S
S S"S
S S$S
S S$S
S S(S&S
S S(S
S S(S
S S(S*S
S S(S
S S0S,S
S S0S,S
S S0S1S.S
S@S0S
S@S0S
S@S0S2S
S@S0S
S@S0S4S
S@S0S4S
S@S0S8S6S
S@S0S
S@SAS8S
S@SAS8S
S@SAS8S:S
S@SAS8S
S@SAS8S<S
S@SASCS<S
S@SASCS<S>S
S@SBS
S@SDS
S@SDS
S@SHSFS
S@SHS
S@SHS
S@SHSJS
S@SHS
S@SPSLS
S@SPSLS
S@SPSQSNS
S@SPS
S@SPS
S@SPSRS
S@SPS
S@SPSTS
S@SPSTS
S@SPSXSVS
S@SPS
S@S`SXS
S@S`SXS
S@S`SXSZS
S@S`SXS
S@S`SaS\S
S@S`SaS\S
S@S`SaS\S^S
S`SbS
S`SdS
S`SdS
S`ShSfS
S`ShS
S`ShS
S`ShSjS
S`ShS
S`SpSlS
S`SpSlS
S`SpSqSnS
SpSrS
SpStS
SpStS
SpSxSvS
SpSxS
SxSzS
SxS|S
SxS|S
SxS|S~S
T T!T
T T!T
T T!T
T T"T
T T$T
T T$T
T T(T&T
T T(T
T T(T
T T(T*T
T T(T
T T0T,T
T T0T,T
T T0T1T.T
T@T0T
T@T0T
T@T0T2T
T@T0T
T@T0T4T
T@T0T4T
T@T0T8T6T
T@T0T
T@TAT8T
T@TAT8T
T@TAT8T:T
T@TAT8T
T@TAT8T<T
T@TATCT<T
T@TATCT<T>T
T@TBT
T@TDT
T@TDT
T@THTFT
T@THT
T@THT
T@THTJT
T@THT
T@TPTLT
T@TPTLT
T@TPTQTNT
T@TPT
T@TPT
T@TPTRT
T@TPT
T@TPTTT
T@TPTTT
T@TPTXTVT
T@TPT
T@T`TXT
T@T`TXT
T@T`TXTZT
T@T`TXT
T@T`TaT\T
T@T`TaT\T
T@T`TaT\T^T
T`TbT
T`TdT
T`TdT
T`ThTfT
T`ThT
T`ThT
T`ThTjT
T`ThT
T`TpTlT
T`TpTlT
T`TpTqTnT
TpTrT
TpTtT
TpTtT
TpTxTvT
TpTxT
TxTzT
TxT|T
TxT|T
TxT|T~T
U U!U
U U!U
U U!U
U U"U
U U$U
U U$U
U U(U&U
U U(U
U U(U
U U(U*U
U U(U
U U0U,U
U U0U,U
U U0U1U.U
U@U0U
U@U0U
U@U0U2U
U@U0U
U@U0U4U
U@U0U4U
U@U0U8U6U
U@U0U
U@UAU8U
U@UAU8U
U@UAU8U:U
U@UAU8U
U@UAU8U<U
U@UAUCU<U
U@UAUCU<U>U
U@UBU
U@UDU
U@UDU
U@UHUFU
U@UHU
U@UHU
U@UHUJU
U@UHU
U@UPULU
U@UPULU
U@UPUQUNU
U@UPU
U@UPU
U@UPURU
U@UPU
U@UPUTU
U@UPUTU
U@UPUXUVU
U@UPU
U@U`UXU
U@U`UXU
U@U`UXUZU
U@U`UXU
U@U`UaU\U
U@U`UaU\U
U@U`UaU\U^U
U`UbU
U`UdU
U`UdU
U`UhUfU
U`UhU
U`UhU
U`UhUjU
U`UhU
U`UpUlU
U`UpUlU
U`UpUqUnU
UpUrU
UpUtU
UpUtU
UpUxUvU
UpUxU
UxUzU
UxU|U
UxU|U
UxU|U~U
V V!V
V V!V
V V!V
V V"V
V V$V
V V$V
V V(V&V
V V(V
V V(V
V V(V*V
V V(V
V V0V,V
V V0V,V
V V0V1V.V
V@V0V
V@V0V
V@V0V2V
V@V0V
V@V0V4V
V@V0V4V
V@V0V8V6V
V@V0V
V@VAV8V
V@VAV8V
V@VAV8V:V
V@VAV8V
V@VAV8V<V
V@VAVCV<V
V@VAVCV<V>V
V@VBV
V@VDV
V@VDV
V@VHVFV
V@VHV
V@VHV
V@VHVJV
V@VHV
V@VPVLV
V@VPVLV
V@VPVQVNV
V@VPV
V@VPV
V@VPVRV
V@VPV
V@VPVTV
V@VPVTV
V@VPVXVVV
V@VPV
V@V`VXV
V@V`VXV
V@V`VXVZV
V@V`VXV
V@V`VaV\V
V@V`VaV\V
V@V`VaV\V^V
V`VbV
V`VdV
V`VdV
V`VhVfV
V`VhV
V`VhV
V`VhVjV
V`VhV
V`VpVlV
V`VpVlV
V`VpVqVnV
VpVrV
VpVtV
VpVtV
VpVxVvV
VpVxV
VxVzV
VxV|V
VxV|V
VxV|V~V
W W!W
W W!W
W W!W
W W"W
W W$W
W W$W
W W(W&W
W W(W
W W(W
W W(W*W
W W(W
W W0W,W
W W0W,W
W W0W1W.W
W@W0W
W@W0W
W@W0W2W
W@W0W
W@W0W4W
W@W0W4W
W@W0W8W6W
W@W0W
W@WAW8W
W@WAW8W
W@WAW8W:W
W@WAW8W
W@WAW8W<W
W@WAWCW<W
W@WAWCW<W>W
W@WBW
W@WDW
W@WDW
W@WHWFW
W@WHW
W@WHW
W@WHWJW
W@WHW
W@WPWLW
W@WPWLW
W@WPWQWNW
W@WPW
W@WPW
W@WPWRW
W@WPW
W@WPWTW
W@WPWTW
W@WPWXWVW
W@WPW
W@W`WXW
W@W`WXW
W@W`WXWZW
W@W`WXW
W@W`WaW\W
W@W`WaW\W
W@W`WaW\W^W
W`WbW
W`WdW
W`WdW
W`WhWfW
W`WhW
W`WhW
W`WhWjW
W`WhW
W`WpWlW
W`WpWlW
W`WpWqWnW
WpWrW
WpWtW
WpWtW
WpWxWvW
WpWxW
WxWzW
WxW|W
WxW|W
WxW|W~W
X X!X
X X!X
X X!X
X X"X
X X$X
X X$X
X X(X&X
X X(X
X X(X
X X(X*X
X X(X
X X0X,X
X X0X,X
X X0X1X.X
X@X0X
X@X0X
X@X0X2X
X@X0X
X@X0X4X
X@X0X4X
X@X0X8X6X
X@X0X
X@XAX8X
X@XAX8X
X@XAX8X:X
X@XAX8X
X@XAX8X<X
X@XAXCX<X
X@XAXCX<X>X
X@XBX
X@XDX
X@XDX
X@XHXFX
X@XHX
X@XHX
X@XHXJX
X@XHX
X@XPXLX
X@XPXLX
X@XPXQXNX
X@XPX
X@XPX
X@XPXRX
X@XPX
X@XPXTX
X@XPXTX
X@XPXXXVX
X@XPX
X@X`XXX
X@X`XXX
X@X`XXXZX
X@X`XXX
X@X`XaX\X
X@X`XaX\X
X@X`XaX\X^X
X`XbX
X`XdX
X`XdX
X`XhXfX
X`XhX
X`XhX
X`XhXjX
X`XhX
X`XpXlX
X`XpXlX
X`XpXqXnX
XpXrX
XpXtX
XpXtX
XpXxXvX
XpXxX
XxXzX
XxX|X
XxX|X
XxX|X~X
Y Y!Y
Y Y!Y
Y Y!Y
Y Y"Y
Y Y$Y
Y Y$Y
Y Y(Y&Y
Y Y(Y
Y Y(Y
Y Y(Y*Y
Y Y(Y
Y Y0Y,Y
Y Y0Y,Y
Y Y0Y1Y.Y
Y@Y0Y
Y@Y0Y
Y@Y0Y2Y
Y@Y0Y
Y@Y0Y4Y
Y@Y0Y4Y
Y@Y0Y8Y6Y
Y@Y0Y
Y@YAY8Y
Y@YAY8Y
Y@YAY8Y:Y
Y@YAY8Y
Y@YAY8Y<Y
Y@YAYCY<Y
Y@YAYCY<Y>Y
Y@YBY
Y@YDY
Y@YDY
Y@YHYFY
Y@YHY
Y@YHY
Y@YHYJY
Y@YHY
Y@YPYLY
Y@YPYLY
Y@YPYQYNY
Y@YPY
Y@YPY
Y@YPYRY
Y@YPY
Y@YPYTY
Y@YPYTY
Y@YPYXYVY
Y@YPY
Y@Y`YXY
Y@Y`YXY
Y@Y`YXYZY
Y@Y`YXY
Y@Y`YaY\Y
Y@Y`YaY\Y
Y@Y`YaY\Y^Y
Y`YbY
Y`YdY
Y`YdY
Y`YhYfY
Y`YhY
Y`YhY
Y`YhYjY
Y`YhY
Y`YpYlY
Y`YpYlY
Y`YpYqYnY
YpYrY
YpYtY
YpYtY
YpYxYvY
YpYxY
YxYzY
YxY|Y
YxY|Y
YxY|Y~Y
Z Z!Z
Z Z!Z
Z Z!Z
Z Z"Z
Z Z$Z
Z Z$Z
Z Z(Z&Z
Z Z(Z
Z Z(Z
Z Z(Z*Z
Z Z(Z
Z Z0Z,Z
Z Z0Z,Z
Z Z0Z1Z.Z
Z@Z0Z
Z@Z0Z
Z@Z0Z2Z
Z@Z0Z
Z@Z0Z4Z
Z@Z0Z4Z
Z@Z0Z8Z6Z
Z@Z0Z
Z@ZAZ8Z
Z@ZAZ8Z
Z@ZAZ8Z:Z
Z@ZAZ8Z
Z@ZAZ8Z<Z
Z@ZAZCZ<Z
Z@ZAZCZ<Z>Z
Z@ZBZ
Z@ZDZ
Z@ZDZ
Z@ZHZFZ
Z@ZHZ
Z@ZHZ
Z@ZHZJZ
Z@ZHZ
Z@ZPZLZ
Z@ZPZLZ
Z@ZPZQZNZ
Z@ZPZ
Z@ZPZ
Z@ZPZRZ
Z@ZPZ
Z@ZPZTZ
Z@ZPZTZ
Z@ZPZXZVZ
Z@ZPZ
Z@Z`ZXZ
Z@Z`ZXZ
Z@Z`ZXZZZ
Z@Z`ZXZ
Z@Z`ZaZ\Z
Z@Z`ZaZ\Z
Z@Z`ZaZ\Z^Z
Z`ZbZ
Z`ZdZ
Z`ZdZ
Z`ZhZfZ
Z`ZhZ
Z`ZhZ
Z`ZhZjZ
Z`ZhZ
Z`ZpZlZ
Z`ZpZlZ
Z`ZpZqZnZ
ZpZrZ
ZpZtZ
ZpZtZ
ZpZxZvZ
ZpZxZ
ZxZzZ
ZxZ|Z
ZxZ|Z
ZxZ|Z~Z
[ [![
[ [![
[ [![
[ ["[
[ [$[
[ [$[
[ [([&[
[ [([
[ [([
[ [([*[
[ [([
[ [0[,[
[ [0[,[
[ [0[1[.[
[@[0[
[@[0[
[@[0[2[
[@[0[
[@[0[4[
[@[0[4[
[@[0[8[6[
[@[0[
[@[A[8[
[@[A[8[
[@[A[8[:[
[@[A[8[
[@[A[8[<[
[@[A[C[<[
[@[A[C[<[>[
[@[B[
[@[D[
[@[D[
[@[H[F[
[@[H[
[@[H[
[@[H[J[
[@[H[
[@[P[L[
[@[P[L[
[@[P[Q[N[
[@[P[
[@[P[
[@[P[R[
[@[P[
[@[P[T[
[@[P[T[
[@[P[X[V[
[@[P[
[@[`[X[
[@[`[X[
[@[`[X[Z[
[@[`[X[
[@[`[a[\[
[@[`[a[\[
[@[`[a[\[^[
[`[b[
[`[d[
[`[d[
[`[h[f[
[`[h[
[`[h[
[`[h[j[
[`[h[
[`[p[l[
[`[p[l[
[`[p[q[n[
[p[r[
[p[t[
[p[t[
[p[x[v[
[p[x[
[x[z[
[x[|[
[x[|[
[x[|[~[
\ \!\
\ \!\
\ \!\
\ \"\
\ \$\
\ \$\
\ \(\&\
\ \(\
\ \(\
\ \(\*\
\ \(\
\ \0\,\
\ \0\,\
\ \0\1\.\
\@\0\
\@\0\
\@\0\2\
\@\0\
\@\0\4\
\@\0\4\
\@\0\8\6\
\@\0\
\@\A\8\
\@\A\8\
\@\A\8\:\
\@\A\8\
\@\A\8\<\
\@\A\C\<\
\@\A\C\<\>\
\@\B\
\@\D\
\@\D\
\@\H\F\
\@\H\
\@\H\
\@\H\J\
\@\H\
\@\P\L\
\@\P\L\
\@\P\Q\N\
\@\P\
\@\P\
\@\P\R\
\@\P\
\@\P\T\
\@\P\T\
\@\P\X\V\
\@\P\
\@\`\X\
\@\`\X\
\@\`\X\Z\
\@\`\X\
\@\`\a\\\
\@\`\a\\\
\@\`\a\\\^\
\`\b\
\`\d\
\`\d\
\`\h\f\
\`\h\
\`\h\
\`\h\j\
\`\h\
\`\p\l\
\`\p\l\
\`\p\q\n\
\p\r\
\p\t\
\p\t\
\p\x\v\
\p\x\
\x\z\
\x\|\
\x\|\
\x\|\~\
] ]!]
] ]!]
] ]!]
] ]"]
] ]$]
] ]$]
] ](]&]
] ](]
] ](]
] ](]*]
] ](]
] ]0],]
] ]0],]
] ]0]1].]
]@]0]
]@]0]
]@]0]2]
]@]0]
]@]0]4]
]@]0]4]
]@]0]8]6]
]@]0]
]@]A]8]
]@]A]8]
]@]A]8]:]
]@]A]8]
]@]A]8]<]
]@]A]C]<]
]@]A]C]<]>]
]@]B]
]@]D]
]@]D]
]@]H]F]
]@]H]
]@]H]
]@]H]J]
]@]H]
]@]P]L]
]@]P]L]
]@]P]Q]N]
]@]P]
]@]P]
]@]P]R]
]@]P]
]@]P]T]
]@]P]T]
]@]P]X]V]
]@]P]
]@]`]X]
]@]`]X]
]@]`]X]Z]
]@]`]X]
]@]`]a]\]
]@]`]a]\]
]@]`]a]\]^]
]`]b]
]`]d]
]`]d]
]`]h]f]
]`]h]
]`]h]
]`]h]j]
]`]h]
]`]p]l]
]`]p]l]
]`]p]q]n]
]p]r]
]p]t]
]p]t]
]p]x]v]
]p]x]
]x]z]
]x]|]
]x]|]
]x]|]~]
^ ^!^
^ ^!^
^ ^!^
^ ^"^
^ ^$^
^ ^$^
^ ^(^&^
^ ^(^
^ ^(^
^ ^(^*^
^ ^(^
^ ^0^,^
^ ^0^,^
^ ^0^1^.^
^@^0^
^@^0^
^@^0^2^
^@^0^
^@^0^4^
^@^0^4^
^@^0^8^6^
^@^0^
^@^A^8^
^@^A^8^
^@^A^8^:^
^@^A^8^
^@^A^8^<^
^@^A^C^<^
^@^A^C^<^>^
^@^B^
^@^D^
^@^D^
^@^H^F^
^@^H^
^@^H^
^@^H^J^
^@^H^
^@^P^L^
^@^P^L^
^@^P^Q^N^
^@^P^
^@^P^
^@^P^R^
^@^P^
^@^P^T^
^@^P^T^
^@^P^X^V^
^@^P^
^@^`^X^
^@^`^X^
^@^`^X^Z^
^@^`^X^
^@^`^a^\^
^@^`^a^\^
^@^`^a^\^^^
^`^b^
^`^d^
^`^d^
^`^h^f^
^`^h^
^`^h^
^`^h^j^
^`^h^
^`^p^l^
^`^p^l^
^`^p^q^n^
^p^r^
^p^t^
^p^t^
^p^x^v^
^p^x^
^x^z^
^x^|^
^x^|^
^x^|^~^
_ _!_
_ _!_
_ _!_
_ _"_
_ _$_
_ _$_
_ _(_&_
_ _(_
_ _(_
_ _(_*_
_ _(_
_ _0_,_
_ _0_,_
_ _0_1_._
_@_0_
_@_0_
_@_0_2_
_@_0_
_@_0_4_
_@_0_4_
_@_0_8_6_
_@_0_
_@_A_8_
_@_A_8_
_@_A_8_:_
_@_A_8_
_@_A_8_<_
_@_A_C_<_
_@_A_C_<_>_
_@_B_
_@_D_
_@_D_
_@_H_F_
_@_H_
_@_H_
_@_H_J_
_@_H_
_@_P_L_
_@_P_L_
_@_P_Q_N_
_@_P_
_@_P_
_@_P_R_
_@_P_
_@_P_T_
_@_P_T_
_@_P_X_V_
_@_P_
_@_`_X_
_@_`_X_
_@_`_X_Z_
_@_`_X_
_@_`_a_\_
_@_`_a_\_
_@_`_a_\_^_
_`_b_
_`_d_
_`_d_
_`_h_f_
_`_h_
_`_h_
_`_h_j_
_`_h_
_`_p_l_
_`_p_l_
_`_p_q_n_
_p_r_
_p_t_
_p_t_
_p_x_v_
_p_x_
_x_z_
_x_|_
_x_|_
_x_|_~_
` `!`
` `!`
` `!`
` `"`
` `$`
` `$`
` `(`&`
` `(`
` `(`
` `(`*`
` `(`
` `0`,`
` `0`,`
` `0`1`.`
`@`0`
`@`0`
`@`0`2`
`@`0`
`@`0`4`
`@`0`4`
`@`0`8`6`
`@`0`
`@`A`8`
`@`A`8`
`@`A`8`:`
`@`A`8`
`@`A`8`<`
`@`A`C`<`
`@`A`C`<`>`
`@`B`
`@`D`
`@`D`
`@`H`F`
`@`H`
`@`H`
`@`H`J`
`@`H`
`@`P`L`
`@`P`L`
`@`P`Q`N`
`@`P`
`@`P`
`@`P`R`
`@`P`
`@`P`T`
`@`P`T`
`@`P`X`V`
`@`P`
`@```X`
`@```X`
`@```X`Z`
`@```X`
`@```a`\`
`@```a`\`
`@```a`\`^`
```b`
```d`
```d`
```h`f`
```h`
```h`
```h`j`
```h`
```p`l`
```p`l`
```p`q`n`
`p`r`
`p`t`
`p`t`
`p`x`v`
`p`x`
`x`z`
`x`|`
`x`|`
`x`|`~`
a a!a
a a!a
a a!a
a a"a
a a$a
a a$a
a a(a&a
a a(a
a a(a
a a(a*a
a a(a
a a0a,a
a a0a,a
a a0a1a.a
a@a0a
a@a0a
a@a0a2a
a@a0a
a@a0a4a
a@a0a4a
a@a0a8a6a
a@a0a
a@aAa8a
a@aAa8a
a@aAa8a:a
a@aAa8a
a@aAa8a<a
a@aAaCa<a
a@aAaCa<a>a
a@aBa
a@aDa
a@aDa
a@aHaFa
a@aHa
a@aHa
a@aHaJa
a@aHa
a@aPaLa
a@aPaLa
a@aPaQaNa
a@aPa
a@aPa
a@aPaRa
a@aPa
a@aPaTa
a@aPaTa
a@aPaXaVa
a@aPa
a@a`aXa
a@a`aXa
a@a`aXaZa
a@a`aXa
a@a`aaa\a
a@a`aaa\a
a@a`aaa\a^a
a`aba
a`ada
a`ada
a`ahafa
a`aha
a`aha
a`ahaja
a`aha
a`apala
a`apala
a`apaqana
apara
apata
apata
apaxava
apaxa
axaza
axa|a
axa|a
axa|a~a
b b!b
b b!b
b b!b
b b"b
b b$b
b b$b
b b(b&b
b b(b
b b(b
b b(b*b
b b(b
b b0b,b
b b0b,b
b b0b1b.b
b@b0b
b@b0b
b@b0b2b
b@b0b
b@b0b4b
b@b0b4b
b@b0b8b6b
b@b0b
b@bAb8b
b@bAb8b
b@bAb8b:b
b@bAb8b
b@bAb8b<b
b@bAbCb<b
b@bAbCb<b>b
b@bBb
b@bDb
b@bDb
b@bHbFb
b@bHb
b@bHb
b@bHbJb
b@bHb
b@bPbLb
b@bPbLb
b@bPbQbNb
b@bPb
b@bPb
b@bPbRb
b@bPb
b@bPbTb
b@bPbTb
b@bPbXbVb
b@bPb
b@b`bXb
b@b`bXb
b@b`bXbZb
b@b`bXb
b@b`bab\b
b@b`bab\b
b@b`bab\b^b
b`bbb
b`bdb
b`bdb
b`bhbfb
b`bhb
b`bhb
b`bhbjb
b`bhb
b`bpblb
b`bpblb
b`bpbqbnb
bpbrb
bpbtb
bpbtb
bpbxbvb
bpbxb
bxbzb
bxb|b
bxb|b
bxb|b~b
c c!c
c c!c
c c!c
c c"c
c c$c
c c$c
c c(c&c
c c(c
c c(c
c c(c*c
c c(c
c c0c,c
c c0c,c
c c0c1c.c
c@c0c
c@c0c
c@c0c2c
c@c0c
c@c0c4c
c@c0c4c
c@c0c8c6c
c@c0c
c@cAc8c
c@cAc8c
c@cAc8c:c
c@cAc8c
c@cAc8c<c
c@cAcCc<c
c@cAcCc<c>c
c@cBc
c@cDc
c@cDc
c@cHcFc
c@cHc
c@cHc
c@cHcJc
c@cHc
c@cPcLc
c@cPcLc
c@cPcQcNc
c@cPc
c@cPc
c@cPcRc
c@cPc
c@cPcTc
c@cPcTc
c@cPcXcVc
c@cPc
c@c`cXc
c@c`cXc
c@c`cXcZc
c@c`cXc
c@c`cac\c
c@c`cac\c
c@c`cac\c^c
c`cbc
c`cdc
c`cdc
c`chcfc
c`chc
c`chc
c`chcjc
c`chc
c`cpclc
c`cpclc
c`cpcqcnc
cpcrc
cpctc
cpctc
cpcxcvc
cpcxc
cxczc
cxc|c
cxc|c
cxc|c~c
d d!d
d d!d
d d!d
d d"d
d d$d
d d$d
d d(d&d
d d(d
d d(d
d d(d*d
d d(d
d d0d,d
d d0d,d
d d0d1d.d
d@d0d
d@d0d
d@d0d2d
d@d0d
d@d0d4d
d@d0d4d
d@d0d8d6d
d@d0d
d@dAd8d
d@dAd8d
d@dAd8d:d
d@dAd8d
d@dAd8d<d
d@dAdCd<d
d@dAdCd<d>d
d@dBd
d@dDd
d@dDd
d@dHdFd
d@dHd
d@dHd
d@dHdJd
d@dHd
d@dPdLd
d@dPdLd
d@dPdQdNd
d@dPd
d@dPd
d@dPdRd
d@dPd
d@dPdTd
d@dPdTd
d@dPdXdVd
d@dPd
d@d`dXd
d@d`dXd
d@d`dXdZd
d@d`dXd
d@d`dad\d
d@d`dad\d
d@d`dad\d^d
d`dbd
d`ddd
d`ddd
d`dhdfd
d`dhd
d`dhd
d`dhdjd
d`dhd
d`dpdld
d`dpdld
d`dpdqdnd
dpdrd
dpdtd
dpdtd
dpdxdvd
dpdxd
dxdzd
dxd|d
dxd|d
dxd|d~d
e e!e
e e!e
e e!e
e e"e
e e$e
e e$e
e e(e&e
e e(e
e e(e
e e(e*e
e e(e
e e0e,e
e e0e,e
e e0e1e.e
e@e0e
e@e0e
e@e0e2e
e@e0e
e@e0e4e
e@e0e4e
e@e0e8e6e
e@e0e
e@eAe8e
e@eAe8e
e@eAe8e:e
e@eAe8e
e@eAe8e<e
e@eAeCe<e
e@eAeCe<e>e
e@eBe
e@eDe
e@eDe
e@eHeFe
e@eHe
e@eHe
e@eHeJe
e@eHe
e@ePeLe
e@ePeLe
e@ePeQeNe
e@ePe
e@ePe
e@ePeRe
e@ePe
e@ePeTe
e@ePeTe
e@ePeXeVe
e@ePe
e@e`eXe
e@e`eXe
e@e`eXeZe
e@e`eXe
e@e`eae\e
e@e`eae\e
e@e`eae\e^e
e`ebe
e`ede
e`ede
e`ehefe
e`ehe
e`ehe
e`eheje
e`ehe
e`epele
e`epele
e`epeqene
epere
epete
epete
epexeve
epexe
exeze
exe|e
exe|e
exe|e~e
f f!f
f f!f
f f!f
f f"f
f f$f
f f$f
f f(f&f
f f(f
f f(f
f f(f*f
f f(f
f f0f,f
f f0f,f
f f0f1f.f
f@f0f
f@f0f
f@f0f2f
f@f0f
f@f0f4f
f@f0f4f
f@f0f8f6f
f@f0f
f@fAf8f
f@fAf8f
f@fAf8f:f
f@fAf8f
f@fAf8f<f
f@fAfCf<f
f@fAfCf<f>f
f@fBf
f@fDf
f@fDf
f@fHfFf
f@fHf
f@fHf
f@fHfJf
f@fHf
f@fPfLf
f@fPfLf
f@fPfQfNf
f@fPf
f@fPf
f@fPfRf
f@fPf
f@fPfTf
f@fPfTf
f@fPfXfVf
f@fPf
f@f`fXf
f@f`fXf
f@f`fXfZf
f@f`fXf
f@f`faf\f
f@f`faf\f
f@f`faf\f^f
f`fbf
f`fdf
f`fdf
f`fhfff
f`fhf
f`fhf
f`fhfjf
f`fhf
f`fpflf
f`fpflf
f`fpfqfnf
fpfrf
fpftf
fpftf
fpfxfvf
fpfxf
fxfzf
fxf|f
fxf|f
fxf|f~f
g g!g
g g!g
g g!g
g g"g
g g$g
g g$g
g g(g&g
g g(g
g g(g
g g(g*g
g g(g
g g0g,g
g g0g,g
g g0g1g.g
g@g0g
g@g0g
g@g0g2g
g@g0g
g@g0g4g
g@g0g4g
g@g0g8g6g
g@g0g
g@gAg8g
g@gAg8g
g@gAg8g:g
g@gAg8g
g@gAg8g<g
g@gAgCg<g
g@gAgCg<g>g
g@gBg
g@gDg
g@gDg
g@gHgFg
g@gHg
g@gHg
g@gHgJg
g@gHg
g@gPgLg
g@gPgLg
g@gPgQgNg
g@gPg
g@gPg
g@gPgRg
g@gPg
g@gPgTg
g@gPgTg
g@gPgXgVg
g@gPg
g@g`gXg
g@g`gXg
g@g`gXgZg
g@g`gXg
g@g`gag\g
g@g`gag\g
g@g`gag\g^g
g`gbg
g`gdg
g`gdg
g`ghgfg
g`ghg
g`ghg
g`ghgjg
g`ghg
g`gpglg
g`gpglg
g`gpgqgng
gpgrg
gpgtg
gpgtg
gpgxgvg
gpgxg
gxgzg
gxg|g
gxg|g
gxg|g~g
h h!h
h h!h
h h!h
h h"h
h h$h
h h$h
h h(h&h
h h(h
h h(h
h h(h*h
h h(h
h h0h,h
h h0h,h
h h0h1h.h
h@h0h
h@h0h
h@h0h2h
h@h0h
h@h0h4h
h@h0h4h
h@h0h8h6h
h@h0h
h@hAh8h
h@hAh8h
h@hAh8h:h
h@hAh8h
h@hAh8h<h
h@hAhCh<h
h@hAhCh<h>h
h@hBh
h@hDh
h@hDh
h@hHhFh
h@hHh
h@hHh
h@hHhJh
h@hHh
h@hPhLh
h@hPhLh
h@hPhQhNh
h@hPh
h@hPh
h@hPhRh
h@hPh
h@hPhTh
h@hPhTh
h@hPhXhVh
h@hPh
h@h`hXh
h@h`hXh
h@h`hXhZh
h@h`hXh
h@h`hah\h
h@h`hah\h
h@h`hah\h^h
h`hbh
h`hdh
h`hdh
h`hhhfh
h`hhh
h`hhh
h`hhhjh
h`hhh
h`hphlh
h`hphlh
h`hphqhnh
hphrh
hphth
hphth
hphxhvh
hphxh
hxhzh
hxh|h
hxh|h
hxh|h~h
i i!i
i i!i
i i!i
i i"i
i i$i
i i$i
i i(i&i
i i(i
i i(i
i i(i*i
i i(i
i i0i,i
i i0i,i
i i0i1i.i
i@i0i
i@i0i
i@i0i2i
i@i0i
i@i0i4i
i@i0i4i
i@i0i8i6i
i@i0i
i@iAi8i
i@iAi8i
i@iAi8i:i
i@iAi8i
i@iAi8i<i
i@iAiCi<i
i@iAiCi<i>i
i@iBi
i@iDi
i@iDi
i@iHiFi
i@iHi
i@iHi
i@iHiJi
i@iHi
i@iPiLi
i@iPiLi
i@iPiQiNi
i@iPi
i@iPi
i@iPiRi
i@iPi
i@iPiTi
i@iPiTi
i@iPiXiVi
i@iPi
i@i`iXi
i@i`iXi
i@i`iXiZi
i@i`iXi
i@i`iai\i
i@i`iai\i
i@i`iai\i^i
i`ibi
i`idi
i`idi
i`ihifi
i`ihi
i`ihi
i`ihiji
i`ihi
i`ipili
i`ipili
i`ipiqini
ipiri
ipiti
ipiti
ipixivi
ipixi
ixizi
ixi|i
ixi|i
ixi|i~i
j j!j
j j!j
j j!j
j j"j
j j$j
j j$j
j j(j&j
j j(j
j j(j
j j(j*j
j j(j
j j0j,j
j j0j,j
j j0j1j.j
j@j0j
j@j0j
j@j0j2j
j@j0j
j@j0j4j
j@j0j4j
j@j0j8j6j
j@j0j
j@jAj8j
j@jAj8j
j@jAj8j:j
j@jAj8j
j@jAj8j<j
j@jAjCj<j
j@jAjCj<j>j
j@jBj
j@jDj
j@jDj
j@jHjFj
j@jHj
j@jHj
j@jHjJj
j@jHj
j@jPjLj
j@jPjLj
j@jPjQjNj
j@jPj
j@jPj
j@jPjRj
j@jPj
j@jPjTj
j@jPjTj
j@jPjXjVj
j@jPj
j@j`jXj
j@j`jXj
j@j`jXjZj
j@j`jXj
j@j`jaj\j
j@j`jaj\j
j@j`jaj\j^j
j`jbj
j`jdj
j`jdj
j`jhjfj
j`jhj
j`jhj
j`jhjjj
j`jhj
j`jpjlj
j`jpjlj
j`jpjqjnj
jpjrj
jpjtj
jpjtj
jpjxjvj
jpjxj
jxjzj
jxj|j
jxj|j
jxj|j~j
k k!k
k k!k
k k!k
k k"k
k k$k
k k$k
k k(k&k
k k(k
k k(k
k k(k*k
k k(k
k k0k,k
k k0k,k
k k0k1k.k
k@k0k
k@k0k
k@k0k2k
k@k0k
k@k0k4k
k@k0k4k
k@k0k8k6k
k@k0k
k@kAk8k
k@kAk8k
k@kAk8k:k
k@kAk8k
k@kAk8k<k
k@kAkCk<k
k@kAkCk<k>k
k@kBk
k@kDk
k@kDk
k@kHkFk
k@kHk
k@kHk
k@kHkJk
k@kHk
k@kPkLk
k@kPkLk
k@kPkQkNk
k@kPk
k@kPk
k@kPkRk
k@kPk
k@kPkTk
k@kPkTk
k@kPkXkVk
k@kPk
k@k`kXk
k@k`kXk
k@k`kXkZk
k@k`kXk
k@k`kak\k
k@k`kak\k
k@k`kak\k^k
k`kbk
k`kdk
k`kdk
k`khkfk
k`khk
k`khk
k`khkjk
k`khk
k`kpklk
k`kpklk
k`kpkqknk
kpkrk
kpktk
kpktk
kpkxkvk
kpkxk
kxkzk
kxk|k
kxk|k
kxk|k~k
l l!l
l l!l
l l!l
l l"l
l l$l
l l$l
l l(l&l
l l(l
l l(l
l l(l*l
l l(l
l l0l,l
l l0l,l
l l0l1l.l
l@l0l
l@l0l
l@l0l2l
l@l0l
l@l0l4l
l@l0l4l
l@l0l8l6l
l@l0l
l@lAl8l
l@lAl8l
l@lAl8l:l
l@lAl8l
l@lAl8l<l
l@lAlCl<l
l@lAlCl<l>l
l@lBl
l@lDl
l@lDl
l@lHlFl
l@lHl
l@lHl
l@lHlJl
l@lHl
l@lPlLl
l@lPlLl
l@lPlQlNl
l@lPl
l@lPl
l@lPlRl
l@lPl
l@lPlTl
l@lPlTl
l@lPlXlVl
l@lPl
l@l`lXl
l@l`lXl
l@l`lXlZl
l@l`lXl
l@l`lal\l
l@l`lal\l
l@l`lal\l^l
l`lbl
l`ldl
l`ldl
l`lhlfl
l`lhl
l`lhl
l`lhljl
l`lhl
l`lplll
l`lplll
l`lplqlnl
lplrl
lpltl
lpltl
lplxlvl
lplxl
lxlzl
lxl|l
lxl|l
lxl|l~l
m m!m
m m!m
m m!m
m m"m
m m$m
m m$m
m m(m&m
m m(m
m m(m
m m(m*m
m m(m
m m0m,m
m m0m,m
m m0m1m.m
m@m0m
m@m0m
m@m0m2m
m@m0m
m@m0m4m
m@m0m4m
m@m0m8m6m
m@m0m
m@mAm8m
m@mAm8m
m@mAm8m:m
m@mAm8m
m@mAm8m<m
m@mAmCm<m
m@mAmCm<m>m
m@mBm
m@mDm
m@mDm
m@mHmFm
m@mHm
m@mHm
m@mHmJm
m@mHm
m@mPmLm
m@mPmLm
m@mPmQmNm
m@mPm
m@mPm
m@mPmRm
m@mPm
m@mPmTm
m@mPmTm
m@mPmXmVm
m@mPm
m@m`mXm
m@m`mXm
m@m`mXmZm
m@m`mXm
m@m`mam\m
m@m`mam\m
m@m`mam\m^m
m`mbm
m`mdm
m`mdm
m`mhmfm
m`mhm
m`mhm
m`mhmjm
m`mhm
m`mpmlm
m`mpmlm
m`mpmqmnm
mpmrm
mpmtm
mpmtm
mpmxmvm
mpmxm
mxmzm
mxm|m
mxm|m
mxm|m~m
n n!n
n n!n
n n!n
n n"n
n n$n
n n$n
n n(n&n
n n(n
n n(n
n n(n*n
n n(n
n n0n,n
n n0n,n
n n0n1n.n
n@n0n
n@n0n
n@n0n2n
n@n0n
n@n0n4n
n@n0n4n
n@n0n8n6n
n@n0n
n@nAn8n
n@nAn8n
n@nAn8n:n
n@nAn8n
n@nAn8n<n
n@nAnCn<n
n@nAnCn<n>n
n@nBn
n@nDn
n@nDn
n@nHnFn
n@nHn
n@nHn
n@nHnJn
n@nHn
n@nPnLn
n@nPnLn
n@nPnQnNn
n@nPn
n@nPn
n@nPnRn
n@nPn
n@nPnTn
n@nPnTn
n@nPnXnVn
n@nPn
n@n`nXn
n@n`nXn
n@n`nXnZn
n@n`nXn
n@n`nan\n
n@n`nan\n
n@n`nan\n^n
n`nbn
n`ndn
n`ndn
n`nhnfn
n`nhn
n`nhn
n`nhnjn
n`nhn
n`npnln
n`npnln
n`npnqnnn
npnrn
npntn
npntn
npnxnvn
npnxn
nxnzn
nxn|n
nxn|n
nxn|n~n
o o!o
o o!o
o o!o
o o"o
o o$o
o o$o
o o(o&o
o o(o
o o(o
o o(o*o
o o(o
o o0o,o
o o0o,o
o o0o1o.o
o@o0o
o@o0o
o@o0o2o
o@o0o
o@o0o4o
o@o0o4o
o@o0o8o6o
o@o0o
o@oAo8o
o@oAo8o
o@oAo8o:o
o@oAo8o
o@oAo8o<o
o@oAoCo<o
o@oAoCo<o>o
o@oBo
o@oDo
o@oDo
o@oHoFo
o@oHo
o@oHo
o@oHoJo
o@oHo
o@oPoLo
o@oPoLo
o@oPoQoNo
o@oPo
o@oPo
o@oPoRo
o@oPo
o@oPoTo
o@oPoTo
o@oPoXoVo
o@oPo
o@o`oXo
o@o`oXo
o@o`oXoZo
o@o`oXo
o@o`oao\o
o@o`oao\o
o@o`oao\o^o
o`obo
o`odo
o`odo
o`ohofo
o`oho
o`oho
o`ohojo
o`oho
o`opolo
o`opolo
o`opoqono
oporo
opoto
opoto
opoxovo
opoxo
oxozo
oxo|o
oxo|o
oxo|o~o
p p!p
p p!p
p p!p
p p"p
p p$p
p p$p
p p(p&p
p p(p
p p(p
p p(p*p
p p(p
p p0p,p
p p0p,p
p p0p1p.p
p@p0p
p@p0p
p@p0p2p
p@p0p
p@p0p4p
p@p0p4p
p@p0p8p6p
p@p0p
p@pAp8p
p@pAp8p
p@pAp8p:p
p@pAp8p
p@pAp8p<p
p@pApCp<p
p@pApCp<p>p
p@pBp
p@pDp
p@pDp
p@pHpFp
p@pHp
p@pHp
p@pHpJp
p@pHp
p@pPpLp
p@pPpLp
p@pPpQpNp
p@pPp
p@pPp
p@pPpRp
p@pPp
p@pPpTp
p@pPpTp
p@pPpXpVp
p@pPp
p@p`pXp
p@p`pXp
p@p`pXpZp
p@p`pXp
p@p`pap\p
p@p`pap\p
p@p`pap\p^p
p`pbp
p`pdp
p`pdp
p`phpfp
p`php
p`php
p`phpjp
p`php
p`ppplp
p`ppplp
p`pppqpnp
ppprp
ppptp
ppptp
pppxpvp
pppxp
pxpzp
pxp|p
pxp|p
pxp|p~p
q q!q
q q!q
q q!q
q q"q
q q$q
q q$q
q q(q&q
q q(q
q q(q
q q(q*q
q q(q
q q0q,q
q q0q,q
q q0q1q.q
q@q0q
q@q0q
q@q0q2q
q@q0q
q@q0q4q
q@q0q4q
q@q0q8q6q
q@q0q
q@qAq8q
q@qAq8q
q@qAq8q:q
q@qAq8q
q@qAq8q<q
q@qAqCq<q
q@qAqCq<q>q
q@qBq
q@qDq
q@qDq
q@qHqFq
q@qHq
q@qHq
q@qHqJq
q@qHq
q@qPqLq
q@qPqLq
q@qPqQqNq
q@qPq
q@qPq
q@qPqRq
q@qPq
q@qPqTq
q@qPqTq
q@qPqXqVq
q@qPq
q@q`qXq
q@q`qXq
q@q`qXqZq
q@q`qXq
q@q`qaq\q
q@q`qaq\q
q@q`qaq\q^q
q`qbq
q`qdq
q`qdq
q`qhqfq
q`qhq
q`qhq
q`qhqjq
q`qhq
q`qpqlq
q`qpqlq
q`qpqqqnq
qpqrq
qpqtq
qpqtq
qpqxqvq
qpqxq
qxqzq
qxq|q
qxq|q
qxq|q~q
r r!r
r r!r
r r!r
r r"r
r r$r
r r$r
r r(r&r
r r(r
r r(r
r r(r*r
r r(r
r r0r,r
r r0r,r
r r0r1r.r
r@r0r
r@r0r
r@r0r2r
r@r0r
r@r0r4r
r@r0r4r
r@r0r8r6r
r@r0r
r@rAr8r
r@rAr8r
r@rAr8r:r
r@rAr8r
r@rAr8r<r
r@rArCr<r
r@rArCr<r>r
r@rBr
r@rDr
r@rDr
r@rHrFr
r@rHr
r@rHr
r@rHrJr
r@rHr
r@rPrLr
r@rPrLr
r@rPrQrNr
r@rPr
r@rPr
r@rPrRr
r@rPr
r@rPrTr
r@rPrTr
r@rPrXrVr
r@rPr
r@r`rXr
r@r`rXr
r@r`rXrZr
r@r`rXr
r@r`rar\r
r@r`rar\r
r@r`rar\r^r
r`rbr
r`rdr
r`rdr
r`rhrfr
r`rhr
r`rhr
r`rhrjr
r`rhr
r`rprlr
r`rprlr
r`rprqrnr
rprrr
rprtr
rprtr
rprxrvr
rprxr
rxrzr
rxr|r
rxr|r
rxr|r~r
s s!s
s s!s
s s!s
s s"s
s s$s
s s$s
s s(s&s
s s(s
s s(s
s s(s*s
s s(s
s s0s,s
s s0s,s
s s0s1s.s
s@s0s
s@s0s
s@s0s2s
s@s0s
s@s0s4s
s@s0s4s
s@s0s8s6s
s@s0s
s@sAs8s
s@sAs8s
s@sAs8s:s
s@sAs8s
s@sAs8s<s
s@sAsCs<s
s@sAsCs<s>s
s@sBs
s@sDs
s@sDs
s@sHsFs
s@sHs
s@sHs
s@sHsJs
s@sHs
s@sPsLs
s@sPsLs
s@sPsQsNs
s@sPs
s@sPs
s@sPsRs
s@sPs
s@sPsTs
s@sPsTs
s@sPsXsVs
s@sPs
s@s`sXs
s@s`sXs
s@s`sXsZs
s@s`sXs
s@s`sas\s
s@s`sas\s
s@s`sas\s^s
s`sbs
s`sds
s`sds
s`shsfs
s`shs
s`shs
s`shsjs
s`shs
s`spsls
s`spsls
s`spsqsns
spsrs
spsts
spsts
spsxsvs
spsxs
sxszs
sxs|s
sxs|s
sxs|s~s
t t!t
t t!t
t t!t
t t"t
t t$t
t t$t
t t(t&t
t t(t
t t(t
t t(t*t
t t(t
t t0t,t
t t0t,t
t t0t1t.t
t@t0t
t@t0t
t@t0t2t
t@t0t
t@t0t4t
t@t0t4t
t@t0t8t6t
t@t0t
t@tAt8t
t@tAt8t
t@tAt8t:t
t@tAt8t
t@tAt8t<t
t@tAtCt<t
t@tAtCt<t>t
t@tBt
t@tDt
t@tDt
t@tHtFt
t@tHt
t@tHt
t@tHtJt
t@tHt
t@tPtLt
t@tPtLt
t@tPtQtNt
t@tPt
t@tPt
t@tPtRt
t@tPt
t@tPtTt
t@tPtTt
t@tPtXtVt
t@tPt
t@t`tXt
t@t`tXt
t@t`tXtZt
t@t`tXt
t@t`tat\t
t@t`tat\t
t@t`tat\t^t
t`tbt
t`tdt
t`tdt
t`thtft
t`tht
t`tht
t`thtjt
t`tht
t`tptlt
t`tptlt
t`tptqtnt
tptrt
tpttt
tpttt
tptxtvt
tptxt
txtzt
txt|t
txt|t
txt|t~t
u u!u
u u!u
u u!u
u u"u
u u$u
u u$u
u u(u&u
u u(u
u u(u
u u(u*u
u u(u
u u0u,u
u u0u,u
u u0u1u.u
u@u0u
u@u0u
u@u0u2u
u@u0u
u@u0u4u
u@u0u4u
u@u0u8u6u
u@u0u
u@uAu8u
u@uAu8u
u@uAu8u:u
u@uAu8u
u@uAu8u<u
u@uAuCu<u
u@uAuCu<u>u
u@uBu
u@uDu
u@uDu
u@uHuFu
u@uHu
u@uHu
u@uHuJu
u@uHu
u@uPuLu
u@uPuLu
u@uPuQuNu
u@uPu
u@uPu
u@uPuRu
u@uPu
u@uPuTu
u@uPuTu
u@uPuXuVu
u@uPu
u@u`uXu
u@u`uXu
u@u`uXuZu
u@u`uXu
u@u`uau\u
u@u`uau\u
u@u`uau\u^u
u`ubu
u`udu
u`udu
u`uhufu
u`uhu
u`uhu
u`uhuju
u`uhu
u`upulu
u`upulu
u`upuqunu
upuru
uputu
uputu
upuxuvu
upuxu
uxuzu
uxu|u
uxu|u
uxu|u~u
v v!v
v v!v
v v!v
v v"v
v v$v
v v$v
v v(v&v
v v(v
v v(v
v v(v*v
v v(v
v v0v,v
v v0v,v
v v0v1v.v
v@v0v
v@v0v
v@v0v2v
v@v0v
v@v0v4v
v@v0v4v
v@v0v8v6v
v@v0v
v@vAv8v
v@vAv8v
v@vAv8v:v
v@vAv8v
v@vAv8v<v
v@vAvCv<v
v@vAvCv<v>v
v@vBv
v@vDv
v@vDv
v@vHvFv
v@vHv
v@vHv
v@vHvJv
v@vHv
v@vPvLv
v@vPvLv
v@vPvQvNv
v@vPv
v@vPv
v@vPvRv
v@vPv
v@vPvTv
v@vPvTv
v@vPvXvVv
v@vPv
v@v`vXv
v@v`vXv
v@v`vXvZv
v@v`vXv
v@v`vav\v
v@v`vav\v
v@v`vav\v^v
v`vbv
v`vdv
v`vdv
v`vhvfv
v`vhv
v`vhv
v`vhvjv
v`vhv
v`vpvlv
v`vpvlv
v`vpvqvnv
vpvrv
vpvtv
vpvtv
vpvxvvv
vpvxv
vxvzv
vxv|v
vxv|v
vxv|v~v
w w!w
w w!w
w w!w
w w"w
w w$w
w w$w
w w(w&w
w w(w
w w(w
w w(w*w
w w(w
w w0w,w
w w0w,w
w w0w1w.w
w@w0w
w@w0w
w@w0w2w
w@w0w
w@w0w4w
w@w0w4w
w@w0w8w6w
w@w0w
w@wAw8w
w@wAw8w
w@wAw8w:w
w@wAw8w
w@wAw8w<w
w@wAwCw<w
w@wAwCw<w>w
w@wBw
w@wDw
w@wDw
w@wHwFw
w@wHw
w@wHw
w@wHwJw
w@wHw
w@wPwLw
w@wPwLw
w@wPwQwNw
w@wPw
w@wPw
w@wPwRw
w@wPw
w@wPwTw
w@wPwTw
w@wPwXwVw
w@wPw
w@w`wXw
w@w`wXw
w@w`wXwZw
w@w`wXw
w@w`waw\w
w@w`waw\w
w@w`waw\w^w
w`wbw
w`wdw
w`wdw
w`whwfw
w`whw
w`whw
w`whwjw
w`whw
w`wpwlw
w`wpwlw
w`wpwqwnw
wpwrw
wpwtw
wpwtw
wpwxwvw
wpwxw
wxwzw
wxw|w
wxw|w
wxw|w~w
x x!x
x x!x
x x!x
x x"x
x x$x
x x$x
x x(x&x
x x(x
x x(x
x x(x*x
x x(x
x x0x,x
x x0x,x
x x0x1x.x
x@x0x
x@x0x
x@x0x2x
x@x0x
x@x0x4x
x@x0x4x
x@x0x8x6x
x@x0x
x@xAx8x
x@xAx8x
x@xAx8x:x
x@xAx8x
x@xAx8x<x
x@xAxCx<x
x@xAxCx<x>x
x@xBx
x@xDx
x@xDx
x@xHxFx
x@xHx
x@xHx
x@xHxJx
x@xHx
x@xPxLx
x@xPxLx
x@xPxQxNx
x@xPx
x@xPx
x@xPxRx
x@xPx
x@xPxTx
x@xPxTx
x@xPxXxVx
x@xPx
x@x`xXx
x@x`xXx
x@x`xXxZx
x@x`xXx
x@x`xax\x
x@x`xax\x
x@x`xax\x^x
x`xbx
x`xdx
x`xdx
x`xhxfx
x`xhx
x`xhx
x`xhxjx
x`xhx
x`xpxlx
x`xpxlx
x`xpxqxnx
xpxrx
xpxtx
xpxtx
xpxxxvx
xpxxx
xxxzx
xxx|x
xxx|x
xxx|x~x
y y!y
y y!y
y y!y
y y"y
y y$y
y y$y
y y(y&y
y y(y
y y(y
y y(y*y
y y(y
y y0y,y
y y0y,y
y y0y1y.y
y@y0y
y@y0y
y@y0y2y
y@y0y
y@y0y4y
y@y0y4y
y@y0y8y6y
y@y0y
y@yAy8y
y@yAy8y
y@yAy8y:y
y@yAy8y
y@yAy8y<y
y@yAyCy<y
y@yAyCy<y>y
y@yBy
y@yDy
y@yDy
y@yHyFy
y@yHy
y@yHy
y@yHyJy
y@yHy
y@yPyLy
y@yPyLy
y@yPyQyNy
y@yPy
y@yPy
y@yPyRy
y@yPy
y@yPyTy
y@yPyTy
y@yPyXyVy
y@yPy
y@y`yXy
y@y`yXy
y@y`yXyZy
y@y`yXy
y@y`yay\y
y@y`yay\y
y@y`yay\y^y
y`yby
y`ydy
y`ydy
y`yhyfy
y`yhy
y`yhy
y`yhyjy
y`yhy
y`ypyly
y`ypyly
y`ypyqyny
ypyry
ypyty
ypyty
ypyxyvy
ypyxy
yxyzy
yxy|y
yxy|y
yxy|y~y
z z!z
z z!z
z z!z
z z"z
z z$z
z z$z
z z(z&z
z z(z
z z(z
z z(z*z
z z(z
z z0z,z
z z0z,z
z z0z1z.z
z@z0z
z@z0z
z@z0z2z
z@z0z
z@z0z4z
z@z0z4z
z@z0z8z6z
z@z0z
z@zAz8z
z@zAz8z
z@zAz8z:z
z@zAz8z
z@zAz8z<z
z@zAzCz<z
z@zAzCz<z>z
z@zBz
z@zDz
z@zDz
z@zHzFz
z@zHz
z@zHz
z@zHzJz
z@zHz
z@zPzLz
z@zPzLz
z@zPzQzNz
z@zPz
z@zPz
z@zPzRz
z@zPz
z@zPzTz
z@zPzTz
z@zPzXzVz
z@zPz
z@z`zXz
z@z`zXz
z@z`zXzZz
z@z`zXz
z@z`zaz\z
z@z`zaz\z
z@z`zaz\z^z
z`zbz
z`zdz
z`zdz
z`zhzfz
z`zhz
z`zhz
z`zhzjz
z`zhz
z`zpzlz
z`zpzlz
z`zpzqznz
zpzrz
zpztz
zpztz
zpzxzvz
zpzxz
zxzzz
zxz|z
zxz|z
zxz|z~z
{ {!{
{ {!{
{ {!{
{ {"{
{ {${
{ {${
{ {({&{
{ {({
{ {({
{ {({*{
{ {({
{ {0{,{
{ {0{,{
{ {0{1{.{
{@{0{
{@{0{
{@{0{2{
{@{0{
{@{0{4{
{@{0{4{
{@{0{8{6{
{@{0{
{@{A{8{
{@{A{8{
{@{A{8{:{
{@{A{8{
{@{A{8{<{
{@{A{C{<{
{@{A{C{<{>{
{@{B{
{@{D{
{@{D{
{@{H{F{
{@{H{
{@{H{
{@{H{J{
{@{H{
{@{P{L{
{@{P{L{
{@{P{Q{N{
{@{P{
{@{P{
{@{P{R{
{@{P{
{@{P{T{
{@{P{T{
{@{P{X{V{
{@{P{
{@{`{X{
{@{`{X{
{@{`{X{Z{
{@{`{X{
{@{`{a{\{
{@{`{a{\{
{@{`{a{\{^{
{`{b{
{`{d{
{`{d{
{`{h{f{
{`{h{
{`{h{
{`{h{j{
{`{h{
{`{p{l{
{`{p{l{
{`{p{q{n{
{p{r{
{p{t{
{p{t{
{p{x{v{
{p{x{
{x{z{
{x{|{
{x{|{
{x{|{~{
N7Imf_3_213DwaCompressor19LossyDctDecoderBaseE
N7Imf_3_213DwaCompressor19LossyDctEncoderBaseE
N7Imf_3_213DwaCompressorE
   ! " # $ & ' ( ) * + , . / 0 1 2 3 4 5 7 8 9 : ; < = > @ A B C D E F G H J K L M N O P Q R S U V W X Y Z [ \ ] ^ _ ` b c d e f g h i j k l m n o p r s t u v w x y z { | } ~ 
! !!!!!"!#!$!%!&!'!(!)!)!*!+!,!-!.!/!0!0!1!2!3!4!5!6!7!7!8!9!:!;!<!=!>!>!?!@!A!B!C!D!D!E!F!G!H!I!J!K!K!L!M!N!O!P!Q!Q!R!S!T!U!V!V!W!X!Y!Z![!\!\!]!^!_!`!a!a!b!c!d!e!f!f!g!h!i!j!k!k!l!m!n!o!p!p!q!r!s!t!u!u!v!w!x!y!z!z!{!|!}!~!~!
" "!"""""#"$"$"%"&"'"'"(")"*"*"+",","-"."."/"0"1"1"2"3"3"4"5"6"6"7"8"8"9":";";"<"="=">"?"?"@"A"B"B"C"D"D"E"F"F"G"H"I"I"J"K"K"L"M"M"N"O"P"P"Q"R"R"S"T"T"U"V"V"W"X"Y"Y"Z"["["\"]"]"^"_"_"`"a"a"b"c"d"d"e"f"f"g"h"h"i"j"j"k"l"l"m"n"n"o"p"p"q"r"r"s"t"t"u"v"w"w"x"y"y"z"{"{"|"}"}"~"
###
# # #!#!#"#####$#$#%#%#&#'#'#(#(#)#*#*#+#+#,#-#-#.#.#/#0#0#1#1#2#3#3#4#4#5#6#6#7#7#8#9#9#:#:#;#;#<#=#=#>#>#?#@#@#A#A#B#C#C#D#D#E#E#F#G#G#H#H#I#J#J#K#K#L#L#M#N#N#O#O#P#Q#Q#R#R#S#S#T#U#U#V#V#W#W#X#Y#Y#Z#Z#[#\#\#]#]#^#^#_#`#`#a#a#b#b#c#d#d#e#e#f#f#g#h#h#i#i#j#j#k#l#l#m#m#n#n#o#p#p#q#q#r#r#s#t#t#u#u#v#v#w#x#x#y#y#z#z#{#|#|#}#}#~#~#
$$$$$
$ $ $ $ $!$!$!$!$"$"$"$"$#$#$#$#$$$$$$$$$%$%$%$%$&$&$&$&$'$'$'$'$($($($($)$)$)$)$*$*$*$*$+$+$+$+$,$,$,$,$-$-$-$-$.$.$.$.$/$/$/$/$0$0$0$0$1$1$1$1$1$2$2$2$2$3$3$3$3$4$4$4$4$5$5$5$5$6$6$6$6$7$7$7$7$8$8$8$8$9$9$9$9$:$:$:$:$;$;$;$;$<$<$<$<$=$=$=$=$>$>$>$>$>$?$?$?$?$@$@$@$@$A$A$A$A$B$B$B$B$C$C$D$D$E$E$F$F$F$G$G$H$H$I$I$J$J$K$K$L$L$M$M$N$N$O$O$P$P$Q$Q$Q$R$R$S$S$T$T$U$U$V$V$W$W$X$X$Y$Y$Z$Z$Z$[$[$\$\$]$]$^$^$_$_$`$`$a$a$b$b$b$c$c$d$d$e$e$f$f$g$g$h$h$i$i$i$j$j$k$k$l$l$m$m$n$n$o$o$o$p$p$q$q$r$r$s$s$t$t$u$u$u$v$v$w$w$x$x$y$y$z$z$z${${$|$|$}$}$~$~$
%%%
% % % %!%!%"%"%"%#%#%$%$%$%%%%%&%&%&%'%'%'%(%(%)%)%)%*%*%+%+%+%,%,%,%-%-%.%.%.%/%/%/%0%0%1%1%1%2%2%3%3%3%4%4%4%5%5%6%6%6%7%7%7%8%8%9%9%9%:%:%;%;%;%<%<%<%=%=%>%>%>%?%?%?%@%@%A%A%A%B%B%B%C%C%D%D%D%E%E%E%F%F%G%G%G%H%H%H%I%I%J%J%J%K%K%K%L%L%M%M%M%N%N%N%O%O%P%P%P%Q%Q%Q%R%R%S%S%S%T%T%T%U%U%U%V%V%W%W%W%X%X%X%Y%Y%Z%Z%Z%[%[%[%\%\%\%]%]%^%^%^%_%_%_%`%`%a%a%a%b%b%b%c%c%c%d%d%e%e%e%f%f%f%g%g%g%h%h%i%i%i%j%j%j%k%k%k%l%l%m%m%m%n%n%n%o%o%o%p%p%p%q%q%r%r%r%s%s%s%t%t%t%u%u%v%v%v%w%w%w%x%x%x%y%y%y%z%z%{%{%{%|%|%|%}%}%}%~%~%~%
&&&
& &!&!&"&"&#&$&$&%&&&&&'&'&(&)&)&*&+&+&,&,&-&.&.&/&0&0&1&1&2&3&3&4&4&5&6&6&7&8&8&9&9&:&;&;&<&<&=&>&>&?&@&@&A&A&B&C&C&D&D&E&F&F&G&G&H&I&I&J&J&K&L&L&M&N&N&O&O&P&Q&Q&R&R&S&T&T&U&U&V&W&W&X&X&Y&Z&Z&[&[&\&]&]&^&^&_&`&`&a&a&b&c&c&d&d&e&f&f&g&g&h&h&i&j&j&k&k&l&m&m&n&n&o&p&p&q&q&r&s&s&t&t&u&u&v&w&w&x&x&y&z&z&{&{&|&|&}&~&~&
'''
' ' '!'!'"'"'#'#'$'%'%'&'&'''''('(')')'*'*'+'+',','-'-'.'.'/'/'0'0'1'2'2'3'3'4'4'5'5'6'6'7'7'8'8'9'9':':';';'<'<'='='>'>'?'?'@'@'A'A'B'B'C'C'D'D'E'F'F'G'G'H'H'I'I'J'J'K'K'L'L'M'M'N'N'O'O'P'P'Q'Q'R'R'S'S'T'T'U'U'V'V'W'W'X'X'Y'Y'Z'Z'['['\'\']']'^'^'_'_'`'`'a'a'b'b'c'c'd'd'e'e'f'f'g'g'h'h'i'i'j'j'k'k'l'l'm'm'n'n'o'o'p'p'q'q'r'r's's't't'u'u'v'v'w'w'x'x'y'y'z'z'{'{'|'|'}'}'~'~'
(((
( ( (!(!(!("("(#(#($($($(%(%(&(&('('((((((()()(*(*(+(+(+(,(,(-(-(.(.(.(/(/(0(0(1(1(1(2(2(3(3(4(4(4(5(5(6(6(7(7(7(8(8(9(9(:(:(:(;(;(<(<(=(=(=(>(>(?(?(@(@(@(A(A(B(B(B(C(C(D(D(E(E(E(F(F(G(G(H(H(H(I(I(J(J(J(K(K(L(L(M(M(M(N(N(O(O(O(P(P(Q(Q(R(R(R(S(S(T(T(T(U(U(V(V(W(W(W(X(X(Y(Y(Y(Z(Z([([([(\(\(](](](^(^(_(_(`(`(`(a(a(b(b(b(c(c(d(d(d(e(e(f(f(f(g(g(h(h(h(i(i(j(j(j(k(k(l(l(m(m(m(n(n(o(o(o(p(p(q(q(q(r(r(s(s(s(t(t(u(u(u(v(v(w(w(w(x(x(y(y(y(z(z({({({(|(|(|(}(}(~(~(~(
))))
) ) ) )!)!)!)")")")#)#)#)$)$)$)%)%)%)&)&)&)')')')()()()))))))*)*)*)+)+)+),),),)-)-)-).).).)/)/)/)0)0)0)1)1)1)2)2)2)3)3)3)4)4)4)5)5)5)6)6)6)7)7)7)8)8)8)9)9)9):):):);););)<)<)<)=)=)=)>)>)>)>)?)?)?)@)@)@)A)A)A)B)B)B)C)C)C)D)D)D)E)E)E)F)F)F)G)G)G)H)H)H)I)I)I)J)J)J)K)K)K)L)L)L)M)M)M)M)N)N)N)O)O)O)P)P)P)Q)Q)Q)R)R)R)S)S)S)T)T)T)U)U)U)V)V)V)W)W)W)X)X)X)X)Y)Y)Y)Z)Z)Z)[)[)[)\)\)\)])])])^)^)^)_)_)_)`)`)`)`)a)a)a)b)b)b)c)c)c)d)d)d)e)e)e)f)f)f)g)g)g)g)h)h)h)i)i)i)j)j)j)k)k)k)l)l)l)m)m)m)m)n)n)n)o)o)o)p)p)p)q)q)q)r)r)r)r)s)s)s)t)t)t)u)u)u)v)v)v)w)w)w)w)x)x)x)y)y)y)z)z)z){){){)|)|)})~)~)
***
* * *!*!*"*#*#*$*$*%*%*&*&*'*'*(*)*)*****+*+*,*,*-*-*.*.*/*0*0*1*1*2*2*3*3*4*4*5*5*6*7*7*8*8*9*9*:*:*;*;*<*<*=*=*>*?*?*@*@*A*A*B*B*C*C*D*D*E*E*F*G*G*H*H*I*I*J*J*K*K*L*L*M*M*N*N*O*P*P*Q*Q*R*R*S*S*T*T*U*U*V*V*W*W*X*X*Y*Y*Z*[*[*\*\*]*]*^*^*_*_*`*`*a*a*b*b*c*c*d*d*e*e*f*f*g*g*h*i*i*j*j*k*k*l*l*m*m*n*n*o*o*p*p*q*q*r*r*s*s*t*t*u*u*v*v*w*w*x*x*y*y*z*z*{*{*|*}*}*~*~*
+++
+ + +!+!+"+"+#+#+#+$+$+%+%+&+&+'+'+(+(+(+)+)+*+*+++++,+,+-+-+-+.+.+/+/+0+0+1+1+1+2+2+3+3+4+4+5+5+6+6+6+7+7+8+8+9+9+:+:+:+;+;+<+<+=+=+>+>+>+?+?+@+@+A+A+B+B+B+C+C+D+D+E+E+F+F+F+G+G+H+H+I+I+J+J+J+K+K+L+L+M+M+N+N+N+O+O+P+P+Q+Q+R+R+R+S+S+T+T+U+U+U+V+V+W+W+X+X+Y+Y+Y+Z+Z+[+[+\+\+\+]+]+^+^+_+_+`+`+`+a+a+b+b+c+c+c+d+d+e+e+f+f+g+g+g+h+h+i+i+j+j+j+k+k+l+l+m+m+m+n+n+o+o+p+p+p+q+q+r+r+s+s+s+t+t+u+u+v+v+w+w+w+x+x+y+y+z+z+z+{+{+|+|+}+}+}+~+~+
,,,,
, , ,!,!,!,",",",#,#,$,$,$,%,%,%,&,&,',',',(,(,(,),),*,*,*,+,+,+,,,,,-,-,-,.,.,/,/,/,0,0,0,1,1,2,2,2,3,3,3,4,4,4,5,5,6,6,6,7,7,7,8,8,9,9,9,:,:,:,;,;,<,<,<,=,=,=,>,>,>,?,?,@,@,@,A,A,A,B,B,C,C,C,D,D,D,E,E,E,F,F,G,G,G,H,H,H,I,I,I,J,J,K,K,K,L,L,L,M,M,M,N,N,O,O,O,P,P,P,Q,Q,Q,R,R,S,S,S,T,T,T,U,U,U,V,V,V,W,W,X,X,X,Y,Y,Y,Z,Z,Z,[,[,\,\,\,],],],^,^,^,_,_,_,`,`,`,a,a,b,b,b,c,c,c,d,d,d,e,e,e,f,f,g,g,g,h,h,h,i,i,i,j,j,j,k,k,k,l,l,l,m,m,n,n,n,o,o,o,p,p,p,q,q,q,r,r,r,s,s,s,t,t,u,u,u,v,v,v,w,w,w,x,x,x,y,y,y,z,z,z,{,{,{,|,|,|,},},~,~,~,
-----
- - - -!-!-!-!-"-"-"-#-#-#-#-$-$-$-%-%-%-&-&-'-'-(-(-)-*-*-+-+-,-----.-.-/-/-0-1-1-2-2-3-3-4-5-5-6-6-7-8-8-9-9-:-:-;-<-<-=-=->->-?-@-@-A-A-B-B-C-D-D-E-E-F-F-G-H-H-I-I-J-J-K-K-L-M-M-N-N-O-O-P-Q-Q-R-R-S-S-T-T-U-V-V-W-W-X-X-Y-Z-Z-[-[-\-\-]-]-^-_-_-`-`-a-a-b-b-c-d-d-e-e-f-f-g-g-h-i-i-j-j-k-k-l-l-m-m-n-o-o-p-p-q-q-r-r-s-s-t-u-u-v-v-w-w-x-x-y-y-z-{-{-|-|-}-}-~-~-
...
. . .!.!.".".#.#.#.$.$.%.%.&.&.'.'.(.(.).).*.*.+.+.+.,.,.-.-....././.0.0.1.1.2.2.3.3.3.4.4.5.5.6.6.7.7.8.8.9.9.:.:.:.;.;.<.<.=.=.>.>.?.?.@.@.@.A.A.B.B.C.C.D.D.E.E.F.F.G.G.G.H.H.I.I.J.J.K.K.L.L.L.M.M.N.N.O.O.P.P.Q.Q.R.R.R.S.S.T.T.U.U.V.V.W.W.W.X.X.Y.Y.Z.Z.[.[.\.\.\.].].^.^._._.`.`.a.a.a.b.b.c.c.d.d.e.e.e.f.f.g.g.h.h.i.i.j.j.j.k.k.l.l.m.m.n.n.n.o.o.p.p.q.q.r.r.r.s.s.t.t.u.u.v.v.w.w.w.x.x.y.y.z.z.{.{.{.|.|.}.}.~.~.~.
///
/ /!/!/"/#/$/%/%/&/'/(/)/)/*/+/,/,/-/.///0/0/1/2/3/3/4/5/6/7/7/8/9/:/;/;/</=/>/>/?/@/A/A/B/C/D/E/E/F/G/H/H/I/J/K/L/L/M/N/O/O/P/Q/R/R/S/T/U/V/V/W/X/Y/Y/Z/[/\/\/]/^/_/_/`/a/b/b/c/d/e/e/f/g/h/i/i/j/k/l/l/m/n/o/o/p/q/r/r/s/t/u/u/v/w/x/x/y/z/{/{/|/}/~/~/
0000
0 0 0 0!0!0!0"0"0"0#0#0#0$0$0$0%0%0%0&0&0&0'0'0'0(0(0(0)0)0)0*0*0*0+0+0+0,0,0,0-0-0-0.0.0.0/0/0/000000010101010202020303030404040505050606060707070808080909090:0:0:0;0;0;0<0<0<0<0=0=0=0>0>0>0?0?0?0@0@0@0A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F0G0G0G0H0H0H0I0I0I0J0J0J0K0K0K0K0L0L0L0M0M0M0N0N0N0O0O0O0P0P0P0Q0Q0Q0Q0R0R0R0S0S0S0T0T0T0U0U0U0V0V0V0V0W0W0W0X0X0X0Y0Y0Y0Z0Z0Z0[0[0[0[0\0\0\0]0]0]0^0^0^0_0_0_0_0`0`0`0a0a0a0b0b0b0c0c0c0d0d0d0d0e0e0e0f0f0f0g0g0g0h0h0h0h0i0i0i0j0j0j0k0k0k0k0l0l0l0m0m0m0n0n0n0o0o0o0o0p0p0p0q0q0q0r0r0r0r0s0s0s0t0t0t0u0u0u0v0v0v0v0w0w0w0x0x0x0y0y0y0y0z0z0z0{0{0{0|0|0|0|0}0}0}0~0~0~0
111
1 1 1!1!1"1"1#1#1$1$1%1%1&1&1'1'1(1(1)1)1*1*1+1,1,1-1-1.1.1/1/10101111121213131414151516161717181819191:1:1;1;1<1<1=1=1>1>1?1?1@1@1A1A1B1B1C1C1D1D1E1E1F1F1G1G1H1H1H1I1I1J1J1K1K1L1L1M1M1N1N1O1O1P1P1Q1Q1R1R1S1S1T1T1U1U1V1V1W1W1X1X1Y1Y1Z1Z1[1[1\1\1]1]1^1^1^1_1_1`1`1a1a1b1b1c1c1d1d1e1e1f1f1g1g1h1h1i1i1j1j1k1k1k1l1l1m1m1n1n1o1o1p1p1q1q1r1r1s1s1t1t1u1u1u1v1v1w1w1x1x1y1y1z1z1{1{1|1|1}1}1~1~1~1
2222
2 2 2 2!2!2"2"2"2#2#2$2$2%2%2%2&2&2'2'2'2(2(2)2)2)2*2*2+2+2,2,2,2-2-2.2.2.2/2/202020212122222223232424252525262627272728282929292:2:2;2;2;2<2<2=2=2=2>2>2?2?2?2@2@2A2A2A2B2B2C2C2C2D2D2E2E2E2F2F2G2G2G2H2H2I2I2I2J2J2K2K2K2L2L2M2M2M2N2N2O2O2O2P2P2Q2Q2Q2R2R2S2S2S2T2T2U2U2U2V2V2W2W2W2X2X2Y2Y2Y2Z2Z2[2[2[2\2\2]2]2]2^2^2_2_2_2`2`2a2a2a2b2b2b2c2c2d2d2d2e2e2f2f2f2g2g2h2h2h2i2i2j2j2j2k2k2k2l2l2m2m2m2n2n2o2o2o2p2p2q2q2q2r2r2s2s2s2t2t2t2u2u2v2v2v2w2w2x2x2x2y2y2y2z2z2{2{2{2|2|2}2}2}2~2~2
3 3!3!3"3#3#3$3%3&3&3'3(3(3)3*3*3+3,3,3-3.3.3/3030313233333435353637373839393:3;3;3<3=3=3>3?3?3@3A3A3B3C3C3D3E3E3F3G3G3H3I3J3J3K3L3L3M3N3N3O3P3P3Q3R3R3S3T3T3U3V3V3W3X3X3Y3Z3Z3[3\3\3]3^3^3_3_3`3a3a3b3c3c3d3e3e3f3g3g3h3i3i3j3k3k3l3m3m3n3o3o3p3q3q3r3s3s3t3u3u3v3v3w3x3x3y3z3z3{3|3|3}3~3~3
44444
4 4 4 4!4!4!4"4"4"4"4#4#4#4$4$4$4$4%4%4%4&4&4&4&4'4'4'4(4(4(4(4)4)4)4*4*4*4*4+4+4+4,4,4,4,4-4-4-4.4.4.4.4/4/4/4040404041414142424242434343434444444545454546464647474747484848494949494:4:4:4;4;4;4;4<4<4<4<4=4=4=4>4>4>4>4?4?4?4@4@4@4@4A4A4A4B4B4B4B4C4C4C4C4D4D4D4E4E4E4E4F4F4F4G4G4G4G4H4H4H4H4I4I4I4J4J4J4J4K4K4K4K4L4L4L4M4M4M4M4N4N4N4O4O4O4O4P4P4P4P4Q4Q4Q4R4R4R4R4S4S4S4S4T4T4T4U4U4U4U4V4V4V4V4W4W4W4X4X4X4X4Y4Y4Y4Y4Z4Z4Z4[4[4[4[4\4\4\4\4]4]4]4]4^4^4^4_4_4_4_4`4`4`4`4a4a4a4b4b4b4b4c4c4c4c4d4d4d4d4e4e4e4f4f4f4f4g4g4g4g4h4h4h4h4i4i4i4j4j4j4j4k4k4k4k4l4l4l4l4m4m4m4n4n4n4n4o4o4o4o4p4p4p4p4q4q4q4r4r4r4r4s4s4s4s4t4t4t4t4u4u4u4u4v4v4v4w4w4w4w4x4x4x4x4y4y4y4y4z4z4z4z4{4{4{4|4|4|4|4}4}4}4}4~4~4~4~4
555
5 5 5!5!5!5"5"5#5#5$5$5%5%5%5&5&5'5'5(5(5)5)5)5*5*5+5+5,5,5-5-5-5.5.5/5/50505051515252535354545455555656575757585859595:5:5;5;5;5<5<5=5=5>5>5>5?5?5@5@5A5A5A5B5B5C5C5D5D5D5E5E5F5F5G5G5H5H5H5I5I5J5J5K5K5K5L5L5M5M5N5N5N5O5O5P5P5Q5Q5Q5R5R5S5S5S5T5T5U5U5V5V5V5W5W5X5X5Y5Y5Y5Z5Z5[5[5\5\5\5]5]5^5^5^5_5_5`5`5a5a5a5b5b5c5c5d5d5d5e5e5f5f5f5g5g5h5h5i5i5i5j5j5k5k5k5l5l5m5m5n5n5n5o5o5p5p5p5q5q5r5r5s5s5s5t5t5u5u5u5v5v5w5w5w5x5x5y5y5z5z5z5{5{5|5|5|5}5}5~5~5~5
6666
6 6 6!6!6!6"6"6"6#6#6#6$6$6$6%6%6&6&6&6'6'6'6(6(6(6)6)6*6*6*6+6+6+6,6,6,6-6-6-6.6.6.6/6/60606061616162626263636364646565656666666767676868696:6;6;6<6=6=6>6?6?6@6A6B6B6C6D6D6E6F6F6G6H6I6I6J6K6K6L6M6M6N6O6P6P6Q6R6R6S6T6T6U6V6V6W6X6Y6Y6Z6[6[6\6]6]6^6_6_6`6a6a6b6c6d6d6e6f6f6g6h6h6i6j6j6k6l6l6m6n6n6o6p6p6q6r6r6s6t6t6u6v6w6w6x6y6y6z6{6{6|6}6}6~6
777
7 7 7!7!7"7#7#7$7$7%7%7&7'7'7(7(7)7*7*7+7+7,7-7-7.7.7/70707171727373747475767677777879797:7:7;7;7<7=7=7>7>7?7@7@7A7A7B7C7C7D7D7E7E7F7G7G7H7H7I7J7J7K7K7L7L7M7N7N7O7O7P7Q7Q7R7R7S7S7T7U7U7V7V7W7W7X7Y7Y7Z7Z7[7\7\7]7]7^7^7_7`7`7a7a7b7b7c7d7d7e7e7f7f7g7h7h7i7i7j7j7k7l7l7m7m7n7n7o7p7p7q7q7r7r7s7t7t7u7u7v7v7w7x7x7y7y7z7z7{7|7|7}7}7~7~7
88888
8 8 8 8 8!8!8!8!8"8"8"8"8#8#8#8#8$8$8$8$8%8%8%8%8&8&8&8&8'8'8'8'8(8(8(8(8)8)8)8)8*8*8*8*8+8+8+8+8,8,8,8,8-8-8-8-8.8.8.8.8/8/8/8/80808080818181818182828282838383838484848485858585868686868787878788888888898989898:8:8:8:8;8;8;8;8<8<8<8<8=8=8=8=8>8>8>8>8>8?8?8?8?8@8@8@8@8A8A8A8A8B8B8B8B8C8C8D8D8E8E8F8F8F8G8G8H8H8I8I8J8J8K8K8L8L8M8M8N8N8O8O8P8P8Q8Q8Q8R8R8S8S8T8T8U8U8V8V8W8W8X8X8Y8Y8Z8Z8Z8[8[8\8\8]8]8^8^8_8_8`8`8a8a8b8b8b8c8c8d8d8e8e8f8f8g8g8h8h8i8i8i8j8j8k8k8l8l8m8m8n8n8o8o8o8p8p8q8q8r8r8s8s8t8t8u8u8u8v8v8w8w8x8x8y8y8z8z8z8{8{8|8|8}8}8~8~8
999
9 9 9 9!9!9"9"9"9#9#9$9$9$9%9%9&9&9&9'9'9'9(9(9)9)9)9*9*9+9+9+9,9,9,9-9-9.9.9.9/9/9/90909191919292939393949494959596969697979798989999999:9:9;9;9;9<9<9<9=9=9>9>9>9?9?9?9@9@9A9A9A9B9B9B9C9C9D9D9D9E9E9E9F9F9G9G9G9H9H9H9I9I9J9J9J9K9K9K9L9L9M9M9M9N9N9N9O9O9P9P9P9Q9Q9Q9R9R9S9S9S9T9T9T9U9U9U9V9V9W9W9W9X9X9X9Y9Y9Z9Z9Z9[9[9[9\9\9\9]9]9^9^9^9_9_9_9`9`9a9a9a9b9b9b9c9c9c9d9d9e9e9e9f9f9f9g9g9g9h9h9i9i9i9j9j9j9k9k9k9l9l9m9m9m9n9n9n9o9o9o9p9p9p9q9q9r9r9r9s9s9s9t9t9t9u9u9v9v9v9w9w9w9x9x9x9y9y9y9z9z9{9{9{9|9|9|9}9}9}9~9~9~9
:::
: :!:!:":":#:$:$:%:&:&:':':(:):):*:+:+:,:,:-:.:.:/:0:0:1:1:2:3:3:4:4:5:6:6:7:8:8:9:9:::;:;:<:<:=:>:>:?:@:@:A:A:B:C:C:D:D:E:F:F:G:G:H:I:I:J:J:K:L:L:M:N:N:O:O:P:Q:Q:R:R:S:T:T:U:U:V:W:W:X:X:Y:Z:Z:[:[:\:]:]:^:^:_:`:`:a:a:b:c:c:d:d:e:f:f:g:g:h:h:i:j:j:k:k:l:m:m:n:n:o:p:p:q:q:r:s:s:t:t:u:u:v:w:w:x:x:y:z:z:{:{:|:|:}:~:~:
;;;
; ; ;!;!;";";#;#;$;%;%;&;&;';';(;(;););*;*;+;+;,;,;-;-;.;.;/;/;0;0;1;2;2;3;3;4;4;5;5;6;6;7;7;8;8;9;9;:;:;;;;;<;<;=;=;>;>;?;?;@;@;A;A;B;B;C;C;D;D;E;F;F;G;G;H;H;I;I;J;J;K;K;L;L;M;M;N;N;O;O;P;P;Q;Q;R;R;S;S;T;T;U;U;V;V;W;W;X;X;Y;Y;Z;Z;[;[;\;\;];];^;^;_;_;`;`;a;a;b;b;c;c;d;d;e;e;f;f;g;g;h;h;i;i;j;j;k;k;l;l;m;m;n;n;o;o;p;p;q;q;r;r;s;s;t;t;u;u;v;v;w;w;x;x;y;y;z;z;{;{;|;|;};};~;~;
<<<
< < < <!<!<"<"<#<#<#<$<$<%<%<&<&<&<'<'<(<(<(<)<)<*<*<+<+<+<,<,<-<-<-<.<.</</</<0<0<1<1<2<2<2<3<3<4<4<4<5<5<6<6<6<7<7<8<8<8<9<9<:<:<:<;<;<<<<<<<=<=<><><><?<?<@<@<@<A<A<B<B<B<C<C<D<D<D<E<E<F<F<F<G<G<G<H<H<I<I<I<J<J<K<K<K<L<L<M<M<M<N<N<N<O<O<P<P<P<Q<Q<R<R<R<S<S<S<T<T<U<U<U<V<V<V<W<W<X<X<X<Y<Y<Y<Z<Z<[<[<[<\<\<\<]<]<^<^<^<_<_<_<`<`<a<a<a<b<b<b<c<c<c<d<d<e<e<e<f<f<f<g<g<g<h<h<i<i<i<j<j<j<k<k<k<l<l<m<m<m<n<n<n<o<o<o<p<p<q<q<q<r<r<r<s<s<s<t<t<t<u<u<u<v<v<w<w<w<x<x<x<y<y<y<z<z<z<{<{<{<|<|<|<}<}<~<~<~<
=====
= = = = =!=!=!=!="="="="=#=#=#=#=$=$=$=$=%=%=%=%=&=&=&=&='='='='='=(=(=(=(=)=)=)=)=*=*=*=*=+=+=+=+=,=,=,=,=-=-=-=-=-=.=.=.=.=/=/=/=/=0=0=0=0=1=1=1=1=1=2=2=2=2=3=3=3=3=4=4=4=4=5=5=5=5=5=6=6=6=6=7=7=7=7=8=8=8=8=9=9=9=9=9=:=:=:=:=;=;=;=;=<=<=<=<=<=========>=>=>=>=?=?=?=?=?=@=@=@=@=A=A=A=A=A=B=B=B=B=C=C=D=D=D=E=E=F=F=G=G=H=H=I=I=I=J=J=K=K=L=L=M=M=M=N=N=O=O=P=P=Q=Q=Q=R=R=S=S=T=T=T=U=U=V=V=W=W=X=X=X=Y=Y=Z=Z=[=[=[=\=\=]=]=^=^=^=_=_=`=`=a=a=a=b=b=c=c=d=d=d=e=e=f=f=f=g=g=h=h=i=i=i=j=j=k=k=l=l=l=m=m=n=n=n=o=o=p=p=p=q=q=r=r=s=s=s=t=t=u=u=u=v=v=w=w=w=x=x=y=y=y=z=z={={={=|=|=}=}=}=~=~=
>>>>>
> > > > >!>!>!>">">">">#>#>#>#>$>$>$>%>%>%>%>&>&>&>'>'>'>'>(>(>(>)>)>)>)>*>*>*>*>+>+>+>,>,>,>,>->->->->.>.>.>/>/>/>/>0>0>0>0>1>1>1>2>2>2>2>3>3>3>3>4>4>4>5>5>5>5>6>6>6>6>7>7>7>8>8>8>8>9>9>9>9>:>:>:>:>;>;>;><><><><>=>=>=>=>>>>>>>>>?>?>?>@>@>@>@>A>A>A>A>B>B>B>B>C>C>C>C>D>D>D>D>E>E>E>F>F>F>F>G>G>G>G>H>H>H>H>I>I>I>I>J>J>J>J>K>K>K>K>L>L>L>M>M>M>M>N>N>N>N>O>O>O>O>P>P>P>P>Q>Q>Q>Q>R>R>R>R>S>S>S>S>T>T>T>T>U>U>U>U>V>V>V>V>W>W>W>W>X>X>X>X>Y>Y>Y>Y>Z>Z>Z>Z>[>[>[>[>\>\>\>\>]>]>]>]>^>^>^>^>_>_>_>_>`>`>`>`>a>a>a>a>b>b>b>b>c>c>c>c>d>d>d>d>e>e>e>e>f>f>f>f>f>g>g>g>g>h>h>h>h>i>i>i>i>j>j>j>j>k>k>k>k>l>l>l>l>m>m>m>m>m>n>n>n>n>o>o>o>o>p>p>p>p>q>q>q>q>r>r>r>r>r>s>s>s>s>t>t>t>t>u>u>u>u>v>v>v>v>v>w>w>w>w>x>x>x>x>y>y>y>y>z>z>z>z>z>{>{>{>{>|>|>|>|>}>}>}>}>}>~>~>~>~>
????
? ? ? ?!?!?!?"?"?"?#?#?#?$?$?$?%?%?%?&?&?&?'?'?'?'?(?(?(?)?)?)?*?*?*?+?+?+?,?,?,?-?-?-?.?.?.?.?/?/?/?0?0?0?1?1?1?2?2?2?3?3?3?4?4?4?4?5?5?5?6?6?6?7?7?7?8?8?8?8?9?9?9?:?:?:?;?;?;?<?<?<?<?=?=?=?>?>?>???????@?@?@?@?A?A?A?B?B?B?C?C?C?C?D?D?D?E?E?E?F?F?F?G?G?G?G?H?H?H?I?I?I?I?J?J?J?K?K?K?L?L?L?L?M?M?M?N?N?N?O?O?O?O?P?P?P?Q?Q?Q?Q?R?R?R?S?S?S?T?T?T?T?U?U?U?V?V?V?V?W?W?W?X?X?X?X?Y?Y?Y?Z?Z?Z?Z?[?[?[?\?\?\?\?]?]?]?^?^?^?^?_?_?_?`?`?`?`?a?a?a?b?b?b?b?c?c?c?d?d?d?d?e?e?e?f?f?f?f?g?g?g?h?h?h?h?i?i?i?i?j?j?j?k?k?k?k?l?l?l?m?m?m?m?n?n?n?n?o?o?o?p?p?p?p?q?q?q?q?r?r?r?s?s?s?s?t?t?t?t?u?u?u?v?v?v?v?w?w?w?w?x?x?x?y?y?y?y?z?z?z?z?{?{?{?{?|?|?|?}?}?}?}?~?~?~?~?
@@@@@@
@ @ @ @ @ @ @!@!@!@!@!@!@"@"@"@"@"@#@#@#@#@#@#@$@$@$@$@$@$@%@%@%@%@%@%@&@&@&@&@&@&@'@'@'@'@'@(@(@(@(@(@(@)@)@)@)@)@)@*@*@*@*@*@*@+@+@+@+@+@+@,@,@,@,@,@,@-@-@-@-@-@-@.@.@.@.@.@.@/@/@/@/@/@/@0@0@0@0@0@0@1@1@1@1@1@1@2@2@2@2@2@2@2@3@3@3@3@3@3@4@4@4@4@4@4@5@5@5@5@5@5@6@6@6@6@6@6@6@7@7@7@7@7@7@8@8@8@8@8@8@9@9@9@9@9@9@:@:@:@:@:@:@:@;@;@;@;@;@;@<@<@<@<@<@<@<@=@=@=@=@=@=@>@>@>@>@>@>@>@?@?@?@?@?@?@@@@@@@@@@@@@@@A@A@A@A@A@A@B@B@B@B@B@B@B@C@C@C@C@C@C@D@D@D@D@D@D@D@E@E@E@E@E@E@E@F@F@F@F@F@F@G@G@G@G@G@G@G@H@H@H@H@H@H@H@I@I@I@I@I@I@I@J@J@J@J@J@J@J@K@K@K@K@K@K@L@L@L@L@L@L@L@M@M@M@M@M@M@M@N@N@N@N@N@N@N@O@O@O@O@O@O@O@P@P@P@P@P@P@P@Q@Q@Q@Q@Q@Q@Q@R@R@R@R@R@R@R@S@S@S@S@S@S@S@T@T@T@T@T@T@T@U@U@U@U@U@U@U@U@V@V@V@V@V@V@V@W@W@W@W@W@W@W@X@X@X@X@X@X@X@Y@Y@Y@Y@Y@Y@Y@Z@Z@Z@Z@Z@Z@Z@Z@[@[@[@[@[@[@[@\@\@\@\@\@\@\@]@]@]@]@]@]@]@]@^@^@^@^@^@^@^@_@_@_@_@_@_@_@_@`@`@`@`@`@`@`@a@a@a@a@a@a@a@a@b@b@b@b@b@b@b@c@c@c@c@c@c@c@c@d@d@d@d@d@d@d@d@e@e@e@e@e@e@e@f@f@f@f@f@f@f@f@g@g@g@g@g@g@g@g@h@h@h@h@h@h@h@i@i@i@i@i@i@i@i@j@j@j@j@j@j@j@j@k@k@k@k@k@k@k@k@l@l@l@l@l@l@l@l@m@m@m@m@m@m@m@m@n@n@n@n@n@n@n@n@o@o@o@o@o@o@o@o@p@p@p@p@p@p@p@p@q@q@q@q@q@q@q@q@r@r@r@r@r@r@r@r@s@s@s@s@s@s@s@s@t@t@t@t@t@t@t@t@u@u@u@u@u@u@u@u@v@v@v@v@v@v@v@v@v@w@w@w@w@w@w@w@w@x@x@x@x@x@x@x@x@y@y@y@y@y@y@y@y@y@z@z@z@z@z@z@z@z@{@{@{@{@{@{@{@{@|@|@|@|@|@|@|@|@|@}@}@}@}@}@}@}@}@~@~@~@~@~@~@~@~@~@
AAAAAAAA
`A`A`A`A`A`AaAaAaAaAaAaAbAbAbAbAbAcAcAcAcAcAcAdAdAdAdAdAdAeAeAeAeAeAfAfAfAfAfAfAgAgAgAgAgAgAhAhAhAhAhAhAiAiAiAiAiAiAjAjAjAjAjAjAkAkAkAkAkAlAlAlAlAlAlAmAmAmAmAmAmAnAnAnAnAnAnAoAoAoAoAoAoApApApApApApAqAqAqAqAqAqArArArArArArArAsAsAsAsAsAsAtAtAtAtAtAtAuAuAuAuAuAuAvAvAvAvAvAvAwAwAwAwAwAwAxAxAxAxAxAxAxAyAyAyAyAyAyAzAzAzAzAzAzA{A{A{A{A{A{A|A|A|A|A|A|A|A}A}A}A}A}A}A~A~A~A~A~A~A~A
BBBBBBB
`B`B`B`B`B`B`B`BaBaBaBaBaBaBaBaBaBbBbBbBbBbBbBbBbBcBcBcBcBcBcBcBcBcBdBdBdBdBdBdBdBdBdBeBeBeBeBeBeBeBeBfBfBfBfBfBfBfBfBfBgBgBgBgBgBgBgBgBgBhBhBhBhBhBhBhBhBiBiBiBiBiBiBiBiBjBjBjBjBkBkBkBkBkBlBlBlBlBmBmBmBmBmBnBnBnBnBoBoBoBoBoBpBpBpBpBqBqBqBqBqBrBrBrBrBsBsBsBsBsBtBtBtBtBuBuBuBuBuBvBvBvBvBvBwBwBwBwBxBxBxBxBxByByByByByBzBzBzBzBzB{B{B{B{B|B|B|B|B|B}B}B}B}B}B~B~B~B~B~B
CCCCC
`C`C`C`C`C`CaCaCaCaCaCaCaCbCbCbCbCbCbCcCcCcCcCcCcCdCdCdCdCdCdCdCeCeCeCeCeCeCfCfCfCfCfCfCfCgCgCgCgCgCgChChChChChChChCiCiCiCiCiCiCiCjCjCjCjCjCjCkCkCkCkCkCkCkClClClClClClClCmCmCmCmCmCmCnCnCnCnCnCnCnCoCoCoCoCoCoCoCpCpCpCpCpCpCpCqCqCqCqCqCqCrCrCrCrCrCrCrCsCsCsCsCsCsCsCtCtCtCtCtCtCtCuCuCuCuCuCuCuCvCvCvCvCvCvCvCwCwCwCwCwCwCwCxCxCxCxCxCxCxCyCyCyCyCyCyCyCzCzCzCzCzCzCzC{C{C{C{C{C{C{C|C|C|C|C|C|C|C|C}C}C}C}C}C}C}C~C~C~C~C~C~C~C
DDDDDDDDDDDDDDD
D D D D D D D D D D D D D D D D D!D!D!D!D!D!D!D!D!D!D!D!D!D!D!D!D!D"D"D"D"D"D"D"D"D"D"D"D"D"D"D"D"D"D#D#D#D#D#D#D#D#D#D#D#D#D#D#D#D#D#D$D$D$D$D$D$D$D$D$D$D$D$D$D$D$D$D$D%D%D%D%D%D%D%D%D%D%D%D%D%D%D%D%D%D%D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D&D'D'D'D'D'D'D'D'D'D'D(D(D(D(D(D(D(D(D(D)D)D)D)D)D)D)D)D)D*D*D*D*D*D*D*D*D*D+D+D+D+D+D+D+D+D+D,D,D,D,D,D,D,D,D,D-D-D-D-D-D-D-D-D-D.D.D.D.D.D.D.D.D.D.D/D/D/D/D/D/D/D/D/D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D4D4D5D5D5D5D5D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8D8D8D9D9D9D9D9D9D9D9D9D9D:D:D:D:D:D:D:D:D:D:D:D;D;D;D;D;D;D;D;D;D;D<D<D<D<D<D<D<D<D<D<D<D=D=D=D=D=D=D=D=D=D=D=D>D>D>D>D>D>D>D>D>D>D?D?D?D?D?D?D?D?D?D?D?D@D@D@D@D@D@D@D@D@D@D@DADADADADADADADADADADADBDBDBDBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDFDFDFDFDGDGDGDGDGDGDGDGDGDGDGDHDHDHDHDHDHDHDHDHDHDHDHDIDIDIDIDIDIDIDIDIDIDIDIDJDJDJDJDJDJDJDJDJDJDJDJDKDKDKDKDKDKDKDKDKDKDKDKDLDLDLDLDLDLDLDLDLDLDLDLDMDMDMDMDMDMDMDMDMDMDMDMDNDNDNDNDNDNDNDNDNDNDNDNDNDODODODODODODODODODODODODPDPDPDPDPDPDPDPDPDPDPDPDPDQDQDQDQDQDQDQDQDQDQDQDQDRDRDRDRDRDRDRDRDRDRDRDRDRDSDSDSDSDSDSDSDSDSDSDSDSDSDTDTDTDTDTDTDTDTDTDTDTDTDTDUDUDUDUDUDUDUDUDUDUDUDUDUDVDVDVDVDVDVDVDVDVDVDVDVDVDWDWDWDWDWDWDWDWDWDWDWDWDWDWDXDXDXDXDXDXDXDXDXDXDXDXDXDYDYDYDYDYDYDYDYDYDYDYDYDYDYDZDZDZDZDZDZDZDZDZDZDZDZDZD[D[D[D[D[D[D[D[D[D[D[D[D[D[D\D\D\D\D\D\D\D\D\D\D\D\D\D\D]D]D]D]D]D]D]D]D]D]D]D]D]D]D^D^D^D^D^D^D^D^D^D^D^D^D^D^D_D_D_D_D_D_D_D_D_D_D_D_D_D_D_D`D`D`D`D`D`D`D`D`D`D`D`D`D`DaDaDaDaDaDaDaDaDaDaDaDaDaDaDaDbDbDbDbDbDbDbDbDbDbDbDbDbDbDcDcDcDcDcDcDcDcDcDcDcDcDcDcDcDdDdDdDdDdDdDdDdDdDdDdDdDdDdDdDeDeDeDeDeDeDeDeDeDeDeDeDeDeDeDfDfDfDfDfDfDfDfDfDfDfDfDfDfDfDgDgDgDgDgDgDgDgDgDgDgDgDgDgDgDgDhDhDhDhDhDhDhDhDhDhDhDhDhDhDhDiDiDiDiDiDiDiDiDiDiDiDiDiDiDiDiDjDjDjDjDjDjDjDjDjDjDjDjDjDjDjDkDkDkDkDkDkDkDkDkDkDkDkDkDkDkDkDlDlDlDlDlDlDlDlDlDlDlDlDlDlDlDlDmDmDmDmDmDmDmDmDmDmDmDmDmDmDmDmDnDnDnDnDnDnDnDnDnDnDnDnDnDnDnDnDnDoDoDoDoDoDoDoDoDoDoDoDoDoDoDoDoDpDpDpDpDpDpDpDpDpDpDpDpDpDpDpDpDqDqDqDqDqDqDqDqDqDqDqDqDqDqDqDqDqDrDrDrDrDrDrDrDrDrDrDrDrDrDrDrDrDrDsDsDsDsDsDsDsDsDsDsDsDsDsDsDsDsDsDtDtDtDtDtDtDtDtDtDtDtDtDtDtDtDtDtDuDuDuDuDuDuDuDuDuDuDuDuDuDuDuDuDuDvDvDvDvDvDvDvDvDvDvDvDvDvDvDvDvDvDvDwDwDwDwDwDwDwDwDwDwDwDwDwDwDwDxDxDxDxDxDxDxDxDxDyDyDyDyDyDyDyDyDyDzDzDzDzDzDzDzDzDzD{D{D{D{D{D{D{D{D{D|D|D|D|D|D|D|D|D|D}D}D}D}D}D}D}D}D}D~D~D~D~D~D~D~D~D~D~D
EEEEEEEEEEEEEEEEE
E E E E E E E E E E!E!E!E!E!E!E!E!E!E"E"E"E"E"E"E"E"E"E"E#E#E#E#E#E#E#E#E#E#E$E$E$E$E$E$E$E$E$E%E%E%E%E%E%E%E%E%E%E&E&E&E&E&E&E&E&E&E&E'E'E'E'E'E'E'E'E'E'E(E(E(E(E(E(E(E(E(E(E)E)E)E)E)E)E)E)E)E)E*E*E*E*E*E*E*E*E*E*E+E+E+E+E+E+E+E+E+E+E+E,E,E,E,E,E,E,E,E,E,E-E-E-E-E-E-E-E-E-E-E-E.E.E.E.E.E.E.E.E.E.E/E/E/E/E/E/E/E/E/E/E/E0E0E0E0E0E0E0E0E0E0E0E1E1E1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E:E:E:E:E:E:E:E:E:E:E:E;E;E;E;E;E;E;E;E;E;E;E;E<E<E<E<E<E<E<E<E<E<E<E<E=E=E=E=E=E=E=E=E=E=E=E=E>E>E>E>E>E>E>E>E>E>E>E>E?E?E?E?E?E?E?E?E?E?E?E?E?E@E@E@E@E@E@E@E@E@E@E@E@EAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEGEGEGEGEGEGEGEGEGEGEGEGEGEGEHEHEHEHEHEHEHEHEHEHEHEHEHEIEIEIEIEIEIEIEIEIEIEIEIEIEJEJEJEJEJEJEJEJEJEJEJEJEJEJEKEKEKEKEKEKEKEKEKEKEKEKEKELELELELELELELELELELELELELELEMEMEMEMEMEMEMEMEMEMEMEMEMEMENENENENENENENENENENENENENENEOEOEOEOEOEOEOEOEOEOEOEOEOEOEPEPEPEPEPEPEPEPEPEPEPEPEPEPEQEQEQEQEQEQEQEQEQEQEQEQEQEQERERERERERERERERERERERERERERERESESESESESESESESESESESESESESETETETETETETETETETETETETETETETEUEUEUEUEUEUEUEUEUEUEUEUEUEUEUEVEVEVEVEVEVEVEVEVEVEVEVEVEVEWEWEWEWEWEWEWEWEWEWEWEWEWEWEWEWEXEXEXEXEXEXEXEXEXEXEXEXEXEXEXEYEYEYEYEYEYEYEYEYEYEYEYEYEYEYEZEZEZEZEZEZEZEZEZEZEZEZEZEZEZE[E[E[E[E[E[E[E[E[E[E[E[E[E[E[E[E\E\E\E\E\E\E\E\E\E\E\E\E\E\E\E\E]E]E]E]E]E]E]E]E]E]E]E]E]E]E]E]E^E^E^E^E^E^E^E^E^E^E^E^E^E^E^E^E_E_E_E_E_E_E_E_E_E_E_E_E_E_E_E_E`E`E`E`E`E`E`E`E`E`E`E`E`E`E`E`EaEaEaEaEaEaEaEaEaEaEaEaEaEaEaEaEbEbEbEbEbEbEbEbEbEbEbEbEbEbEbEbEbEcEcEcEcEcEcEcEcEcEcEcEcEcEcEcEcEcEdEdEdEdEdEdEdEdEdEdEdEdEdEdEdEdEeEeEeEeEeEeEeEeEeEeEeEeEeEeEeEeEeEfEfEfEfEfEfEfEfEfEfEfEfEfEfEfEfEfEfEgEgEgEgEgEgEgEgEgEgEgEgEgEgEgEgEgEhEhEhEhEhEhEhEhEhEhEhEhEhEhEhEhEhEiEiEiEiEiEiEiEiEiEiEiEiEiEiEiEjEjEjEjEjEjEjEjEjEkEkEkEkEkEkEkEkEkElElElElElElElElElEmEmEmEmEmEmEmEmEmEnEnEnEnEnEnEnEnEnEoEoEoEoEoEoEoEoEoEpEpEpEpEpEpEpEpEpEpEqEqEqEqEqEqEqEqEqErErErErErErErErErErEsEsEsEsEsEsEsEsEsEtEtEtEtEtEtEtEtEtEtEuEuEuEuEuEuEuEuEuEuEvEvEvEvEvEvEvEvEvEwEwEwEwEwEwEwEwEwEwExExExExExExExExExExEyEyEyEyEyEyEyEyEyEyEzEzEzEzEzEzEzEzEzEzEzE{E{E{E{E{E{E{E{E{E{E|E|E|E|E|E|E|E|E|E|E}E}E}E}E}E}E}E}E}E}E}E~E~E~E~E~E~E~E~E~E~E
N7Imf_3_213DwaCompressor18LossyDctEncoderCscE
N7Imf_3_213DwaCompressor15LossyDctEncoderE
!"$%'(*+-/0235689;<>@ACDFGIKLNOQRTVWYZ\]_abdegijlmoprtuwxz|}
   ! # $ % & ( ) * , - . / 1 2 3 4 6 7 8 : ; < = ? @ A C D E G H I J L M N P Q R T U V W Y Z [ ] ^ _ a b c e f g h j k l n o p r s t v w x z { | ~ 
! !"!#!%!&!'!)!*!,!-!/!0!1!3!4!6!7!9!:!<!=!>!@!A!C!D!F!G!J!M!P!S!V!Y!\!_!a!d!g!j!m!p!s!v!y!|!
"!"$"'"+"."1"4"7":">"A"D"G"J"M"Q"T"W"Z"^"a"d"g"j"n"q"t"w"{"~"
#!#%#(#,#/#2#6#9#=#@#D#G#K#N#Q#U#X#\#_#c#f#j#m#q#t#x#{#
$!$#$%$&$($*$,$.$0$2$4$5$7$9$;$=$?$A$C$D$F$H$J$L$N$P$R$T$U$W$Y$[$]$_$a$c$e$g$i$k$l$n$p$r$t$v$x$z$|$~$
%!%#%%%'%)%+%-%/%2%4%6%8%:%<%>%@%B%E%G%I%K%M%O%Q%S%V%X%Z%\%^%`%b%d%g%i%k%m%o%q%t%v%x%z%|%~%
&!&$&&&(&*&-&/&1&4&6&8&;&=&?&B&D&F&I&K&M&P&R&T&W&Y&[&^&`&b&e&g&i&l&n&p&s&u&x&z&|&
'"'$''')','.'1'3'6'8';'='@'B'E'G'J'L'O'R'T'W'Y'\'^'a'c'f'h'k'm'p's'u'x'z'}'
( (!(#($(%('((()(+(,(-(/(0(1(3(4(6(7(8(:(;(<(>(?(A(B(C(E(F(G(I(J(L(M(N(P(Q(R(T(U(W(X(Y([(\(^(_(`(b(c(e(f(g(i(j(l(m(n(p(q(s(t(u(w(x(z({(}(~(
)!)")$)&)')))*),)-)/)0)2)3)5)6)8)9);)<)>)@)A)C)D)F)G)I)J)L)M)O)Q)R)T)U)W)X)Z)[)])_)`)b)c)e)f)h)j)k)m)n)p)q)s)u)v)x)y){)|)~)
*!*$*(*+*.*2*5*8*<*?*C*F*I*M*P*T*W*Z*^*a*e*h*l*o*r*v*y*}*
+ +$+'+++/+2+6+:+=+A+E+H+L+P+T+W+[+_+b+f+j+m+q+u+y+|+
, ,",$,&,(,*,,,.,0,2,4,6,8,:,<,>,@,B,D,F,H,J,L,N,P,R,T,V,X,Z,\,^,`,b,d,f,i,k,m,o,q,s,u,w,y,{,},
- -"-$-'-)-+---/-2-4-6-8-;-=-?-A-D-F-H-J-M-O-Q-T-V-X-Z-]-_-a-c-f-h-j-m-o-q-s-v-x-z-}-
.!.#.%.(.*.-./.2.4.7.9.<.>.A.C.F.H.K.M.O.R.T.W.Y.\.^.a.c.f.h.k.m.p.r.u.x.z.}.
/ /"/%/(/*/-/0/2/5/8/:/=/@/C/E/H/K/M/P/S/U/X/[/]/`/c/f/h/k/n/p/s/v/y/{/~/
0 0!0#0$0&0'0(0*0+0-0.000103040607080:0;0=0>0@0A0C0D0F0G0I0J0K0M0N0P0Q0S0T0V0W0Y0Z0\0]0_0`0b0c0e0f0h0i0k0l0n0o0q0r0t0u0w0x0z0{0}0~0
1!1"1$1&1'1)1+1,1.1/1113141618191;1<1>1@1A1C1E1F1H1J1K1M1O1P1R1T1U1W1Y1Z1\1^1_1a1b1d1f1g1i1k1l1n1p1r1s1u1w1x1z1|1}1
2 2"2$2&2'2)2+2-2/2022242628292;2=2?2A2B2D2F2H2J2K2M2O2Q2S2T2V2X2Z2\2^2_2a2c2e2g2i2j2l2n2p2r2t2u2w2y2{2}2
3!3%3)3-3135393=3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4"4$4&4(4+4-4/41434547494<4>4@4B4D4F4H4K4M4O4Q4S4U4W4Z4\4^4`4b4d4g4i4k4m4o4r4t4v4x4z4}4
5!5#5&5(5*5-5/515456595;5=5@5B5E5G5I5L5N5Q5S5U5X5Z5]5_5b5d5f5i5k5n5p5s5u5w5z5|5
6!6#6&6)6+6.616366686;6>6@6C6F6H6K6N6P6S6U6X6[6]6`6c6e6h6k6m6p6s6v6x6{6~6
7 7#7&7)7,7/7174777:7=7@7C7E7H7K7N7Q7T7W7Y7\7_7b7e7h7k7n7q7t7v7y7|7
8!8"8$8%8'8(8*8+8-8/808283858688898;8<8>8@8A8C8D8F8G8I8K8L8N8O8Q8R8T8V8W8Y8Z8\8]8_8a8b8d8e8g8i8j8l8m8o8p8r8t8u8w8x8z8|8}8
9 9"9$9&9'9)9+9-9.9092949597999;9<9>9@9B9C9E9G9I9J9L9N9P9Q9S9U9W9X9Z9\9^9_9a9c9e9g9h9j9l9n9o9q9s9u9w9x9z9|9~9
: :":$:&:(:*:,:.:/:1:3:5:7:9:;:=:?:A:C:E:G:H:J:L:N:P:R:T:V:X:Z:\:^:`:b:d:f:g:i:k:m:o:q:s:u:w:y:{:}:
; ;";$;&;(;*;,;/;1;3;5;7;9;;;=;?;A;C;E;H;J;L;N;P;R;T;V;X;Z;];_;a;c;e;g;i;k;m;o;r;t;v;x;z;|;~;
<"<$<&<(<+<-</<2<4<6<9<;<=<?<B<D<G<I<K<N<P<R<U<W<Y<\<^<a<c<f<h<j<m<o<r<t<w<y<{<~<
="=%='=*=-=0=3=6=9=;=>=A=D=G=J=M=P=S=V=Y=[=^=a=d=g=j=m=p=s=v=y=|=
>">&>)>,>0>3>7>:>>>A>D>H>K>O>R>V>Y>]>`>d>g>k>n>r>u>y>|>
?!?%?)?-?1?5?9?=?A?E?I?M?Q?U?Y?]?a?e?i?m?q?u?y?~?
@ @"@%@'@)@,@.@0@2@5@7@9@<@>@@@C@E@G@J@L@N@Q@S@V@X@Z@]@_@b@d@f@i@k@n@p@s@u@w@z@|@
A A#A&A)A+A.A1A4A7A:A=A?ABAEAHAKANAQATAWAZA]A`AcAeAhAkAnAqAtAwAzA}A
B B$B'B*B.B1B5B8B;B?BBBFBIBMBPBTBWBZB^BbBeBiBlBpBsBwBzB~B
C#C'C*C.C2C6C:C>CBCFCJCNCRCVCZC^CbCgCkCoCsCwC{C
D!D#D&D(D*D,D/D1D3D6D8D:D=D?DADDDFDHDKDMDODRDTDVDYD[D^D`DbDeDgDjDlDoDqDsDvDxD{D}D
E!E$E'E*E,E/E2E5E8E;E>E@ECEFEIELEOEREUEXE[E^EaEdEgEjEmEpEsEvEyE|E
F!F%F(F,F/F2F6F9F=F@FCFGFJFNFQFUFXF\F_FcFfFjFmFqFtFxF|F
G G$G(G,G0G4G8G<G@GDGHGLGPGTGXG\G`GdGhGlGpGtGxG}G
H H"H$H&H)H+H-H0H2H4H6H9H;H=H@HBHDHGHIHLHNHPHSHUHWHZH\H_HaHcHfHhHkHmHpHrHtHwHyH|H~H
I"I(I-I3I9I?IDIJIPIVI\IbIhInItIzI
J&J-J4J:JAJHJOJVJ]JdJkJrJyJ
K%K-K5K=KEKMKUK]KeKnKvK~K
L#L'L,L0L5L:L>LCLHLLLQLVL[L_LdLiLnLsLxL}L
M M&M,M1M7M=MCMHMNMTMZM`MfMlMrMxM~M
N$N+N1N8N?NFNMNTN[NbNiNpNwN~N
O#O+O3O;OCOKOSO[OcOkOsO{O
P!P&P*P/P4P8P=PAPFPKPPPTPYP^PcPhPlPqPvP{P
Q$Q*Q0Q5Q;QAQGQLQRQXQ^QdQjQpQvQ|Q
R"R)R/R6R=RDRKRRRYR`RgRnRuR|R
S!S(S0S8S@SHSPSXS`SiSqSyS
T T$T)T-T2T7T;T@TETITNTSTXT\TaTfTkTpTuTzT
U"U(U.U4U9U?UEUKUPUVU\UbUhUnUtUzU
V V&V-V4V;VBVIVPVWV]VeVlVsVzV
W&W.W6W>WFWNWVW^WfWnWvW
X#X'X,X1X5X:X?XCXHXMXQXVX[X`XeXiXnXsXxX}X
Y!Y&Y,Y2Y7Y=YCYIYOYTYZY`YfYlYrYxY~Y
Z$Z+Z2Z9Z@ZFZMZTZ[ZbZiZpZxZ
[#[+[3[;[C[K[S[[[c[l[t[|[
\!\&\+\/\4\8\=\B\F\K\P\U\Y\^\c\h\m\r\w\{\
]%]*]0]6];]A]G]M]S]X]^]d]j]p]v]|]
^"^)^0^7^=^D^K^R^Y^`^g^n^u^|^
_!_)_1_9_A_I_Q_Y_a_i_q_y_
` `%`)`.`2`7`<`@`E`J`N`S`X`]`b`f`k`p`u`z`
a#a(a.a4a:a?aEaKaQaWa]abahanataza
b'b4bBbPb^blbzb
c.c>cNc^coc
d(d1d:dDdMdVd`djdsd}d
e'e2e>eIeUeaelexe
f+f9fGfUfcfqf
g$g4gDgTgdgtg
h"h+h4h=hGhPhZhchmhwh
i+i6iAiMiYieiqi}i
j#j0j>jLjZjhjvj
k)k9kIkYkikzk
l%l.l7lAlJlSl]lglplzl
m#m.m:mEmQm]mimum
n'n5nCnPn^nln{n
o/o?oOo_ooo
p(p1p:pDpMpWp`pjptp~p
q'q2q>qIqUqaqmqyq
r,r9rGrUrcrqr
s$s4sDsTsdsus
t"t+t4t>tGtPtZtdtmtwt
u u+u6uBuMuYueuqu}u
v#v1v>vLvZvhvvv
w*w:wJwZwjwzw
x%x.x8xAxJxTx]xgxqxzx
y#y/y:yFyQy]yiyuy
z(z5zCzQz_zmz{z
{/{?{O{_{p{
N7Imf_3_213DwaCompressor18LossyDctDecoderCscE
N7Imf_3_213DwaCompressor15LossyDctDecoderE
N7Imf_3_214TypedAttributeINS_6EnvmapEEE
N7Imf_3_214TypedAttributeIfEE
N7Imf_3_214TypedAttributeINSt3__16vectorIfNS1_9allocatorIfEEEEEE
N7Imf_3_216GenericInputFileE
N7Imf_3_217GenericOutputFileE
 (08@HPX`hpx#!
DR\xN7Imf_3_214TypedAttributeINS_20CompressedIDManifestEEE
"N7Imf_3_29InputFileE
N7Imf_3_214TypedAttributeIiEE
N7Imf_3_27IStreamE
N7Imf_3_27OStreamE
N7Imf_3_214TypedAttributeINS_7KeyCodeEEE
N7Imf_3_214TypedAttributeINS_9LineOrderEEE
N7Imf_3_214TypedAttributeIN9Imath_3_28Matrix33IfEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_28Matrix33IdEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_28Matrix44IfEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_28Matrix44IdEEEE
NSt3__112codecvt_utf8IwLm1114111ELNS_12codecvt_modeE0EEE
!!!$
'N7Imf_3_218MultiPartInputFileE
N7Imf_3_215OpaqueAttributeE
N7Imf_3_210OutputFileE
N7Imf_3_212_GLOBAL__N_114LineBufferTaskE
N7Imf_3_213PizCompressorE
N7Imf_3_214TypedAttributeINS_12PreviewImageEEE
N7Imf_3_215Pxr24CompressorE
N7Imf_3_214TypedAttributeINS_8RationalEEE
N7Imf_3_214RgbaOutputFileE
N7Imf_3_213RgbaInputFileE
N7Imf_3_213RleCompressorE
;AN7Imf_3_217ScanLineInputFileE
N7Imf_3_212_GLOBAL__N_114LineBufferTaskE
N7Imf_3_211StdIFStreamE
N7Imf_3_211StdISStreamE
N7Imf_3_211StdOFStreamE
N7Imf_3_211StdOSStreamE
N7Imf_3_214TypedAttributeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
N7Imf_3_214TypedAttributeINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEE
N7Imf_3_214TypedAttributeINS_15TileDescriptionEEE
N7Imf_3_214TiledInputFileE
N7Imf_3_212_GLOBAL__N_114TileBufferTaskE
N7Imf_3_215TiledOutputFileE
N7Imf_3_212_GLOBAL__N_114TileBufferTaskE
N7Imf_3_219TiledRgbaOutputFileE
N7Imf_3_218TiledRgbaInputFileE
(.N7Imf_3_214TypedAttributeINS_8TimeCodeEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec2IiEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec2IfEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec2IdEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec3IiEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec3IfEEEE
N7Imf_3_214TypedAttributeIN9Imath_3_24Vec3IdEEEE
N7Imf_3_213ZipCompressorE
-/135
NS[`
aaa_
-5>GP
ajs|
IOU[^djpv


 &+0369;=@ACEFHIJKLMOPPQRSTUUVWXXYYZ[[\\]]^__```aabbcccddeeefffgghhhiiiijjjkkkllllmmmmnnnoooopppppqqqqrrrrrssssstttttuuuuuvvvvvvwwwwwxxxxxxyyyyyyyzzzzzz{{{{{{{|||||||}}}}}}}}~~~~~~~
 )059<@BEGIKLNPQRSUVWXYZ[\\]^_``abbccdeeffgghhiijjkklllmmnnnoopppqqqrrrsssstttuuuvvvvwwwwxxxxyyyyzzzzz{{{{|||||}}}}}~~~~~
]  09@EILPRUWY[\^`abcefghijkllmnoppqrrsstuuvvwwxxyyzz{{|||}}~~~
@?>=<;:9876543210/.-,+*)('&%$#"! 
UTF8String
stringByExpandingTildeInPath
stringWithUTF8String:
P@XXXX PNG chunk not known
