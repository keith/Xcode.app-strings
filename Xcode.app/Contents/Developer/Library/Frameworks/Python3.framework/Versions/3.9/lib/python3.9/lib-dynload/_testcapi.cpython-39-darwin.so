?This docstring has no signature.
docstring_with_invalid_signature($module, /, boo)
This docstring has an invalid signature.
docstring_with_invalid_signature2($module, /, boo)
This docstring also has an invalid signature.
docstring_with_signature($module, /, sig)
This docstring has a valid signature.
docstring_with_signature_but_no_doc($module, /, sig)
docstring_with_signature_and_extra_newlines($module, /, parameter)
This docstring has a valid signature and some extra newlines.
docstring_with_signature_with_defaults(module, s='avocado',
        b=b'bytes', d=3.14, i=35, n=None, t=True, f=False,
        local=the_number_three, sys=sys.maxsize,
        exp=sys.maxsize - 1)
This docstring has a valid signature with parameters,
and the parameters take defaults of varying types.
(ii)i|(i(ii))(iii)i
|bbBhHiIlknfds#LK
A heap type with GC, and with overridden dealloc.
The 'value' attribute is set to 10 in __init__.
A heap type without GC, but with overridden dealloc.
The 'value' attribute is set to 10 in __init__.
Subclass of HeapCType, without GC.
__init__ sets the 'value' attribute to 10 and 'value2' to 20.
Heap type with buffer support.
The buffer is set to [b'1', b'2', b'3', b'4']
A heap type without GC, but with overridden __setattr__.
The 'value' attribute is set to 10 in __init__ and updated via attribute setting.
Subclass of HeapCType with a finalizer that reassigns __class__.
__class__ is set to plain HeapCTypeSubclass during finalization.
__init__ sets the 'value' attribute to 10 and 'value2' to 20.
MyList_dealloc
MyList instance deallocated twice
_test_structmembersType
matmulType
ipowType
awaitType
MyList
MethodDescriptorBase
MethodDescriptorDerived
MethodDescriptorNopGet
MethodDescriptor2
GenericAlias
Generic
MethInstance
MethClass
MethStatic
RecursingInfinitelyError
CHAR_MAX
CHAR_MIN
UCHAR_MAX
SHRT_MAX
SHRT_MIN
USHRT_MAX
INT_MAX
INT_MIN
UINT_MAX
LONG_MAX
LONG_MIN
ULONG_MAX
FLT_MAX
FLT_MIN
DBL_MAX
DBL_MIN
LLONG_MAX
LLONG_MIN
ULLONG_MAX
PY_SSIZE_T_MAX
PY_SSIZE_T_MIN
SIZEOF_TIME_T
instancemethod
the_number_three
WITH_PYMALLOC
_testcapi.error
error
HeapGcCType
HeapCTypeSubclass
HeapCTypeWithDict
HeapCTypeWithNegativeDict
HeapCTypeWithWeakref
HeapCTypeWithBuffer
HeapCTypeSetattr
HeapCTypeSubclassWithFinalizer
ContainerNoGC
_testcapi
raise_exception
raise_memoryerror
set_errno
test_config
test_sizeof_c_types
test_datetime_capi
datetime_check_date
datetime_check_time
datetime_check_datetime
datetime_check_delta
datetime_check_tzinfo
make_timezones_capi
get_timezones_offset_zero
get_timezone_utc_capi
get_date_fromdate
get_datetime_fromdateandtime
get_datetime_fromdateandtimeandfold
get_time_fromtime
get_time_fromtimeandfold
get_delta_fromdsu
get_date_fromtimestamp
get_datetime_fromtimestamp
PyDateTime_GET
PyDateTime_DATE_GET
PyDateTime_TIME_GET
PyDateTime_DELTA_GET
test_list_api
test_dict_iteration
dict_getitem_knownhash
dict_hassplittable
test_lazy_hash_inheritance
test_long_api
test_xincref_doesnt_leak
test_incref_doesnt_leak
test_xdecref_doesnt_leak
test_decref_doesnt_leak
test_structseq_newtype_doesnt_leak
test_structseq_newtype_null_descr_doc
test_incref_decref_API
test_long_and_overflow
test_long_as_double
test_long_as_size_t
test_long_as_unsigned_long_long_mask
test_long_numbits
test_k_code
test_empty_argparse
parse_tuple_and_keywords
test_null_strings
test_string_from_format
test_with_docstring
This is a pretty normal docstring.
test_string_to_double
test_unicode_compare_with_ascii
test_capsule
test_from_contiguous
getbuffer_with_null_view
PyBuffer_SizeFromFormat
test_buildvalue_N
test_buildvalue_issue38913
get_args
get_kwargs
getargs_tuple
getargs_keywords
getargs_keyword_only
getargs_positional_only_and_keywords
getargs_b
getargs_B
getargs_h
getargs_H
getargs_I
getargs_k
getargs_i
getargs_l
getargs_n
getargs_p
getargs_L
getargs_K
test_longlong_api
test_long_long_and_overflow
test_L_code
getargs_f
getargs_d
getargs_D
getargs_S
getargs_Y
getargs_U
getargs_c
getargs_C
getargs_s
getargs_s_star
getargs_s_hash
getargs_z
getargs_z_star
getargs_z_hash
getargs_y
getargs_y_star
getargs_y_hash
getargs_u
getargs_u_hash
getargs_Z
getargs_Z_hash
getargs_w_star
getargs_es
getargs_et
getargs_es_hash
getargs_et_hash
codec_incrementalencoder
codec_incrementaldecoder
test_s_code
test_u_code
test_Z_code
test_widechar
unicode_aswidechar
unicode_aswidecharstring
unicode_asucs4
unicode_asutf8
unicode_asutf8andsize
unicode_findchar
unicode_copycharacters
unicode_encodedecimal
unicode_transformdecimaltoascii
unicode_legacy_string
_test_thread_state
_pending_threadfunc
traceback_print
exception_print
set_exc_info
argparsing
code_newempty
make_exception_with_doc
make_memoryview_from_NULL_pointer
crash_no_current_thread
run_in_subinterp
pytime_object_to_time_t
pytime_object_to_timeval
pytime_object_to_timespec
with_tp_del
create_cfunction
test_pymem_alloc0
test_pymem_setrawallocators
test_pymem_setallocators
test_pyobject_setallocators
set_nomemory
set_nomemory(start:int, stop:int = 0)
remove_mem_hooks
Remove memory hooks.
no_docstring
docstring_empty
docstring_no_signature
docstring_with_invalid_signature
docstring_with_invalid_signature2
docstring_with_signature
docstring_with_signature_but_no_doc
docstring_with_signature_and_extra_newlines
docstring_with_signature_with_defaults
call_in_temporary_c_thread
set_error_class(error_class) -> None
pymarshal_write_long_to_file
pymarshal_write_object_to_file
pymarshal_read_short_from_file
pymarshal_read_long_from_file
pymarshal_read_last_object_from_file
pymarshal_read_object_from_file
return_null_without_error
return_result_with_error
PyTime_FromSeconds
PyTime_FromSecondsObject
PyTime_AsSecondsDouble
PyTime_AsTimeval
PyTime_AsTimespec
PyTime_AsMilliseconds
PyTime_AsMicroseconds
pymem_buffer_overflow
pymem_api_misuse
pymem_malloc_without_gil
pymem_getallocatorsname
check_pyobject_null_is_freed
check_pyobject_uninitialized_is_freed
check_pyobject_forbidden_bytes_is_freed
check_pyobject_freed_is_freed
pyobject_malloc_without_gil
tracemalloc_track
tracemalloc_untrack
tracemalloc_get_traceback
dict_get_version
raise_SIGINT_then_send_None
pyobject_fastcall
pyobject_fastcalldict
pyobject_vectorcall
pyvectorcall_call
stack_pointer
W_STOPCODE
get_mapping_keys
get_mapping_values
get_mapping_items
test_pythread_tss_key_state
hamt
bad_get
EncodeLocaleEx
DecodeLocaleEx
write_unraisable_exc
sequence_getitem
meth_varargs
meth_varargs_keywords
meth_o
meth_noargs
meth_fastcall
meth_fastcall_keywords
pynumber_tobase
without_gc
Oi:raise_exception
_testcapimodule.c
PyTuple_Check(exc_args)
i:set_errno
PyDateTime_CAPI somehow initialized
datetime.datetime_CAPI
PyTuple_Check(rv)
piii
piiiiiii
piiiiiiii
piiii
piiiii
OO|pp
(lll)
(llll)
PyList_Check(list)
test_list_api: reverse screwed up
test_dict_iteration: dict iteration went wrong 
OOn:dict_getitem_knownhash
dict_hassplittable() argument must be dict, not '%s'
test_lazy_hash_inheritance: failed to create object
test_lazy_hash_inheritance: type initialised too soon
test_lazy_hash_inheritance: could not hash object
test_lazy_hash_inheritance: type not initialised by hash()
test_lazy_hash_inheritance: unexpected hash function
unsigned unexpected null result
unsigned unexpected -1 result
unsigned output != input
signed unexpected null result
signed unexpected -1 result
signed output != input
unexpected NULL from PyLong_FromLong
unexpected NULL from PyNumber_Negative
PyLong_AsUnsignedXXX(-1) didn't complain
PyLong_AsUnsignedXXX(-1) raised something other than OverflowError
unexpected NULL from PyNumber_Lshift
PyLong_AsUnsignedXXX(2**NBITS) didn't complain
PyLong_AsUnsignedXXX(2**NBITS) raised something other than OverflowError
unexpected NULL from PyNumber_Rshift
PyLong_AsXXX(2**(NBITS-1)) didn't complain
PyLong_AsXXX(2**(NBITS-1)) raised something other than OverflowError
unexpected NULL from PyNumber_Subtract
PyLong_AsXXX(-2**(NBITS-1)-1) didn't complain
PyLong_AsXXX(-2**(NBITS-1)-1) raised something other than OverflowError
PyLong_AsXXX(None) didn't complain
PyLong_AsXXX(None) raised something other than TypeError
%s: %s
foo value
some hidden value
_testcapi.test_descr
This is used to test for memory leaks in NewType
structseq_type != NULL
PyType_Check(structseq_type)
PyType_FastSubclass(structseq_type, Py_TPFLAGS_TUPLE_SUBCLASS)
FFFFFFFFFFFFFFFFFFFFFFFF
return value was not set to -1
overflow was not set to 1
-FFFFFFFFFFFFFFFFFFFFFFFF
overflow was not set to -1
expected return value 0xFF
overflow was not cleared
overflow was set incorrectly
expected return value LONG_MAX
expected return value LONG_MIN
PyLong_AsDouble(None) didn't complain
PyLong_AsDouble(None) raised something other than TypeError
PyLong_AsSize_t(None) didn't complain
PyLong_AsSize_t(None) raised something other than TypeError
PyLong_AsSsize_t(None) didn't complain
PyLong_AsSsize_t(None) raised something other than TypeError
PyLong_AsUnsignedLongLongMask(NULL) didn't complain
PyLong_AsUnsignedLongLongMask(NULL) raised something other than SystemError
wrong result for _PyLong_NumBits
wrong result for _PyLong_Sign
PyLong_AsUnsignedLongMask() returned wrong value for long 0xFFF...FFF
PyTuple_Check(tuple)
k:test_k_code
k code returned wrong value for long 0xFFF...FFF
-FFFFFFFF000000000000000042
PyLong_AsUnsignedLongMask() returned wrong value for long -0xFFF..000042
k code returned wrong value for long -0xFFF..000042
|:test_empty_argparse
OOsO:parse_tuple_and_keywords
parse_tuple_and_keywords: sub_keywords must be either list or tuple
PyTuple_Check(sub_keywords)
parse_tuple_and_keywords: too many keywords in sub_keywords
parse_tuple_and_keywords: could not convert keywords[%zd] to narrow string
PyBytes_Check(converted[i])
%d failed at 1
%ld failed at 1
%zd failed at 1
%u failed at 1
%lu failed at 1
%zu failed at 1
%llu
%llu failed at 1
%lld
%lld failed at 1
conversion of 0.1 to float failed
1.234
conversion of 1.234 to float failed
-1.35
conversion of -1.35 to float failed
.1e01
conversion of .1e01 to float failed
2.e-2
conversion of 2.e-2 to float failed
 0.1
conversion of  0.1 didn't raise ValueError
conversion of 
-3 didn't raise ValueError
.123 
conversion of .123  didn't raise ValueError
conversion of 3
 didn't raise ValueError
123abc
conversion of 123abc didn't raise ValueError
Python string ending in NULL should not compare equal to c string.
_socket.CAPI
_socket
CAPI
_curses._C_API
_curses
_C_API
datetime
datetime_CAPI
destructor not called!
ignored
the wrong name
PyCapsule_GetPointer should have failed but did not!
PyCapsule_GetPointer should not have returned the internal pointer!
PyCapsule_GetPointer should have returned NULL pointer but did not!
destructor called when it should not have been!
%s module: "%s" attribute: "%s"
PyCapsule_GetPointer returned NULL unexpectedly!
weebles wobble but they don't fall down
PyCapsule_GetPointer should not have returned its internal pointer!
capsule pointer
capsule name
context did not match in destructor!
destructor did not match in destructor!  (woah!)
name did not match in destructor!
pointer did not match in destructor!
capsule context
test_from_contiguous: incorrect result
s:test_PyBuffer_SizeFromFormat
Py_BuildValue("N") returned wrong result
arg was not decrefed in Py_BuildValue("N")
(O&N)
[O&N]
{O&N}
{()O&(())N}
test_buildvalue_N: arg was not decrefed in successful Py_BuildValue("%s")
test_buildvalue_N: Py_BuildValue("%s") didn't complain
test_buildvalue_N: arg was not decrefed in failed Py_BuildValue("%s")
string
(s#O)
res == NULL
(z#O)
(y#O)
(u#O)
i(ii)
arg1
arg2
arg3
arg4
arg5
iiiiiiiiii
required
optional
keyword_only
i|i$i
keyword
i|ii
expected return value LLONG_MAX
expected return value LLONG_MIN
L:test_L_code
L code returned wrong value for long 42
L code returned wrong value for int 42
w*:getargs_w_star
O|sY
PyByteArray_Check(buffer)
s|s:test_incrementalencoder
s|s:test_incrementaldecoder
latin-1
s:test_s_code1
z:test_s_code2
test
ascii
u:test_u_code
PyUnicode_Check(obj)
u code returned wrong value for u'test'
u#:test_u_code
((PyASCIIObject *)(obj))->wstr
u# code returned wrong values for u'test'
ZZ:test_Z_code
Z code returned wrong value for 'test'
Z code returned wrong value for None
Z#Z#:test_Z_code
Z# code returned wrong values for 'test'
Z# code returned wrong values for None'
PyUnicode_Check(wide)
PyUnicode_IS_READY(wide)
PyUnicode_Check(utf8)
PyUnicode_IS_READY(utf8)
wide string and utf8 string have different length
wide string and utf8 string are different
PyUnicode_FromWideChar(L"\U00110000", 1) didn't fail
PyUnicode_FromUnicode(L"\U00110000", 1) didn't fail
PyUnicode_Ready() didn't fail
(Nn)
Unp:unicode_asucs4
UInni:unicode_findchar
UnOnn:unicode_copycharacters
PyUnicode_Check(to)
PyUnicode_IS_READY(to)
PyUnicode_Check(to_copy)
PyUnicode_IS_READY(to_copy)
u#|s
PyBytes_Check(decimal)
new_length <= decimal_length
PyUnicode_Check(u)
!PyUnicode_IS_READY(u)
O:test_thread_state
'%s' object is not callable
_PyObject_VectorcallTstate
abstract.h
kwnames == NULL || PyTuple_Check(kwnames)
args != NULL || PyVectorcall_NARGS(nargsf) == 0
PyVectorcall_Function
callable != NULL
PyCallable_Check(callable)
offset > 0
OO:traceback_print
O:exception_print
an exception instance is required
OOO:test_set_exc_info
O&O&
failing_converter
str1
ssi:code_newempty
name
base
dict
s|sOO:make_exception_with_doc
s:run_in_subinterp
sub-interpreter creation failed
Oi:pytime_object_to_time_t
invalid rounding
Oi:pytime_object_to_timeval
Oi:pytime_object_to_timespec
O:with_tp_del
heap type expected, got %R
__tp_del__
slot_tp_del
Py_REFCNT(self) == 0
Py_REFCNT(self) > 0
!PyType_IS_GC(Py_TYPE(self)) || PyObject_GC_IsTracked(self)
PyMem_RawMalloc(0) returns NULL
PyMem_RawCalloc(0, 0) returns NULL
PyMem_Malloc(0) returns NULL
PyMem_Calloc(0, 0) returns NULL
PyObject_Malloc(0) returns NULL
PyObject_Calloc(0, 0) returns NULL
malloc failed
malloc wrong context
malloc invalid size
realloc failed
realloc wrong context
realloc invalid parameters
free wrong context
free invalid pointer
calloc failed
calloc wrong context
calloc invalid nelem or elsize
calloc free wrong context
calloc free invalid pointer
could not allocate lock
unable to start the thread
lOi:pymarshal_write_long_to_file
OOi:pymarshal_write_object_to_file
O:pymarshal_read_short_from_file
O:pymarshal_read_long_from_file
O:pymarshal_read_last_object_from_file
O:pymarshal_read_object_from_file
cannot get allocators name
object is not seen as freed
IOn|i
PyTraceMalloc_Track error
PyTraceMalloc_Untrack error
args must be None or a tuple
kwnames must be None or a dict
kwnames longer than args
kwnames must be None or a tuple
OO|O
args must be a tuple
kwargs must be a dict
TSS key not in an uninitialized state at creation time
PyThread_tss_create failed
PyThread_tss_create succeeded, but with TSS key in an uninitialized state
PyThread_tss_create unsuccessful with an already initialized key
TSS key initialization state was not preserved after calling PyThread_tss_set(&tss_key, NULL)
TSS key initialization state was not preserved after calling PyThread_tss_get(&tss_key)
PyThread_tss_delete called, but did not set the key state to uninitialized
PyThread_tss_alloc failed
TSS key not in an uninitialized state at allocation time
U|is
encode error: pos=%zu, reason=%s
unsupported error handler
unknow error code
y|is
decode error: pos=%zu, reason=%s
_fastcall_to_tuple
Oi:pynumber_tobase
!PyType_IS_GC(tp)
hashinheritancetester
test_structmembersType
Type containing all structmember types
T_BOOL
T_BYTE
T_UBYTE
T_SHORT
T_USHORT
T_INT
T_UINT
T_LONG
T_ULONG
T_PYSSIZET
T_FLOAT
T_DOUBLE
T_STRING_INPLACE
T_LONGLONG
T_ULONGLONG
string too long
C level type with matrix operations defined
(sOO)
matmul
imatmul
C level type with tp_as_async
awaitObject
__mro_entries__
__class_getitem__
Class with normal (instance) methods to test calling conventions
Class with class methods to test calling conventions
Class with static methods to test calling conventions
Instantiating this exception starts infinite recursion.
_testcapi.HeapGcCType
value
_testcapi.HeapCType
_testcapi.HeapCTypeSubclass
value2
_testcapi.HeapCTypeWithDict
dictobj
__dictoffset__
__dict__
_testcapi.HeapCTypeWithNegativeDict
_testcapi.HeapCTypeWithWeakref
weakreflist
__weaklistoffset__
_testcapi.HeapCTypeWithBuffer
heapctypewithbuffer_releasebuffer
view->obj == (void*) self
_testcapi.HeapCTypeSetattr
pvalue
_testcapi.HeapCTypeSubclassWithFinalizer
__class__
refcnt_in_del
_testcapi.ContainerNoGC
a container value for test purposes
 'This docstring has no signature.
docstring_with_invalid_signature($module, /, boo)
This docstring has an invalid signature.
docstring_with_invalid_signature2($module, /, boo)
This docstring also has an invalid signature.
docstring_with_signature($module, /, sig)
This docstring has a valid signature.
docstring_with_signature_but_no_doc($module, /, sig)
docstring_with_signature_and_extra_newlines($module, /, parameter)
This docstring has a valid signature and some extra newlines.
docstring_with_signature_with_defaults(module, s='avocado',
        b=b'bytes', d=3.14, i=35, n=None, t=True, f=False,
        local=the_number_three, sys=sys.maxsize,
        exp=sys.maxsize - 1)
This docstring has a valid signature with parameters,
and the parameters take defaults of varying types.
(ii)i|(i(ii))(iii)i
|bbBhHiIlknfds#LK
A heap type with GC, and with overridden dealloc.
The 'value' attribute is set to 10 in __init__.
A heap type without GC, but with overridden dealloc.
The 'value' attribute is set to 10 in __init__.
Subclass of HeapCType, without GC.
__init__ sets the 'value' attribute to 10 and 'value2' to 20.
Heap type with buffer support.
The buffer is set to [b'1', b'2', b'3', b'4']
A heap type without GC, but with overridden __setattr__.
The 'value' attribute is set to 10 in __init__ and updated via attribute setting.
Subclass of HeapCType with a finalizer that reassigns __class__.
__class__ is set to plain HeapCTypeSubclass during finalization.
__init__ sets the 'value' attribute to 10 and 'value2' to 20.
1234
MyList_dealloc
MyList instance deallocated twice
_test_structmembersType
matmulType
ipowType
awaitType
MyList
MethodDescriptorBase
MethodDescriptorDerived
MethodDescriptorNopGet
MethodDescriptor2
GenericAlias
Generic
MethInstance
MethClass
MethStatic
RecursingInfinitelyError
CHAR_MAX
CHAR_MIN
UCHAR_MAX
SHRT_MAX
SHRT_MIN
USHRT_MAX
INT_MAX
INT_MIN
UINT_MAX
LONG_MAX
LONG_MIN
ULONG_MAX
FLT_MAX
FLT_MIN
DBL_MAX
DBL_MIN
LLONG_MAX
LLONG_MIN
ULLONG_MAX
PY_SSIZE_T_MAX
PY_SSIZE_T_MIN
SIZEOF_TIME_T
instancemethod
the_number_three
WITH_PYMALLOC
_testcapi.error
error
HeapGcCType
HeapCTypeSubclass
HeapCTypeWithDict
HeapCTypeWithNegativeDict
HeapCTypeWithWeakref
HeapCTypeWithBuffer
HeapCTypeSetattr
HeapCTypeSubclassWithFinalizer
ContainerNoGC
_testcapi
raise_exception
raise_memoryerror
set_errno
test_config
test_sizeof_c_types
test_datetime_capi
datetime_check_date
datetime_check_time
datetime_check_datetime
datetime_check_delta
datetime_check_tzinfo
make_timezones_capi
get_timezones_offset_zero
get_timezone_utc_capi
get_date_fromdate
get_datetime_fromdateandtime
get_datetime_fromdateandtimeandfold
get_time_fromtime
get_time_fromtimeandfold
get_delta_fromdsu
get_date_fromtimestamp
get_datetime_fromtimestamp
PyDateTime_GET
PyDateTime_DATE_GET
PyDateTime_TIME_GET
PyDateTime_DELTA_GET
test_list_api
test_dict_iteration
dict_getitem_knownhash
dict_hassplittable
test_lazy_hash_inheritance
test_long_api
test_xincref_doesnt_leak
test_incref_doesnt_leak
test_xdecref_doesnt_leak
test_decref_doesnt_leak
test_structseq_newtype_doesnt_leak
test_structseq_newtype_null_descr_doc
test_incref_decref_API
test_long_and_overflow
test_long_as_double
test_long_as_size_t
test_long_as_unsigned_long_long_mask
test_long_numbits
test_k_code
test_empty_argparse
parse_tuple_and_keywords
test_null_strings
test_string_from_format
test_with_docstring
This is a pretty normal docstring.
test_string_to_double
test_unicode_compare_with_ascii
test_capsule
test_from_contiguous
getbuffer_with_null_view
PyBuffer_SizeFromFormat
test_buildvalue_N
test_buildvalue_issue38913
get_args
get_kwargs
getargs_tuple
getargs_keywords
getargs_keyword_only
getargs_positional_only_and_keywords
getargs_b
getargs_B
getargs_h
getargs_H
getargs_I
getargs_k
getargs_i
getargs_l
getargs_n
getargs_p
getargs_L
getargs_K
test_longlong_api
test_long_long_and_overflow
test_L_code
getargs_f
getargs_d
getargs_D
getargs_S
getargs_Y
getargs_U
getargs_c
getargs_C
getargs_s
getargs_s_star
getargs_s_hash
getargs_z
getargs_z_star
getargs_z_hash
getargs_y
getargs_y_star
getargs_y_hash
getargs_u
getargs_u_hash
getargs_Z
getargs_Z_hash
getargs_w_star
getargs_es
getargs_et
getargs_es_hash
getargs_et_hash
codec_incrementalencoder
codec_incrementaldecoder
test_s_code
test_u_code
test_Z_code
test_widechar
unicode_aswidechar
unicode_aswidecharstring
unicode_asucs4
unicode_asutf8
unicode_asutf8andsize
unicode_findchar
unicode_copycharacters
unicode_encodedecimal
unicode_transformdecimaltoascii
unicode_legacy_string
_test_thread_state
_pending_threadfunc
traceback_print
exception_print
set_exc_info
argparsing
code_newempty
make_exception_with_doc
make_memoryview_from_NULL_pointer
crash_no_current_thread
run_in_subinterp
pytime_object_to_time_t
pytime_object_to_timeval
pytime_object_to_timespec
with_tp_del
create_cfunction
test_pymem_alloc0
test_pymem_setrawallocators
test_pymem_setallocators
test_pyobject_setallocators
set_nomemory
set_nomemory(start:int, stop:int = 0)
remove_mem_hooks
Remove memory hooks.
no_docstring
docstring_empty
docstring_no_signature
docstring_with_invalid_signature
docstring_with_invalid_signature2
docstring_with_signature
docstring_with_signature_but_no_doc
docstring_with_signature_and_extra_newlines
docstring_with_signature_with_defaults
call_in_temporary_c_thread
set_error_class(error_class) -> None
pymarshal_write_long_to_file
pymarshal_write_object_to_file
pymarshal_read_short_from_file
pymarshal_read_long_from_file
pymarshal_read_last_object_from_file
pymarshal_read_object_from_file
return_null_without_error
return_result_with_error
PyTime_FromSeconds
PyTime_FromSecondsObject
PyTime_AsSecondsDouble
PyTime_AsTimeval
PyTime_AsTimespec
PyTime_AsMilliseconds
PyTime_AsMicroseconds
pymem_buffer_overflow
pymem_api_misuse
pymem_malloc_without_gil
pymem_getallocatorsname
check_pyobject_null_is_freed
check_pyobject_uninitialized_is_freed
check_pyobject_forbidden_bytes_is_freed
check_pyobject_freed_is_freed
pyobject_malloc_without_gil
tracemalloc_track
tracemalloc_untrack
tracemalloc_get_traceback
dict_get_version
raise_SIGINT_then_send_None
pyobject_fastcall
pyobject_fastcalldict
pyobject_vectorcall
pyvectorcall_call
stack_pointer
W_STOPCODE
get_mapping_keys
get_mapping_values
get_mapping_items
test_pythread_tss_key_state
hamt
bad_get
EncodeLocaleEx
DecodeLocaleEx
write_unraisable_exc
sequence_getitem
meth_varargs
meth_varargs_keywords
meth_o
meth_noargs
meth_fastcall
meth_fastcall_keywords
pynumber_tobase
without_gc
Oi:raise_exception
_testcapimodule.c
PyTuple_Check(exc_args)
i:set_errno
PyDateTime_CAPI somehow initialized
datetime.datetime_CAPI
PyTuple_Check(rv)
piii
piiiiiii
piiiiiiii
piiii
piiiii
OO|pp
(lll)
(llll)
PyList_Check(list)
test_list_api: reverse screwed up
test_dict_iteration: dict iteration went wrong 
OOn:dict_getitem_knownhash
dict_hassplittable() argument must be dict, not '%s'
test_lazy_hash_inheritance: failed to create object
test_lazy_hash_inheritance: type initialised too soon
test_lazy_hash_inheritance: could not hash object
test_lazy_hash_inheritance: type not initialised by hash()
test_lazy_hash_inheritance: unexpected hash function
unsigned unexpected null result
unsigned unexpected -1 result
unsigned output != input
signed unexpected null result
signed unexpected -1 result
signed output != input
unexpected NULL from PyLong_FromLong
unexpected NULL from PyNumber_Negative
PyLong_AsUnsignedXXX(-1) didn't complain
PyLong_AsUnsignedXXX(-1) raised something other than OverflowError
unexpected NULL from PyNumber_Lshift
PyLong_AsUnsignedXXX(2**NBITS) didn't complain
PyLong_AsUnsignedXXX(2**NBITS) raised something other than OverflowError
unexpected NULL from PyNumber_Rshift
PyLong_AsXXX(2**(NBITS-1)) didn't complain
PyLong_AsXXX(2**(NBITS-1)) raised something other than OverflowError
unexpected NULL from PyNumber_Subtract
PyLong_AsXXX(-2**(NBITS-1)-1) didn't complain
PyLong_AsXXX(-2**(NBITS-1)-1) raised something other than OverflowError
PyLong_AsXXX(None) didn't complain
PyLong_AsXXX(None) raised something other than TypeError
%s: %s
foo value
some hidden value
_testcapi.test_descr
This is used to test for memory leaks in NewType
structseq_type != NULL
PyType_Check(structseq_type)
PyType_FastSubclass(structseq_type, Py_TPFLAGS_TUPLE_SUBCLASS)
FFFFFFFFFFFFFFFFFFFFFFFF
return value was not set to -1
overflow was not set to 1
-FFFFFFFFFFFFFFFFFFFFFFFF
overflow was not set to -1
expected return value 0xFF
overflow was not cleared
overflow was set incorrectly
expected return value LONG_MAX
expected return value LONG_MIN
PyLong_AsDouble(None) didn't complain
PyLong_AsDouble(None) raised something other than TypeError
PyLong_AsSize_t(None) didn't complain
PyLong_AsSize_t(None) raised something other than TypeError
PyLong_AsSsize_t(None) didn't complain
PyLong_AsSsize_t(None) raised something other than TypeError
PyLong_AsUnsignedLongLongMask(NULL) didn't complain
PyLong_AsUnsignedLongLongMask(NULL) raised something other than SystemError
wrong result for _PyLong_NumBits
wrong result for _PyLong_Sign
PyLong_AsUnsignedLongMask() returned wrong value for long 0xFFF...FFF
PyTuple_Check(tuple)
k:test_k_code
k code returned wrong value for long 0xFFF...FFF
-FFFFFFFF000000000000000042
PyLong_AsUnsignedLongMask() returned wrong value for long -0xFFF..000042
k code returned wrong value for long -0xFFF..000042
|:test_empty_argparse
OOsO:parse_tuple_and_keywords
parse_tuple_and_keywords: sub_keywords must be either list or tuple
PyTuple_Check(sub_keywords)
parse_tuple_and_keywords: too many keywords in sub_keywords
parse_tuple_and_keywords: could not convert keywords[%zd] to narrow string
PyBytes_Check(converted[i])
%d failed at 1
%ld failed at 1
%zd failed at 1
%u failed at 1
%lu failed at 1
%zu failed at 1
%llu
%llu failed at 1
%lld
%lld failed at 1
conversion of 0.1 to float failed
1.234
conversion of 1.234 to float failed
-1.35
conversion of -1.35 to float failed
.1e01
conversion of .1e01 to float failed
2.e-2
conversion of 2.e-2 to float failed
 0.1
conversion of  0.1 didn't raise ValueError
conversion of 
-3 didn't raise ValueError
.123 
conversion of .123  didn't raise ValueError
conversion of 3
 didn't raise ValueError
123abc
conversion of 123abc didn't raise ValueError
Python string ending in NULL should not compare equal to c string.
_socket.CAPI
_socket
CAPI
_curses._C_API
_curses
_C_API
datetime
datetime_CAPI
destructor not called!
ignored
the wrong name
PyCapsule_GetPointer should have failed but did not!
PyCapsule_GetPointer should not have returned the internal pointer!
PyCapsule_GetPointer should have returned NULL pointer but did not!
destructor called when it should not have been!
%s module: "%s" attribute: "%s"
PyCapsule_GetPointer returned NULL unexpectedly!
weebles wobble but they don't fall down
PyCapsule_GetPointer should not have returned its internal pointer!
capsule pointer
capsule name
context did not match in destructor!
destructor did not match in destructor!  (woah!)
name did not match in destructor!
pointer did not match in destructor!
capsule context
test_from_contiguous: incorrect result
s:test_PyBuffer_SizeFromFormat
Py_BuildValue("N") returned wrong result
arg was not decrefed in Py_BuildValue("N")
(O&N)
[O&N]
{O&N}
{()O&(())N}
test_buildvalue_N: arg was not decrefed in successful Py_BuildValue("%s")
test_buildvalue_N: Py_BuildValue("%s") didn't complain
test_buildvalue_N: arg was not decrefed in failed Py_BuildValue("%s")
string
(s#O)
res == NULL
(z#O)
(y#O)
(u#O)
i(ii)
arg1
arg2
arg3
arg4
arg5
iiiiiiiiii
required
optional
keyword_only
i|i$i
keyword
i|ii
expected return value LLONG_MAX
expected return value LLONG_MIN
L:test_L_code
L code returned wrong value for long 42
L code returned wrong value for int 42
w*:getargs_w_star
O|sY
PyByteArray_Check(buffer)
s|s:test_incrementalencoder
s|s:test_incrementaldecoder
latin-1
s:test_s_code1
z:test_s_code2
test
ascii
u:test_u_code
PyUnicode_Check(obj)
u code returned wrong value for u'test'
u#:test_u_code
((PyASCIIObject *)(obj))->wstr
u# code returned wrong values for u'test'
ZZ:test_Z_code
Z code returned wrong value for 'test'
Z code returned wrong value for None
Z#Z#:test_Z_code
Z# code returned wrong values for 'test'
Z# code returned wrong values for None'
PyUnicode_Check(wide)
PyUnicode_IS_READY(wide)
PyUnicode_Check(utf8)
PyUnicode_IS_READY(utf8)
wide string and utf8 string have different length
wide string and utf8 string are different
PyUnicode_FromWideChar(L"\U00110000", 1) didn't fail
PyUnicode_FromUnicode(L"\U00110000", 1) didn't fail
PyUnicode_Ready() didn't fail
(Nn)
Unp:unicode_asucs4
UInni:unicode_findchar
UnOnn:unicode_copycharacters
PyUnicode_Check(to)
PyUnicode_IS_READY(to)
PyUnicode_Check(to_copy)
PyUnicode_IS_READY(to_copy)
u#|s
PyBytes_Check(decimal)
new_length <= decimal_length
PyUnicode_Check(u)
!PyUnicode_IS_READY(u)
O:test_thread_state
'%s' object is not callable
_PyObject_VectorcallTstate
abstract.h
kwnames == NULL || PyTuple_Check(kwnames)
args != NULL || PyVectorcall_NARGS(nargsf) == 0
PyVectorcall_Function
callable != NULL
PyCallable_Check(callable)
offset > 0
OO:traceback_print
O:exception_print
an exception instance is required
OOO:test_set_exc_info
O&O&
failing_converter
str1
ssi:code_newempty
name
base
dict
s|sOO:make_exception_with_doc
s:run_in_subinterp
sub-interpreter creation failed
Oi:pytime_object_to_time_t
invalid rounding
Oi:pytime_object_to_timeval
Oi:pytime_object_to_timespec
O:with_tp_del
heap type expected, got %R
__tp_del__
slot_tp_del
Py_REFCNT(self) == 0
Py_REFCNT(self) > 0
!PyType_IS_GC(Py_TYPE(self)) || PyObject_GC_IsTracked(self)
PyMem_RawMalloc(0) returns NULL
PyMem_RawCalloc(0, 0) returns NULL
PyMem_Malloc(0) returns NULL
PyMem_Calloc(0, 0) returns NULL
PyObject_Malloc(0) returns NULL
PyObject_Calloc(0, 0) returns NULL
malloc failed
malloc wrong context
malloc invalid size
realloc failed
realloc wrong context
realloc invalid parameters
free wrong context
free invalid pointer
calloc failed
calloc wrong context
calloc invalid nelem or elsize
calloc free wrong context
calloc free invalid pointer
could not allocate lock
unable to start the thread
lOi:pymarshal_write_long_to_file
OOi:pymarshal_write_object_to_file
O:pymarshal_read_short_from_file
O:pymarshal_read_long_from_file
O:pymarshal_read_last_object_from_file
O:pymarshal_read_object_from_file
cannot get allocators name
object is not seen as freed
IOn|i
PyTraceMalloc_Track error
PyTraceMalloc_Untrack error
args must be None or a tuple
kwnames must be None or a dict
kwnames longer than args
kwnames must be None or a tuple
OO|O
args must be a tuple
kwargs must be a dict
TSS key not in an uninitialized state at creation time
PyThread_tss_create failed
PyThread_tss_create succeeded, but with TSS key in an uninitialized state
PyThread_tss_create unsuccessful with an already initialized key
TSS key initialization state was not preserved after calling PyThread_tss_set(&tss_key, NULL)
TSS key initialization state was not preserved after calling PyThread_tss_get(&tss_key)
PyThread_tss_delete called, but did not set the key state to uninitialized
PyThread_tss_alloc failed
TSS key not in an uninitialized state at allocation time
U|is
encode error: pos=%zu, reason=%s
unsupported error handler
unknow error code
y|is
decode error: pos=%zu, reason=%s
_fastcall_to_tuple
Oi:pynumber_tobase
!PyType_IS_GC(tp)
hashinheritancetester
test_structmembersType
Type containing all structmember types
T_BOOL
T_BYTE
T_UBYTE
T_SHORT
T_USHORT
T_INT
T_UINT
T_LONG
T_ULONG
T_PYSSIZET
T_FLOAT
T_DOUBLE
T_STRING_INPLACE
T_LONGLONG
T_ULONGLONG
string too long
C level type with matrix operations defined
(sOO)
matmul
imatmul
C level type with tp_as_async
awaitObject
__mro_entries__
__class_getitem__
Class with normal (instance) methods to test calling conventions
Class with class methods to test calling conventions
Class with static methods to test calling conventions
Instantiating this exception starts infinite recursion.
_testcapi.HeapGcCType
value
_testcapi.HeapCType
_testcapi.HeapCTypeSubclass
value2
_testcapi.HeapCTypeWithDict
dictobj
__dictoffset__
__dict__
_testcapi.HeapCTypeWithNegativeDict
_testcapi.HeapCTypeWithWeakref
weakreflist
__weaklistoffset__
_testcapi.HeapCTypeWithBuffer
heapctypewithbuffer_releasebuffer
view->obj == (void*) self
_testcapi.HeapCTypeSetattr
pvalue
_testcapi.HeapCTypeSubclassWithFinalizer
__class__
refcnt_in_del
_testcapi.ContainerNoGC
a container value for test purposes
