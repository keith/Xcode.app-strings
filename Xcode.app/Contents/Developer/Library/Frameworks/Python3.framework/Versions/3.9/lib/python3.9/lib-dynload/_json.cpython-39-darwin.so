json speedups
encode_basestring_ascii(string) -> string
Return an ASCII-only JSON representation of a Python string
encode_basestring(string) -> string
Return a JSON representation of a Python string
scanstring(string, end, strict=True) -> (string, end)
Scan the string s for a JSON string. End is the index of the
character in s after the quote that started the JSON string.
Unescapes all valid JSON string escape sequences and raises ValueError
on attempt to decode an invalid string. If strict is False then literal
control characters are allowed in the string.
Returns a tuple of the decoded string and the index of the character in s
after the end quote.
JSON scanner object
_iterencode(obj, _current_indent_level) -> iterable
_json
encode_basestring_ascii
encode_basestring
scanstring
first argument must be a string, not %.80s
string is too long to escape
On|i:scanstring
end is out of bounds
Invalid control character at
Unterminated string starting at
Invalid \escape
Invalid \uXXXX escape
json.decoder
JSONDecodeError
make_scanner
make_encoder
_json.Scanner
string
On:scan_once
idx cannot be negative
 while decoding a JSON object from a unicode string
 while decoding a JSON array from a unicode string
Infinity
-Infinity
Expecting property name enclosed in double quotes
Expecting ':' delimiter
Expecting ',' delimiter
Expecting value
strict
object_hook
object_pairs_hook
parse_float
parse_int
parse_constant
context
O:make_scanner
_json.Encoder
_current_indent_level
On:_iterencode
 while encoding a JSON object
Circular reference detected
null
true
false
not a const
encoder() must return a string, not %.80s
Out of range float values are not JSON compliant
_iterencode_list needs a sequence
items must return 2-tuples
keys must be str, int, float, bool or None, not %.100s
markers
default
encoder
indent
key_separator
item_separator
sort_keys
skipkeys
allow_nan
OOOOUUppp:make_encoder
make_encoder() argument 1 must be dict or None, not %.200s
json speedups
encode_basestring_ascii(string) -> string
Return an ASCII-only JSON representation of a Python string
encode_basestring(string) -> string
Return a JSON representation of a Python string
scanstring(string, end, strict=True) -> (string, end)
Scan the string s for a JSON string. End is the index of the
character in s after the quote that started the JSON string.
Unescapes all valid JSON string escape sequences and raises ValueError
on attempt to decode an invalid string. If strict is False then literal
control characters are allowed in the string.
Returns a tuple of the decoded string and the index of the character in s
after the end quote.
JSON scanner object
_iterencode(obj, _current_indent_level) -> iterable
\u00
 $(,048<
_json
encode_basestring_ascii
encode_basestring
scanstring
first argument must be a string, not %.80s
string is too long to escape
On|i:scanstring
end is out of bounds
Invalid control character at
Unterminated string starting at
Invalid \escape
Invalid \uXXXX escape
json.decoder
JSONDecodeError
make_scanner
make_encoder
_json.Scanner
string
On:scan_once
idx cannot be negative
 while decoding a JSON object from a unicode string
 while decoding a JSON array from a unicode string
Infinity
-Infinity
Expecting property name enclosed in double quotes
Expecting ':' delimiter
Expecting ',' delimiter
Expecting value
strict
object_hook
object_pairs_hook
parse_float
parse_int
parse_constant
context
O:make_scanner
_json.Encoder
_current_indent_level
On:_iterencode
 while encoding a JSON object
Circular reference detected
null
true
false
not a const
encoder() must return a string, not %.80s
Out of range float values are not JSON compliant
_iterencode_list needs a sequence
items must return 2-tuples
keys must be str, int, float, bool or None, not %.100s
markers
default
encoder
indent
key_separator
item_separator
sort_keys
skipkeys
allow_nan
OOOOUUppp:make_encoder
make_encoder() argument 1 must be dict or None, not %.200s
