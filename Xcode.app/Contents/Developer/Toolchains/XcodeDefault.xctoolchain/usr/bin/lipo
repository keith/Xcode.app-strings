cctools-1021.4
CC_LOG_DIAGNOSTICS
CC_LOG_DIAGNOSTICS_FILE
arch
missing argument(s) to %s option
unknown architecture specification flag: %s in specifying input file %s %s %s
arch_blank
flag %s is no longer supported.
archs
create
detailed_info
extract
extract_family
missing argument to %s option
unknown architecture specification flag: %s in specifying extract operation: %s %s
hideARM64
info
output
more than one %s option specified
remove
unknown architecture specification flag: %s in specifying remove operation: %s %s
replace
unknown architecture specification flag: %s in specifying replace operation: %s %s %s
segalign
unknown architecture specification flag: %s in specifying segment alignment: %s %s %s
argument for -segalign <arch_type> %s not a proper hexadecimal number
argument to -segalign <arch_type> %x (hex) must be a non-zero power of two
argument to -segalign <arch_type> %x (hex) must equal to or less than %x (hex)
thin
unknown architecture specification flag: %s in specifying thin operation: %s %s
verify_arch
unknown architecture specification flag: %s in specifying -verify_arch operation
fat64
unknown flag: %s
one of -create, -thin <arch_type>, -extract <arch_type>, -remove <arch_type>, -replace <arch_type> <file_name>, -verify_arch <arch_type> ... , -archs, -info, or -detailed_info must be specified
no output file specified
no input files specified
only one input file allowed with -verify_arch
only one input file allowed with -archs
only one of -create, -thin <arch_type>, -extract <arch_type>, -remove <arch_type>, -replace <arch_type> <file_name>, -verify_arch <arch_type> ..., -info, -archs, or -detailed_info can be specified
-hideARM64 may only be used with -create, -remove, or -replace
%s and %s have the same architectures (%s) and can't be in the same fat output file
%s and %s have the same architectures (cputype (%d) and cpusubtype (%d)) and can't be in the same fat output file
only one input file can be specified with the -thin option
input file (%s) must be a fat file when the -thin option is specified
can't create output file: %s
can't write thin file to output file: %s
can't close output file: %s
can't set the modify times for output file: %s
fat input file (%s) does not contain the specified architecture (%s) to thin it to
only one input file can be specified with the -extract option
input file (%s) must be a fat file when the -extract option is specified
-extract %s specified multiple times
-extract %s specified but fat file: %s does not contain that architecture
only one input file can be specified with the -remove option
input file (%s) must be a fat file when the -remove option is specified
-remove %s specified multiple times
-remove %s specified but fat file: %s does not contain that architecture
-remove's specified would result in an empty fat file
only one input file can be specified with the -replace option
input file (%s) must be a fat file when the -replace option is specified
-replace %s <file_name> specified multiple times
-replace %s <file_name> specified but fat file: %s does not contain that architecture
unknown(%u,%u)
Architectures in the fat file: %s are: 
input file %s is not a fat file
Non-fat file: %s is architecture: %s
Fat header in: %s
fat_magic 0x%x
nfat_arch %u
 (+%u hidden)
architecture 
 (hidden)
    offset %u
    size %u
    align 2^%u (%d)
    offset %llu
    size %llu
-segalign %s <value> specified multiple times
-segalign %s <value> specified but resulting fat file does not contain that architecture
-hideARM64 specified but thin file %s is not of type MH_EXECUTE
-hideARM64 specified but thin files are not in correct order
fat file too large to be created because the offset field in struct fat_arch is only 32-bits and the offset (%llu) for %s for architecture %s exceeds that
.lipo
can't create temporary output file: %s
can't write fat header to output file: %s
can't write fat arch to output file: %s
can't lseek in output file: %s
can't write to output file: %s
can't move temporary file: %s to file: %s
can't open input file: %s
can't stat input file: %s
can't map input file: %s
Input file: %s changed since opened
architecture specifed for fat input file: %s (architectures can't be specifed for fat input files)
truncated or malformed fat file (fat_arch structs would extend past the end of the file) %s
truncated or malformed fat file (offset plus size of cputype (%d) cpusubtype (%d) extends past the end of the file) %s
align (2^%u) too large of fat file %s (cputype (%d) cpusubtype (%d)) (maximum 2^%d)
offset %u of fat file %s (cputype (%d) cpusubtype (%d)) not aligned on its alignment (2^%u)
fat file %s contains two of the same architecture (cputype (%d) cpusubtype (%d))
!<arch>
truncated or malformed fat file (fat_arch_64 structs would extend past the end of the file) %s
offset %llu of fat file %s (cputype (%d) cpusubtype (%d)) not aligned on its alignment (2^%u)
file too large to be in a fat file because the size field in struct fat_arch is only 32-bits and the size (%llu) of %s exceeds that
archive with no architecture specification: %s (can't determine architecture for it)
can't figure out the architecture type of: %s
specifed architecture type (%s) for file (%s) does not match its cputype (%d) and cpusubtype (%d) (should be cputype (%d) and cpusubtype (%d))
empty archive with no architecture specification: %s (can't determine architecture for it)
truncated or malformed archive: %s (archive header of first member extends past the end of the file)
archive member %s(%.*s) is a fat file (not allowed in an archive)
archive member %s(%.*s) cputype (%d) and cpusubtype (%d) does not match previous archive members cputype (%d) and cpusubtype (%d) (all members must match)
__.SYMDEF
archive: %s malformed (ar_name: %.*s for archive extend format #1 starts with non-digit)
archive: %s malformed (size in ar_name: %.*s for archive extend format #1 overflows uint32_t)
archive: %s malformed (size in ar_name: %.*s for archive extend format #1 contains non-digit and non-space characters)
archive: %s truncated or malformed (archive name of member extends past the end of the file)
can't open replacement file: %s
can't stat replacement file: %s
can't map replacement file: %s
replacement file: %s is a fat file (must be a thin file)
specified architecture: %s for replacement file: %s does not match the file's architecture
m68k
m68030
m68040
ppc601
ppc603
ppc603e
ppc603ev
ppc604
ppc604e
ppc750
ppc7400
ppc7450
ppc970
ppc64
ppc970-64
veo1
veo2
veo3
veo4
m88k
i386
i486
i486SX
pentium
pentpro
pentIIm3
pentIIm5
x86_64
x86_64h
i860
hppa
sparc
armv4t
armv5
xscale
armv6
armv6m
armv7
armv7f
armv7s
armv7k
armv7m
armv7em
arm64
arm64v8
arm64e
arm64_32
little
(cputype (%d) cpusubtype (%d))
    cputype (%d)
    cpusubtype cpusubtype (%d)
    capabilities PTR_AUTH_VERSION
 KERNEL
 USERSPACE
    capabilities 0x%x
usage: lipo <input_file> <command> [<options> ...]
  command is one of:
    -archs
    -create
    -detailed_info
    -extract <arch_type> [-extract <arch_type> ...]
    -extract_family <arch_type> [-extract_family <arch_type> ...]
    -info
    -remove <arch_type> [-remove <arch_type> ...]
    -replace <arch_type> <file_name> [-replace <arch_type> <file_name> ...]
    -thin <arch_type>
    -verify_arch <arch_type> ...
  options are one or more of:
    -arch <arch_type> <input_file>
    -hideARM64
    -output <output_file>
    -segalign <arch_type> <alignment>
    cputype CPU_TYPE_ANY
    cpusubtype CPU_SUBTYPE_LITTLE_ENDIAN
    capabilities CPU_SUBTYPE_LIB64
    cputype CPU_TYPE_ANY
    cpusubtype CPU_SUBTYPE_BIG_ENDIAN
    cputype CPU_TYPE_ARM64_32
    cpusubtype CPU_SUBTYPE_ARM64_32_V8
    cputype CPU_TYPE_ARM64
    cpusubtype CPU_SUBTYPE_ARM64E
    cputype CPU_TYPE_ARM64
    cpusubtype CPU_SUBTYPE_ARM64_V8
    cputype CPU_TYPE_ARM64
    cpusubtype CPU_SUBTYPE_ARM64_ALL
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_ALL
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7EM
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7M
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7K
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7S
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7F
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V6M
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V6
     cputype CPU_TYPE_ARM
     cpusubtype CPU_SUBTYPE_ARM_XSCALE
     cputype CPU_TYPE_ARM
     cpusubtype CPU_SUBTYPE_ARM_V5TEJ
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V4T
    cputype CPU_TYPE_SPARC
    cpusubtype CPU_SUBTYPE_SPARC_ALL
    cputype CPU_TYPE_HPPA
    cpusubtype CPU_SUBTYPE_HPPA_7100LC
    cputype CPU_TYPE_HPPA
    cpusubtype CPU_SUBTYPE_HPPA_ALL
    cputype CPU_TYPE_I860
    cpusubtype CPU_SUBTYPE_I860_860
    cputype CPU_TYPE_I860
    cpusubtype CPU_SUBTYPE_I860_ALL
    cputype CPU_TYPE_X86_64
    cpusubtype CPU_SUBTYPE_X86_64_H
    cputype CPU_TYPE_X86_64
    cpusubtype CPU_SUBTYPE_X86_64_ALL
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_PENTII_M5
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_PENTII_M3
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_PENTPRO
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_PENT
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_486SX
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_486
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_I386_ALL
    cputype CPU_TYPE_MC88000
    cpusubtype CPU_SUBTYPE_MC88110
    cputype CPU_TYPE_MC88000
    cpusubtype CPU_SUBTYPE_MC88000_ALL
    cputype CPU_TYPE_VEO
    cpusubtype CPU_SUBTYPE_VEO_4
    cputype CPU_TYPE_VEO
    cpusubtype CPU_SUBTYPE_VEO_3
    cputype CPU_TYPE_VEO
    cpusubtype CPU_SUBTYPE_VEO_2
    cputype CPU_TYPE_VEO
    cpusubtype CPU_SUBTYPE_VEO_1
    cputype CPU_TYPE_POWERPC64
    cpusubtype CPU_SUBTYPE_POWERPC_970
    cputype CPU_TYPE_POWERPC64
    cpusubtype CPU_SUBTYPE_POWERPC_ALL
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_970
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_7450
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_7400
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_750
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_604e
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_604
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_603ev
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_603e
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_603
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_601
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_ALL
    cputype CPU_TYPE_MC680x0
    cpusubtype CPU_SUBTYPE_MC68040
    cputype CPU_TYPE_MC680x0
    cpusubtype CPU_SUBTYPE_MC68030_ONLY
    cputype CPU_TYPE_MC680x0
    cpusubtype CPU_SUBTYPE_MC680x0_ALL
%s: known architecture flags are:
cputype 1234567890 cpusubtype 1234567890
cputype %u cpusubtype %u
i586
i686
pentium4
hppa7100LC
fatal error: %s: 
 (%s)
 (%s)
truncated or malformed object (load commands would extend past the end of the file) in: %s
internal error: file has both a 32-bit and 64-bit mach header:%s
load command %u size not a multiple of sizeof(uint32_t) in: %s
load command %u size is less than or equal to zero in: %s
load command %u extends past end of all load commands in: %s
/usr/lib/libxcselect.dylib
xcselect_get_developer_dir_path
warning: %s: 
error: %s: 
for architecture: %s 
virtual memory exhausted (malloc failed)
virtual memory exhausted (realloc failed)
lto_module_is_object_file_in_memory
lto_module_create_from_memory
lto_module_create_in_local_context
lto_module_dispose
lto_module_get_target_triple
lto_module_get_num_symbols
lto_module_get_symbol_attribute
lto_module_get_symbol_name
lto_module_get_macho_cputype
lto_get_error_message
is_llvm_bitcode_from_memory
unknown scope for symbol '%s': 0x%x
unknown scope for symbol at index %d: 0x%x
powerpc
powerpc64
armv5e
thumbv5
thumbv5e
thumbv6
thumbv6m
thumbv7
thumbv7f
thumbv7s
thumbv7k
thumbv7m
thumbv7em
LIBLTO_PATH
../lib/libLTO.dylib
/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib
lto_initialize_disassembler
clang-
LLVMCreateDisasm
LLVMDisasmDispose
LLVMDisasmInstruction
LLVMSetDisasmOptions
LLVMCreateDisasmCPU
lto_get_version
%s%s
<dict>
  <key>tool</key>
  <string>%s</string>
  <key>args</key>
  <key>diagnostics</key>
  <array>
    <dict>
      <key>level</key>
      <string>%s</string>
      <key>message</key>
    </dict>
  </array>
</dict>
error: cannot open file at %s: %s
warning
error
fatal error
j_mpsvy_|
<BMSW
jempsvye|
cctools-1021.4
CC_LOG_DIAGNOSTICS
CC_LOG_DIAGNOSTICS_FILE
arch
missing argument(s) to %s option
unknown architecture specification flag: %s in specifying input file %s %s %s
arch_blank
flag %s is no longer supported.
archs
create
detailed_info
extract
extract_family
missing argument to %s option
unknown architecture specification flag: %s in specifying extract operation: %s %s
hideARM64
info
output
more than one %s option specified
remove
unknown architecture specification flag: %s in specifying remove operation: %s %s
replace
unknown architecture specification flag: %s in specifying replace operation: %s %s %s
segalign
unknown architecture specification flag: %s in specifying segment alignment: %s %s %s
argument for -segalign <arch_type> %s not a proper hexadecimal number
argument to -segalign <arch_type> %x (hex) must be a non-zero power of two
argument to -segalign <arch_type> %x (hex) must equal to or less than %x (hex)
thin
unknown architecture specification flag: %s in specifying thin operation: %s %s
verify_arch
unknown architecture specification flag: %s in specifying -verify_arch operation
fat64
unknown flag: %s
one of -create, -thin <arch_type>, -extract <arch_type>, -remove <arch_type>, -replace <arch_type> <file_name>, -verify_arch <arch_type> ... , -archs, -info, or -detailed_info must be specified
no output file specified
no input files specified
only one input file allowed with -verify_arch
only one input file allowed with -archs
only one of -create, -thin <arch_type>, -extract <arch_type>, -remove <arch_type>, -replace <arch_type> <file_name>, -verify_arch <arch_type> ..., -info, -archs, or -detailed_info can be specified
-hideARM64 may only be used with -create, -remove, or -replace
%s and %s have the same architectures (%s) and can't be in the same fat output file
%s and %s have the same architectures (cputype (%d) and cpusubtype (%d)) and can't be in the same fat output file
only one input file can be specified with the -thin option
input file (%s) must be a fat file when the -thin option is specified
can't create output file: %s
can't write thin file to output file: %s
can't close output file: %s
can't set the modify times for output file: %s
fat input file (%s) does not contain the specified architecture (%s) to thin it to
only one input file can be specified with the -extract option
input file (%s) must be a fat file when the -extract option is specified
-extract %s specified multiple times
-extract %s specified but fat file: %s does not contain that architecture
only one input file can be specified with the -remove option
input file (%s) must be a fat file when the -remove option is specified
-remove %s specified multiple times
-remove %s specified but fat file: %s does not contain that architecture
-remove's specified would result in an empty fat file
only one input file can be specified with the -replace option
input file (%s) must be a fat file when the -replace option is specified
-replace %s <file_name> specified multiple times
-replace %s <file_name> specified but fat file: %s does not contain that architecture
unknown(%u,%u)
Architectures in the fat file: %s are: 
input file %s is not a fat file
Non-fat file: %s is architecture: %s
Fat header in: %s
fat_magic 0x%x
nfat_arch %u
 (+%u hidden)
architecture 
 (hidden)
    offset %u
    size %u
    align 2^%u (%d)
    offset %llu
    size %llu
-segalign %s <value> specified multiple times
-segalign %s <value> specified but resulting fat file does not contain that architecture
-hideARM64 specified but thin file %s is not of type MH_EXECUTE
-hideARM64 specified but thin files are not in correct order
fat file too large to be created because the offset field in struct fat_arch is only 32-bits and the offset (%llu) for %s for architecture %s exceeds that
.lipo
can't create temporary output file: %s
can't write fat header to output file: %s
can't write fat arch to output file: %s
can't lseek in output file: %s
can't write to output file: %s
can't move temporary file: %s to file: %s
can't open input file: %s
can't stat input file: %s
can't map input file: %s
Input file: %s changed since opened
architecture specifed for fat input file: %s (architectures can't be specifed for fat input files)
truncated or malformed fat file (fat_arch structs would extend past the end of the file) %s
truncated or malformed fat file (offset plus size of cputype (%d) cpusubtype (%d) extends past the end of the file) %s
align (2^%u) too large of fat file %s (cputype (%d) cpusubtype (%d)) (maximum 2^%d)
offset %u of fat file %s (cputype (%d) cpusubtype (%d)) not aligned on its alignment (2^%u)
fat file %s contains two of the same architecture (cputype (%d) cpusubtype (%d))
!<arch>
truncated or malformed fat file (fat_arch_64 structs would extend past the end of the file) %s
offset %llu of fat file %s (cputype (%d) cpusubtype (%d)) not aligned on its alignment (2^%u)
file too large to be in a fat file because the size field in struct fat_arch is only 32-bits and the size (%llu) of %s exceeds that
archive with no architecture specification: %s (can't determine architecture for it)
can't figure out the architecture type of: %s
specifed architecture type (%s) for file (%s) does not match its cputype (%d) and cpusubtype (%d) (should be cputype (%d) and cpusubtype (%d))
empty archive with no architecture specification: %s (can't determine architecture for it)
truncated or malformed archive: %s (archive header of first member extends past the end of the file)
archive member %s(%.*s) is a fat file (not allowed in an archive)
archive member %s(%.*s) cputype (%d) and cpusubtype (%d) does not match previous archive members cputype (%d) and cpusubtype (%d) (all members must match)
__.SYMDEF
archive: %s malformed (ar_name: %.*s for archive extend format #1 starts with non-digit)
archive: %s malformed (size in ar_name: %.*s for archive extend format #1 overflows uint32_t)
archive: %s malformed (size in ar_name: %.*s for archive extend format #1 contains non-digit and non-space characters)
archive: %s truncated or malformed (archive name of member extends past the end of the file)
can't open replacement file: %s
can't stat replacement file: %s
can't map replacement file: %s
replacement file: %s is a fat file (must be a thin file)
specified architecture: %s for replacement file: %s does not match the file's architecture
m68k
m68030
m68040
ppc601
ppc603
ppc603e
ppc603ev
ppc604
ppc604e
ppc750
ppc7400
ppc7450
ppc970
ppc64
ppc970-64
veo1
veo2
veo3
veo4
m88k
i386
i486
i486SX
pentium
pentpro
pentIIm3
pentIIm5
x86_64
x86_64h
i860
hppa
sparc
armv4t
armv5
xscale
armv6
armv6m
armv7
armv7f
armv7s
armv7k
armv7m
armv7em
arm64
arm64v8
arm64e
arm64_32
little
(cputype (%d) cpusubtype (%d))
    cputype (%d)
    cpusubtype cpusubtype (%d)
    capabilities PTR_AUTH_VERSION
 KERNEL
 USERSPACE
    capabilities 0x%x
usage: lipo <input_file> <command> [<options> ...]
  command is one of:
    -archs
    -create
    -detailed_info
    -extract <arch_type> [-extract <arch_type> ...]
    -extract_family <arch_type> [-extract_family <arch_type> ...]
    -info
    -remove <arch_type> [-remove <arch_type> ...]
    -replace <arch_type> <file_name> [-replace <arch_type> <file_name> ...]
    -thin <arch_type>
    -verify_arch <arch_type> ...
  options are one or more of:
    -arch <arch_type> <input_file>
    -hideARM64
    -output <output_file>
    -segalign <arch_type> <alignment>
    cputype CPU_TYPE_ANY
    cpusubtype CPU_SUBTYPE_LITTLE_ENDIAN
    capabilities CPU_SUBTYPE_LIB64
    cputype CPU_TYPE_ANY
    cpusubtype CPU_SUBTYPE_BIG_ENDIAN
    cputype CPU_TYPE_ARM64_32
    cpusubtype CPU_SUBTYPE_ARM64_32_V8
    cputype CPU_TYPE_ARM64
    cpusubtype CPU_SUBTYPE_ARM64E
    cputype CPU_TYPE_ARM64
    cpusubtype CPU_SUBTYPE_ARM64_V8
    cputype CPU_TYPE_ARM64
    cpusubtype CPU_SUBTYPE_ARM64_ALL
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_ALL
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7EM
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7M
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7K
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7S
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7F
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V7
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V6M
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V6
     cputype CPU_TYPE_ARM
     cpusubtype CPU_SUBTYPE_ARM_XSCALE
     cputype CPU_TYPE_ARM
     cpusubtype CPU_SUBTYPE_ARM_V5TEJ
    cputype CPU_TYPE_ARM
    cpusubtype CPU_SUBTYPE_ARM_V4T
    cputype CPU_TYPE_SPARC
    cpusubtype CPU_SUBTYPE_SPARC_ALL
    cputype CPU_TYPE_HPPA
    cpusubtype CPU_SUBTYPE_HPPA_7100LC
    cputype CPU_TYPE_HPPA
    cpusubtype CPU_SUBTYPE_HPPA_ALL
    cputype CPU_TYPE_I860
    cpusubtype CPU_SUBTYPE_I860_860
    cputype CPU_TYPE_I860
    cpusubtype CPU_SUBTYPE_I860_ALL
    cputype CPU_TYPE_X86_64
    cpusubtype CPU_SUBTYPE_X86_64_H
    cputype CPU_TYPE_X86_64
    cpusubtype CPU_SUBTYPE_X86_64_ALL
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_PENTII_M5
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_PENTII_M3
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_PENTPRO
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_PENT
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_486SX
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_486
    cputype CPU_TYPE_I386
    cpusubtype CPU_SUBTYPE_I386_ALL
    cputype CPU_TYPE_MC88000
    cpusubtype CPU_SUBTYPE_MC88110
    cputype CPU_TYPE_MC88000
    cpusubtype CPU_SUBTYPE_MC88000_ALL
    cputype CPU_TYPE_VEO
    cpusubtype CPU_SUBTYPE_VEO_4
    cputype CPU_TYPE_VEO
    cpusubtype CPU_SUBTYPE_VEO_3
    cputype CPU_TYPE_VEO
    cpusubtype CPU_SUBTYPE_VEO_2
    cputype CPU_TYPE_VEO
    cpusubtype CPU_SUBTYPE_VEO_1
    cputype CPU_TYPE_POWERPC64
    cpusubtype CPU_SUBTYPE_POWERPC_970
    cputype CPU_TYPE_POWERPC64
    cpusubtype CPU_SUBTYPE_POWERPC_ALL
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_970
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_7450
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_7400
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_750
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_604e
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_604
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_603ev
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_603e
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_603
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_601
    cputype CPU_TYPE_POWERPC
    cpusubtype CPU_SUBTYPE_POWERPC_ALL
    cputype CPU_TYPE_MC680x0
    cpusubtype CPU_SUBTYPE_MC68040
    cputype CPU_TYPE_MC680x0
    cpusubtype CPU_SUBTYPE_MC68030_ONLY
    cputype CPU_TYPE_MC680x0
    cpusubtype CPU_SUBTYPE_MC680x0_ALL
%s: known architecture flags are:
cputype 1234567890 cpusubtype 1234567890
cputype %u cpusubtype %u
i586
i686
pentium4
hppa7100LC
fatal error: %s: 
 (%s)
 (%s)
truncated or malformed object (load commands would extend past the end of the file) in: %s
internal error: file has both a 32-bit and 64-bit mach header:%s
load command %u size not a multiple of sizeof(uint32_t) in: %s
load command %u size is less than or equal to zero in: %s
load command %u extends past end of all load commands in: %s
/usr/lib/libxcselect.dylib
xcselect_get_developer_dir_path
warning: %s: 
error: %s: 
for architecture: %s 
virtual memory exhausted (malloc failed)
virtual memory exhausted (realloc failed)
lto_module_is_object_file_in_memory
lto_module_create_from_memory
lto_module_create_in_local_context
lto_module_dispose
lto_module_get_target_triple
lto_module_get_num_symbols
lto_module_get_symbol_attribute
lto_module_get_symbol_name
lto_module_get_macho_cputype
lto_get_error_message
is_llvm_bitcode_from_memory
unknown scope for symbol '%s': 0x%x
unknown scope for symbol at index %d: 0x%x
powerpc
powerpc64
armv5e
thumbv5
thumbv5e
thumbv6
thumbv6m
thumbv7
thumbv7f
thumbv7s
thumbv7k
thumbv7m
thumbv7em
LIBLTO_PATH
../lib/libLTO.dylib
/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib
lto_initialize_disassembler
clang-
LLVMCreateDisasm
LLVMDisasmDispose
LLVMDisasmInstruction
LLVMSetDisasmOptions
LLVMCreateDisasmCPU
lto_get_version
%s%s
<dict>
  <key>tool</key>
  <string>%s</string>
  <key>args</key>
  <key>diagnostics</key>
  <array>
    <dict>
      <key>level</key>
      <string>%s</string>
      <key>message</key>
    </dict>
  </array>
</dict>
error: cannot open file at %s: %s
warning
error
fatal error
