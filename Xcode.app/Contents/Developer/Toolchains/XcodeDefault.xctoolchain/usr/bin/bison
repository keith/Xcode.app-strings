@(#)PROGRAM:bison  PROJECT:bison-16
4@2ZGU
=fff?
yvegdhr:ltknVo:b:p:S:T::
 !"#$%&'()*+,-./0123
3LM6
*N..,
2D/3Zc
 !"#$%&'()
@611I
\0J1[bcdef7O]]O
Aa9;
:T<=
GN1mO22Vl*
`XMnOj
 !"#$%
"-./
OK#2L$P
459*(+3
,67:ABR8DE
CHIJN
45667777777777777777777777777788888888:9;99<===>>??@@@@@AABBCCCEDFFFGGGGGGHHJIKLMM
)C+/.,-H3KLDEFU^_4hi58Y
 !"#$%&'(),01789<=;:*
.?HK?
+++LLH
/8BCD*>*.@AA?HLLLL,E,0CM?
K@FG2K,-
HIJGH
60BM
 #')+-/357;=?BEGIKMOQTVY\^`aefjnrtvxy{}
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
invalid argument %s for %s
ambiguous argument %s for %s
Valid arguments are:
  - `%s'
, `%s'
abitset
lbitset
ebitset
vbitset
n_bits = %lu, set = {
%lu 
bitset.dat
Could not read stats file.
Bad stats file size.
Could not write stats file.
Could not open stats file for writing.
Bitset statistics:
Accumulated runs = %u
%u bitset_allocs, %u freed (%.2f%%).
%u bitset_sets, %u cached (%.2f%%)
%u bitset_resets, %u cached (%.2f%%)
%u bitset_tests, %u cached (%.2f%%)
%u bitset_lists
count log histogram
size log histogram
density histogram
%s %s
%8u (%5.1f%%)
%*lu-%lu
%8u (%5.1f%%)
%.0f-%.0f%%
%8u (%5.1f%%)
%s BEGIN
%2lu|
%s END
%s %lu
%lu: 
%s: 
%s:%d: 
Unknown system error
: %s
%s: option `%s' is ambiguous
%s: option `--%s' doesn't allow an argument
%s: option `%c%s' doesn't allow an argument
%s: option `%s' requires an argument
%s: unrecognized option `--%s'
%s: unrecognized option `%c%s'
%s: illegal option -- %c
%s: invalid option -- %c
%s: option requires an argument -- %c
%s: option `-W %s' is ambiguous
%s: option `-W %s' doesn't allow an argument
POSIXLY_CORRECT
POSIX
# entries:         %lu
# buckets:         %lu
# buckets used:    %lu (%.2f%%)
max bucket length: %lu
Elt %lu
  Word %u:
memory exhausted
literal
shell
shell-always
escape
locale
clocale
pipe
fork
waitpid
subsidiary program `%s' could not be invoked
subsidiary program `%s' not found
subsidiary program `%s' failed
subsidiary program `%s' failed (exit status %d)
total time
reader
scanner
parser
reducing the grammar
computing the sets
LR(0)
LALR(1)
conflicts
outputing report
outputing graph
parser action tables
outputing parser
running m4
freeing
Execution times (seconds)
 %-22s:
%7.2f (%2.0f%%) usr
%7.2f (%2.0f%%) sys
%7.2f (%2.0f%%) wall
 TOTAL                 :
%7.2f          
%7.2f
time in %s: %ld.%06ld (%ld%%)
undefined associativity
%right
%left
%nonassoc
output
RTC: Firsts Input
RTC: Firsts Output
FIRSTS
%s firsts
FDERIVES
%s derives
%3d 
Closure: %s
  %2d: .
  (rule %d)
warning: 
%s: %s
fatal error: 
State %d 
%%expect-rr applies only to GLR parsers
expected %d shift/reduce conflict
expected %d shift/reduce conflicts
expected %d reduce/reduce conflict
expected %d reduce/reduce conflicts
    Conflict between rule %d and token %s resolved as shift
    Conflict between rule %d and token %s resolved as reduce
    Conflict between rule %d and token %s resolved as an error
 (%s < %s)
 (%%left %s)
 (%%right %s)
 (%%nonassoc %s)
conflicts: %d shift/reduce, %d reduce/reduce
conflicts: %d shift/reduce
conflicts: %d reduce/reduce
DERIVES
cannot open file `%s'
I/O error
cannot close file
.vcg
.output
conflicting outputs to file %s
.tab
_tab
/usr/share/locale
missing operand after `%s'
extra operand `%s'
help
version
print-localedir
name-prefix
include
file-prefix
output-file
graph
report
verbose
trace
defines
fixed-output-files
yacc
debug
locations
no-lines
no-parser
token-table
Try `%s --help' for more information.
GNU bison generates parsers for LALR(1) grammars.
Usage: %s [OPTION]... FILE
If a long option shows an argument as mandatory, then it is mandatory
for the equivalent short option also.  Similarly for optional arguments.
Operation modes:
  -h, --help                 display this help and exit
  -V, --version              output version information and exit
      --print-localedir      output directory containing locale-dependent data
  -y, --yacc                 emulate POSIX yacc
Parser:
  -S, --skeleton=FILE        specify the skeleton to use
  -t, --debug                instrument the parser for debugging
      --locations            enable locations computation
  -p, --name-prefix=PREFIX   prepend PREFIX to the external symbols
  -l, --no-lines             don't generate `#line' directives
  -n, --no-parser            generate the tables only
  -k, --token-table          include a table of token names
Output:
  -d, --defines              also produce a header file
  -r, --report=THINGS        also produce details on the automaton
  -v, --verbose              same as `--report=state'
  -b, --file-prefix=PREFIX   specify a PREFIX for output files
  -o, --output=FILE          leave output to FILE
  -g, --graph                also produce a VCG description of the automaton
THINGS is a list of comma separated words that can include:
  `state'        describe the states
  `itemset'      complete the core item sets with their closure
  `look-ahead'   explicitly associate look-ahead tokens to items
  `solved'       describe shift/reduce conflicts solving
  `all'          include all the above information
  `none'         disable the report
Report bugs to <bug-bison@gnu.org>.
bison (GNU Bison) %s
Written by Robert Corbett and Richard Stallman.
Copyright (C) %d Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
--report
none
state
states
itemset
itemsets
look-ahead
lookahead
lookaheads
solved
--trace
none       - no report
scan       - grammar scanner traces
parse      - grammar parser traces
automaton  - contruction of the automaton
bitsets    - use of bitsets
grammar    - reading, reducing of the grammar
resource   - memory consumption (where available)
sets       - grammar sets: firsts, nullable etc.
tools      - m4 invocation
m4         - m4 traces
skeleton   - skeleton postprocessing
time       - time consumption
all        - all of the above
  %3d 
 /* %s */
empty
RITEM
  %s
Grammar
ntokens = %d, nvars = %d, nsyms = %d, nrules = %d, nritems = %d
Variables
---------
Value  Sprec  Sassoc  Tag
%5d  %5d   %5d  %s
Rules
-----
Num (Prec, Assoc, Useful, Ritem Range) Lhs -> Rhs (Ritem range) [Num]
%3d (%2d, %2d, %2d, %2u-%2u)   %2d ->
 %3d
  [%d]
Rules interpreted
-----------------
%-5d  
: %s: %s: 
warning
Look-ahead tokens: BEGIN
State %d: %d look-ahead tokens
   on %d (%s) -> rule %d
Look-ahead tokens: END
%s:%d.%d
-%s:%d.%d
-%d.%d
Processing state %d (reached by %s)
state_list_append (state = %d, symbol = %d (%s))
Entering new_itemsets, state = %d
Entering append_states, state = %d
Entering get_state, symbol = %d (%s)
Exiting get_state => %d
rule never reduced because of conflicts
file_name
]b4_syncline(%d, [[
]])[
[[[%s]], [[%s]]]
m4_define([b4_%s],
[[%s]])
NULLABLE
%s: %s
token_table
tokens_number
nterms_number
undef_token_number
user_token_number_max
translate
tname
toknum
%s_min
%s_max
prhs
rline
dprec
merger
rules_number
max_left_semantic_context
stos
last
final_state_number
states_number
defact
defgoto
pact
pact_ninf
pgoto
table
table_ninf
check
conflict_list_heads
conflicting_rules
debug_flag
defines_flag
error_verbose_flag
locations_flag
pure_flag
synclines_flag
prefix
dir_prefix
parser_file_name
spec_defines_file
spec_file_prefix
spec_graph_file
spec_name_prefix
spec_outfile
spec_verbose_file
pre_prologue
post_prologue
glr.c
yacc.c
BISON_PKGDATADIR
pkgdatadir
skeleton
/usr/bin/gm4
/share/bison
/usr/share/bison
m4sugar/m4sugar.m4
running: %s %s - %s
fdopen
m4_init()
m4_wrap([m4_divert_pop(0)])
m4_divert_push(0)dnl
m4_define([b4_actions], 
  case %d:
]b4_syncline(%d, 
    %s
    break;
m4_define([b4_mergers], 
  case %d: *yy0 = %s (*yy0, *yy1); break;
  case %d: yy0->%s = %s (*yy0, *yy1); break;
m4_define([b4_tokens], 
%s[[[%s]], %d]
m4_define([b4_symbol_destructors], 
, %d, 
, %d, [[%s]]
, [[%s]]
m4_define([b4_symbol_printers], 
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
initial_action
lex_param
parse_param
stype
epilogue
-> $$ =
syntax error
Error: discarding
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token %s (
nterm %s (
"%s"
<%s>
Reducing stack by rule %d (line %lu):
   $%d = 
Stack now
syntax error, unexpected %s
, expecting %s
 or %s
Deleting
missing identifier in parameter declaration
require bison %s, but have %s
"end of file"
error
$undefined
"string"
"integer"
"%token"
"%nterm"
"%type"
"%destructor {...}"
"%printer {...}"
"%union {...}"
"%left"
"%right"
"%nonassoc"
"%prec"
"%dprec"
"%merge"
"%debug"
"%default-prec"
"%define"
"%defines"
"%error-verbose"
"%expect"
"%expect-rr"
"%file-prefix"
"%glr-parser"
"%initial-action {...}"
"%lex-param {...}"
"%locations"
"%name-prefix"
"%no-default-prec"
"%no-lines"
"%nondeterministic-parser"
"%output"
"%parse-param {...}"
"%pure-parser"
"%require"
"%skeleton"
"%start"
"%token-table"
"%verbose"
"%yacc"
"type"
"identifier"
"identifier:"
"%%"
"%{...%}"
"epilogue"
"{...}"
$accept
input
declarations
declaration
grammar_declaration
symbol_declaration
precedence_declaration
precedence_declarator
type.opt
symbols.1
symbol_def
symbol_defs.1
grammar
rules_or_grammar_declaration
rules
rhses.1
symbol
action
string_as_id
string_content
epilogue.opt
Rules never reduced
Terminals, with rules where they appear
 (%d)
Nonterminals, with rules where they appear
 on left:
 on right:
state %d
    %s
shift, and go to state %d
go to state %d
error (nonassociative)
$default
reduce using rule %d (%s)
accept
state %2d
 %s -> 
%s%s
multiple %s declarations
%start
rule given for %s, which is a token
only one %s allowed per rule
%prec
%s affects only GLR parsers
%dprec
%s must be followed by positive number
%merge
type clash on default action: <%s> != <%s>
empty rule for typed nonterminal, and no action
unused value: $%d
unset value: $$
result type clash on merge function %s: <%s> != <%s>
no rules in the input grammar
$end
Useless nonterminals
   %s
Terminals which are not used
Useless rules
start symbol %s does not derive any sentence
Reduced Grammar
reduced %s defines %d terminals, %d nonterminals, and %d productions.
%d rule never reduced
%d rules never reduced
%s: %s: 
%d useless nonterminal
%d useless nonterminals
 and 
%d useless rule
%d useless rules
useless nonterminal: %s
useless rule
%3lu: 
%3lu 
relation_transpose: input
relation_transpose: output
--scanner backing up
--accepting rule at line %ld ("%s")
--accepting default rule ("%s")
--(end of buffer or a NUL)
--EOF (start condition %d)
stray `,' treated as white space
invalid directive: %s
invalid character: %s
invalid null character
invalid escape sequence: %s
invalid null character: %s
unrecognized escape sequence: %s
missing `{' in %s
stray `$'
stray `@'
flex scanner jammed
fatal flex scanner internal error--no action found
out of dynamic memory in gram__create_buffer()
out of dynamic memory in gram__scan_buffer()
out of dynamic memory in gram__scan_bytes()
bad buffer in gram__scan_bytes()
rule is too long
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
line number overflow
column number overflow
]b4_dollar_dollar[
invalid value: %s
$$ of `%s' has no declared type
]b4_lhs_value([%s])[
$%d of `%s' has no declared type
]b4_rhs_value(%d, %d, [%s])[
integer out of range: %s
]b4_at_dollar[
]b4_lhs_location[
]b4_rhs_location(%d, %d)[
missing `%s' at end of file
missing `%s' at end of line
@output_header_name@
@output_parser_name@
invalid token in skeleton: %s
invalid @ in skeleton: %s
out of dynamic memory in skel__create_buffer()
out of dynamic memory in skel__scan_buffer()
out of dynamic memory in skel__scan_bytes()
bad buffer in skel__scan_bytes()
input in flex scanner failed
 used
 unused
invalid $ value: $%d
 %s { %s }
type_name
destructor
printer
<NULL>
%type
%destructor
%printer
symbol %s redefined
symbol %s redeclared
redefining user token number of %s
symbol `%s' used more than once as a literal string
symbol `%s' given more than one literal string
the start symbol %s is undefined
the start symbol %s is a token
%s redeclaration for %s
first declaration
too many symbols in input grammar (limit is %d)
symbol %s is used, but is not defined as a token and has no rules
tokens %s and %s both assigned number %d
growing table and check from: %d to %d
not a uniqstr: %s
edge: {
backedge: {
nearedge: {
bentnearedge: {
node: {
graph: {
title:
label:
loc { x: %d  y: %d }
vertical_order:
horizontal_order:
width:
height:
shrink:
stretch:
folding:
textmode:
shape:
borderwidth:
color:
textcolor:
bordercolor:
info%d:
sourcename:
targetname:
linestyle:
thickness:
class:
arrowcolor:
backarrowcolor:
arrowsize:
backarrowsize:
arrowstyle:
backarrowstyle:
priority:
anchor:
title:
label:
info%d:
color:
textcolor:
bordercolor:
width:
height:
borderwidth:
folding:
shrink:
stretch:
textmode:
shape:
vertical_order:
horizontal_order:
xmax:
ymax:
xbase:
ybase:
xspace:
yspace:
xlspace:
xraster:
yraster:
xlraster:
hidden:
classname %d :
infoname %d :
colorentry %d :
%d %d %d
layout_downfactor:
layout_upfactor:
layout_nearfactor:
layout_splinefactor:
late_edge_labels:
display_edge_labels:
dirty_edge_labels:
finetuning:
ignore_singles:
priority_phase:
manhattan_edges:
smanhattan_edges:
near_edges:
orientation:
node_alignment:
port_sharing:
arrow_mode:
treefactor:
spreadlevel:
crossing_weight:
crossing_phase2:
crossing_optimization:
view:
edges:
nodes:
splines:
bmax:
cmin:
cmax:
pmin:
pmax:
rmin:
rmax:
smax:
left_justify
right_justify
rhomb
ellipse
triangle
white
blue
green
yellow
magenta
cyan
darkgrey
darkblue
darkred
darkgreen
darkyellow
darkmagenta
darkcyan
gold
lightgrey
lightblue
lightred
lightgreen
lightyellow
lightmagenta
lightcyan
lilac
turquoise
aquamarine
khaki
purple
yellowgreen
pink
orange
orchid
black
dashed
dotted
invisible
solid
line
bottom_to_top
left_to_right
right_to_left
bottom
free
median
barymedian
medianbary
cfish
pfish
fcfish
fpfish
@(#)PROGRAM:bison  PROJECT:bison-16
?2ZGU
=fff?
!PPPPPPN35J79;PPPPPPPPPPPPPPPPPP
yvegdhr:ltknVo:b:p:S:T::
)))!!!
 !"#$%&'()*+,-./0123"
3LM6
*N..,
2D/3Zc
 !"#$%&'()
01@611I
\0J1[bcdef7O]]O
Aa9;
:T<=
GN1mO22Vl*
`XMnOj
 !"#$%
"-./
OK#2L$P
459*(+3
,67:ABR8DE
CHIJN
45667777777777777777777777777788888888:9;99<===>>??@@@@@AABBCCCEDFFFGGGGGGHHJIKLMM
)C+/.,-H3KLDEFU^_4hi58Y
 !"#$%&'(),01789<=;:*
.?HK?
+++LLH
/8BCD*>*.@AA?HLLLL,E,0CM?
K@FG2K,-
HIJGH
60BM
 #')+-/357;=?BEGIKMOQTVY\^`aefjnrtvxy{}
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
,?
i|
invalid argument %s for %s
ambiguous argument %s for %s
Valid arguments are:
  - `%s'
, `%s'
abitset
lbitset
ebitset
vbitset
n_bits = %lu, set = {
%lu 
bitset.dat
Could not read stats file.
Bad stats file size.
Could not write stats file.
Could not open stats file for writing.
Bitset statistics:
Accumulated runs = %u
%u bitset_allocs, %u freed (%.2f%%).
%u bitset_sets, %u cached (%.2f%%)
%u bitset_resets, %u cached (%.2f%%)
%u bitset_tests, %u cached (%.2f%%)
%u bitset_lists
count log histogram
size log histogram
density histogram
%s %s
%8u (%5.1f%%)
%*lu-%lu
%8u (%5.1f%%)
%.0f-%.0f%%
%8u (%5.1f%%)
%s BEGIN
%2lu|
%s END
%s %lu
%lu: 
%s: 
%s:%d: 
Unknown system error
: %s
%s: option `%s' is ambiguous
%s: option `--%s' doesn't allow an argument
%s: option `%c%s' doesn't allow an argument
%s: option `%s' requires an argument
%s: unrecognized option `--%s'
%s: unrecognized option `%c%s'
%s: illegal option -- %c
%s: invalid option -- %c
%s: option requires an argument -- %c
%s: option `-W %s' is ambiguous
%s: option `-W %s' doesn't allow an argument
POSIXLY_CORRECT
POSIX
# entries:         %lu
# buckets:         %lu
# buckets used:    %lu (%.2f%%)
max bucket length: %lu
Elt %lu
  Word %u:
memory exhausted
literal
shell
shell-always
escape
locale
clocale
pipe
fork
waitpid
subsidiary program `%s' could not be invoked
subsidiary program `%s' not found
subsidiary program `%s' failed
subsidiary program `%s' failed (exit status %d)
total time
reader
scanner
parser
reducing the grammar
computing the sets
LR(0)
LALR(1)
conflicts
outputing report
outputing graph
parser action tables
outputing parser
running m4
freeing
Execution times (seconds)
 %-22s:
%7.2f (%2.0f%%) usr
%7.2f (%2.0f%%) sys
%7.2f (%2.0f%%) wall
 TOTAL                 :
%7.2f          
%7.2f
time in %s: %ld.%06ld (%ld%%)
undefined associativity
%right
%left
%nonassoc
input
output
RTC: Firsts Input
RTC: Firsts Output
FIRSTS
%s firsts
FDERIVES
%s derives
%3d 
Closure: %s
  %2d: .
  (rule %d)
warning: 
%s: %s
fatal error: 
State %d 
%%expect-rr applies only to GLR parsers
expected %d shift/reduce conflict
expected %d shift/reduce conflicts
expected %d reduce/reduce conflict
expected %d reduce/reduce conflicts
    Conflict between rule %d and token %s resolved as shift
    Conflict between rule %d and token %s resolved as reduce
    Conflict between rule %d and token %s resolved as an error
 (%s < %s)
 (%%left %s)
 (%%right %s)
 (%%nonassoc %s)
conflicts: %d shift/reduce, %d reduce/reduce
conflicts: %d shift/reduce
conflicts: %d reduce/reduce
DERIVES
cannot open file `%s'
I/O error
cannot close file
.vcg
.output
conflicting outputs to file %s
.tab
_tab
/usr/share/locale
missing operand after `%s'
extra operand `%s'
help
version
print-localedir
name-prefix
include
file-prefix
output-file
graph
report
verbose
trace
defines
fixed-output-files
yacc
debug
locations
no-lines
no-parser
skeleton
token-table
Try `%s --help' for more information.
GNU bison generates parsers for LALR(1) grammars.
Usage: %s [OPTION]... FILE
If a long option shows an argument as mandatory, then it is mandatory
for the equivalent short option also.  Similarly for optional arguments.
Operation modes:
  -h, --help                 display this help and exit
  -V, --version              output version information and exit
      --print-localedir      output directory containing locale-dependent data
  -y, --yacc                 emulate POSIX yacc
Parser:
  -S, --skeleton=FILE        specify the skeleton to use
  -t, --debug                instrument the parser for debugging
      --locations            enable locations computation
  -p, --name-prefix=PREFIX   prepend PREFIX to the external symbols
  -l, --no-lines             don't generate `#line' directives
  -n, --no-parser            generate the tables only
  -k, --token-table          include a table of token names
Output:
  -d, --defines              also produce a header file
  -r, --report=THINGS        also produce details on the automaton
  -v, --verbose              same as `--report=state'
  -b, --file-prefix=PREFIX   specify a PREFIX for output files
  -o, --output=FILE          leave output to FILE
  -g, --graph                also produce a VCG description of the automaton
THINGS is a list of comma separated words that can include:
  `state'        describe the states
  `itemset'      complete the core item sets with their closure
  `look-ahead'   explicitly associate look-ahead tokens to items
  `solved'       describe shift/reduce conflicts solving
  `all'          include all the above information
  `none'         disable the report
Report bugs to <bug-bison@gnu.org>.
bison (GNU Bison) %s
Written by Robert Corbett and Richard Stallman.
Copyright (C) %d Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
--report
none
state
states
itemset
itemsets
look-ahead
lookahead
lookaheads
solved
--trace
none       - no report
scan       - grammar scanner traces
parse      - grammar parser traces
automaton  - contruction of the automaton
bitsets    - use of bitsets
grammar    - reading, reducing of the grammar
resource   - memory consumption (where available)
sets       - grammar sets: firsts, nullable etc.
tools      - m4 invocation
m4         - m4 traces
skeleton   - skeleton postprocessing
time       - time consumption
all        - all of the above
  %3d 
 /* %s */
empty
RITEM
  %s
Grammar
ntokens = %d, nvars = %d, nsyms = %d, nrules = %d, nritems = %d
Variables
---------
Value  Sprec  Sassoc  Tag
%5d  %5d   %5d  %s
Rules
-----
Num (Prec, Assoc, Useful, Ritem Range) Lhs -> Rhs (Ritem range) [Num]
%3d (%2d, %2d, %2d, %2u-%2u)   %2d ->
 %3d
  [%d]
Rules interpreted
-----------------
%-5d  
: %s: %s: 
warning
Look-ahead tokens: BEGIN
State %d: %d look-ahead tokens
   on %d (%s) -> rule %d
Look-ahead tokens: END
%s:%d.%d
-%s:%d.%d
-%d.%d
Processing state %d (reached by %s)
state_list_append (state = %d, symbol = %d (%s))
Entering new_itemsets, state = %d
Entering append_states, state = %d
Entering get_state, symbol = %d (%s)
Exiting get_state => %d
rule never reduced because of conflicts
file_name
]b4_syncline(%d, [[
]])[
[[[%s]], [[%s]]]
m4_define([b4_%s],
[[%s]])
NULLABLE
%s: %s
token_table
tokens_number
nterms_number
undef_token_number
user_token_number_max
translate
tname
toknum
%s_min
%s_max
prhs
rline
dprec
merger
rules_number
max_left_semantic_context
stos
last
final_state_number
states_number
defact
defgoto
pact
pact_ninf
pgoto
table
table_ninf
check
conflict_list_heads
conflicting_rules
debug_flag
defines_flag
error_verbose_flag
locations_flag
pure_flag
synclines_flag
prefix
dir_prefix
parser_file_name
spec_defines_file
spec_file_prefix
spec_graph_file
spec_name_prefix
spec_outfile
spec_verbose_file
pre_prologue
post_prologue
glr.c
yacc.c
BISON_PKGDATADIR
pkgdatadir
/usr/bin/gm4
/share/bison
/usr/share/bison
m4sugar/m4sugar.m4
running: %s %s - %s
fdopen
m4_init()
m4_wrap([m4_divert_pop(0)])
m4_divert_push(0)dnl
m4_define([b4_actions], 
  case %d:
]b4_syncline(%d, 
    %s
    break;
m4_define([b4_mergers], 
  case %d: *yy0 = %s (*yy0, *yy1); break;
  case %d: yy0->%s = %s (*yy0, *yy1); break;
m4_define([b4_tokens], 
%s[[[%s]], %d]
m4_define([b4_symbol_destructors], 
, %d, 
, %d, [[%s]]
, [[%s]]
m4_define([b4_symbol_printers], 
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
initial_action
lex_param
parse_param
stype
epilogue
-> $$ =
syntax error
Error: discarding
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token %s (
nterm %s (
"%s"
<%s>
Reducing stack by rule %d (line %lu):
   $%d = 
Stack now
syntax error, unexpected %s
, expecting %s
 or %s
Deleting
missing identifier in parameter declaration
require bison %s, but have %s
"end of file"
error
$undefined
"string"
"integer"
"%token"
"%nterm"
"%type"
"%destructor {...}"
"%printer {...}"
"%union {...}"
"%left"
"%right"
"%nonassoc"
"%prec"
"%dprec"
"%merge"
"%debug"
"%default-prec"
"%define"
"%defines"
"%error-verbose"
"%expect"
"%expect-rr"
"%file-prefix"
"%glr-parser"
"%initial-action {...}"
"%lex-param {...}"
"%locations"
"%name-prefix"
"%no-default-prec"
"%no-lines"
"%nondeterministic-parser"
"%output"
"%parse-param {...}"
"%pure-parser"
"%require"
"%skeleton"
"%start"
"%token-table"
"%verbose"
"%yacc"
"type"
"identifier"
"identifier:"
"%%"
"%{...%}"
"epilogue"
"{...}"
$accept
declarations
declaration
grammar_declaration
symbol_declaration
precedence_declaration
precedence_declarator
type.opt
symbols.1
symbol_def
symbol_defs.1
grammar
rules_or_grammar_declaration
rules
rhses.1
symbol
action
string_as_id
string_content
epilogue.opt
Rules never reduced
Terminals, with rules where they appear
 (%d)
Nonterminals, with rules where they appear
 on left:
 on right:
state %d
    %s
shift, and go to state %d
go to state %d
error (nonassociative)
$default
reduce using rule %d (%s)
accept
state %2d
 %s -> 
%s%s
multiple %s declarations
%start
rule given for %s, which is a token
only one %s allowed per rule
%prec
%s affects only GLR parsers
%dprec
%s must be followed by positive number
%merge
type clash on default action: <%s> != <%s>
empty rule for typed nonterminal, and no action
unused value: $%d
unset value: $$
result type clash on merge function %s: <%s> != <%s>
no rules in the input grammar
$end
Useless nonterminals
   %s
Terminals which are not used
Useless rules
start symbol %s does not derive any sentence
Reduced Grammar
reduced %s defines %d terminals, %d nonterminals, and %d productions.
%d rule never reduced
%d rules never reduced
%s: %s: 
%d useless nonterminal
%d useless nonterminals
 and 
%d useless rule
%d useless rules
useless nonterminal: %s
useless rule
%3lu: 
%3lu 
relation_transpose: input
relation_transpose: output
--scanner backing up
--accepting rule at line %ld ("%s")
--accepting default rule ("%s")
--(end of buffer or a NUL)
--EOF (start condition %d)
stray `,' treated as white space
invalid directive: %s
invalid character: %s
invalid null character
invalid escape sequence: %s
invalid null character: %s
unrecognized escape sequence: %s
missing `{' in %s
stray `$'
stray `@'
flex scanner jammed
fatal flex scanner internal error--no action found
out of dynamic memory in gram__create_buffer()
out of dynamic memory in gram__scan_buffer()
out of dynamic memory in gram__scan_bytes()
bad buffer in gram__scan_bytes()
rule is too long
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
line number overflow
column number overflow
]b4_dollar_dollar[
invalid value: %s
$$ of `%s' has no declared type
]b4_lhs_value([%s])[
$%d of `%s' has no declared type
]b4_rhs_value(%d, %d, [%s])[
integer out of range: %s
]b4_at_dollar[
]b4_lhs_location[
]b4_rhs_location(%d, %d)[
missing `%s' at end of file
missing `%s' at end of line
@output_header_name@
@output_parser_name@
invalid token in skeleton: %s
invalid @ in skeleton: %s
out of dynamic memory in skel__create_buffer()
out of dynamic memory in skel__scan_buffer()
out of dynamic memory in skel__scan_bytes()
bad buffer in skel__scan_bytes()
input in flex scanner failed
 used
 unused
invalid $ value: $%d
 %s { %s }
type_name
destructor
printer
<NULL>
%type
%destructor
%printer
symbol %s redefined
symbol %s redeclared
redefining user token number of %s
symbol `%s' used more than once as a literal string
symbol `%s' given more than one literal string
the start symbol %s is undefined
the start symbol %s is a token
%s redeclaration for %s
first declaration
too many symbols in input grammar (limit is %d)
symbol %s is used, but is not defined as a token and has no rules
tokens %s and %s both assigned number %d
growing table and check from: %d to %d
not a uniqstr: %s
edge: {
backedge: {
nearedge: {
bentnearedge: {
node: {
graph: {
title:
label:
loc { x: %d  y: %d }
vertical_order:
horizontal_order:
width:
height:
shrink:
stretch:
folding:
textmode:
shape:
borderwidth:
color:
textcolor:
bordercolor:
info%d:
sourcename:
targetname:
linestyle:
thickness:
class:
arrowcolor:
backarrowcolor:
arrowsize:
backarrowsize:
arrowstyle:
backarrowstyle:
priority:
anchor:
title:
label:
info%d:
color:
textcolor:
bordercolor:
width:
height:
borderwidth:
folding:
shrink:
stretch:
textmode:
shape:
vertical_order:
horizontal_order:
xmax:
ymax:
xbase:
ybase:
xspace:
yspace:
xlspace:
xraster:
yraster:
xlraster:
hidden:
classname %d :
infoname %d :
colorentry %d :
%d %d %d
layout_downfactor:
layout_upfactor:
layout_nearfactor:
layout_splinefactor:
late_edge_labels:
display_edge_labels:
dirty_edge_labels:
finetuning:
ignore_singles:
priority_phase:
manhattan_edges:
smanhattan_edges:
near_edges:
orientation:
node_alignment:
port_sharing:
arrow_mode:
treefactor:
spreadlevel:
crossing_weight:
crossing_phase2:
crossing_optimization:
view:
edges:
nodes:
splines:
bmax:
cmin:
cmax:
pmin:
pmax:
rmin:
rmax:
smax:
left_justify
right_justify
rhomb
ellipse
triangle
white
blue
green
yellow
magenta
cyan
darkgrey
darkblue
darkred
darkgreen
darkyellow
darkmagenta
darkcyan
gold
lightgrey
lightblue
lightred
lightgreen
lightyellow
lightmagenta
lightcyan
lilac
turquoise
aquamarine
khaki
purple
yellowgreen
pink
orange
orchid
black
dashed
dotted
invisible
solid
line
bottom_to_top
left_to_right
right_to_left
bottom
free
median
barymedian
medianbary
cfish
pfish
fcfish
fpfish
