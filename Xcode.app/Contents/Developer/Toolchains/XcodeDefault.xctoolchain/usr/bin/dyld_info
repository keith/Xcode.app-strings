@(#)PROGRAM:dyld_info  PROJECT:dyld-1115.7.3
__objc_superrefs__objc_classlist__objc_classrefs
__objc_imageinfo
v24@?0r^v8^B16
<anon-%08llX>
v16@?0Q8
v28@?0r^v8I16^B20
v48@?0r*8Q16C24C28S32I36^B40
v24@?0{span<const mach_o::MappedSegment, 18446744073709551615UL>=^{MappedSegment}Q}8
v24@?0r^{Fixup=^v^{MappedSegment}B{?=b2b1S}BB(?={?=Ii}{?=Q})}8^B16
-[%s %s]
v24@?0r*8Q16
+[%s %s]
__TEXT
_objc_msgSend$%s
__DATA
selector "%s"
__objc_superrefs
super %s
@"%s"
__objc_
##unavailable##
_OBJC_CLASS_$_
__objc_classlist
.dylib
auth-bind
lazy-bind
bind
auth-rebase
rebase
 (div=0x%04X ad=%d key=%s)
%s/%s + 0x%llX%s
%s/%s [weak-import]%s
%s/%s%s
__TEXT,
"%s"%s
%s%s
%s+%u%s
0x%08llX%s
arm64e-apple-darwin
x86_64h-apple-darwin
unknown
-platform
-segments
-linked_dylibs
-dependents
-inits
-fixups
-fixup_chains
-fixup_chain_details
-fixup_chain_header
-symbolic_fixups
-exports
-imports
-objc
-swift_protocols
-shared_region
-function_starts
-opcodes
-unwind
-uuid
-load_commands
-disassemble
-section
-section requires segment-name and section-name
-all_sections
-section_bytes
-section_bytes requires segment-name and section-name
-all_sections_bytes
-validate_only
-arch
-arch missing architecture name
-all_dir
B16@?0r^v8
v24@?0r^v8r^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
-all_dir directory
-all_dyld_cache
v24@?0r^{mach_header=IiiIIII}8r*16
dyld_info: unknown option: %s
%s [%s]:
   %s
(%s,%s) section:
__objc_classrefs
v32@?0r*8r^{Header={mach_header=IiiIIII}}16Q24
dyld_info: '%s' file not found
dyld_info: '%s' does not contain specified arch(s)
CString
CString.h
str.data() == nullptr || *(str.data() + str.size()) == 0
Usage: dyld_info [-arch <arch>]* <options>* <mach-o file>+ | -all_dir <dir> 
-platform                   print platform (default if no options specified)
-segments                   print segments (default if no options specified)
-linked_dylibs              print all dylibs this image links against (default if no options specified)
-inits                      print initializers
-fixups                     print locations dyld will rebase/bind
-exports                    print all exported symbols
-imports                    print all symbols needed from other dylibs
-fixup_chains               print info about chain format and starts
-fixup_chain_details        print detailed info about every fixup in chain
-fixup_chain_header         print detailed info about the fixup chains header
-symbolic_fixups            print ranges of each atom of DATA with symbol name and fixups
-objc                       print objc classes, categories, etc
-shared_region              print shared cache (split seg) info
-function_starts            print function starts information
-opcodes                    print opcodes information
-load_commands              print load commands
-uuid                       print UUID of binary
-disassemble                print all code sections using disassembler
-section <seg> <sect>       print content of section, formatted by section type
-all_sections               print content of all sections, formatted by section type
-section_bytes <seg> <sect> print content of section, as raw hex bytes
-all_sections_bytes         print content of all sections, formatted as raw hex bytes
-validate_only              only prints an malformedness about file(s)
 %15s     %-7s   %-7s
        %s
        0x%06X   0x%09llX    %-16s                   %6lluKB   %s
        0x%06X   0x%09llX              %-16s %7llu
        0x%09llX    %-16s                  %6lluKB  %s
        0x%09llX             %-16s %7llu
        0x%08llX    %-16s                  %6lluKB %s
        0x%08llX             %-16s %6llu
v33@?0r*8{LinkedDylibAttributes=(?={?=b1b1b1b1b4}C)}16{Version32=I}17{Version32=I}21^B25
upward 
delay-init 
weak-link 
re-export 
        %-12s   %s
        0x%08X  %s
        0x%08X  %s + %llu
v12@?0I8
arm64e
        0x%08X  %s [terminator]
        0x%08X  %s + %llu [terminator]
        [re-export] %s (from %s)
        [re-export] %s (%s from %s)
        0x%08llX  %s [absolute]
        0x%08llX  %s [per-thread]
        0x%08llX  %s [resolver=0x%08llX]
        0x%08llX  %s [weak-def]
        0x%08llX  %s
[weak-import]
      0x%04X  %s %s (from %s)
      0x%04X  %s+0x%llX %s (from %s)
      %s %s (from %s)
        %-12s    %-16s 0x%08llX   %11s  %s
      fixups_version:   0x%08X
      starts_offset:    0x%08X
      imports_offset:   0x%08X
      symbols_offset:   0x%08X
      imports_count:    %d
      imports_format:   %d (%s)
      symbols_format:   %d
        seg[%d]:
          page_size:       0x%04X
          pointer_format:  %d (%s)(%s)
          segment_offset:  0x%08llX
          max_pointer:     0x%08X
          pages:         %d
         start[% 2d]:  <<<off end of dyld_chained_starts_in_segment>>>
         start[% 2d]:  0x%04X
             start[% 2d]:  0x%04X
  pointer_format:  %d (%s)
    start[% 2d]: vm offset: 0x%04X
     
auth-
key: %s, addrDiv: %d, diversity: 0x%04X, 
, addend: %d
  0x%08llX:  raw: 0x%016llX    %sbind: (next: %03d, %sbindOrdinal: 0x%06X%s)
  0x%08llX:  raw: 0x%08X     bind: (next: %02d bindOrdinal: 0x%07X)
  0x%08llX:  raw: 0x%016llX  %srebase: (next: %03d, %starget: 0x%011llX%s)
  0x%08llX:  raw: 0x%08X  rebase: (next: %02d target: 0x%07llX)
  0x%08llX:  raw: 0x%016llX  %srebase: (%starget: 0x%011llX%s)
  0x%08llX:  raw: 0x%08X  rebase: (target: 0x%07llX)
            fixups_version  0x%08X
            starts_offset   0x%08X
            imports_offset  0x%08X
            symbols_offset  0x%08X
            imports_count   0x%08X
            imports_format  0x%08X
            symbols_format  0x%08X
            seg_count              0x%08X
            seg_info_offset[%d]     0x%08X
            size                0x%08X
            page_size           0x%08X
            pointer_format      0x%08X
            segment_offset      0x%08llX
            max_valid_pointer   0x%08X
            page_count          0x%08X
            symbol          %s
          pointer_format:  %d (%s)
           +0x%04X %11s  %s
 lsdaOffset=0x%08X
        0x%08llX   0x%08X (%-56s)%s
v16@?0r^{UnwindInfo=IIII}8
        @interface %s : %s %s
          0x%08llX  -[%s %s]
          0x%08llX  +[%s %s]
        @interface %s(%s)
        %-16s %-16s 0x%08llx      %-16s %-16s 0x%08llx
v24@?0r^{Entry=CCCQQ}8^B16
0x%08X
; literal pool symbol address: 
## literal pool symbol address: 
## literal pool for: 
; string literal: 
; 0x
0x%09llX   %-8s %-20s %s
0x%08llX 
"%s"
0x%08llX  
0x%08llX
    class: %s
    flags: 0x%08X
   string: 
   length: %u
0x%08llX:  0x%08llX 
0x%08llX: 
%02X 
v32@?0r*8Q16Q24
    -platform:
        platform     minOS      sdk
    -uuid:
        load-offset   segment  section       sect-size  seg-size max-prot init-prot
        unslid-addr   segment   section        sect-size  seg-size max-prot init-prot
    -segments:
       file-offset vm-addr       segment      section         sect-size  seg-size max-prot init-prot
    -linked_dylibs:
        attributes     load path
    -inits:
    -exports:
        offset      symbol
no exported symbol information
    -imports:
    -fixups:
        segment         section          address             type   target
    -fixup_chains:
    -fixup_chain_details:
    -fixup_chain_header:
        firmware chains:
        dyld_chained_fixups_header:
        dyld_chained_starts_in_image:
        targets:
        dyld_chained_starts_in_segment:
    -symbolic_fixups:
    -opcodes:
        no rebase opcodes
        no bind opcodes
        no lazy bind opcodes
        lazy bind opcodes:
        bind opcodes:
        rebase opcodes:
    -function_starts:
        no function starts info
    -unwind:
        no compact unwind table
        address       encoding
    -objc:
        warning: FairPlay encryption of __TEXT will make printing ObjC info unreliable
    -load_commands:
    -shared_region:
        no shared region info
        from      to
        no shared region info (marker present)
        shared region v1
        @end
x86_64
x86_64h
i386
arm64
arm64_32
armv6m
armv7k
armv7m
armv7em
armv7s
armv7
arm64e.v1
arm64e.old
arm64e.kernel
malformed archive, member exceeds file size
__.SYMDEF SORTED
__.SYMDEF_64
__.SYMDEF_64 SORTED
multiple SYMDEF member files found in an archive
archive member '%s' not a mach-o file
archive member invalid control bits
archive member size contains non-numeric characters: '%s'
content
Archive.cpp
size >= space
getName
bufsz >= len+1
upward
delay-init
re-export
platformAndVersions_block_invoke
Header.cpp
err.noError()
v24@?0{Platform=^{PlatformInfo}}8{Version32=I}16{Version32=I}20
file is too small (length=%llu)
not a mach-o file (start is no MH_MAGIC[_64])
load commands length (%llu) exceeds length of file (%llu)
unknown filetype %d
load command #%d LC_SYMTAB size wrong
load command #%d LC_DYSYMTAB size wrong
load command #%d LC_SEGMENT_SPLIT_INFO size wrong
load command #%d LC_ATOM_INFO size wrong
load command #%d LC_FUNCTION_STARTS size wrong
load command #%d LC_DYLD_EXPORTS_TRIE size wrong
load command #%d LC_DYLD_CHAINED_FIXUPS size wrong
load command #%d LC_ENCRYPTION_INFO size wrong
load command #%d LC_ENCRYPTION_INFO_64 size wrong
load command #%d LC_DYLD_INFO_ONLY size wrong
load command #%d LC_VERSION_MIN_* size wrong
load command #%d LC_UUID size wrong
load command #%d LC_BUILD_VERSION size wrong
load command #%d LC_MAIN size wrong
load command #%d LC_SEGMENT size does not match number of sections
load command #%d LC_SEGMENT_64 size does not match number of sections
load command #%d unknown required load command 0x%08X
v24@?0r^{load_command=II}8^B16
too many LC_UUID load commands
missing LC_UUID load command
multiple LC_ID_DYLIB found
MH_DYLIB is missing LC_ID_DYLIB
found LC_ID_DYLIB found in non-MH_DYLIB
duplicate linked dylib '%s'
duplicate linked dylib are deprecated ('%s')
/System/DriverKit/usr/lib/system/
/System/ExclaveKit/usr/lib/system/
/usr/lib/system/
missing LC_LOAD_DYLIB (must link with at least libSystem.dylib)
duplicate LC_RPATH '%s'
v24@?0r*8^B16
__LINKEDIT
__TEXT segment fileoffset is not zero
load commands do not fit in __TEXT segment
missing __TEXT segment
vm range of segment '%s' overlaps segment '%s'
file range of segment '%s' overlaps segment '%s'
segment '%s' file offset out of order
__PRELINK_INFO
segment '%s' vm address out of order
MH_EXECUTE has MH_DYLIB_IN_CACHE bit set
multiple LC_MAIN load commands
multiple LC_UNIXTHREAD load commands
invalid LC_UNIXTHREAD
can't have LC_MAIN and LC_UNIXTHREAD load commands
LC_MAIN not allowed for driverkit
missing LC_MAIN or LC_UNIXTHREAD in main executable
malformed LC_LINKER_OPTION command
big endian mach-o file
file does not start with MH_MAGIC[_64]: 0x%08X 0x%08X
unknown mach-o filetype (%u)
malformed load command (%d of %d) at %p with mh=%p, off end of load commands
malformed load command (%d of %d) at %p with mh=%p, size (0x%X) too small
malformed load command (%d of %d) at %p with mh=%p, size (0x%X) is too large, load commands end at %p
v32@?0{PlatformAndVersions={Platform=^{PlatformInfo}}{Version32=I}{Version32=I}{Version32=I}{Version32=I}}8
loadCommandToDylibKind
0 && "not a dylib load command"
<this-image>
<main-executable>
<flat-namespace>
<weak-def-coalesce>
<invalid-lib-ordinal>
%sLoad command #%d
%s             cmd: LC_SEGMENT
%s         cmdsize: 0x%X
%s         segname: "%s"
%s          vmaddr: 0x%08X
%s          vmsize: 0x%08X
%s         fileoff: 0x%08X
%s        filesize: 0x%08X
%s         maxprot: %s
%s        initprot: %s
%s          flags: SG_READ_ONLY
%s          nsects: %d
%s        sections[%d].sectname: "%s"
%s        sections[%d].addr:     0x%08X
%s        sections[%d].size:     0x%08X
%s        sections[%d].offset:   0x%08X
%s        sections[%d].align:    2^%d
%s        sections[%d].type:      %s
%s        sections[%d].reserved1: %d
%s        sections[%d].reserved2: %d
%s             cmd: LC_SYMTAB
%s          symoff: 0x%X
%s           nsyms: %d
%s          stroff: 0x%X
%s         strsize: 0x%X
%s             cmd: LC_UNIXTHREAD
%s              pc: 0x%llX
%s              pc: 0x%X
%s             cmd: LC_DYSYMTAB
%s       ilocalsym: %d
%s       nlocalsym: %d
%s      iextdefsym: %d
%s      nextdefsym: %d
%s       iundefsym: %d
%s       nundefsym: %d
%s  indirectsymoff: 0x%08X
%s   nindirectsyms: %d
%s             cmd: LC_LOAD_DYLIB
%s            name: "%s"
%s          attrs: %s
%s        cur-vers: %s
%s     compat-vers: %s
%s             cmd: LC_ID_DYLIB
%s             cmd: LC_LOAD_DYLINKER
%s             cmd: LC_ID_DYLINKER
%s             cmd: LC_ROUTINES
%s    init_address: 0x%X
%s             cmd: LC_SUB_FRAMEWORK
%s        umbrella: "%s"
%s             cmd: LC_SUB_UMBRELLA
%s    sub_umbrella: "%s"
%s             cmd: LC_SUB_CLIENT
%s          client: "%s"
%s             cmd: LC_SUB_LIBRARY
%s     sub_library: "%s"
%s             cmd: LC_LOAD_WEAK_DYLIB
%s             cmd: LC_SEGMENT_64
%s          vmaddr: 0x%016llX
%s          vmsize: 0x%016llX
%s         fileoff: 0x%08llX
%s        filesize: 0x%08llX
%s        sections[%d].addr:     0x%016llX
%s        sections[%d].size:     0x%016llX
%s    init_address: 0x%llX
%s             cmd: LC_UUID
%s            uuid: %s
%s             cmd: LC_RPATH
%s           rpath:"%s"
%s             cmd: LC_CODE_SIGNATURE
%s         dataoff: 0x%X
%s        datasize: 0x%X
%s             cmd: LC_SEGMENT_SPLIT_INFO
%s             cmd: LC_REEXPORT_DYLIB
%s             cmd: LC_ENCRYPTION_INFO
%s        cryptoff: 0x%X
%s       cryptsize: 0x%X
%s         cryptid: 0x%X
%s             cmd: LC_DYLD_INFO%s
_ONLY
%s      rebase_off: 0x%X
%s     rebase_size: 0x%X
%s        bind_off: 0x%X
%s       bind_size: 0x%X
%s   weak_bind_off: 0x%X
%s  weak_bind_size: 0x%X
%s   lazy_bind_off: 0x%X
%s  lazy_bind_size: 0x%X
%s      export_off: 0x%X
%s     export_size: 0x%X
%s             cmd: LC_LOAD_UPWARD_DYLIB
%s             cmd: LC_VERSION_MIN_MACOSX
%s          min-OS: %s
%s             sdk: %s
%s             cmd: LC_VERSION_MIN_IPHONEOS
%s             cmd: LC_FUNCTION_STARTS
%s             cmd: LC_DYLD_ENVIRONMENT
%s            name:"%s"
%s             cmd: LC_MAIN
%s        entryoff: 0x%llX
%s       stacksize: 0x%llX
%s             cmd: LC_DATA_IN_CODE
%s             cmd: LC_SOURCE_VERSION
%s         version: %s
%s             cmd: LC_VERSION_MIN_TVOS
%s             cmd: LC_VERSION_MIN_WATCHOS
%s             cmd: LC_BUILD_VERSION
%s        platform: %s
clang
swiftc
%s         tool[%d].name:    %s
%s         tool[%d].version: %s
%s             cmd: LC_DYLD_EXPORTS_TRIE
%s             cmd: LC_DYLD_CHAINED_FIXUPS
%s             cmd: 0x%X
%s           bytes: 
%s                  
__objc_arraydata
__objc_classname
__objc_databytes
__objc_doubleobj
__objc_imageinfo
__objc_init_offs
__objc_nlcatlist
__objc_nlclslist
__objc_protolist
__objc_protorefs
__compact_unwind
__gcc_except_tab
__os_assumes_log
__swift5_acfuncs
__swift5_assocty
__swift5_builtin
__swift5_capture
__swift5_fieldmd
__swift5_reflstr
__swift5_typeref
swift5_backtrace
__thread_starts
load command #%d string offset (%u) outside its size (%u)
load command #%d string extends beyond end of load command
S_ZEROFILL
S_CSTRING_LITERALS
S_NON_LAZY_SYMBOL_POINTERS
S_THREAD_LOCAL_VARIABLES
S_INIT_FUNC_OFFSETS
S_SYMBOL_STUBS
S_ATTR_PURE_INSTRUCTIONS
S_ATTR_PURE_INSTRUCTIONS|S_ATTR_SOME_INSTRUCTIONS
segment '%s' load command content extends beyond end of file
segment '%s' filesize exceeds vmsize
%s segment permissions has invalid bits set (0x%08X)
__TEXT segment permissions is not 'r-x'
__LINKEDIT segment permissions is not 'r--'
__DATA segment permissions is not 'rw-'
__DATA_CONST
__DATA_CONST segment permissions is not 'rw-'
__DATA_CONST segment missing SG_READ_ONLY flag
'%s' segment vm range wraps
section '%s' size too large 0x%lX
section '%s' start address 0x%lX is before containing segment's address 0x%0lX
section '%s' end address 0x%lX is beyond containing segment's end address 0x%0lX
growTo
Array.h
macOS
macOSX
iOS-simulator
tvOS
tvOS-simulator
macCatalyst
Mac Catalyst
zippered(macOS/Catalyst)
watchOS
watchOS-simulator
bridgeOS
driverKit
firmware
free standing
sepOS
macOS-exclaveCore
macOS-exclaveKit
iOS-exclaveCore
iOS-exclaveKit
tvOS-exclaveCore
tvOS-exclaveKit
watchOS-exclaveCore
watchOS-exclaveKit
visionOS
xrOS
visionOS-simulator
xrOS-simulator
visionOS-exclaveCore
xrOS-exclaveCore
visionOS-exclaveKit
xrOS-exclaveKit
macOS-kernelKit
iOS-kernelKit
tvOS-kernelKit
watchOS-kernelKit
visionOS-kernelKit
xrOS-kernelKit
bridgeOS-kernelKit
Platform
Platform.cpp
p->value != 0 && "PlatformInfo value uninitialized, this might be a problem with C++ static initializers order"
unknown platform
can't zip with invalid platform
incompatible platforms: %s - %s
second level table offset out of range
first level table function offsets not sequential
second level table has invalid kind
v24@?0I8I12I16I20
arch not supported yet
no frame, no saved registers 
stack size=%d: 
x19/20 
x21/22 
x23/24 
x25/26 
x27/28 
d8/9 
d10/11 
d12/13 
d14/15 
dwarf offset 0x%08X, 
no unwind info 
unknown arm64 compact encoding 
rbp frame, no saved registers
rbp frame, at -%d:
stack size=0x%08X, 
stack size=%d, 
no registers saved
no unwind information
tbd 
%s slice in %s is not a mach-o
v40@?0{Slice={Architecture=ii}{span<const unsigned char, 18446744073709551615UL>=*Q}}8^B32
v24@?0{span<const unsigned char, 18446744073709551615UL>=*Q}8
/System/DriverKit/
v16@?0r*8
v16@?0^{dyld_shared_cache_s=}8
%s(%s)
v32@?0r^v8r^{Header={mach_header=IiiIIII}}16^B24
malformed archive '%s': %s
implOffset
Symbol.cpp
(_kind != Kind::reExport) && (_kind != Kind::absolute)
v40@?0r*8{span<const unsigned char, 18446744073709551615UL>=*Q}16^B32
malformed trie, node past end
malformed uleb128
malformed trie, terminalSize extends beyond trie data
malformed trie node, child node name extends beyond trie data
malformed trie, childNodeOffset==0
vmOffset too large for %s
unknown exports flag bits
%s missing preceding BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
%s segment index %d too large
%s segment offset 0x%08llX beyond segment '%.*s' size (0x%08llX)
%s missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM
%s missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL
%s has library ordinal too large (%d) max (%d)
%s has unknown library special ordinal (%d)
%s pointer bind is in non-writable segment '%.*s'
%s pointer bind is in executable segment '%.*s'
%s text binds not supported for architecture
%s text bind is in writable segment
%s text bind is in non-executable segment
%s unknown bind type %d
v76@?0r*8i16B20C24Q28B36i40r*44B52q56B64^B68
BIND_OPCODE_DO_BIND
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB
old arm64e bind opcodes not supported
unknown bind opcode 0x%02X
%s0x%04lX BIND_OPCODE_DONE()
%s0x%04lX BIND_OPCODE_SET_DYLIB_ORDINAL_IMM(%d)
%s0x%04lX BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB(%d)
%s0x%04lX BIND_OPCODE_SET_DYLIB_SPECIAL_IMM(%d)
%s0x%04lX BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM(0x%02X, %s)
%s0x%04lX BIND_OPCODE_SET_TYPE_IMM(%d)
%s0x%04lX BIND_OPCODE_SET_ADDEND_SLEB(%lld)
%s0x%04lX BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB(0x%02X, 0x%08llX)
%s0x%04lX BIND_OPCODE_ADD_ADDR_ULEB(0x%08llX)
%s0x%04lX BIND_OPCODE_DO_BIND()
%s0x%04lX BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB(0x%08llX)
%s0x%04lX BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED(0x%08llX)
%s0x%04lX BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB(%llu, 0x%08llX)
%s0x%04lX BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB(%llu)
%s0x%04lX BIND_SUBOPCODE_THREADED_APPLY
%sunknown threaded bind subopcode 0x%02X
%sunknown rebase opcode 0x%02X
%s missing preceding REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
%s pointer rebase is in non-writable segment '%.*s'
%s pointer rebase is in executable segment '%.*s'
%s text rebase not supported for architecture
%s text rebase is in writable segment '%.*s'
%s text rebase is in non-executable segment '%.*s'
%s unknown rebase type
v44@?0r*8i16B20C24Q28^B36
rebase opcodes terminated early at offset %d of %d
REBASE_OPCODE_DO_REBASE_IMM_TIMES
REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB
REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB
unknown rebase opcode 0x%02X
%s0x%04lX REBASE_OPCODE_DONE()
%s0x%04lX REBASE_OPCODE_SET_TYPE_IMM(%d)
%s0x%04lX REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB(%d, 0x%08llX)
%s0x%04lX REBASE_OPCODE_ADD_ADDR_ULEB(0x%0llX)
%s0x%04lX REBASE_OPCODE_ADD_ADDR_IMM_SCALED(0x%0llX)
%s0x%04lX REBASE_OPCODE_DO_REBASE_IMM_TIMES(%d)
%s0x%04lX REBASE_OPCODE_DO_REBASE_ULEB_TIMES(%lld)
%s0x%04lX REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB(%lld)
%s0x%04lX REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB(%lld, %lld)
scrDir:      %s
scrName:     %s
objPath:     %s
objModTime:  0x%08X
objSubType:  0X%02X
libPath:     %s
origlibPath: %s
Not split seg v2
bad kind (%llu) value
v40@?0{Architecture=ii}8Q16Q24^B32
inferIfZerofillExpanded
Image.cpp
false && "handle unsigned"
malformed mach-o image: symbol table too large
symbol table
symbol table strings
malformed mach-o image: indirect symbol table too large
malformed mach-o image: indirect symbol table ilocalsym != 0
malformed mach-o image: indirect symbol table iextdefsym != nlocalsym
malformed mach-o image: indirect symbol table iundefsym != iextdefsym+nextdefsym
local relocations
external relocations
indirect symbol table
rebase opcodes
bind opcodes
weak bind opcodes
lazy bind opcodes
exports trie
shared cache info
atom info
function starts
data in code
code signature
chained fixups
symbol count from symbol table and dynamic symbol table differ
malformed mach-o contains LC_DYLD_INFO_ONLY and local relocations
malformed mach-o contains LC_DYLD_INFO_ONLY and external relocations
malformed mach-o contains LC_DYLD_CHAINED_FIXUPS and local relocations
malformed mach-o contains LC_DYLD_CHAINED_FIXUPS and external relocations
malformed mach-o contains LC_DYLD_INFO and LC_DYLD_CHAINED_FIXUPS
bad or unknown fileoffset/size for LINKEDIT
malformed mach-o has no LINKEDIT information
start of LINKEDIT
LINKEDIT overlap of %s and %s
LINKEDIT content '%s' extends beyond end of segment
mis-aligned code signature
mis-aligned LINKEDIT content '%s'
no executable segments
LC_ROUTINES initializer 0x%08llX is not an offset to an executable segment
LC_ROUTINES _64 initializer 0x%08llX is not an offset to an executable segment
section %s/%s size (%llu) is not a multiple of pointer-size
section %s/%s address (0x%llX) is not pointer aligned
initializer %lu/%llu is not in an executable segment
arm6e
terminators section %s/%s not supported for arm64e
initializer offsets section %s/%s must be in read-only segment
initializer offsets section %s/%s has bad size
initializer offsets section %s/%s is not 4-byte aligned
initializer 0x%08X is not an offset to an executable segment
v36@?0r^v8I16r^{PointerFormat=^^?}20^B28
v20@?0I8^B12
push_back
_usedCount < _allocCount
appendNumber
Version64.cpp
num < 9999999
keyName
Fixups.cpp
authenticated
Error: stat failed for dyld shared cache at %s
Error: failed to open shared cache file at %s
Error: failed to read shared cache file at %s
Error: Expected cache file magic to be 'dyld_v1...' in %s
Error: No mapping in shared cache file at %s
Error: failed to allocate space to load shared cache file at %s
Error: mmap() for shared cache at %s failed, errno=%d
Error: SubCache[%i] UUID mismatch.  Expected %s, got %s
%llu
v40@?0i8r*12q20B28^B32
malformed import table, imports_offset too large
malformed import table, symbols_offset too large
malformed import table, imports[%d].name_offset (%d) out of range
unknown imports format %d
pointerFormat
ChainedFixups.cpp
0 && "can't find pointer format"
chained fixups, unknown header version (%d)
chained fixups, starts_offset exceeds LC_DYLD_CHAINED_FIXUPS size
chained fixups, imports_offset exceeds LC_DYLD_CHAINED_FIXUPS size
chained fixups, unknown imports_format (%d)
chained fixups, imports array overlaps symbols
chained fixups, symbols_format unknown (%d)
chained fixups, seg_count exceeds number of segments
chained fixups, seg_count does not match number of segments
chained fixups, dyld_chained_starts_in_segment for segment #%d overruns imports table
chained fixups, page_size not 4KB or 16KB in segment #%d
chained fixups, unknown pointer_format in segment #%d
chained fixups, pointer_format not same for all segments %d and %d
chained fixups, different max_valid_pointer values seen in different segments
chained fixups, page_start array overflows size
chained fixups, in segment #%d page_start[%d]=0x%04X exceeds page size
chain overflow index out of range %d (max=%d) in segment #%d
chained fixups, in segment #%d overflow page_start[%d]=0x%04X exceeds page size
chained fixups, in segment #%d overflow page_start[%d]=0x%04X is before previous at 0x%04X
chained fixups, imports_count (%d) exceeds max of %d
chained fixups, max_valid_pointer (0x%x) too small for image last vm address 0x%llx
DYLD_CHAINED_IMPORT
DYLD_CHAINED_IMPORT_ADDEND
DYLD_CHAINED_IMPORT_ADDEND64
DYLD_CHAINED_PTR_ARM64E
authenticated arm64e, 8-byte stride, target vmadddr
DYLD_CHAINED_PTR_64
generic 64-bit, 4-byte stride, target vmadddr
DYLD_CHAINED_PTR_32
generic 32-bit, 4-byte stride
DYLD_CHAINED_PTR_32_CACHE
DYLD_CHAINED_PTR_32_FIRMWARE
DYLD_CHAINED_PTR_64_OFFSET
generic 64-bit, 4-byte stride, target vmoffset
DYLD_CHAINED_PTR_ARM64E_KERNEL
authenticated arm64e, 4-byte stride, target vmoffset
DYLD_CHAINED_PTR_64_KERNEL_CACHE
authenticated arm64e, 4-byte stride, for kernel cache
DYLD_CHAINED_PTR_ARM64E_USERLAND
authenticated arm64e, 8-byte stride, target vmoffset
DYLD_CHAINED_PTR_ARM64E_FIRMWARE
authenticated arm64e, 4-byte stride, target vmaddr
DYLD_CHAINED_PTR_X86_64_KERNEL_CACHE
1-byte stride, for x86_64 kernel cache
DYLD_CHAINED_PTR_ARM64E_USERLAND24
uleb128 too big for uint64
malformed trie node, child node extends past end of trie
malformed trie child, nodeOffset=0x%llX out of range
malformed trie child, cycle to nodeOffset=0x%llX
@(#)PROGRAM:dyld_info  PROJECT:dyld-1115.7.3
n|ffffffff
fffff
fffff
#+5G\
)+18=Ww
(8>HR\ajq
+GYe
#+1:E
v24@?0r^v8^B16
<anon-%08llX>
v16@?0Q8
v28@?0r^v8I16^B20
v48@?0r*8Q16C24C28S32I36^B40
v24@?0{span<const mach_o::MappedSegment, 18446744073709551615UL>=^{MappedSegment}Q}8
v24@?0r^{Fixup=^v^{MappedSegment}B{?=b2b1S}BB(?={?=Ii}{?=Q})}8^B16
-[%s %s]
v24@?0r*8Q16
+[%s %s]
__TEXT
_objc_msgSend$%s
__DATA
selector "%s"
__objc_superrefs
super %s
@"%s"
__objc_
##unavailable##
_OBJC_CLASS_$_
__objc_classlist
.dylib
auth-bind
lazy-bind
bind
auth-rebase
rebase
 (div=0x%04X ad=%d key=%s)
%s/%s + 0x%llX%s
%s/%s [weak-import]%s
%s/%s%s
__TEXT,
"%s"%s
%s%s
%s+%u%s
0x%08llX%s
arm64e-apple-darwin
x86_64h-apple-darwin
unknown
-platform
-segments
-linked_dylibs
-dependents
-inits
-fixups
-fixup_chains
-fixup_chain_details
-fixup_chain_header
-symbolic_fixups
-exports
-imports
-objc
-swift_protocols
-shared_region
-function_starts
-opcodes
-unwind
-uuid
-load_commands
-disassemble
-section
-section requires segment-name and section-name
-all_sections
-section_bytes
-section_bytes requires segment-name and section-name
-all_sections_bytes
-validate_only
-arch
-arch missing architecture name
-all_dir
B16@?0r^v8
v24@?0r^v8r^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
-all_dir directory
-all_dyld_cache
v24@?0r^{mach_header=IiiIIII}8r*16
dyld_info: unknown option: %s
%s [%s]:
   %s
(%s,%s) section:
__objc_classrefs
v32@?0r*8r^{Header={mach_header=IiiIIII}}16Q24
dyld_info: '%s' file not found
dyld_info: '%s' does not contain specified arch(s)
CString
CString.h
str.data() == nullptr || *(str.data() + str.size()) == 0
Usage: dyld_info [-arch <arch>]* <options>* <mach-o file>+ | -all_dir <dir> 
-platform                   print platform (default if no options specified)
-segments                   print segments (default if no options specified)
-linked_dylibs              print all dylibs this image links against (default if no options specified)
-inits                      print initializers
-fixups                     print locations dyld will rebase/bind
-exports                    print all exported symbols
-imports                    print all symbols needed from other dylibs
-fixup_chains               print info about chain format and starts
-fixup_chain_details        print detailed info about every fixup in chain
-fixup_chain_header         print detailed info about the fixup chains header
-symbolic_fixups            print ranges of each atom of DATA with symbol name and fixups
-objc                       print objc classes, categories, etc
-shared_region              print shared cache (split seg) info
-function_starts            print function starts information
-opcodes                    print opcodes information
-load_commands              print load commands
-uuid                       print UUID of binary
-disassemble                print all code sections using disassembler
-section <seg> <sect>       print content of section, formatted by section type
-all_sections               print content of all sections, formatted by section type
-section_bytes <seg> <sect> print content of section, as raw hex bytes
-all_sections_bytes         print content of all sections, formatted as raw hex bytes
-validate_only              only prints an malformedness about file(s)
 %15s     %-7s   %-7s
        %s
        0x%06X   0x%09llX    %-16s                   %6lluKB   %s
        0x%06X   0x%09llX              %-16s %7llu
        0x%09llX    %-16s                  %6lluKB  %s
        0x%09llX             %-16s %7llu
        0x%08llX    %-16s                  %6lluKB %s
        0x%08llX             %-16s %6llu
v33@?0r*8{LinkedDylibAttributes=(?={?=b1b1b1b1b4}C)}16{Version32=I}17{Version32=I}21^B25
upward 
delay-init 
weak-link 
re-export 
        %-12s   %s
        0x%08X  %s
        0x%08X  %s + %llu
v12@?0I8
arm64e
        0x%08X  %s [terminator]
        0x%08X  %s + %llu [terminator]
        [re-export] %s (from %s)
        [re-export] %s (%s from %s)
        0x%08llX  %s [absolute]
        0x%08llX  %s [per-thread]
        0x%08llX  %s [resolver=0x%08llX]
        0x%08llX  %s [weak-def]
        0x%08llX  %s
[weak-import]
      0x%04X  %s %s (from %s)
      0x%04X  %s+0x%llX %s (from %s)
      %s %s (from %s)
        %-12s    %-16s 0x%08llX   %11s  %s
      fixups_version:   0x%08X
      starts_offset:    0x%08X
      imports_offset:   0x%08X
      symbols_offset:   0x%08X
      imports_count:    %d
      imports_format:   %d (%s)
      symbols_format:   %d
        seg[%d]:
          page_size:       0x%04X
          pointer_format:  %d (%s)(%s)
          segment_offset:  0x%08llX
          max_pointer:     0x%08X
          pages:         %d
         start[% 2d]:  <<<off end of dyld_chained_starts_in_segment>>>
         start[% 2d]:  0x%04X
             start[% 2d]:  0x%04X
  pointer_format:  %d (%s)
    start[% 2d]: vm offset: 0x%04X
     
auth-
key: %s, addrDiv: %d, diversity: 0x%04X, 
, addend: %d
  0x%08llX:  raw: 0x%016llX    %sbind: (next: %03d, %sbindOrdinal: 0x%06X%s)
  0x%08llX:  raw: 0x%08X     bind: (next: %02d bindOrdinal: 0x%07X)
  0x%08llX:  raw: 0x%016llX  %srebase: (next: %03d, %starget: 0x%011llX%s)
  0x%08llX:  raw: 0x%08X  rebase: (next: %02d target: 0x%07llX)
  0x%08llX:  raw: 0x%016llX  %srebase: (%starget: 0x%011llX%s)
  0x%08llX:  raw: 0x%08X  rebase: (target: 0x%07llX)
            fixups_version  0x%08X
            starts_offset   0x%08X
            imports_offset  0x%08X
            symbols_offset  0x%08X
            imports_count   0x%08X
            imports_format  0x%08X
            symbols_format  0x%08X
            seg_count              0x%08X
            seg_info_offset[%d]     0x%08X
            size                0x%08X
            page_size           0x%08X
            pointer_format      0x%08X
            segment_offset      0x%08llX
            max_valid_pointer   0x%08X
            page_count          0x%08X
            symbol          %s
          pointer_format:  %d (%s)
           +0x%04X %11s  %s
 lsdaOffset=0x%08X
        0x%08llX   0x%08X (%-56s)%s
v16@?0r^{UnwindInfo=IIII}8
        @interface %s : %s %s
          0x%08llX  -[%s %s]
          0x%08llX  +[%s %s]
        @interface %s(%s)
        %-16s %-16s 0x%08llx      %-16s %-16s 0x%08llx
v24@?0r^{Entry=CCCQQ}8^B16
0x%08X
; literal pool symbol address: 
## literal pool symbol address: 
## literal pool for: 
; string literal: 
; 0x
0x%09llX   %-8s %-20s %s
0x%08llX 
"%s"
0x%08llX  
0x%08llX
    class: %s
    flags: 0x%08X
   string: 
   length: %u
0x%08llX:  0x%08llX 
0x%08llX: 
%02X 
v32@?0r*8Q16Q24
    -platform:
        platform     minOS      sdk
    -uuid:
        load-offset   segment  section       sect-size  seg-size max-prot init-prot
        unslid-addr   segment   section        sect-size  seg-size max-prot init-prot
    -segments:
       file-offset vm-addr       segment      section         sect-size  seg-size max-prot init-prot
    -linked_dylibs:
        attributes     load path
    -inits:
    -exports:
        offset      symbol
no exported symbol information
    -imports:
    -fixups:
        segment         section          address             type   target
    -fixup_chains:
    -fixup_chain_details:
    -fixup_chain_header:
        firmware chains:
        dyld_chained_fixups_header:
        dyld_chained_starts_in_image:
        targets:
        dyld_chained_starts_in_segment:
    -symbolic_fixups:
    -opcodes:
        no rebase opcodes
        no bind opcodes
        no lazy bind opcodes
        lazy bind opcodes:
        bind opcodes:
        rebase opcodes:
    -function_starts:
        no function starts info
    -unwind:
        no compact unwind table
        address       encoding
    -objc:
        warning: FairPlay encryption of __TEXT will make printing ObjC info unreliable
    -load_commands:
    -shared_region:
        no shared region info
        from      to
        no shared region info (marker present)
        shared region v1
        @end
x86_64
x86_64h
i386
arm64
arm64_32
armv6m
armv7k
armv7m
armv7em
armv7s
armv7
arm64e.v1
arm64e.old
arm64e.kernel
malformed archive, member exceeds file size
__.SYMDEF SORTED
__.SYMDEF_64
__.SYMDEF_64 SORTED
multiple SYMDEF member files found in an archive
archive member '%s' not a mach-o file
archive member invalid control bits
archive member size contains non-numeric characters: '%s'
content
Archive.cpp
size >= space
getName
bufsz >= len+1
weak-link
upward
delay-init
re-export
platformAndVersions_block_invoke
Header.cpp
err.noError()
v24@?0{Platform=^{PlatformInfo}}8{Version32=I}16{Version32=I}20
file is too small (length=%llu)
not a mach-o file (start is no MH_MAGIC[_64])
load commands length (%llu) exceeds length of file (%llu)
unknown filetype %d
load command #%d LC_SYMTAB size wrong
load command #%d LC_DYSYMTAB size wrong
load command #%d LC_SEGMENT_SPLIT_INFO size wrong
load command #%d LC_ATOM_INFO size wrong
load command #%d LC_FUNCTION_STARTS size wrong
load command #%d LC_DYLD_EXPORTS_TRIE size wrong
load command #%d LC_DYLD_CHAINED_FIXUPS size wrong
load command #%d LC_ENCRYPTION_INFO size wrong
load command #%d LC_ENCRYPTION_INFO_64 size wrong
load command #%d LC_DYLD_INFO_ONLY size wrong
load command #%d LC_VERSION_MIN_* size wrong
load command #%d LC_UUID size wrong
load command #%d LC_BUILD_VERSION size wrong
load command #%d LC_MAIN size wrong
load command #%d LC_SEGMENT size does not match number of sections
load command #%d LC_SEGMENT_64 size does not match number of sections
load command #%d unknown required load command 0x%08X
v24@?0r^{load_command=II}8^B16
too many LC_UUID load commands
missing LC_UUID load command
multiple LC_ID_DYLIB found
MH_DYLIB is missing LC_ID_DYLIB
found LC_ID_DYLIB found in non-MH_DYLIB
duplicate linked dylib '%s'
duplicate linked dylib are deprecated ('%s')
/System/DriverKit/usr/lib/system/
/System/ExclaveKit/usr/lib/system/
/usr/lib/system/
missing LC_LOAD_DYLIB (must link with at least libSystem.dylib)
duplicate LC_RPATH '%s'
v24@?0r*8^B16
__LINKEDIT
__TEXT segment fileoffset is not zero
load commands do not fit in __TEXT segment
missing __TEXT segment
vm range of segment '%s' overlaps segment '%s'
file range of segment '%s' overlaps segment '%s'
segment '%s' file offset out of order
__PRELINK_INFO
segment '%s' vm address out of order
MH_EXECUTE has MH_DYLIB_IN_CACHE bit set
multiple LC_MAIN load commands
multiple LC_UNIXTHREAD load commands
invalid LC_UNIXTHREAD
can't have LC_MAIN and LC_UNIXTHREAD load commands
LC_MAIN not allowed for driverkit
missing LC_MAIN or LC_UNIXTHREAD in main executable
malformed LC_LINKER_OPTION command
big endian mach-o file
file does not start with MH_MAGIC[_64]: 0x%08X 0x%08X
unknown mach-o filetype (%u)
malformed load command (%d of %d) at %p with mh=%p, off end of load commands
malformed load command (%d of %d) at %p with mh=%p, size (0x%X) too small
malformed load command (%d of %d) at %p with mh=%p, size (0x%X) is too large, load commands end at %p
v32@?0{PlatformAndVersions={Platform=^{PlatformInfo}}{Version32=I}{Version32=I}{Version32=I}{Version32=I}}8
loadCommandToDylibKind
0 && "not a dylib load command"
<this-image>
<main-executable>
<flat-namespace>
<weak-def-coalesce>
<invalid-lib-ordinal>
%sLoad command #%d
%s             cmd: LC_SEGMENT
%s         cmdsize: 0x%X
%s         segname: "%s"
%s          vmaddr: 0x%08X
%s          vmsize: 0x%08X
%s         fileoff: 0x%08X
%s        filesize: 0x%08X
%s         maxprot: %s
%s        initprot: %s
%s          flags: SG_READ_ONLY
%s          nsects: %d
%s        sections[%d].sectname: "%s"
%s        sections[%d].addr:     0x%08X
%s        sections[%d].size:     0x%08X
%s        sections[%d].offset:   0x%08X
%s        sections[%d].align:    2^%d
%s        sections[%d].type:      %s
%s        sections[%d].reserved1: %d
%s        sections[%d].reserved2: %d
%s             cmd: LC_SYMTAB
%s          symoff: 0x%X
%s           nsyms: %d
%s          stroff: 0x%X
%s         strsize: 0x%X
%s             cmd: LC_UNIXTHREAD
%s              pc: 0x%llX
%s              pc: 0x%X
%s             cmd: LC_DYSYMTAB
%s       ilocalsym: %d
%s       nlocalsym: %d
%s      iextdefsym: %d
%s      nextdefsym: %d
%s       iundefsym: %d
%s       nundefsym: %d
%s  indirectsymoff: 0x%08X
%s   nindirectsyms: %d
%s             cmd: LC_LOAD_DYLIB
%s            name: "%s"
%s          attrs: %s
%s        cur-vers: %s
%s     compat-vers: %s
%s             cmd: LC_ID_DYLIB
%s             cmd: LC_LOAD_DYLINKER
%s             cmd: LC_ID_DYLINKER
%s             cmd: LC_ROUTINES
%s    init_address: 0x%X
%s             cmd: LC_SUB_FRAMEWORK
%s        umbrella: "%s"
%s             cmd: LC_SUB_UMBRELLA
%s    sub_umbrella: "%s"
%s             cmd: LC_SUB_CLIENT
%s          client: "%s"
%s             cmd: LC_SUB_LIBRARY
%s     sub_library: "%s"
%s             cmd: LC_LOAD_WEAK_DYLIB
%s             cmd: LC_SEGMENT_64
%s          vmaddr: 0x%016llX
%s          vmsize: 0x%016llX
%s         fileoff: 0x%08llX
%s        filesize: 0x%08llX
%s        sections[%d].addr:     0x%016llX
%s        sections[%d].size:     0x%016llX
%s    init_address: 0x%llX
%s             cmd: LC_UUID
%s            uuid: %s
%s             cmd: LC_RPATH
%s           rpath:"%s"
%s             cmd: LC_CODE_SIGNATURE
%s         dataoff: 0x%X
%s        datasize: 0x%X
%s             cmd: LC_SEGMENT_SPLIT_INFO
%s             cmd: LC_REEXPORT_DYLIB
%s             cmd: LC_ENCRYPTION_INFO
%s        cryptoff: 0x%X
%s       cryptsize: 0x%X
%s         cryptid: 0x%X
%s             cmd: LC_DYLD_INFO%s
_ONLY
%s      rebase_off: 0x%X
%s     rebase_size: 0x%X
%s        bind_off: 0x%X
%s       bind_size: 0x%X
%s   weak_bind_off: 0x%X
%s  weak_bind_size: 0x%X
%s   lazy_bind_off: 0x%X
%s  lazy_bind_size: 0x%X
%s      export_off: 0x%X
%s     export_size: 0x%X
%s             cmd: LC_LOAD_UPWARD_DYLIB
%s             cmd: LC_VERSION_MIN_MACOSX
%s          min-OS: %s
%s             sdk: %s
%s             cmd: LC_VERSION_MIN_IPHONEOS
%s             cmd: LC_FUNCTION_STARTS
%s             cmd: LC_DYLD_ENVIRONMENT
%s            name:"%s"
%s             cmd: LC_MAIN
%s        entryoff: 0x%llX
%s       stacksize: 0x%llX
%s             cmd: LC_DATA_IN_CODE
%s             cmd: LC_SOURCE_VERSION
%s         version: %s
%s             cmd: LC_VERSION_MIN_TVOS
%s             cmd: LC_VERSION_MIN_WATCHOS
%s             cmd: LC_BUILD_VERSION
%s        platform: %s
clang
swiftc
%s         tool[%d].name:    %s
%s         tool[%d].version: %s
%s             cmd: LC_DYLD_EXPORTS_TRIE
%s             cmd: LC_DYLD_CHAINED_FIXUPS
%s             cmd: 0x%X
%s           bytes: 
%s                  
__objc_arraydata
__objc_classname
__objc_databytes
__objc_doubleobj
__objc_imageinfo
__objc_init_offs
__objc_nlcatlist
__objc_nlclslist
__objc_protolist
__objc_protorefs
__compact_unwind
__gcc_except_tab
__os_assumes_log
__swift5_acfuncs
__swift5_assocty
__swift5_builtin
__swift5_capture
__swift5_fieldmd
__swift5_reflstr
__swift5_typeref
swift5_backtrace
__thread_starts
load command #%d string offset (%u) outside its size (%u)
load command #%d string extends beyond end of load command
S_ZEROFILL
S_CSTRING_LITERALS
S_NON_LAZY_SYMBOL_POINTERS
S_THREAD_LOCAL_VARIABLES
S_INIT_FUNC_OFFSETS
S_SYMBOL_STUBS
S_ATTR_PURE_INSTRUCTIONS
S_ATTR_PURE_INSTRUCTIONS|S_ATTR_SOME_INSTRUCTIONS
segment '%s' load command content extends beyond end of file
segment '%s' filesize exceeds vmsize
%s segment permissions has invalid bits set (0x%08X)
__TEXT segment permissions is not 'r-x'
__LINKEDIT segment permissions is not 'r--'
__DATA segment permissions is not 'rw-'
__DATA_CONST
__DATA_CONST segment permissions is not 'rw-'
__DATA_CONST segment missing SG_READ_ONLY flag
'%s' segment vm range wraps
section '%s' size too large 0x%lX
section '%s' start address 0x%lX is before containing segment's address 0x%0lX
section '%s' end address 0x%lX is beyond containing segment's end address 0x%0lX
growTo
Array.h
macOS
macOSX
iOS-simulator
tvOS
tvOS-simulator
macCatalyst
Mac Catalyst
zippered(macOS/Catalyst)
watchOS
watchOS-simulator
bridgeOS
driverKit
firmware
free standing
sepOS
macOS-exclaveCore
macOS-exclaveKit
iOS-exclaveCore
iOS-exclaveKit
tvOS-exclaveCore
tvOS-exclaveKit
watchOS-exclaveCore
watchOS-exclaveKit
visionOS
xrOS
visionOS-simulator
xrOS-simulator
visionOS-exclaveCore
xrOS-exclaveCore
visionOS-exclaveKit
xrOS-exclaveKit
macOS-kernelKit
iOS-kernelKit
tvOS-kernelKit
watchOS-kernelKit
visionOS-kernelKit
xrOS-kernelKit
bridgeOS-kernelKit
Platform
Platform.cpp
p->value != 0 && "PlatformInfo value uninitialized, this might be a problem with C++ static initializers order"
unknown platform
can't zip with invalid platform
incompatible platforms: %s - %s
second level table offset out of range
first level table function offsets not sequential
second level table has invalid kind
v24@?0I8I12I16I20
arch not supported yet
no frame, no saved registers 
stack size=%d: 
x19/20 
x21/22 
x23/24 
x25/26 
x27/28 
d8/9 
d10/11 
d12/13 
d14/15 
std frame: 
dwarf offset 0x%08X, 
no unwind info 
unknown arm64 compact encoding 
rbp frame, no saved registers
rbp frame, at -%d:
stack size=0x%08X, 
stack size=%d, 
no registers saved
no unwind information
tbd 
%s slice in %s is not a mach-o
v40@?0{Slice={Architecture=ii}{span<const unsigned char, 18446744073709551615UL>=*Q}}8^B32
v24@?0{span<const unsigned char, 18446744073709551615UL>=*Q}8
/System/DriverKit/
v16@?0r*8
v16@?0^{dyld_shared_cache_s=}8
%s(%s)
v32@?0r^v8r^{Header={mach_header=IiiIIII}}16^B24
malformed archive '%s': %s
implOffset
Symbol.cpp
(_kind != Kind::reExport) && (_kind != Kind::absolute)
v40@?0r*8{span<const unsigned char, 18446744073709551615UL>=*Q}16^B32
malformed trie, node past end
malformed uleb128
malformed trie, terminalSize extends beyond trie data
malformed trie node, child node name extends beyond trie data
malformed trie, childNodeOffset==0
vmOffset too large for %s
unknown exports flag bits
%s missing preceding BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
%s segment index %d too large
%s segment offset 0x%08llX beyond segment '%.*s' size (0x%08llX)
%s missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM
%s missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL
%s has library ordinal too large (%d) max (%d)
%s has unknown library special ordinal (%d)
%s pointer bind is in non-writable segment '%.*s'
%s pointer bind is in executable segment '%.*s'
%s text binds not supported for architecture
%s text bind is in writable segment
%s text bind is in non-executable segment
%s unknown bind type %d
v76@?0r*8i16B20C24Q28B36i40r*44B52q56B64^B68
BIND_OPCODE_DO_BIND
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB
old arm64e bind opcodes not supported
unknown bind opcode 0x%02X
%s0x%04lX BIND_OPCODE_DONE()
%s0x%04lX BIND_OPCODE_SET_DYLIB_ORDINAL_IMM(%d)
%s0x%04lX BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB(%d)
%s0x%04lX BIND_OPCODE_SET_DYLIB_SPECIAL_IMM(%d)
%s0x%04lX BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM(0x%02X, %s)
%s0x%04lX BIND_OPCODE_SET_TYPE_IMM(%d)
%s0x%04lX BIND_OPCODE_SET_ADDEND_SLEB(%lld)
%s0x%04lX BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB(0x%02X, 0x%08llX)
%s0x%04lX BIND_OPCODE_ADD_ADDR_ULEB(0x%08llX)
%s0x%04lX BIND_OPCODE_DO_BIND()
%s0x%04lX BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB(0x%08llX)
%s0x%04lX BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED(0x%08llX)
%s0x%04lX BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB(%llu, 0x%08llX)
%s0x%04lX BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB(%llu)
%s0x%04lX BIND_SUBOPCODE_THREADED_APPLY
%sunknown threaded bind subopcode 0x%02X
%sunknown rebase opcode 0x%02X
%s missing preceding REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
%s pointer rebase is in non-writable segment '%.*s'
%s pointer rebase is in executable segment '%.*s'
%s text rebase not supported for architecture
%s text rebase is in writable segment '%.*s'
%s text rebase is in non-executable segment '%.*s'
%s unknown rebase type
v44@?0r*8i16B20C24Q28^B36
rebase opcodes terminated early at offset %d of %d
REBASE_OPCODE_DO_REBASE_IMM_TIMES
REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB
REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB
unknown rebase opcode 0x%02X
%s0x%04lX REBASE_OPCODE_DONE()
%s0x%04lX REBASE_OPCODE_SET_TYPE_IMM(%d)
%s0x%04lX REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB(%d, 0x%08llX)
%s0x%04lX REBASE_OPCODE_ADD_ADDR_ULEB(0x%0llX)
%s0x%04lX REBASE_OPCODE_ADD_ADDR_IMM_SCALED(0x%0llX)
%s0x%04lX REBASE_OPCODE_DO_REBASE_IMM_TIMES(%d)
%s0x%04lX REBASE_OPCODE_DO_REBASE_ULEB_TIMES(%lld)
%s0x%04lX REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB(%lld)
%s0x%04lX REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB(%lld, %lld)
scrDir:      %s
scrName:     %s
objPath:     %s
objModTime:  0x%08X
objSubType:  0X%02X
libPath:     %s
origlibPath: %s
Not split seg v2
bad kind (%llu) value
v40@?0{Architecture=ii}8Q16Q24^B32
inferIfZerofillExpanded
Image.cpp
false && "handle unsigned"
malformed mach-o image: symbol table too large
symbol table
symbol table strings
malformed mach-o image: indirect symbol table too large
malformed mach-o image: indirect symbol table ilocalsym != 0
malformed mach-o image: indirect symbol table iextdefsym != nlocalsym
malformed mach-o image: indirect symbol table iundefsym != iextdefsym+nextdefsym
local relocations
external relocations
indirect symbol table
rebase opcodes
bind opcodes
weak bind opcodes
lazy bind opcodes
exports trie
shared cache info
atom info
function starts
data in code
code signature
chained fixups
symbol count from symbol table and dynamic symbol table differ
malformed mach-o contains LC_DYLD_INFO_ONLY and local relocations
malformed mach-o contains LC_DYLD_INFO_ONLY and external relocations
malformed mach-o contains LC_DYLD_CHAINED_FIXUPS and local relocations
malformed mach-o contains LC_DYLD_CHAINED_FIXUPS and external relocations
malformed mach-o contains LC_DYLD_INFO and LC_DYLD_CHAINED_FIXUPS
bad or unknown fileoffset/size for LINKEDIT
malformed mach-o has no LINKEDIT information
start of LINKEDIT
LINKEDIT overlap of %s and %s
LINKEDIT content '%s' extends beyond end of segment
mis-aligned code signature
mis-aligned LINKEDIT content '%s'
no executable segments
LC_ROUTINES initializer 0x%08llX is not an offset to an executable segment
LC_ROUTINES _64 initializer 0x%08llX is not an offset to an executable segment
section %s/%s size (%llu) is not a multiple of pointer-size
section %s/%s address (0x%llX) is not pointer aligned
initializer %lu/%llu is not in an executable segment
arm6e
terminators section %s/%s not supported for arm64e
initializer offsets section %s/%s must be in read-only segment
initializer offsets section %s/%s has bad size
initializer offsets section %s/%s is not 4-byte aligned
initializer 0x%08X is not an offset to an executable segment
v36@?0r^v8I16r^{PointerFormat=^^?}20^B28
v20@?0I8^B12
push_back
_usedCount < _allocCount
appendNumber
Version64.cpp
num < 9999999
keyName
Fixups.cpp
authenticated
Error: stat failed for dyld shared cache at %s
Error: failed to open shared cache file at %s
Error: failed to read shared cache file at %s
Error: Expected cache file magic to be 'dyld_v1...' in %s
Error: No mapping in shared cache file at %s
Error: failed to allocate space to load shared cache file at %s
Error: mmap() for shared cache at %s failed, errno=%d
Error: SubCache[%i] UUID mismatch.  Expected %s, got %s
%llu
v40@?0i8r*12q20B28^B32
malformed import table, imports_offset too large
malformed import table, symbols_offset too large
malformed import table, imports[%d].name_offset (%d) out of range
unknown imports format %d
pointerFormat
ChainedFixups.cpp
0 && "can't find pointer format"
chained fixups, unknown header version (%d)
chained fixups, starts_offset exceeds LC_DYLD_CHAINED_FIXUPS size
chained fixups, imports_offset exceeds LC_DYLD_CHAINED_FIXUPS size
chained fixups, unknown imports_format (%d)
chained fixups, imports array overlaps symbols
chained fixups, symbols_format unknown (%d)
chained fixups, seg_count exceeds number of segments
chained fixups, seg_count does not match number of segments
chained fixups, dyld_chained_starts_in_segment for segment #%d overruns imports table
chained fixups, page_size not 4KB or 16KB in segment #%d
chained fixups, unknown pointer_format in segment #%d
chained fixups, pointer_format not same for all segments %d and %d
chained fixups, different max_valid_pointer values seen in different segments
chained fixups, page_start array overflows size
chained fixups, in segment #%d page_start[%d]=0x%04X exceeds page size
chain overflow index out of range %d (max=%d) in segment #%d
chained fixups, in segment #%d overflow page_start[%d]=0x%04X exceeds page size
chained fixups, in segment #%d overflow page_start[%d]=0x%04X is before previous at 0x%04X
chained fixups, imports_count (%d) exceeds max of %d
chained fixups, max_valid_pointer (0x%x) too small for image last vm address 0x%llx
DYLD_CHAINED_IMPORT
DYLD_CHAINED_IMPORT_ADDEND
DYLD_CHAINED_IMPORT_ADDEND64
DYLD_CHAINED_PTR_ARM64E
authenticated arm64e, 8-byte stride, target vmadddr
DYLD_CHAINED_PTR_64
generic 64-bit, 4-byte stride, target vmadddr
DYLD_CHAINED_PTR_32
generic 32-bit, 4-byte stride
DYLD_CHAINED_PTR_32_CACHE
DYLD_CHAINED_PTR_32_FIRMWARE
DYLD_CHAINED_PTR_64_OFFSET
generic 64-bit, 4-byte stride, target vmoffset
DYLD_CHAINED_PTR_ARM64E_KERNEL
authenticated arm64e, 4-byte stride, target vmoffset
DYLD_CHAINED_PTR_64_KERNEL_CACHE
authenticated arm64e, 4-byte stride, for kernel cache
DYLD_CHAINED_PTR_ARM64E_USERLAND
authenticated arm64e, 8-byte stride, target vmoffset
DYLD_CHAINED_PTR_ARM64E_FIRMWARE
authenticated arm64e, 4-byte stride, target vmaddr
DYLD_CHAINED_PTR_X86_64_KERNEL_CACHE
1-byte stride, for x86_64 kernel cache
DYLD_CHAINED_PTR_ARM64E_USERLAND24
uleb128 too big for uint64
malformed trie node, child node extends past end of trie
malformed trie child, nodeOffset=0x%llX out of range
malformed trie child, cycle to nodeOffset=0x%llX
