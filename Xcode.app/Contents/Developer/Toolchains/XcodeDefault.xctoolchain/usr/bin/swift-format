swift_format
ConfigurationLoader
FileAttributeType
NNSFileAttributeType
FileAttributeKey
NNSFileAttributeKey
Foundation
swift_format
FormatFrontend
swift_format
Frontend
FileToProcess
swift_format
LintFrontend
DumpConfiguration
Format
CodingKeys
Lint
CodingKeys
swift_format
LintFormatOptions
CodingKeys
swift_format
PerformanceMeasurementsOptions
CodingKeys
swift_format
SwiftFormatCommand
CodingKeys
swift_format
Diagnostic
Location
Severity
swift_format
DiagnosticsEngine
swift_format
FileHandleTextOutputStream
swift_format
FileIterator
swift_format
FormatError
swift_format
StderrDiagnosticPrinter
swift_format
VersionOptions
CodingKeys
Markdown
TypedChildIndexPath
Element
cmark_node
cmark_event_type
cmark_iter
__Unnamed_union_as
__Unnamed_union_footnote
cmark_syntax_extension
cmark_strbuf
cmark_iter_state
cmark_mem
cmark_html_renderer
cmark_renderer
cmark_node_type
_cmark_llist
delimiter
cmark_parser
cmark_escaping
cmark_map
cmark_map_entry
Markdown
DirectiveArgumentText
ParseError
LineSegment
DirectiveArgument
Markdown
Document
Markdown
LiteralMarkup
Markdown
Markup
SoftBreakDeleter
Markdown
MarkupChildren
Iterator
ReversedMarkupChildren
Markdown
_MarkupData
MarkupMetadata
AbsoluteRawMarkup
MarkupIdentifier
Markdown
PlainTextConvertibleMarkup
Markdown
RawMarkupHeader
RawMarkup
Error
RawMarkupData
Markdown
BlockDirective
Markdown
BlockQuote
Markdown
CustomBlock
Markdown
DoxygenParameter
Markdown
DoxygenReturns
Markdown
Checkbox
ListItem
Markdown
OrderedList
Markdown
UnorderedList
Markdown
Paragraph
Markdown
CodeBlock
Markdown
HTMLBlock
Markdown
Heading
Markdown
ThematicBreak
Markdown
Table
ColumnAlignment
Body
Cell
Markdown
TableCellContainer
Head
Markdown
_TableRowProtocol
Markdown
Replacement
Markdown
SourceLocation
Markdown
Emphasis
Markdown
Image
Markdown
InlineAttributes
Markdown
Link
Markdown
Strikethrough
Markdown
Strong
Markdown
CustomInline
Markdown
InlineCode
Markdown
InlineHTML
Markdown
LineBreak
Markdown
SoftBreak
Markdown
SymbolLink
Markdown
Text
Note
Important
Experiment
Warning
Attention
Author
Authors
Complexity
Copyright
Date
Invariant
MutatingVariant
Postcondition
Precondition
Remark
Requires
Since
ToDo
Version
Throws
SeeAlso
Markdown
Aside
Kind
Markdown
ParseContainer
PendingDoxygenCommand
PendingBlockDirective
TrimmedLine
CommandKind
ParseState
Markdown
MarkupConverterState
PendingTableBody
MarkupConversion
Markdown
LazySplitLines
Iterator
Markdown
ParseOptions
Markdown
RangeAdjuster
Markdown
RangeTracker
Markdown
MarkupRewriter
Markdown
BasicBlockContainer
Markdown
BasicInlineContainer
Markdown
BlockContainer
Markdown
BlockMarkup
Markdown
InlineContainer
Markdown
InlineMarkup
RecurringInlineMarkup
Markdown
ListItemContainer
Markdown
MarkupVisitor
Result
Markdown
MarkupWalker
Markdown
MarkupFormatter
Options
UnorderedListMarker
UseCodeFence
ThematicBreakCharacter
EmphasisMarker
PreferredHeadingStyle
OrderedListNumerals
PreferredLineLimit
SplittingElement
DoxygenCommandPrefix
State
BreakDeleter
Markdown
MarkupDumpOptions
MarkupTreeDumper
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@
@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
SwiftSyntax
AbsolutePosition
SwiftSyntax
AbsoluteRawSyntax
SwiftSyntax
AbsoluteSyntaxInfo
AbsoluteSyntaxPosition
SwiftSyntax
BumpPtrAllocator
SwiftSyntax
Identifier
RawIdentifier
SwiftSyntax
SyntaxMemoryLayout
Value
SwiftSyntax
RawSyntax
RawSyntaxData
Payload
Layout
MaterializedToken
ParsedToken
RecursiveRawSyntaxFlags
SwiftSyntax
RawSyntaxLayoutView
SwiftSyntax
RawSyntaxNodeProtocol
RawTokenSyntax
SwiftSyntax
RawSyntaxTokenView
SwiftSyntax
SourceEdit
SwiftSyntax
SourceLength
SwiftSyntax
SourceLocation
SourceRange
SourceLocationConverter
SourceLocationDirectiveArguments
CodingKeys
Error
SwiftSyntax
SourcePresence
SwiftSyntax
Syntax
Info
SyntaxNode
InfoImpl
NonRoot
Root
SwiftSyntax
SyntaxArena
ParsingSyntaxArena
RetainedSyntaxArena
SyntaxArenaRef
SwiftSyntax
SyntaxArenaAllocatedPointer
SyntaxArenaAllocatedBufferPointer
SwiftSyntax
SyntaxChildrenIndex
SyntaxChildren
RawSyntaxChildren
Iterator
NonNilRawSyntaxChildren
SyntaxChildrenIndexData
SwiftSyntax
SyntaxCollection
SyntaxCollectionIterator
SwiftSyntax
SyntaxHashable
SwiftSyntax
SyntaxIdentifier
SyntaxIndexInTree
SwiftSyntax
SyntaxNodeStructure
SyntaxChoice
SwiftSyntax
SyntaxProtocol
SyntaxChildChoices
SwiftSyntax
SyntaxText
SwiftSyntax
SyntaxTreeViewMode
SwiftSyntax
TokenDiagnostic
Severity
Kind
SwiftSyntax
TokenSequence
Iterator
ReversedTokenSequence
SwiftSyntax
TokenSyntax
SwiftSyntax
TriviaPosition
Trivia
SwiftSyntax
ByteSourceRange
IncrementalEdit
SwiftSyntax
Keyword
SwiftSyntax
SyntaxAnyVisitor
SwiftSyntax
DeclSyntaxProtocol
DeclSyntax
_LeafDeclSyntaxNodeProtocol
ExprSyntaxProtocol
ExprSyntax
_LeafExprSyntaxNodeProtocol
PatternSyntaxProtocol
PatternSyntax
_LeafPatternSyntaxNodeProtocol
StmtSyntaxProtocol
StmtSyntax
_LeafStmtSyntaxNodeProtocol
TypeSyntaxProtocol
TypeSyntax
_LeafTypeSyntaxNodeProtocol
_LeafSyntaxNodeProtocol
SwiftSyntax
AccessorDeclListSyntax
ArrayElementListSyntax
AttributeListSyntax
Element
AvailabilityArgumentListSyntax
CatchClauseListSyntax
CatchItemListSyntax
ClosureCaptureListSyntax
ClosureParameterListSyntax
ClosureShorthandParameterListSyntax
CodeBlockItemListSyntax
CompositionTypeElementListSyntax
ConditionElementListSyntax
DeclModifierListSyntax
DeclNameArgumentListSyntax
DesignatedTypeListSyntax
DictionaryElementListSyntax
DifferentiabilityArgumentListSyntax
DocumentationAttributeArgumentListSyntax
EffectsAttributeArgumentListSyntax
EnumCaseElementListSyntax
EnumCaseParameterListSyntax
ExprListSyntax
FunctionParameterListSyntax
GenericArgumentListSyntax
GenericParameterListSyntax
GenericRequirementListSyntax
IfConfigClauseListSyntax
ImportPathComponentListSyntax
InheritedTypeListSyntax
KeyPathComponentListSyntax
LabeledExprListSyntax
LifetimeSpecifierArgumentListSyntax
MemberBlockItemListSyntax
MultipleTrailingClosureElementListSyntax
ObjCSelectorPieceListSyntax
PatternBindingListSyntax
PlatformVersionItemListSyntax
PrecedenceGroupAttributeListSyntax
PrecedenceGroupNameListSyntax
PrimaryAssociatedTypeListSyntax
SimpleStringLiteralSegmentListSyntax
SpecializeAttributeArgumentListSyntax
StringLiteralSegmentListSyntax
SwitchCaseItemListSyntax
SwitchCaseListSyntax
TuplePatternElementListSyntax
TupleTypeElementListSyntax
TypeSpecifierListSyntax
UnexpectedNodesSyntax
VersionComponentListSyntax
YieldedExpressionListSyntax
SwiftSyntax
SyntaxEnum
DeclSyntaxEnum
ExprSyntaxEnum
PatternSyntaxEnum
StmtSyntaxEnum
TypeSyntaxEnum
SwiftSyntax
SyntaxKind
SwiftSyntax
SyntaxRewriter
SwiftSyntax
BracedSyntax
DeclGroupSyntax
EffectSpecifiersSyntax
FreestandingMacroExpansionSyntax
NamedDeclSyntax
MissingNodeSyntax
ParenthesizedSyntax
WithAttributesSyntax
WithCodeBlockSyntax
WithGenericParametersSyntax
WithModifiersSyntax
WithOptionalCodeBlockSyntax
WithStatementsSyntax
WithTrailingCommaSyntax
SwiftSyntax
SyntaxVisitorContinueKind
SyntaxVisitor
SwiftSyntax
TokenKind
RawTokenKind
 !&'()*+-.1
SwiftSyntax
TriviaPiece
RawTriviaPiece
SwiftSyntax
RawAccessorBlockSyntax
Accessors
RawAccessorDeclListSyntax
RawAccessorDeclSyntax
RawAccessorEffectSpecifiersSyntax
RawAccessorParametersSyntax
RawActorDeclSyntax
RawArrayElementListSyntax
RawArrayElementSyntax
RawArrayExprSyntax
RawArrayTypeSyntax
RawArrowExprSyntax
RawAsExprSyntax
RawAssignmentExprSyntax
RawAssociatedTypeDeclSyntax
RawAttributeListSyntax
Element
RawAttributeSyntax
Arguments
RawAttributedTypeSyntax
RawAvailabilityArgumentListSyntax
RawAvailabilityArgumentSyntax
Argument
RawAvailabilityConditionSyntax
RawAvailabilityLabeledArgumentSyntax
Value
RawAwaitExprSyntax
RawBackDeployedAttributeArgumentsSyntax
RawBinaryOperatorExprSyntax
RawBooleanLiteralExprSyntax
RawBorrowExprSyntax
RawBreakStmtSyntax
SwiftSyntax
Raw_CanImportExprSyntax
Raw_CanImportVersionInfoSyntax
RawCatchClauseListSyntax
RawCatchClauseSyntax
RawCatchItemListSyntax
RawCatchItemSyntax
RawClassDeclSyntax
RawClassRestrictionTypeSyntax
RawClosureCaptureClauseSyntax
RawClosureCaptureListSyntax
RawClosureCaptureSpecifierSyntax
RawClosureCaptureSyntax
RawClosureExprSyntax
RawClosureParameterClauseSyntax
RawClosureParameterListSyntax
RawClosureParameterSyntax
RawClosureShorthandParameterListSyntax
RawClosureShorthandParameterSyntax
RawClosureSignatureSyntax
ParameterClause
RawCodeBlockItemListSyntax
RawCodeBlockItemSyntax
Item
RawCodeBlockSyntax
RawCompositionTypeElementListSyntax
RawCompositionTypeElementSyntax
RawCompositionTypeSyntax
RawConditionElementListSyntax
RawConditionElementSyntax
Condition
RawConformanceRequirementSyntax
RawConsumeExprSyntax
RawContinueStmtSyntax
RawConventionAttributeArgumentsSyntax
RawConventionWitnessMethodAttributeArgumentsSyntax
RawCopyExprSyntax
SwiftSyntax
RawDeclSyntaxNodeProtocol
RawDeclModifierDetailSyntax
RawDeclModifierListSyntax
RawDeclModifierSyntax
RawDeclNameArgumentListSyntax
RawDeclNameArgumentSyntax
RawDeclNameArgumentsSyntax
RawDeclReferenceExprSyntax
RawDeclSyntax
RawDeferStmtSyntax
RawDeinitializerDeclSyntax
RawDeinitializerEffectSpecifiersSyntax
RawDerivativeAttributeArgumentsSyntax
RawDesignatedTypeListSyntax
RawDesignatedTypeSyntax
RawDictionaryElementListSyntax
RawDictionaryElementSyntax
RawDictionaryExprSyntax
Content
RawDictionaryTypeSyntax
RawDifferentiabilityArgumentListSyntax
RawDifferentiabilityArgumentSyntax
RawDifferentiabilityArgumentsSyntax
RawDifferentiabilityWithRespectToArgumentSyntax
Arguments
RawDifferentiableAttributeArgumentsSyntax
RawDiscardAssignmentExprSyntax
RawDiscardStmtSyntax
RawDoExprSyntax
RawDoStmtSyntax
RawDocumentationAttributeArgumentListSyntax
RawDocumentationAttributeArgumentSyntax
Value
RawDynamicReplacementAttributeArgumentsSyntax
SwiftSyntax
RawExprSyntaxNodeProtocol
RawEditorPlaceholderDeclSyntax
RawEditorPlaceholderExprSyntax
RawEffectsAttributeArgumentListSyntax
RawEnumCaseDeclSyntax
RawEnumCaseElementListSyntax
RawEnumCaseElementSyntax
RawEnumCaseParameterClauseSyntax
RawEnumCaseParameterListSyntax
RawEnumCaseParameterSyntax
RawEnumDeclSyntax
RawExposeAttributeArgumentsSyntax
RawExprListSyntax
RawExprSyntax
RawExpressionPatternSyntax
RawExpressionSegmentSyntax
RawExpressionStmtSyntax
RawExtensionDeclSyntax
RawFallThroughStmtSyntax
RawFloatLiteralExprSyntax
RawForStmtSyntax
RawForceUnwrapExprSyntax
RawFunctionCallExprSyntax
RawFunctionDeclSyntax
RawFunctionEffectSpecifiersSyntax
RawFunctionParameterClauseSyntax
RawFunctionParameterListSyntax
RawFunctionParameterSyntax
RawFunctionSignatureSyntax
RawFunctionTypeSyntax
SwiftSyntax
RawGenericArgumentClauseSyntax
RawGenericArgumentListSyntax
RawGenericArgumentSyntax
RawGenericParameterClauseSyntax
RawGenericParameterListSyntax
RawGenericParameterSyntax
RawGenericRequirementListSyntax
RawGenericRequirementSyntax
Requirement
RawGenericSpecializationExprSyntax
RawGenericWhereClauseSyntax
RawGuardStmtSyntax
RawIdentifierPatternSyntax
RawIdentifierTypeSyntax
RawIfConfigClauseListSyntax
RawIfConfigClauseSyntax
Elements
RawIfConfigDeclSyntax
RawIfExprSyntax
ElseBody
RawImplementsAttributeArgumentsSyntax
RawImplicitlyUnwrappedOptionalTypeSyntax
RawImportDeclSyntax
RawImportPathComponentListSyntax
RawImportPathComponentSyntax
RawInOutExprSyntax
RawInfixOperatorExprSyntax
RawInheritanceClauseSyntax
RawInheritedTypeListSyntax
RawInheritedTypeSyntax
RawInitializerClauseSyntax
RawInitializerDeclSyntax
RawIntegerLiteralExprSyntax
RawIsExprSyntax
RawIsTypePatternSyntax
SwiftSyntax
RawKeyPathComponentListSyntax
RawKeyPathComponentSyntax
Component
RawKeyPathExprSyntax
RawKeyPathOptionalComponentSyntax
RawKeyPathPropertyComponentSyntax
RawKeyPathSubscriptComponentSyntax
RawLabeledExprListSyntax
RawLabeledExprSyntax
RawLabeledSpecializeArgumentSyntax
RawLabeledStmtSyntax
RawLayoutRequirementSyntax
RawLifetimeSpecifierArgumentListSyntax
RawLifetimeSpecifierArgumentSyntax
RawLifetimeTypeSpecifierSyntax
RawMacroDeclSyntax
RawMacroExpansionDeclSyntax
RawMacroExpansionExprSyntax
RawMatchingPatternConditionSyntax
RawMemberAccessExprSyntax
RawMemberBlockItemListSyntax
RawMemberBlockItemSyntax
RawMemberBlockSyntax
RawMemberTypeSyntax
RawMetatypeTypeSyntax
RawMissingDeclSyntax
RawMissingExprSyntax
RawMissingPatternSyntax
RawMissingStmtSyntax
RawMissingSyntax
RawMissingTypeSyntax
RawMultipleTrailingClosureElementListSyntax
RawMultipleTrailingClosureElementSyntax
RawNamedOpaqueReturnTypeSyntax
RawNilLiteralExprSyntax
SwiftSyntax
RawPatternSyntaxNodeProtocol
RawObjCSelectorPieceListSyntax
RawObjCSelectorPieceSyntax
RawOpaqueReturnTypeOfAttributeArgumentsSyntax
RawOperatorDeclSyntax
RawOperatorPrecedenceAndTypesSyntax
RawOptionalBindingConditionSyntax
RawOptionalChainingExprSyntax
RawOptionalTypeSyntax
RawOriginallyDefinedInAttributeArgumentsSyntax
RawPackElementExprSyntax
RawPackElementTypeSyntax
RawPackExpansionExprSyntax
RawPackExpansionTypeSyntax
RawPatternBindingListSyntax
RawPatternBindingSyntax
RawPatternExprSyntax
RawPatternSyntax
RawPlatformVersionItemListSyntax
RawPlatformVersionItemSyntax
RawPlatformVersionSyntax
RawPostfixIfConfigExprSyntax
RawPostfixOperatorExprSyntax
RawPoundSourceLocationArgumentsSyntax
RawPoundSourceLocationSyntax
RawPrecedenceGroupAssignmentSyntax
RawPrecedenceGroupAssociativitySyntax
RawPrecedenceGroupAttributeListSyntax
Element
RawPrecedenceGroupDeclSyntax
RawPrecedenceGroupNameListSyntax
RawPrecedenceGroupNameSyntax
RawPrecedenceGroupRelationSyntax
RawPrefixOperatorExprSyntax
RawPrimaryAssociatedTypeClauseSyntax
RawPrimaryAssociatedTypeListSyntax
RawPrimaryAssociatedTypeSyntax
RawProtocolDeclSyntax
SwiftSyntax
RawStmtSyntaxNodeProtocol
RawRegexLiteralExprSyntax
RawRepeatStmtSyntax
RawReturnClauseSyntax
RawReturnStmtSyntax
RawSameTypeRequirementSyntax
RawSequenceExprSyntax
RawSimpleStringLiteralExprSyntax
RawSimpleStringLiteralSegmentListSyntax
RawSimpleTypeSpecifierSyntax
RawSomeOrAnyTypeSyntax
RawSourceFileSyntax
RawSpecializeAttributeArgumentListSyntax
Element
RawSpecializeAvailabilityArgumentSyntax
RawSpecializeTargetFunctionArgumentSyntax
RawStmtSyntax
RawStringLiteralExprSyntax
RawStringLiteralSegmentListSyntax
RawStringSegmentSyntax
RawStructDeclSyntax
RawSubscriptCallExprSyntax
RawSubscriptDeclSyntax
RawSuperExprSyntax
RawSuppressedTypeSyntax
RawSwitchCaseItemListSyntax
RawSwitchCaseItemSyntax
RawSwitchCaseLabelSyntax
RawSwitchCaseListSyntax
RawSwitchCaseSyntax
Label
RawSwitchDefaultLabelSyntax
RawSwitchExprSyntax
SwiftSyntax
RawTypeSyntaxNodeProtocol
RawTernaryExprSyntax
RawThenStmtSyntax
RawThrowStmtSyntax
RawThrowsClauseSyntax
RawTryExprSyntax
RawTupleExprSyntax
RawTuplePatternElementListSyntax
RawTuplePatternElementSyntax
RawTuplePatternSyntax
RawTupleTypeElementListSyntax
RawTupleTypeElementSyntax
RawTupleTypeSyntax
RawTypeAliasDeclSyntax
RawTypeAnnotationSyntax
RawTypeEffectSpecifiersSyntax
RawTypeExprSyntax
RawTypeInitializerClauseSyntax
RawTypeSpecifierListSyntax
Element
RawTypeSyntax
RawUnavailableFromAsyncAttributeArgumentsSyntax
RawUnderscorePrivateAttributeArgumentsSyntax
RawUnexpectedNodesSyntax
RawUnresolvedAsExprSyntax
RawUnresolvedIsExprSyntax
RawUnresolvedTernaryExprSyntax
RawValueBindingPatternSyntax
RawVariableDeclSyntax
RawVersionComponentListSyntax
RawVersionComponentSyntax
RawVersionTupleSyntax
RawWhereClauseSyntax
RawWhileStmtSyntax
RawWildcardPatternSyntax
RawYieldStmtSyntax
YieldedExpressions
RawYieldedExpressionListSyntax
RawYieldedExpressionSyntax
RawYieldedExpressionsClauseSyntax
SwiftSyntax
AccessorBlockSyntax
Accessors
AccessorDeclSyntax
AccessorEffectSpecifiersSyntax
AccessorParametersSyntax
ActorDeclSyntax
ArrayElementSyntax
ArrayExprSyntax
ArrayTypeSyntax
ArrowExprSyntax
AsExprSyntax
AssignmentExprSyntax
AssociatedTypeDeclSyntax
AttributeSyntax
Arguments
AttributedTypeSyntax
AvailabilityArgumentSyntax
Argument
AvailabilityConditionSyntax
AvailabilityLabeledArgumentSyntax
Value
AwaitExprSyntax
BackDeployedAttributeArgumentsSyntax
BinaryOperatorExprSyntax
BooleanLiteralExprSyntax
BorrowExprSyntax
BreakStmtSyntax
SwiftSyntax
_CanImportExprSyntax
_CanImportVersionInfoSyntax
CatchClauseSyntax
CatchItemSyntax
ClassDeclSyntax
ClassRestrictionTypeSyntax
ClosureCaptureClauseSyntax
ClosureCaptureSpecifierSyntax
ClosureCaptureSyntax
ClosureExprSyntax
ClosureParameterClauseSyntax
ClosureParameterSyntax
ClosureShorthandParameterSyntax
ClosureSignatureSyntax
ParameterClause
CodeBlockItemSyntax
Item
CodeBlockSyntax
CompositionTypeElementSyntax
CompositionTypeSyntax
ConditionElementSyntax
Condition
ConformanceRequirementSyntax
ConsumeExprSyntax
ContinueStmtSyntax
ConventionAttributeArgumentsSyntax
ConventionWitnessMethodAttributeArgumentsSyntax
CopyExprSyntax
SwiftSyntax
DeclModifierDetailSyntax
DeclModifierSyntax
DeclNameArgumentSyntax
DeclNameArgumentsSyntax
DeclReferenceExprSyntax
DeferStmtSyntax
DeinitializerDeclSyntax
DeinitializerEffectSpecifiersSyntax
DerivativeAttributeArgumentsSyntax
DesignatedTypeSyntax
DictionaryElementSyntax
DictionaryExprSyntax
Content
DictionaryTypeSyntax
DifferentiabilityArgumentSyntax
DifferentiabilityArgumentsSyntax
DifferentiabilityWithRespectToArgumentSyntax
Arguments
DifferentiableAttributeArgumentsSyntax
DiscardAssignmentExprSyntax
DiscardStmtSyntax
DoExprSyntax
DoStmtSyntax
DocumentationAttributeArgumentSyntax
Value
DynamicReplacementAttributeArgumentsSyntax
SwiftSyntax
EditorPlaceholderDeclSyntax
EditorPlaceholderExprSyntax
EnumCaseDeclSyntax
EnumCaseElementSyntax
EnumCaseParameterClauseSyntax
EnumCaseParameterSyntax
EnumDeclSyntax
ExposeAttributeArgumentsSyntax
ExpressionPatternSyntax
ExpressionSegmentSyntax
ExpressionStmtSyntax
ExtensionDeclSyntax
FallThroughStmtSyntax
FloatLiteralExprSyntax
ForStmtSyntax
ForceUnwrapExprSyntax
FunctionCallExprSyntax
FunctionDeclSyntax
FunctionEffectSpecifiersSyntax
FunctionParameterClauseSyntax
FunctionParameterSyntax
FunctionSignatureSyntax
FunctionTypeSyntax
SwiftSyntax
GenericArgumentClauseSyntax
GenericArgumentSyntax
GenericParameterClauseSyntax
GenericParameterSyntax
GenericRequirementSyntax
Requirement
GenericSpecializationExprSyntax
GenericWhereClauseSyntax
GuardStmtSyntax
IdentifierPatternSyntax
IdentifierTypeSyntax
IfConfigClauseSyntax
Elements
IfConfigDeclSyntax
IfExprSyntax
ElseBody
ImplementsAttributeArgumentsSyntax
ImplicitlyUnwrappedOptionalTypeSyntax
ImportDeclSyntax
ImportPathComponentSyntax
InOutExprSyntax
InfixOperatorExprSyntax
InheritanceClauseSyntax
InheritedTypeSyntax
InitializerClauseSyntax
InitializerDeclSyntax
IntegerLiteralExprSyntax
IsExprSyntax
IsTypePatternSyntax
SwiftSyntax
KeyPathComponentSyntax
Component
KeyPathExprSyntax
KeyPathOptionalComponentSyntax
KeyPathPropertyComponentSyntax
KeyPathSubscriptComponentSyntax
LabeledExprSyntax
LabeledSpecializeArgumentSyntax
LabeledStmtSyntax
LayoutRequirementSyntax
LifetimeSpecifierArgumentSyntax
LifetimeTypeSpecifierSyntax
MacroDeclSyntax
MacroExpansionDeclSyntax
MacroExpansionExprSyntax
MatchingPatternConditionSyntax
MemberAccessExprSyntax
MemberBlockItemSyntax
MemberBlockSyntax
MemberTypeSyntax
MetatypeTypeSyntax
MissingDeclSyntax
MissingExprSyntax
MissingPatternSyntax
MissingStmtSyntax
MissingSyntax
MissingTypeSyntax
MultipleTrailingClosureElementSyntax
NamedOpaqueReturnTypeSyntax
NilLiteralExprSyntax
SwiftSyntax
ObjCSelectorPieceSyntax
OpaqueReturnTypeOfAttributeArgumentsSyntax
OperatorDeclSyntax
OperatorPrecedenceAndTypesSyntax
OptionalBindingConditionSyntax
OptionalChainingExprSyntax
OptionalTypeSyntax
OriginallyDefinedInAttributeArgumentsSyntax
PackElementExprSyntax
PackElementTypeSyntax
PackExpansionExprSyntax
PackExpansionTypeSyntax
PatternBindingSyntax
PatternExprSyntax
PlatformVersionItemSyntax
PlatformVersionSyntax
PostfixIfConfigExprSyntax
PostfixOperatorExprSyntax
PoundSourceLocationArgumentsSyntax
PoundSourceLocationSyntax
PrecedenceGroupAssignmentSyntax
PrecedenceGroupAssociativitySyntax
PrecedenceGroupDeclSyntax
PrecedenceGroupNameSyntax
PrecedenceGroupRelationSyntax
PrefixOperatorExprSyntax
PrimaryAssociatedTypeClauseSyntax
PrimaryAssociatedTypeSyntax
ProtocolDeclSyntax
SwiftSyntax
RegexLiteralExprSyntax
RepeatStmtSyntax
ReturnClauseSyntax
ReturnStmtSyntax
SameTypeRequirementSyntax
SequenceExprSyntax
SimpleStringLiteralExprSyntax
SimpleTypeSpecifierSyntax
SomeOrAnyTypeSyntax
SourceFileSyntax
SpecializeAvailabilityArgumentSyntax
SpecializeTargetFunctionArgumentSyntax
StringLiteralExprSyntax
StringSegmentSyntax
StructDeclSyntax
SubscriptCallExprSyntax
SubscriptDeclSyntax
SuperExprSyntax
SuppressedTypeSyntax
SwitchCaseItemSyntax
SwitchCaseLabelSyntax
SwitchCaseSyntax
Label
SwitchDefaultLabelSyntax
SwitchExprSyntax
SwiftSyntax
TernaryExprSyntax
ThenStmtSyntax
ThrowStmtSyntax
ThrowsClauseSyntax
TryExprSyntax
TupleExprSyntax
TuplePatternElementSyntax
TuplePatternSyntax
TupleTypeElementSyntax
TupleTypeSyntax
TypeAliasDeclSyntax
TypeAnnotationSyntax
TypeEffectSpecifiersSyntax
TypeExprSyntax
TypeInitializerClauseSyntax
UnavailableFromAsyncAttributeArgumentsSyntax
UnderscorePrivateAttributeArgumentsSyntax
UnresolvedAsExprSyntax
UnresolvedIsExprSyntax
UnresolvedTernaryExprSyntax
ValueBindingPatternSyntax
VariableDeclSyntax
VersionComponentSyntax
VersionTupleSyntax
WhereClauseSyntax
WhileStmtSyntax
WildcardPatternSyntax
YieldStmtSyntax
YieldedExpressions
YieldedExpressionSyntax
YieldedExpressionsClauseSyntax
bjc_runtime_base_swift_native_obsWithNativeOwnermutableAddressWiRefCountedObject_NativeRefCountetedValueProperty_projectedValuePAddressWithOwneraddressWithNativailableFromAsync_unavailableFromized
_compilerInitialedIn
_originallyDefinSelf
_resultDependsOnress
unsafeMutableAddnamicReplacement_dynamicReplacemjcImplementation_objcImplementataqueReturnTypeOf_opaqueReturnTypckageDescription_PackageDescript_underlyingVersion
_RefCountedObject
_objcRuntimeNameaddressWithOwner
SwiftSyntaxBuilder
SwiftSyntaxBuilder
DeclSyntaxParseable
SwiftSyntaxBuilder
Indenter
SwiftSyntaxBuilder
ListBuilder
FinalResult
SwiftSyntaxBuilder
SyntaxStringInterpolation
SyntaxExpressibleByStringInterpolation
SyntaxStringInterpolationInvalidNodeTypeError
ExpressibleByLiteralSyntax
LiteralType
InterpolatedSyntaxNode
UnexpectedTrivia
SyntaxStringInterpolationDiagnosticError
SwiftSyntaxBuilder
SyntaxNodeString
HasTrailingCodeBlock
HasTrailingMemberDeclBlock
SwiftSyntaxBuilder
AccessorDeclListBuilder
ArrayElementListBuilder
AttributeListBuilder
AvailabilityArgumentListBuilder
CatchClauseListBuilder
CatchItemListBuilder
ClosureCaptureListBuilder
ClosureParameterListBuilder
ClosureShorthandParameterListBuilder
CodeBlockItemListBuilder
CompositionTypeElementListBuilder
ConditionElementListBuilder
DeclModifierListBuilder
DeclNameArgumentListBuilder
DesignatedTypeListBuilder
DictionaryElementListBuilder
DifferentiabilityArgumentListBuilder
DocumentationAttributeArgumentListBuilder
EffectsAttributeArgumentListBuilder
EnumCaseElementListBuilder
EnumCaseParameterListBuilder
ExprListBuilder
FunctionParameterListBuilder
GenericArgumentListBuilder
GenericParameterListBuilder
GenericRequirementListBuilder
IfConfigClauseListBuilder
ImportPathComponentListBuilder
InheritedTypeListBuilder
KeyPathComponentListBuilder
LabeledExprListBuilder
LifetimeSpecifierArgumentListBuilder
MemberBlockItemListBuilder
MultipleTrailingClosureElementListBuilder
ObjCSelectorPieceListBuilder
PatternBindingListBuilder
PlatformVersionItemListBuilder
PrecedenceGroupAttributeListBuilder
PrecedenceGroupNameListBuilder
PrimaryAssociatedTypeListBuilder
SimpleStringLiteralSegmentListBuilder
SpecializeAttributeArgumentListBuilder
StringLiteralSegmentListBuilder
SwitchCaseItemListBuilder
SwitchCaseListBuilder
TuplePatternElementListBuilder
TupleTypeElementListBuilder
TypeSpecifierListBuilder
UnexpectedNodesBuilder
VersionComponentListBuilder
YieldedExpressionListBuilder
SwiftSyntaxBuilder
SwiftBasicFormat
BasicFormat
SwiftBasicFormat
IndentationInferrer
CAccessLevelModifier
AccessorIntroducer
IfConfigContinuationClauseStartKeyword
CollectionKind
SwiftParser
IncrementalParseTransition
ConcurrentEdits
IncrementalParseLookup
ConcurrentEditsError
SyntaxCursor
SwiftParser
IdentifierCheckContext
SwiftParser
StringLiteralKind
Cursor
Result
UnknownCharactersClassification
LexingDiagnostic
StateTransition
State
StateStack
NewlinePresence
Position
TriviaLexingMode
Lexeme
Flags
LexemeSequence
SwiftParser
Lexer
Element
SwiftParser
RegexLiteralLexemes
Builder
Kind
SkippingState
Lookahead
BracketedTokens
AccessLevelModifier
SwiftParser
NominalTypeDeclarationTrait
PrimaryOrGenerics
SwiftParser
RawParameterTrait
RawParameterListTrait
ParameterSyntax
RawParameterClauseTrait
Parameters
SwiftParser
IncrementalParseResult
SwiftParser
Parser
LookaheadTracker
LookaheadTrackerOwner
LookaheadRanges
SwiftParser
AsyncEffectSpecifier
ThrowsEffectSpecifier
EffectSpecifier
RawMisplacedEffectSpecifiersTrait
MisspelledAsyncTokenKinds CorrectAsyncTokenKinds MisspelledThrowsTokenKinds CorrectThrowsTokenKinds
RawEffectSpecifiersTrait
MisspelledThrowsTokenKinds
MisspelledAsyncTokenKinds
CorrectThrowsTokenKinds
CorrectAsyncTokenKinds
SwiftParser
StringLiteralExpressionIndentationChecker
SwiftVersion
SwiftParser
UnexpectedNodesCombinable
SwiftParser
TokenConsumer
Token
SwiftParser
TokenPrecedence
SwiftParser
TokenSpec
SwiftParser
TokenSpecSet
DeclarationStart
DeclarationModifier
PostfixOperatorLike
BinaryOperatorLike
OperatorLike
AccessorModifier
SwitchCaseStart
CanBeStatementStart
EitherTokenSpecSet
PureDeclarationKeyword
SwiftParser
TriviaParser
ExperimentalFeatures
SwiftParser
SyntaxParseable
SwiftParser
AccessorSpecifierOptions
QuestionOrExclamationMarkOptions
AvailabilityKeywordOptions
LabelOptions
LiteralOptions
SpecifierOptions
DetailOptions
FirstNameOptions
SecondNameOptions
NameOptions
ConsumeKeywordOptions
BaseNameOptions
ArgumentOptions
KindSpecifierOptions
AsyncSpecifierOptions
IdentifierOptions
PoundKeywordOptions
ImportKindSpecifierOptions
OptionalMarkOptions
LayoutSpecifierOptions
ParameterOptions
MetatypeSpecifierOptions
FixitySpecifierOptions
BindingSpecifierOptions
ValueOptions
HigherThanOrLowerThanLabelOptions
EqualOptions
OpeningQuoteOptions
ClosingQuoteOptions
SomeOrAnySpecifierOptions
ThrowsSpecifierOptions
SwiftDiagnostics
Diagnostic
DiagnosticsError
SwiftDiagnostics
ANSIDiagnosticDecorator
 !"#$%'
SwiftDiagnostics
BasicDiagnosticDecorator
SwiftDiagnostics
DiagnosticDecorator
SwiftDiagnostics
DiagnosticsFormatter
AnnotatedSourceLine
SwiftDiagnostics
FixItMessage
FixIt
Change
SwiftDiagnostics
GroupedDiagnostics
SourceFileID
SourceFile
SwiftDiagnostics
MessageID
DiagnosticSeverity
DiagnosticMessage
SwiftDiagnostics
NoteMessage
Note
SwiftParserDiagnostics
PresentMakingFormatter
MultiNodeChange
StaticTokenError
StaticTokenWarning
SwiftParserDiagnostics
TokenError
TokenWarning
ExtraneousLeadingWhitespaceError
ExtraneousTrailingWhitespaceError
InvalidFloatingPointExponentDigit
Kind
InvalidDigitInIntegerLiteral
ErrorToWarningDowngrade
SwiftParserDiagnostics
NoNewlinesFormat
HasTokenChecker
MissingNodesError
MatchingOpeningTokenNote
InsertTokenFixIt
NodesDescriptionPart
SwiftParserDiagnostics
MultiLineStringLiteralIndentationDiagnosticsGenerator
InProgressDiagnostic
SwiftParserDiagnostics
ParseDiagnosticsGenerator
SwiftParserDiagnostics
ParserError
ParserNote
ParserFixIt
StaticParserError
AsyncMustPrecedeThrows
AvailabilityConditionAsExpression
AvailabilityConditionInExpression
CannotParseVersionTuple
DeinitializerSignatureError
DuplicateEffectSpecifiers
EffectsSpecifierAfterArrow
ExtraneousCodeAtTopLevel
ExtraneousWhitespace
IdentifierNotAllowedInOperatorName
InvalidFloatLiteralMissingLeadingZero
InvalidIdentifierError
InvalidIndentationInMultiLineStringLiteralError
Kind
MissingAttributeArgument
MissingBothStringQuotesOfStringSegments
MissingConditionInStatement
MissingExpressionInStatement
NegatedAvailabilityCondition
SpaceSeparatedIdentifiersError
SpecifierOnParameterName
TokensNotAllowedInOperatorName
TrailingVersionAreIgnored
TryCannotBeUsed
UnexpectedNodesError
UnknownDirectiveError
UnknownParameterError
EffectSpecifierDeclaredHere
StaticParserNote
StaticParserFixIt
InsertFixIt
MoveTokensAfterFixIt
MoveTokensInFrontOfFixIt
MoveTokensInFrontOfTypeFixIt
RemoveRedundantFixIt
RemoveNodesFixIt
ReplaceTokensFixIt
SwiftParserDiagnostics
PresentNodeChecker
MissingMaker
SwiftOperators
OperatorKind
Operator
SwiftOperators
OperatorError
SequenceFolder
OperatorAndGroupVisitor
SwiftOperators
OperatorTable
SwiftOperators
PrecedenceGraph
SwiftOperators
Associativity
PrecedenceRelation
Kind
PrecedenceGroup
NLTag
NLTagScheme
NaturalLanguage
SwiftFormat
Configuration
FileScopedDeclarationPrivacyConfiguration
AccessLevel
NoAssignmentInExpressionsConfiguration
CodingKeys
SwiftFormat
DebugOptions
SwiftFormat
Finding
Severity
Location
Message
Note
SwiftFormat
FindingCategorizing
SwiftFormat
Indent
CodingKeys
SwiftFormat
SwiftFormatError
SwiftFormat
SwiftFormatter
SwiftFormat
SwiftLinter
SwiftFormat
Context
XCTestImportState
SwiftFormat
DocumentationComment
Parameter
ParameterLayout
ParameterOutlineMarkupRewriter
SimpleFieldMarkupRewriter
SwiftFormat
DocumentationCommentText
Introducer
Line
SwiftFormat
FindingEmitter
SwiftFormat
ImportsXCTestVisitor
SwiftFormat
DowngradedDiagnosticMessage
SwiftFormat
LintPipeline
SwiftFormat
Rule
FindingAnchor
SwiftFormat
RuleBasedFindingCategory
SwiftFormat
RuleMask
RuleStatusCollectionVisitor
RuleStatusDirectiveMatch
SwiftFormat
RuleRegistry
SwiftFormat
RuleState
SwiftFormat
SyntaxFormatRule
SwiftFormat
SyntaxLintRule
SwiftFormat
WithSemicolonSyntax
SwiftFormat
Comment
Kind
SwiftFormat
PrettyPrinter
ActiveBreakingContext
ActiveOpenBreak
BreakingBehavior
SwiftFormat
PrettyPrintFindingCategory
SwiftFormat
BreakKind
Token
OpenBreakKind
PrinterControlKind
NewlineBehavior
GroupBreakStyle
SwiftFormat
TokenStreamCreator
CommentMovingRewriter
CallingExprSyntaxProtocol
SwiftFormat
Verbatim
IndentingBehavior
SwiftFormat
WhitespaceFindingCategory
SwiftFormat
WhitespaceLinter
WhitespaceIndentation
SwiftFormat
AllPublicDeclarationsHaveDocumentation
SwiftFormat
AlwaysUseLiteralForEmptyCollectionInit
SwiftFormat
AlwaysUseLowerCamelCase
SwiftFormat
AmbiguousTrailingClosureOverload
SwiftFormat
BeginDocumentationCommentWithOneLineSummary
SwiftFormat
DoNotUseSemicolons
SwiftFormat
DontRepeatTypeInStaticProperties
SwiftFormat
FileScopedDeclarationPrivacy
SwiftFormat
FullyIndirectEnum
SwiftFormat
GroupNumericLiterals
SwiftFormat
IdentifiersMustBeASCII
SwiftFormat
NeverForceUnwrap
SwiftFormat
NeverUseForceTry
SwiftFormat
NeverUseImplicitlyUnwrappedOptionals
SwiftFormat
NoAccessLevelOnExtensionDeclaration
SwiftFormat
NoAssignmentInExpressions
SwiftFormat
NoBlockComments
SwiftFormat
NoCasesWithOnlyFallthrough
SwiftFormat
NoEmptyTrailingClosureParentheses
SwiftFormat
NoLabelsInCasePatterns
SwiftFormat
NoLeadingUnderscores
SwiftFormat
NoParensAroundConditions
SwiftFormat
NoPlaygroundLiterals
SwiftFormat
NoVoidReturnOnFunctionSignature
SwiftFormat
OmitExplicitReturns
SwiftFormat
OneCasePerLine
SwiftFormat
OneVariableDeclarationPerLine
SwiftFormat
OnlyOneTrailingClosureArgument
SwiftFormat
OrderedImports
LineType
Line
SyntaxNode
SwiftFormat
ReplaceForEachWithForLoop
SwiftFormat
ReturnVoidInsteadOfEmptyTuple
SwiftFormat
TypeNamesShouldBeCapitalized
SwiftFormat
UseEarlyExits
SwiftFormat
UseExplicitNilCheckInConditions
SwiftFormat
UseLetInEveryBoundCaseVariable
SwiftFormat
UseShorthandTypeNames
SwiftFormat
UseSingleLinePropertyGetter
SwiftFormat
UseSynthesizedInitializer
SwiftFormat
UseTripleSlashForDocumentationComments
SwiftFormat
UseWhereClausesInForLoops
SwiftFormat
ValidateDocumentationComments
ArgumentParser
CompletionShell
ArgumentParser
Argument
ArgumentArrayParsingStrategy
ArgumentParser
ArgumentHelp
ArgumentParser
ArgumentVisibility
Representation
ArgumentParser
CompletionKind
Kind
ArgumentParser
ValidationError
ExitCode
CleanExit
Representation
ArgumentParser
Flag
FlagInversion
FlagExclusivity
Representation
ArgumentParser
NameSpecification
Element
Representation
ArgumentParser
Option
SingleValueParsingStrategy
ArrayParsingStrategy
ArgumentParser
OptionGroup
ArgumentParser
AsyncParsableCommand
AsyncMainProtocol
Command
ArgumentParser
CommandConfiguration
ArgumentParser
EnumerableFlag
ArgumentParser
ExpressibleByArgument
ArgumentParser
ParsableArguments
ArgumentSetProvider
_WrappedParsableCommand
CodingKeys
ArgumentParser
ParsableArgumentsValidator
ParsableArgumentsValidatorError
ArgumentParser
ParsableCommand
ArgumentParser
ArgumentDecoder
ParsedArgumentsContainer
ArrayWrapperProtocol
DecodedArguments
SingleValueDecoder
UnkeyedContainer
ArrayWrapper
SingleValueContainer
Error
ArgumentParser
ArgumentDefinitionContainer
Contained Initial
ArgumentDefinitionContainerExpressibleByArgument
ArgumentDefinition
ParsingStrategy
Bare
Update
Help
Kind
Options
ArgumentParser
ArgumentSet
ArgumentParser
CommandError
AutodetectedGenerateCompletions
GenerateCompletions
HelpRequested
CodingKeys
ArgumentParser
InputKey
ArgumentParser
InputOrigin
Element
ArgumentParser
Name
ArgumentParser
ParsedWrapper
Value
DecodableParsedWrapper
Parsed
ArgumentParser
ParsedValues
Element
ArgumentParser
ParserError
InternalParseError
InputIndex
ArgumentParser
ParsedArgument
Value
Element
Index
SplitArguments
SubIndex
ArgumentParser
HelpCommand
CodingKeys
Element
ArgumentParser
HelpGenerator
Section
DiscussionSection
Header
ArgumentParser
MessageInfo
StandardError
ArgumentParser
Platform
ArgumentParser
Tree
InitializationError
ArgumentParserToolInfo
ToolInfoHeader
ToolInfoV0
CommandInfoV0
ArgumentInfoV0
NameInfoV0
KindV0
CodingKeys
SDySS
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
ySbG
So12NSFileHandleC
SSSgSg
ySSSbG
ySSSgG
SgGG
yAAy
SgGGADG
SgIegno_
yyXlG
SgGGAE_G
Sg_G
SgG_G
ySaySSGG
ySbSgG
Iegn_
yypG
Sb8inserted_
17memberAfterInsertt
_pXpG
SSSg
Sayy
$sST
$sSt
ySay
So21NSDirectoryEnumeratorCSg
ShySSG
ySSG
ypSg
So17OS_dispatch_queueC
SnySiG
$sSk
_pXpSgt
$ss25ExpressibleByArrayLiteralP
$sSK
$sSl
$sST
_pXpSg
yyXlG
SvSg
ySpy
GSg_SvSgtXCSg
$sSY
SvSgSi_SitXCSg
SvSgAA_SitXCSg
ySvSgXCSg
GSg_Spy
GSgSpy
GSgAASpy
GSgtXCSg
GSgSpy
GSg_
GSgACSpy
GSgAGtXCSg
GSgSpy
GSg_Spy
GSgAC
SgtXCSg
GSgSpy
GSg_Spy
SgA2CtXCSg
GSgSpy
GSg_Spy
GSgtXCSg
GSg_Spy
tXCSg
GSg_Spy
GSgtXCSg
ySpy
GSg_Spy
GSgSpy
tXCSg
ySpy
GSg_Spy
GSgSpy
tXCSg
GSg_SPy
GSgSitXCSg
GSgSpy
GSg_Spy
GSgACtXCSg
ySpy
GSg_Spy
GSgSpy
GSgtXCSg
GSg_Spy
GSgAAtXCSg
XCSg
ySpy
GSg_Spy
tXCSg
ySpy
GSgXCSg
ySpy
GSg_Spy
GSgSPy
GSgSb
tXCSg
SpySpy
GSgGSg
ySpy
GSg_Spy
GSgtXCSg
5lower_AA5uppert
8locationt
SS4name_
13firstLocationAB09duplicateC0t
ySi6offset_
_p7elementtG
Si6offset_
_p7elementt
ySsG
ySSG
ySuG
ySiG
ySu7colspan_Su7rowspantG
GSg_ACt
_AAt
$s8Markdown13LiteralMarkupP
_pSg
SaySiG
$s8Markdown6MarkupP
SS4name_
Sg0A8Location
9argumentst
$s8Markdown13MarkupVisitorP
$sSt
$s8Markdown26PlainTextConvertibleMarkupP
SS_SSSg8languaget
Si5level_t
Sg8checkbox_t
Su10startIndex_t
SSSg6source_AA5titlet
SSSg11destination_AA5titlet
SSSg11destination_t
SS10attributes_t
SgG16columnAlignments_t
Su7colspan_Su7rowspant
SS4name_t
4from_
_pXp2tot
Sg_ABt
_AAt
SaySsG
ySaySSGG
SaySSG
4line_Si11indentationtG
4line_Si11indentationt
$s8Markdown18TableCellContainerP
$s8Markdown17_TableRowProtocolP
Sg_ABt
_pSg
ySi_
_pXpSgtG
$ss12CaseIterableP
SaySu7colspan_Su7rowspantGG
SaySu7colspan_Su7rowspantG_G
ySaySu7colspan_Su7rowspantGG
Su7colspan_Su7rowspantG
Su7colspan_Su7rowspant_G
SaySSGG
SaySSG_G
Su_G
SS_G
_p_G
_pSg
_Say
_Say
SiSg
G_Sb13isInCodeFencet
14pendingCommand_
9remaindertSg
14pendingCommand_
9remaindert
ySsG
Ss4name_t
ySay
$ss9OptionSetP
$ss10SetAlgebraP
$s8Markdown14MarkupRewriterP
6Result
$s8Markdown19BasicBlockContainerP
$s8Markdown20BasicInlineContainerP
$s8Markdown14BlockContainerP
$s8Markdown11BlockMarkupP
$s8Markdown15InlineContainerP
$s8Markdown12InlineMarkupP
$s8Markdown21RecurringInlineMarkupP
$s8Markdown17ListItemContainerP
$s8Markdown12MarkupWalkerP
_pSg
SSIegnr_
SuIegnr_
SaySSGIegnr_
SaySu7colspan_Su7rowspantGIegnr_
Si6offset_
7elementt
Si6offset_
7elementtSg
SSSg
Su5start_t
SaySJG
Su7colspan_Su7rowspantIegnr_
Si6offset_
_p7elementtSg
ySSG
SaySwG
Sv7pointer_Sv3endtSg
ySi10sourceLine_
Sg9argumentstG
Si10sourceLine_
Sg9argumentst
ySi6offset_
Sg7elementtG
ySwG
ypSg
SayypG
$ss12IdentifiableP
ySS_
SnySiG
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$sSY
$ss9OptionSetP
$s11SwiftSyntax03RawB12NodeProtocolP
Sg3raw_
10syntaxInfotG
SaySi10sourceLine_
Sg9argumentstG
$sSk
yxGG
$sSK
$sSl
yx_G
$sST
SPyxG
SRyxG
$sSt
Sg3raw_
10syntaxInfot
$s11SwiftSyntax0B10CollectionP
7ElementSTQz
5IndexSlQz
$s11SwiftSyntax0B8HashableP
_pSg
$s11SwiftSyntax0B8ProtocolP
$s11SwiftSyntax0B12ChildChoicesP
_pXp
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
_AAt
ySS_yptG
SaySSG
_pSg
_pSg
_pSg
_pSg
_pSg
$s11SwiftSyntax04DeclB8ProtocolP
$s11SwiftSyntax09_LeafDeclB12NodeProtocolP
$s11SwiftSyntax04ExprB8ProtocolP
$s11SwiftSyntax09_LeafExprB12NodeProtocolP
$s11SwiftSyntax07PatternB8ProtocolP
$s11SwiftSyntax012_LeafPatternB12NodeProtocolP
$s11SwiftSyntax04StmtB8ProtocolP
$s11SwiftSyntax09_LeafStmtB12NodeProtocolP
$s11SwiftSyntax04TypeB8ProtocolP
$s11SwiftSyntax09_LeafTypeB12NodeProtocolP
$s11SwiftSyntax05_LeafB12NodeProtocolP
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
$s11SwiftSyntax06BracedB0P
$s11SwiftSyntax09DeclGroupB0P
$s11SwiftSyntax016EffectSpecifiersB0P
$s11SwiftSyntax026FreestandingMacroExpansionB0P
$s11SwiftSyntax09NamedDeclB0P
$s11SwiftSyntax011MissingNodeB0P
$s11SwiftSyntax013ParenthesizedB0P
$s11SwiftSyntax014WithAttributesB0P
$s11SwiftSyntax013WithCodeBlockB0P
$s11SwiftSyntax021WithGenericParametersB0P
$s11SwiftSyntax013WithModifiersB0P
$s11SwiftSyntax021WithOptionalCodeBlockB0P
$s11SwiftSyntax014WithStatementsB0P
$s11SwiftSyntax017WithTrailingCommaB0P
ySSG
yypG
$s11SwiftSyntax07RawDeclB12NodeProtocolP
$s11SwiftSyntax07RawExprB12NodeProtocolP
$s11SwiftSyntax010RawPatternB12NodeProtocolP
$s11SwiftSyntax07RawStmtB12NodeProtocolP
$s11SwiftSyntax07RawTypeB12NodeProtocolP
yyXlG
$ss27ExpressibleByBooleanLiteralP
$ss25ExpressibleByFloatLiteralP
$ss27ExpressibleByIntegerLiteralP
$s18SwiftSyntaxBuilder04DeclB9ParseableP
ySay
ySay
ySsG
$s18SwiftSyntaxBuilder04ListC0P
11FinalResult
yyXlG
$ss27StringInterpolationProtocolP
$s18SwiftSyntaxBuilder020ExpressibleByLiteralB0P
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
$s18SwiftSyntaxBuilder0B32ExpressibleByStringInterpolationP
19StringInterpolation
_pXp
11LiteralType
SaySsG
$s18SwiftSyntaxBuilder20HasTrailingCodeBlockP
$s18SwiftSyntaxBuilder26HasTrailingMemberDeclBlockP
11indentation_Sb13isUserDefinedtG
yS2iG
11indentation_Sb13isUserDefinedtG
11indentation_Sb13isUserDefinedt
SDyS2iG
ySiG
$ss12CaseIterableP
3key_
Sg21unexpectedBeforeColon
5colonAA5valuet
SiSg
Si15delimiterLength_t
4kind_Si15delimiterLengtht
Sb11isRawString_t
17stringLiteralKind_t
17stringLiteralKind_Si10parenCountt
5index_SPy
G7lexemest
8newState_t
5index_
7lexemest
5error_t
SaySSG
$ss9OptionSetP
$sSY
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
ySSG
ySiG
$sSt
$sST
$sSl
$sSK
$sSk
8slashEnd_Si9numPoundstSg
5IndexSlQzz_x_SlRz
7ElementSTRtzlXX
$s11SwiftParser13TokenConsumerP
5start_t
_AAt
$s11SwiftParser27NominalTypeDeclarationTraitP
$s11SwiftParser21RawParameterListTraitP
$s11SwiftParser23RawParameterClauseTraitP
$s11SwiftParser17RawParameterTraitP
15ParameterSyntax
10Parameters
$s11SwiftParser33RawMisplacedEffectSpecifiersTraitP
22CorrectAsyncTokenKinds
23CorrectThrowsTokenKinds
25MisspelledAsyncTokenKinds
26MisspelledThrowsTokenKinds
$s11SwiftParser24RawEffectSpecifiersTraitP
$s11SwiftParser25UnexpectedNodesCombinableP
16closingDelimiter_t
$s11SwiftParser12TokenSpecSetP
yxq_GG
$s11SwiftParser15SyntaxParseableP
$s16SwiftDiagnostics19DiagnosticDecoratorP
SaySSG
$s16SwiftDiagnostics12FixItMessageP
7oldNode_AA03newB0t
5token_
9newTriviat
ySnySiGG
ySSG
Si3key_Say
G5valuet
ySi3key_Say
G5valuetG
ySiSay
ySiG
ySiG
ySny
SnySiG
ySay
$s16SwiftDiagnostics17DiagnosticMessageP
$s16SwiftDiagnostics11NoteMessageP
$sSY
$s22SwiftParserDiagnostics10TokenErrorP
$s22SwiftParserDiagnostics12TokenWarningP
ySSG
10diagnostic_Say
G12handledNodestG
10diagnostic_Say
G12handledNodest
ySnySiGG
SaySSG
ySSG
10diagnostic_Say
G12handledNodestG
_pSg
_pSg
10diagnostic_Say
G12handledNodestSg
SbIegnr_
Sg_yyc
_pSg
$s22SwiftParserDiagnostics0B5ErrorP
$s22SwiftParserDiagnostics0B4NoteP
$s22SwiftParserDiagnostics0B5FixItP
$sSY
SSSg
8existing_AA3newt
14referencedFromt
8existing_AA3newt
12leftOperator_SS0A15PrecedenceGroupAA05rightB0SS0ecD0t
_pIgnzo_
ySay
ySay
SDySS
SaySSG
ySSG
ySS3key_
5valuetG
SS3key_
5valuet
ySnySiGG
ySS3key_
5valuetG
SS3key_
5valuet
SDySS
ySS_
ySSG
ySSG
ySbG
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
SDySSSbG
SaySSG
$ss9OptionSetP
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
$ss26ExpressibleByStringLiteralP
$ss32ExpressibleByStringInterpolationP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
$s11SwiftFormat19FindingCategorizingP
SDySOSSG
ySSSiG
ySSSay
ySOSSG
ySSSbG
ySi_
_pXpSgtG
_pSg
SSSg
$s8Markdown13MarkupVisitorP
_pSg
_pSg
SDySO
SDySO
$s11SwiftFormat4RuleP
SaySsG
_pXp
SDySSSay
So19NSRegularExpressionC
SaySSG9ruleNames_t
ySO_SStG
SO_SSt
ySS_SbtG
SS_Sbt
$s11SwiftFormat19WithSemicolonSyntaxP
yypG
SaySiG
SaySbG
_Si4size
8newlinest
Si4size_Sb8flexiblet
_Sb12wasEndOfLinet
4kind_t
Sb16hasTrailingComma_Sb15isSingleElementt
4kind_t
Sb9mustBreak_t
Sb20ignoresDiscretionary_t
Si5count_Sb13discretionaryt
Si5count_t
Sb18allowDiscretionary_t
SaySay
SiSg
$s11SwiftFormat25CallingExprSyntaxProtocolP
SaySay
_pSg
ySSSay
ySiG
6import_SayABG8commentstG
6import_SayAAG8commentst
ySi6offset_
7elementtG
Si6offset_
7elementt
SaySJG
ySJG
_pSg
4char_Si5counttG
ySsG
ySay
ySay
ySnySiGG
yyXlG
ySny
_Sb8sortablet
_pXpG
SaySSG
SaySsG
$sSY
$ss12CaseIterableP
SSSg
ySSG
ySSG
_pIeggrzo_
qd__
qd__Sg
SSqd__
_pIeggrzo_
Sayqd__G
$s14ArgumentParser13ParsedWrapperP
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SaySSG10extensions_t
SaySSGAAc
_pXpSg
SbSg
Sayqd__GSg
ypSg
Sbz_Xx
$ss25ExpressibleByArrayLiteralP
SS_Sb14withSingleDasht
SJ_Sb14allowingJoinedt
_pSg
$s14ArgumentParser20AsyncParsableCommandP
$s14ArgumentParser17AsyncMainProtocolP
7Command
_pXpG
$s14ArgumentParser14EnumerableFlagP
8RawValueSYQz
$s14ArgumentParser013ExpressibleByA0P
yypG
$s14ArgumentParser17ParsableArgumentsP
$s14ArgumentParser0A11SetProviderP
SSSg5label_yp5valuet
_pSg
SgSSyp
_pIegggggrzo_
$s14ArgumentParser26ParsableArgumentsValidator33_D8B6916CE93C2FC7F7BEDE789FAE65F8LLP
$s14ArgumentParser31ParsableArgumentsValidatorErrorP
$s14ArgumentParser15ParsableCommandP
_SitG
_Sit
_pXpG
ySsG
_SStG
_SSt
ySi_
_pXmTSg
$s14ArgumentParser20ArrayWrapperProtocolP
_pXp
$ss30KeyedDecodingContainerProtocolP
SayypG
yypG
_pXpGG
ySnySiGG
ySaySSGG
ySiG
_pXp_AA_pXpt
SayxG
$s14ArgumentParser0A19DefinitionContainerP
$s14ArgumentParser0a32DefinitionContainerExpressibleByA0P
9Contained
ztKc
SS9Contained
_pIeggrzo_
SgSS9Contained
_pIegggggrzo_
7Initial
QzSg
ztKc
SgSS
ztKc
$ss10SetAlgebraP
$ss9OptionSetP
$sST
SnySiG
$sSl
$sSK
$sSk
yyXlG
_SStSg
_pSg
ySSG
ySbG
SgS2S
_pIegggggrzo_
$s14ArgumentParser22DecodableParsedWrapperP
5Value
_pXpGADG
ySSSay
10visibility_t
SSSg5shell_t
_SStG
8previous_AA9duplicateSaySSG13originalInputt
6forKey_t
SgSS
6forKey
_pSg13originalErrort
ypSg_
6forKeyt
Si_Sit
_SSt
Sb8inserted_
17memberAfterInsertt
ySaySSGG
ySaySSGSSG
SaySSGSg
_ypt
ySSSgG
yAAyABySaySSSgGACGGSSGG
yAAySaySSSgGACGGSSG
ySaySSSgGACGG
ySaySSSgGABG
SaySSSgG
ySay
GSSG
SS4text_t
SS7message_SS5usageSS4helpt
SS7message_
8exitCodet
yxGSgXw
yxGG
_pXpGACG
_pXpGACSgIegnr_
_pXp
SaySSGSg
SaySSG
$sSY
SSSg
cache
_rawValue
RawValue
_ObjectiveCType
inPlace
diagnosticPrinter
diagnosticsEngine
lintFormatOptions
configurationLoader
fileHandle
configuration
$__lazy_storage_$_sourceText
_inPlace
_formatOptions
_performanceMeasurementOptions
inPlace
formatOptions
performanceMeasurementOptions
_lintOptions
_strict
_performanceMeasurementOptions
lintOptions
strict
performanceMeasurementOptions
_configuration
_assumeFilename
_recursive
_ignoreUnparsableFiles
_parallel
_colorDiagnostics
_followSymlinks
_paths
_debugDisablePrettyPrint
_debugDumpTokenStream
configuration
assumeFilename
recursive
ignoreUnparsableFiles
parallel
colorDiagnostics
followSymlinks
paths
debugDisablePrettyPrint
debugDumpTokenStream
_measureInstructions
measureInstructions
_versionOptions
versionOptions
severity
location
category
message
note
warning
error
file
line
column
handlers
hasErrors
hasWarnings
fileHandle
Element
Iterator
urls
followSymlinks
urlIterator
dirIterator
workingDirectory
currentDirectory
visited
fileSuffix
message
printQueue
useColors
_version
version
Element
Index
SubSequence
Indices
ArrayLiteralElement
Iterator
elements
index
expectedType
root
next
rawValue
content
prev
parent
first_child
last_child
user_data
user_data_free_func
start_line
start_column
end_line
end_column
internal_offset
type
flags
backtick_count
extension
ancestor_extension
footnote
parent_footnote_def
RawValue
calloc
realloc
free
ev_type
node
asize
size
last_block_matches
try_opening_block
match_inline
insert_inline_from_delim
special_inline_chars
name
priv
emphasis
free_function
get_type_string_func
can_contain_func
contains_inlines_func
commonmark_render_func
plaintext_render_func
latex_render_func
xml_attr_func
man_render_func
html_render_func
html_filter_func
postprocess_func
opaque_alloc_func
opaque_free_func
commonmark_escape_func
refmap
current
line_number
offset
column
first_nonspace
first_nonspace_column
thematic_break_kill_pos
indent
blank
partially_consumed_tab
curline
last_line_length
linebuf
options
last_buffer_ended_with_cr
total_size
syntax_extensions
inline_syntax_extensions
backslash_ispunct
skip_chars
special_chars
previous
inl_text
position
length
delim_char
can_open
can_close
data
buffer
prefix
width
need_cr
last_breakable
begin_line
begin_content
no_linebreaks
in_tight_list_item
outc
blankline
footnote_ix
html
plain
filter_extensions
written_footnote_ix
opaque
refs
sorted
ref_size
max_ref_size
label
segments
duplicateArgument
missingExpectedCharacter
unexpectedCharacter
untrimmedText
lineStartIndex
parseIndex
range
name
nameRange
value
valueRange
hasTrailingComma
_data
Result
Element
Iterator
parent
childMetadata
parent
markup
metadata
indexInParent
rootId
childId
data
childCount
subtreeCount
parsedRange
codeBlock
heading
htmlBlock
listItem
orderedList
blockDirective
inlineCode
customInline
image
inlineHTML
link
text
symbolLink
inlineAttributes
table
tableCell
doxygenParam
blockQuote
customBlock
document
thematicBreak
unorderedList
paragraph
emphasis
lineBreak
softBreak
strong
strikethrough
tableHead
tableBody
tableRow
doxygenReturns
concreteConversionError
_data
_data
_data
_data
_data
checked
unchecked
_data
_data
_data
_data
_data
_data
_data
_data
_data
left
center
right
_data
_data
ArrayLiteralElement
_data
ArrayLiteralElement
_data
range
replacementText
line
column
source
_data
_data
_data
_data
_data
_data
_data
_data
_data
_data
_data
_data
_data
RawValue
AllCases
kind
content
rawValue
text
range
untrimmedText
startParseIndex
parseIndex
lineNumber
source
atIndentationColumnCount
innerIndentationColumnCount
atLocation
nameLocation
name
argumentsText
parseState
endLocation
pendingLine
atSignIndentation
innerIndentation
kind
root
lineRun
blockDirective
doxygenCommand
argumentsStart
argumentsEnd
contentsStart
contents
contentsEnd
done
param
returns
state
result
range
source
iterator
event
node
options
headerSeen
pendingTableBody
input
source
Element
Iterator
precedingConsecutiveEmptyLineCount
rawLines
index
Element
RawValue
ArrayLiteralElement
rawValue
startLine
ranges
trimmedIndentationPerLine
Result
totalRange
RawValue
AllCases
Result
formattingOptions
result
state
orderedListNumerals
unorderedListMarker
useCodeFence
defaultCodeBlockLanguage
thematicBreakCharacter
thematicBreakLength
emphasisMarker
condenseAutolinks
preferredHeadingStyle
preferredLineLimit
customLinePrefix
doxygenCommandPrefix
dash
plus
star
onlyWhenLanguageIsPresent
always
never
underline
setext
allSame
incrementing
lineSplittingElement
maxLength
softBreak
hardBreak
backslash
currentLength
queuedNewlines
newlineStreak
lastLineLength
lineNumber
Element
RawValue
ArrayLiteralElement
rawValue
options
result
path
Result
utf8Offset
info
position
nodeId
offset
indexInParent
initialSlabSize
slabs
current
customSizeSlabs
_totalBytesAllocated
arena
name
size
stride
alignment
pointer
payload
arenaReference
parsedToken
materializedToken
layout
tokenKind
wholeText
textRange
presence
tokenDiagnosticKind
tokenDiagnosticByteOffset
tokenText
triviaPieces
numLeadingTrivia
byteLength
kind
descendantCount
recursiveFlags
rawValue
ArrayLiteralElement
Element
RawValue
range
replacement
utf8Length
line
column
offset
file
presumedLine
presumedFile
start
fileName
source
lines
endOfFile
sourceLocationDirectives
nonDecimalLineNumber
stringInterpolationInFileName
present
missing
info
root
nonRoot
arena
parent
absoluteInfo
allocator
childRefs
sourceBuffer
parseTriviaFunction
arena
_value
Element
Index
SubSequence
Indices
Iterator
pointer
buffer
Element
Index
SubSequence
Indices
Iterator
data
rawChildren
parent
offset
indexInParent
indexInTree
viewMode
allChildren
startIndex
collection
nextIndex
rootId
numberOfChildren
iterator
Element
parent
iterator
rootId
indexInTree
layout
collection
choices
node
token
Element
Index
SubSequence
Indices
Iterator
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
buffer
sourceAccurate
fixedUp
kind
byteOffset
warning
error
editorPlaceholder
equalMustHaveConsistentWhitespaceOnBothSides
expectedBinaryExponentInHexFloatLiteral
expectedClosingBraceInUnicodeEscape
expectedDigitInFloatLiteral
expectedHexCodeInUnicodeEscape
expectedHexDigitInHexLiteral
extraneousLeadingWhitespaceError
extraneousLeadingWhitespaceWarning
extraneousTrailingWhitespaceError
extraneousTrailingWhitespaceWarning
insufficientIndentationInMultilineStringLiteral
invalidBinaryDigitInIntegerLiteral
invalidCharacter
invalidDecimalDigitInIntegerLiteral
invalidEscapeSequenceInStringLiteral
invalidFloatingPointExponentCharacter
invalidFloatingPointExponentDigit
invalidHexDigitInIntegerLiteral
invalidIdentifierStartCharacter
invalidNumberOfHexDigitsInUnicodeEscape
invalidOctalDigitInIntegerLiteral
invalidUtf8
multilineRegexClosingNotOnNewline
nonBreakingSpace
nulCharacter
sourceConflictMarker
spaceAtEndOfRegexLiteral
spaceAtStartOfRegexLiteral
tokenDiagnosticOffsetOverflow
unexpectedBlockCommentEnd
unicodeCurlyQuote
unprintableAsciiCharacter
unterminatedBlockComment
Element
Iterator
node
viewMode
nextToken
endToken
startPosition
_syntaxNode
Element
Index
Iterator
SubSequence
Indices
ArrayLiteralElement
leading
trailing
pieces
offset
length
range
replacement
RawValue
__consuming
__owned
__setter_access
__shared
_alignment
_backDeploy
_borrow
_borrowing
_BridgeObject
_cdecl
_Class
_compilerInitialized
_const
_consuming
_documentation
_dynamicReplacement
_effects
_expose
_forward
_implements
_linear
_local
_modify
_move
_mutating
_NativeClass
_NativeRefCountedObject
_noMetadata
_nonSendable
_objcImplementation
_objcRuntimeName
_opaqueReturnTypeOf
_optimize
_originallyDefinedIn
_PackageDescription
_private
_projectedValueProperty
_read
_RefCountedObject
_semantics
_specialize
_spi
_spi_available
_swift_native_objc_runtime_base
_Trivial
_TrivialAtMost
_TrivialStride
_typeEraser
_unavailableFromAsync
_underlyingVersion
_UnknownLayout
_version
accesses
actor
addressWithNativeOwner
addressWithOwner
assignment
associatedtype
associativity
async
attached
autoclosure
availability
available
await
backDeployed
before
block
borrowing
break
canImport
case
catch
class
compiler
consume
copy
consuming
continue
convenience
convention
cType
default
defer
deinit
dependsOn
deprecated
derivative
didSet
differentiable
distributed
dynamic
each
else
enum
escaping
exclusivity
exported
extension
fallthrough
false
file
fileprivate
final
discard
forward
func
freestanding
guard
higherThan
import
indirect
infix
init
initializes
inline
inout
internal
introduced
isolated
kind
lazy
left
line
linear
lowerThan
macro
message
metadata
module
mutableAddressWithNativeOwner
mutableAddressWithOwner
mutating
noasync
noDerivative
noescape
none
nonisolated
nonmutating
objc
obsoleted
open
operator
optional
override
package
postfix
precedencegroup
preconcurrency
prefix
private
Protocol
protocol
public
reasync
renamed
repeat
required
_resultDependsOn
_resultDependsOnSelf
rethrows
retroactive
return
reverse
right
safe
scoped
self
sending
Self
Sendable
some
sourceFile
spiModule
static
struct
subscript
super
swift
switch
target
then
throw
throws
transferring
transpose
true
Type
typealias
unavailable
unchecked
unowned
unsafe
unsafeAddress
unsafeMutableAddress
visibility
weak
where
while
willSet
witness_method
yield
_syntaxNode
Iterator
Element
Index
SubSequence
Indices
ArrayLiteralElement
_syntaxNode
attribute
ifConfigDecl
precedenceGroupRelation
precedenceGroupAssignment
precedenceGroupAssociativity
labeledSpecializeArgument
specializeAvailabilityArgument
specializeTargetFunctionArgument
genericWhereClause
stringSegment
expressionSegment
switchCase
simpleTypeSpecifier
lifetimeTypeSpecifier
token
accessorBlock
accessorDeclList
accessorDecl
accessorEffectSpecifiers
accessorParameters
actorDecl
arrayElementList
arrayElement
arrayExpr
arrayType
arrowExpr
asExpr
assignmentExpr
associatedTypeDecl
attributeList
attribute
attributedType
availabilityArgumentList
availabilityArgument
availabilityCondition
availabilityLabeledArgument
awaitExpr
backDeployedAttributeArguments
binaryOperatorExpr
booleanLiteralExpr
borrowExpr
breakStmt
_canImportExpr
_canImportVersionInfo
catchClauseList
catchClause
catchItemList
catchItem
classDecl
classRestrictionType
closureCaptureClause
closureCaptureList
closureCaptureSpecifier
closureCapture
closureExpr
closureParameterClause
closureParameterList
closureParameter
closureShorthandParameterList
closureShorthandParameter
closureSignature
codeBlockItemList
codeBlockItem
codeBlock
compositionTypeElementList
compositionTypeElement
compositionType
conditionElementList
conditionElement
conformanceRequirement
consumeExpr
continueStmt
conventionAttributeArguments
conventionWitnessMethodAttributeArguments
copyExpr
declModifierDetail
declModifierList
declModifier
declNameArgumentList
declNameArgument
declNameArguments
declReferenceExpr
deferStmt
deinitializerDecl
deinitializerEffectSpecifiers
derivativeAttributeArguments
designatedTypeList
designatedType
dictionaryElementList
dictionaryElement
dictionaryExpr
dictionaryType
differentiabilityArgumentList
differentiabilityArgument
differentiabilityArguments
differentiabilityWithRespectToArgument
differentiableAttributeArguments
discardAssignmentExpr
discardStmt
doExpr
doStmt
documentationAttributeArgumentList
documentationAttributeArgument
dynamicReplacementAttributeArguments
editorPlaceholderDecl
editorPlaceholderExpr
effectsAttributeArgumentList
enumCaseDecl
enumCaseElementList
enumCaseElement
enumCaseParameterClause
enumCaseParameterList
enumCaseParameter
enumDecl
exposeAttributeArguments
exprList
expressionPattern
expressionSegment
expressionStmt
extensionDecl
fallThroughStmt
floatLiteralExpr
forStmt
forceUnwrapExpr
functionCallExpr
functionDecl
functionEffectSpecifiers
functionParameterClause
functionParameterList
functionParameter
functionSignature
functionType
genericArgumentClause
genericArgumentList
genericArgument
genericParameterClause
genericParameterList
genericParameter
genericRequirementList
genericRequirement
genericSpecializationExpr
genericWhereClause
guardStmt
identifierPattern
identifierType
ifConfigClauseList
ifConfigClause
ifConfigDecl
ifExpr
implementsAttributeArguments
implicitlyUnwrappedOptionalType
importDecl
importPathComponentList
importPathComponent
inOutExpr
infixOperatorExpr
inheritanceClause
inheritedTypeList
inheritedType
initializerClause
initializerDecl
integerLiteralExpr
isExpr
isTypePattern
keyPathComponentList
keyPathComponent
keyPathExpr
keyPathOptionalComponent
keyPathPropertyComponent
keyPathSubscriptComponent
labeledExprList
labeledExpr
labeledSpecializeArgument
labeledStmt
layoutRequirement
lifetimeSpecifierArgumentList
lifetimeSpecifierArgument
lifetimeTypeSpecifier
macroDecl
macroExpansionDecl
macroExpansionExpr
matchingPatternCondition
memberAccessExpr
memberBlockItemList
memberBlockItem
memberBlock
memberType
metatypeType
missingDecl
missingExpr
missingPattern
missingStmt
missing
missingType
multipleTrailingClosureElementList
multipleTrailingClosureElement
namedOpaqueReturnType
nilLiteralExpr
objCSelectorPieceList
objCSelectorPiece
opaqueReturnTypeOfAttributeArguments
operatorDecl
operatorPrecedenceAndTypes
optionalBindingCondition
optionalChainingExpr
optionalType
originallyDefinedInAttributeArguments
packElementExpr
packElementType
packExpansionExpr
packExpansionType
patternBindingList
patternBinding
patternExpr
platformVersionItemList
platformVersionItem
platformVersion
postfixIfConfigExpr
postfixOperatorExpr
poundSourceLocationArguments
poundSourceLocation
precedenceGroupAssignment
precedenceGroupAssociativity
precedenceGroupAttributeList
precedenceGroupDecl
precedenceGroupNameList
precedenceGroupName
precedenceGroupRelation
prefixOperatorExpr
primaryAssociatedTypeClause
primaryAssociatedTypeList
primaryAssociatedType
protocolDecl
regexLiteralExpr
repeatStmt
returnClause
returnStmt
sameTypeRequirement
sequenceExpr
simpleStringLiteralExpr
simpleStringLiteralSegmentList
simpleTypeSpecifier
someOrAnyType
sourceFile
specializeAttributeArgumentList
specializeAvailabilityArgument
specializeTargetFunctionArgument
stringLiteralExpr
stringLiteralSegmentList
stringSegment
structDecl
subscriptCallExpr
subscriptDecl
superExpr
suppressedType
switchCaseItemList
switchCaseItem
switchCaseLabel
switchCaseList
switchCase
switchDefaultLabel
switchExpr
ternaryExpr
thenStmt
throwStmt
throwsClause
tryExpr
tupleExpr
tuplePatternElementList
tuplePatternElement
tuplePattern
tupleTypeElementList
tupleTypeElement
tupleType
typeAliasDecl
typeAnnotation
typeEffectSpecifiers
typeExpr
typeInitializerClause
typeSpecifierList
unavailableFromAsyncAttributeArguments
underscorePrivateAttributeArguments
unexpectedNodes
unresolvedAsExpr
unresolvedIsExpr
unresolvedTernaryExpr
valueBindingPattern
variableDecl
versionComponentList
versionComponent
versionTuple
whereClause
whileStmt
wildcardPattern
yieldStmt
yieldedExpressionList
yieldedExpression
yieldedExpressionsClause
token
accessorBlock
accessorDeclList
accessorDecl
accessorEffectSpecifiers
accessorParameters
actorDecl
arrayElementList
arrayElement
arrayExpr
arrayType
arrowExpr
asExpr
assignmentExpr
associatedTypeDecl
attributeList
attribute
attributedType
availabilityArgumentList
availabilityArgument
availabilityCondition
availabilityLabeledArgument
awaitExpr
backDeployedAttributeArguments
binaryOperatorExpr
booleanLiteralExpr
borrowExpr
breakStmt
_canImportExpr
_canImportVersionInfo
catchClauseList
catchClause
catchItemList
catchItem
classDecl
classRestrictionType
closureCaptureClause
closureCaptureList
closureCaptureSpecifier
closureCapture
closureExpr
closureParameterClause
closureParameterList
closureParameter
closureShorthandParameterList
closureShorthandParameter
closureSignature
codeBlockItemList
codeBlockItem
codeBlock
compositionTypeElementList
compositionTypeElement
compositionType
conditionElementList
conditionElement
conformanceRequirement
consumeExpr
continueStmt
conventionAttributeArguments
conventionWitnessMethodAttributeArguments
copyExpr
declModifierDetail
declModifierList
declModifier
declNameArgumentList
declNameArgument
declNameArguments
declReferenceExpr
deferStmt
deinitializerDecl
deinitializerEffectSpecifiers
derivativeAttributeArguments
designatedTypeList
designatedType
dictionaryElementList
dictionaryElement
dictionaryExpr
dictionaryType
differentiabilityArgumentList
differentiabilityArgument
differentiabilityArguments
differentiabilityWithRespectToArgument
differentiableAttributeArguments
discardAssignmentExpr
discardStmt
doExpr
doStmt
documentationAttributeArgumentList
documentationAttributeArgument
dynamicReplacementAttributeArguments
editorPlaceholderDecl
editorPlaceholderExpr
effectsAttributeArgumentList
enumCaseDecl
enumCaseElementList
enumCaseElement
enumCaseParameterClause
enumCaseParameterList
enumCaseParameter
enumDecl
exposeAttributeArguments
exprList
expressionPattern
expressionSegment
expressionStmt
extensionDecl
fallThroughStmt
floatLiteralExpr
forStmt
forceUnwrapExpr
functionCallExpr
functionDecl
functionEffectSpecifiers
functionParameterClause
functionParameterList
functionParameter
functionSignature
functionType
genericArgumentClause
genericArgumentList
genericArgument
genericParameterClause
genericParameterList
genericParameter
genericRequirementList
genericRequirement
genericSpecializationExpr
genericWhereClause
guardStmt
identifierPattern
identifierType
ifConfigClauseList
ifConfigClause
ifConfigDecl
ifExpr
implementsAttributeArguments
implicitlyUnwrappedOptionalType
importDecl
importPathComponentList
importPathComponent
inOutExpr
infixOperatorExpr
inheritanceClause
inheritedTypeList
inheritedType
initializerClause
initializerDecl
integerLiteralExpr
isExpr
isTypePattern
keyPathComponentList
keyPathComponent
keyPathExpr
keyPathOptionalComponent
keyPathPropertyComponent
keyPathSubscriptComponent
labeledExprList
labeledExpr
labeledSpecializeArgument
labeledStmt
layoutRequirement
lifetimeSpecifierArgumentList
lifetimeSpecifierArgument
lifetimeTypeSpecifier
macroDecl
macroExpansionDecl
macroExpansionExpr
matchingPatternCondition
memberAccessExpr
memberBlockItemList
memberBlockItem
memberBlock
memberType
metatypeType
missingDecl
missingExpr
missingPattern
missingStmt
missing
missingType
multipleTrailingClosureElementList
multipleTrailingClosureElement
namedOpaqueReturnType
nilLiteralExpr
objCSelectorPieceList
objCSelectorPiece
opaqueReturnTypeOfAttributeArguments
operatorDecl
operatorPrecedenceAndTypes
optionalBindingCondition
optionalChainingExpr
optionalType
originallyDefinedInAttributeArguments
packElementExpr
packElementType
packExpansionExpr
packExpansionType
patternBindingList
patternBinding
patternExpr
platformVersionItemList
platformVersionItem
platformVersion
postfixIfConfigExpr
postfixOperatorExpr
poundSourceLocationArguments
poundSourceLocation
precedenceGroupAssignment
precedenceGroupAssociativity
precedenceGroupAttributeList
precedenceGroupDecl
precedenceGroupNameList
precedenceGroupName
precedenceGroupRelation
prefixOperatorExpr
primaryAssociatedTypeClause
primaryAssociatedTypeList
primaryAssociatedType
protocolDecl
regexLiteralExpr
repeatStmt
returnClause
returnStmt
sameTypeRequirement
sequenceExpr
simpleStringLiteralExpr
simpleStringLiteralSegmentList
simpleTypeSpecifier
someOrAnyType
sourceFile
specializeAttributeArgumentList
specializeAvailabilityArgument
specializeTargetFunctionArgument
stringLiteralExpr
stringLiteralSegmentList
stringSegment
structDecl
subscriptCallExpr
subscriptDecl
superExpr
suppressedType
switchCaseItemList
switchCaseItem
switchCaseLabel
switchCaseList
switchCase
switchDefaultLabel
switchExpr
ternaryExpr
thenStmt
throwStmt
throwsClause
tryExpr
tupleExpr
tuplePatternElementList
tuplePatternElement
tuplePattern
tupleTypeElementList
tupleTypeElement
tupleType
typeAliasDecl
typeAnnotation
typeEffectSpecifiers
typeExpr
typeInitializerClause
typeSpecifierList
unavailableFromAsyncAttributeArguments
underscorePrivateAttributeArguments
unexpectedNodes
unresolvedAsExpr
unresolvedIsExpr
unresolvedTernaryExpr
valueBindingPattern
variableDecl
versionComponentList
versionComponent
versionTuple
whereClause
whileStmt
wildcardPattern
yieldStmt
yieldedExpressionList
yieldedExpression
yieldedExpressionsClause
viewMode
visitChildren
skipChildren
viewMode
recyclableNodeInfos
recyclableNodeInfosUsageBitmap
RawValue
binaryOperator
dollarIdentifier
floatLiteral
identifier
integerLiteral
keyword
postfixOperator
prefixOperator
rawStringPoundDelimiter
regexLiteralPattern
regexPoundDelimiter
shebang
stringSegment
unknown
arrow
atSign
backslash
backtick
colon
comma
ellipsis
endOfFile
equal
exclamationMark
infixQuestionMark
leftAngle
leftBrace
leftParen
leftSquare
multilineStringQuote
period
postfixQuestionMark
pound
poundAvailable
poundElse
poundElseif
poundEndif
poundIf
poundSourceLocation
poundUnavailable
prefixAmpersand
regexSlash
rightAngle
rightBrace
rightParen
rightSquare
semicolon
singleQuote
stringQuote
wildcard
backslashes
blockComment
carriageReturns
carriageReturnLineFeeds
docBlockComment
docLineComment
formfeeds
lineComment
newlines
pounds
spaces
tabs
unexpectedText
verticalTabs
accessors
getter
attribute
ifConfigDecl
argumentList
token
string
availability
specializeArguments
objCName
implementsArguments
differentiableArguments
derivativeRegistrationArguments
backDeployedArguments
conventionArguments
conventionWitnessMethodArguments
opaqueReturnTypeOfAttributeArguments
exposeAttributeArguments
originallyDefinedInArguments
underscorePrivateAttributeArguments
dynamicReplacementArguments
unavailableFromAsyncArguments
effectsArguments
documentationArguments
availabilityVersionRestriction
availabilityLabeledArgument
version
simpleInput
parameterClause
decl
stmt
expr
expression
availability
matchingPattern
optionalBinding
colon
elements
argument
argumentList
token
string
sameTypeRequirement
conformanceRequirement
layoutRequirement
statements
switchCases
decls
postfixExpression
attributes
ifExpr
codeBlock
property
subscript
optional
precedenceGroupRelation
precedenceGroupAssignment
precedenceGroupAssociativity
labeledSpecializeArgument
specializeAvailabilityArgument
specializeTargetFunctionArgument
genericWhereClause
stringSegment
expressionSegment
switchCase
ifConfigDecl
default
case
simpleTypeSpecifier
lifetimeTypeSpecifier
multiple
single
_syntaxNode
accessors
getter
argumentList
token
string
availability
specializeArguments
objCName
implementsArguments
differentiableArguments
derivativeRegistrationArguments
backDeployedArguments
conventionArguments
conventionWitnessMethodArguments
opaqueReturnTypeOfAttributeArguments
exposeAttributeArguments
originallyDefinedInArguments
underscorePrivateAttributeArguments
dynamicReplacementArguments
unavailableFromAsyncArguments
effectsArguments
documentationArguments
availabilityVersionRestriction
availabilityLabeledArgument
version
_syntaxNode
simpleInput
parameterClause
decl
stmt
expr
expression
availability
matchingPattern
optionalBinding
_syntaxNode
colon
elements
argument
argumentList
token
string
_syntaxNode
_syntaxNode
sameTypeRequirement
conformanceRequirement
layoutRequirement
statements
switchCases
decls
postfixExpression
attributes
ifExpr
codeBlock
_syntaxNode
property
subscript
optional
_syntaxNode
_syntaxNode
default
case
_syntaxNode
multiple
single
BooleanLiteralType
FloatLiteralType
IntegerLiteralType
indentation
StringLiteralType
LiteralType
StringInterpolation
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
sourceText
lastIndentation
interpolatedSyntaxNodes
expectedType
actualType
diagnostics
tree
node
startIndex
endIndex
triviaContents
diagnosticID
severity
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
sourceText
FinalResult
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
indentationWidth
indentationStack
anchorPoints
previousToken
stringLiteralNestingLevel
previousTokenTrailingTrivia
spaceIndentedLines
tabIndentedLines
linesProcessed
private
fileprivate
internal
public
open
AllCases
attributes
modifier
kind
unexpectedBeforeToken
token
poundElseif
poundElse
pound
AllCases
dictionary
array
previousIncrementalParseResult
edits
reusedNodeCallback
editsNotConcurrent
transition
cursor
node
finished
viewMode
variableName
memberAccess
singleLine
multiLine
singleQuote
position
previousTokenKind
previousLexemeTrailingNewlinePresence
previousKeyword
stateStack
input
previous
absent
present
topState
afterRawStringDelimiter
inStringLiteral
afterStringLiteral
inStringInterpolationStart
inStringInterpolation
inRegexLiteral
normal
preferRegexOverBinaryOperator
afterClosingStringQuote
push
pushRegexLexemes
replace
kind
trivia
lexemeContents
tokenKind
flags
error
stateTransition
trailingTriviaLexingMode
keywordKind
trailingNewlinePresence
noNewlines
escapedNewlineInMultiLineStringLiteral
Element
RawValue
ArrayLiteralElement
rawTokenKind
flags
diagnostic
start
leadingTriviaByteLength
textByteLength
trailingTriviaByteLength
cursor
rawValue
Element
Iterator
sourceBufferStart
cursor
nextToken
lexerStateAllocator
lookaheadTracker
Element
Iterator
Index
SubSequence
Indices
kind
error
builder
openingPounds
openingSlash
pattern
closingSlash
closingPounds
numOpenPounds
patternByteLength
numClosePounds
_startInput
_patternErrorOffset
_patternErrorKind
_startPrevious
lexemeCount
RawValue
Token
skipSinglePost
skipUntil
skipSingle
lexemes
currentToken
tokensConsumed
swiftVersion
experimentalFeatures
leftParen
leftBrace
leftSquare
poundIf
poundElse
poundElseif
AllCases
private
fileprivate
internal
public
AllCases
PrimaryOrGenerics
ParameterSyntax
Parameters
tree
lookaheadRanges
Token
arena
lexemes
currentToken
nestingLevel
maximumNestingLevel
parseLookup
lookaheadRanges
lookaheadTrackerOwner
swiftVersion
experimentalFeatures
_emptyRawMultipleTrailingClosureElementListSyntax
_emptyRawDeclModifierListSyntax
_emptyRawAttributeListSyntax
_emptyRawTypeSpecifierListSyntax
furthestOffset
lookaheadTracker
AllCases
MisspelledAsyncTokenKinds
CorrectAsyncTokenKinds
MisspelledThrowsTokenKinds
CorrectThrowsTokenKinds
async
await
reasync
rethrows
throw
throws
asyncSpecifier
throwsSpecifier
expectedIndentation
arena
weakBracketed
openingBrace
unknownToken
identifierLike
exprKeyword
weakPunctuator
mediumPunctuator
weakBracketClose
stmtKeyword
strongPunctuator
closingBrace
declKeyword
openingPoundIf
closingPoundIf
rawTokenKind
keyword
remapping
recoveryPrecedence
allowAtStartOfLine
actor
associatedtype
case
class
deinit
enum
extension
func
import
init
macro
operator
precedencegroup
protocol
struct
subscript
typealias
pound
break
continue
defer
fallthrough
discard
guard
repeat
return
switch
then
throw
while
yield
default
__consuming
consuming
borrowing
mutating
nonmutating
binaryOperatorLike
postfixOperatorLike
prefixOperator
binaryOperator
infixQuestionMark
equal
arrow
postfixOperator
exclamationMark
postfixQuestionMark
__setter_access
_const
_local
async
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
nonisolated
open
optional
override
package
postfix
prefix
private
public
reasync
required
rethrows
sending
static
transferring
unowned
weak
_resultDependsOn
_resultDependsOnSelf
declarationModifier
declarationKeyword
AllCases
Element
RawValue
ArrayLiteralElement
rawValue
AllCases
didSet
willSet
unsafeAddress
addressWithOwner
addressWithNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
_read
_modify
init
postfixQuestionMark
exclamationMark
poundAvailable
poundUnavailable
message
renamed
introduced
obsoleted
deprecated
true
false
_version
_underlyingVersion
weak
unowned
safe
unsafe
identifier
wildcard
_move
consume
__consuming
__setter_access
_const
_local
actor
async
borrowing
class
consuming
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
mutating
nonisolated
nonmutating
open
optional
override
package
postfix
prefix
private
public
reasync
_resultDependsOnSelf
required
static
transferring
sending
self
Self
deinit
subscript
dollarIdentifier
binaryOperator
integerLiteral
_forward
reverse
_linear
visibility
metadata
prefixOperator
postfixOperator
poundIf
poundElseif
poundElse
typealias
struct
enum
protocol
func
inout
target
availability
exported
kind
spiModule
_Trivial
_TrivialAtMost
_UnknownLayout
_RefCountedObject
_NativeRefCountedObject
_Class
_NativeClass
_BridgeObject
_TrivialStride
Type
Protocol
_mutating
_borrowing
_consuming
left
right
none
higherThan
lowerThan
stringQuote
multilineStringQuote
__shared
__owned
_resultDependsOn
some
singleQuote
throws
rethrows
diagMessage
node
position
highlights
notes
fixIts
diagnostics
contextSize
diagnosticDecorator
diagnostics
sourceString
suffixText
message
changes
replace
replaceLeadingTrivia
replaceTrailingTrivia
sourceFiles
rootIndexes
tree
sourceLocationConverter
displayName
parent
children
diagnostics
domain
error
warning
note
remark
node
position
noteMessage
primitiveChanges
RawValue
editorPlaceholder
equalMustHaveConsistentWhitespaceOnBothSides
expectedBinaryExponentInHexFloatLiteral
expectedClosingBraceInUnicodeEscape
expectedDigitInFloatLiteral
expectedHexCodeInUnicodeEscape
expectedHexDigitInHexLiteral
invalidCharacter
invalidEscapeSequenceInStringLiteral
invalidIdentifierStartCharacter
invalidNumberOfHexDigitsInUnicodeEscape
invalidUtf8
tokenDiagnosticOffsetOverflow
sourceConflictMarker
unexpectedBlockCommentEnd
unicodeCurlyQuote
spaceAtStartOfRegexLiteral
spaceAtEndOfRegexLiteral
multilineRegexClosingNotOnNewline
unprintableAsciiCharacter
unterminatedBlockComment
nonBreakingSpace
nulCharacter
tokenText
kind
digit
character
binary
octal
decimal
error
hasToken
missingNodes
openingToken
tokensWithDefaultText
tokenWithoutDefaultText
node
closeQuote
finishedDiagnostics
inProgressDiagnostic
anchor
position
kind
lines
changes
handledNodes
diagnostics
handledNodes
suppressRemainingDiagnostics
message
messageID
asyncKeywords
throwsKeyword
availabilityToken
negatedAvailabilityToken
availabilityCondition
versionTuple
name
params
returnClause
correctSpecifier
unexpectedSpecifier
effectsSpecifiersAfterArrow
extraneousCode
tokenWithWhitespace
identifier
decimalDigits
invalidIdentifier
missingIdentifier
kind
lines
insufficientIndentation
unexpectedSpace
unexpectedTab
attributeName
stringSegments
node
negatedAvailabilityKeyword
firstToken
additionalTokens
misplacedSpecifiers
tokens
major
components
severity
nextToken
unexpectedNodes
unexpected
parameter
validParameters
specifier
tokenToBeInserted
movedTokens
after
inFrontOf
removeTokens
nodesToRemove
replaceTokens
replacements
hasPresentToken
RawValue
infix
prefix
postfix
kind
name
precedenceGroup
syntax
groupAlreadyExists
missingGroup
operatorAlreadyExists
missingOperator
incomparableOperators
firstFatalError
opPrecedence
errorHandler
opPrecedence
errors
precedenceGraph
infixOperators
prefixOperators
postfixOperators
precedenceGroups
RawValue
none
left
right
kind
groupName
syntax
higherThan
lowerThan
name
associativity
assignment
relations
_rawValue
RawValue
_ObjectiveCType
RawValue
version
rules
maximumBlankLines
lineLength
tabWidth
indentation
respectsExistingLineBreaks
lineBreakBeforeControlFlowKeywords
lineBreakBeforeEachArgument
lineBreakBeforeEachGenericRequirement
prioritizeKeepingFunctionOutputTogether
indentConditionalCompilationBlocks
lineBreakAroundMultilineExpressionChainComponents
fileScopedDeclarationPrivacy
indentSwitchCaseLabels
spacesAroundRangeFormationOperators
noAssignmentInExpressions
multiElementCollectionTrailingCommas
accessLevel
private
fileprivate
allowedFunctions
Element
RawValue
ArrayLiteralElement
rawValue
StringLiteralType
StringInterpolation
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
category
message
severity
location
notes
warning
error
refactoring
convention
file
line
column
text
tabs
spaces
fileNotReadable
isDirectory
fileContainsInvalidSyntax
configuration
findingConsumer
debugOptions
configuration
findingConsumer
debugOptions
configuration
operatorTable
findingEmitter
fileURL
importsXCTest
sourceLocationConverter
ruleMask
ruleNameCache
notDetermined
doesNotImportXCTest
briefSummary
bodyNodes
parameterLayout
parameters
returns
throws
name
comment
outline
separated
mixed
origin
fieldName
paragraph
expectParameterLabel
parameterName
Result
text
startIndex
introducer
line
block
mixed
firstNonspaceDistance
consumer
context
originalDiagnostic
context
ruleCache
shouldSkipChildren
leadingTrivia
trailingTrivia
start
ruleType
severity
allRulesIgnoredRanges
ruleMap
sourceLocationConverter
ignorePattern
ignoreRegex
ignoreFilePattern
ignoreFileRegex
subset
default
disabled
context
context
kind
text
length
line
docLine
block
docBlock
context
maxLineLength
tokens
outputBuffer
spaceRemaining
lengths
lastBreak
forceBreakStack
printTokenStream
whitespaceOnly
activeOpenBreaks
activeBreakingContexts
lastEndedBreakingContext
lineNumber
currentLineIsContinuation
continuationStack
commaDelimitedRegionStack
consecutiveNewlineCount
pendingSpaces
isAtStartOfLine
activeBreakSuppressionCount
allowSuppressedDiscretionaryBreaks
debugIndent
index
kind
contributesContinuationIndent
contributesBlockIndent
contextualBreakingBehavior
unset
continuation
maintain
endOfLineComment
trailingComma
syntax
open
break
space
comment
verbatim
printerControl
commaDelimitedRegionEnd
close
commaDelimitedRegionStart
contextualBreakingStart
contextualBreakingEnd
continue
same
reset
contextual
consistent
inconsistent
elective
soft
hard
disableBreaking
enableBreaking
block
continuation
tokens
beforeMap
afterMap
config
operatorTable
maxlinelength
lastBreakIndex
canMergeNewlinesIntoLastBreak
pendingMultilineStringBreakKinds
ignoredTokens
preVisitedExprs
rootExprs
closingDelimiterTokens
forcedBreakingClosures
openings
indentingBehavior
lines
leadingWhitespaceCounts
none
allLines
firstLine
trailingWhitespace
indentation
spacing
spacingCharacter
removeLine
addLines
lineLength
userText
formattedText
context
isLineTooLong
homogeneous
heterogeneous
none
testCaseFuncs
regularImport
declImport
testableImport
codeBlock
comment
blankLine
leadingTrivia
trailingTrivia
syntaxNode
nonImportCodeBlocks
importCodeBlock
RawValue
AllCases
rawValue
Value
_parsedValue
base
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
abstract
discussion
valueName
visibility
base
default
hidden
private
kind
list
file
shellCommand
custom
default
directory
RawValue
message
rawValue
base
helpRequest
dumpRequest
Value
_parsedValue
base
prefixedNo
prefixedEnableDisable
exclusive
chooseFirst
chooseLast
ArrayLiteralElement
elements
base
customLong
customShort
long
short
Value
_parsedValue
base
Value
_parsedValue
_visibility
_dummy
title
commandName
_superCommandName
abstract
usage
discussion
version
shouldDisplay
subcommands
defaultSubcommand
helpNames
_options
options
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
underlying
parsedElement
type
value
wrongKeyType
topLevelHasNoUnkeyedContainer
topLevelHasNoSingleValueContainer
singleValueDecoderHasNoContainer
base
currentIndex
array
Contained
Initial
default
scanningForValue
unconditional
upToNextOption
allRemainingInput
postTerminator
allUnrecognized
kind
help
completion
parsingStrategy
update
initial
options
defaultValue
keys
allValues
isComposite
abstract
discussion
valueName
visibility
parentTitle
nullary
unary
named
positional
rawValue
ArrayLiteralElement
Element
RawValue
Element
Iterator
Index
SubSequence
Indices
content
namePositions
commandStack
parserError
visibility
_generateCompletionScript
generateCompletionScript
name
path
_elements
ArrayLiteralElement
argumentIndex
defaultValue
long
short
longWithSingleDash
value
definition
value
inputOrigin
shouldClearArrayIfParsed
elements
originalInput
capturedUnrecognizedArguments
helpRequested
completionScriptRequested
completionScriptCustomResponse
unsupportedShell
unknownOption
invalidOption
nonAlphanumericShortOption
missingValueForOption
unexpectedValueForOption
unexpectedExtraValues
duplicateExclusiveValues
noValue
unableToParseValue
userValidationError
noArguments
versionRequested
dumpHelpRequested
notImplemented
invalidState
missingSubcommand
wrongType
subcommandLevelMismatch
subcommandLevelMissing
subcommandLevelDuplicated
subcommandNameMismatch
expectedCommandButNoneFound
_elements
firstUnused
originalInput
inputIndex
subIndex
value
index
option
terminator
name
nameWithValue
rawValue
RawValue
complete
_subcommands
_help
commandStack
visibility
subcommands
help
header
elements
discussion
isSubcommands
commandStack
abstract
usage
sections
discussionSections
label
title
positionalArguments
subcommands
options
content
help
validation
other
element
parent
children
recursiveSubcommand
RawValue
serializationVersion
command
superCommands
commandName
abstract
discussion
defaultSubcommand
subcommands
arguments
kind
shouldDisplay
sectionTitle
isOptional
isRepeating
names
preferredName
valueName
defaultValue
allValues
name
long
short
longWithSingleDash
positional
option
flag
_TtC12swift_format14FormatFrontend
inPlace
Unable to format 
: file is not readable or does not exist.
_TtC12swift_format8Frontend
diagnosticPrinter
diagnosticsEngine
lintFormatOptions
configurationLoader
_TtCC12swift_format8Frontend13FileToProcess
fileHandle
$__lazy_storage_$_sourceText
swift_format/Frontend.swift
Must be overridden by subclasses.
Configuration contains an unrecognized rule: 
Unable to read configuration for 
Unable to read configuration: 
: file is not readable or does not exist
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/swift-format/Sources/swift-format/Frontend/Frontend.swift
processURLs(_:) should only be called when 'urls' is non-empty.
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
v8@?0
_TtC12swift_format12LintFrontend
Could not dump the default configuration: 
Could not dump the default configuration: the JSON was not valid UTF-8
Dump the default configuration in JSON format to standard output
Format Swift source code
When no files are specified, it expects the source from standard input.
'--in-place' is only valid when formatting files
Overwrite the current file when formatting.
performanceMeasurementOptions
Diagnose style issues in Swift source code
Fail on warnings.
' is a path to a directory, not a Swift source file.
Use the '--recursive' option to handle directories.
'--assume-filename' is only valid when reading from stdin
'--recursive' is only valid when formatting or linting files
The path to a JSON file containing the configuration of the linter/formatter or a JSON string containing the configuration directly.
When using standard input, the filename of the source to include in diagnostics.
Recursively run on '.swift' files in any provided directories.
Ignores unparsable files, disabling all diagnostics and formatting for files that contain invalid syntax.
Process files in parallel, simultaneously across multiple cores.
Enables or disables color diagnostics when printing to standard error. The default behavior if this flag is omitted is to use colors if standard error is connected to a terminal, and to not use colors otherwise.
Follow symbolic links passed on the command line, or found during directory traversal when using `-r/--recursive`.
Zero or more input filenames.
ignoreUnparsableFiles
colorDiagnostics
debugDisablePrettyPrint
debugDumpTokenStream
Instructions executed: 
Measure number of instructions executed by swift-format
measureInstructions
Format or lint Swift source code
_TtC12swift_format17DiagnosticsEngine
handlers
hasErrors
hasWarnings
_TtC12swift_format23StderrDiagnosticPrinter
printQueue
useColors
com.apple.swift-format.StderrDiagnosticPrinter
Print the version and exit
document
item
html_block
paragraph
heading
thematic_break
softbreak
linebreak
code
strong
image
attribute
NONE
<unknown>
table_header
table_row
table_cell
NonMutatingVariant
when-language-present
always
never
setext
soft-break
hard-break
Markdown/Document.swift
Markdown/Text.swift
_TtC8Markdown9RawMarkup
Markdown/BlockDirective.swift
 markup wrapped unexpected 
Markdown/BlockQuote.swift
Markdown/CustomBlock.swift
Markdown/DoxygenParameter.swift
Fatal error
Markdown/DoxygenReturns.swift
Markdown/ListItem.swift
Markdown/OrderedList.swift
Markdown/UnorderedList.swift
Markdown/Paragraph.swift
Markdown/CodeBlock.swift
Markdown/HTMLBlock.swift
Markdown/Heading.swift
Markdown/ThematicBreak.swift
Markdown/Table.swift
Markdown/TableBody.swift
Markdown/TableCell.swift
Markdown/TableHead.swift
Markdown/TableRow.swift
Markdown/Emphasis.swift
Markdown/Image.swift
Markdown/InlineAttributes.swift
Markdown/Link.swift
Markdown/Strikethrough.swift
Markdown/Strong.swift
Markdown/CustomInline.swift
Markdown/InlineCode.swift
Markdown/InlineHTML.swift
Markdown/LineBreak.swift
Markdown/SoftBreak.swift
Markdown/SymbolLink.swift
Mutating Variant
Non-Mutating Variant
* Doxygen command 
* Block directive '
'param' Argument: '
Markdown/BlockDirectiveParser.swift
Tried to convert a non-root container to a `Document`
Conversion from ParseContainer.document to RawMarkup.document failed
Doxygen commands cannot have children
Line runs cannot have children
Cannot push additional document containers onto the parse container stack
A closed block directive container cannot accept further lines of content.
Non-whitespace character found while calculating equivalent indentation column count
table
strikethrough
tasklist
Markdown/CommonMarkConverter.swift
Unknown cmark node type '
' encountered during conversion
cmark top-level conversion didn't produce a RawMarkup.document
Converted cmark list had a node other than RawMarkup.listItem
cmark reported a list node but said its list type is CMARK_NO_LIST?
Expected literal content for cmark node but got null pointer
Unexpected table column character for cmark table: 
Markdown/MarkupFormatter.swift
Formatter not implemented for 
Unexpected heading level 
 while formatting for setext-style heading
visitTableHead(_:)
 directly; markdown tables must be formatted as a single unit. Call `visitTable` on the parent table
visitTableBody(_:)
visitTableRow(_:)
visitTableCell(_:)
customInline.text
 Argument text segments:
finalize
blocks.c
b->flags & CMARK_NODE__OPEN
pos < node_content->size
parse_html_block_prefix
html_block_type >= 1 && html_block_type <= 7
add_text_to_container
parser->current != NULL
add_line
node->flags & CMARK_NODE__OPEN
cmark_chunk_rtrim
chunk.h
!c->alloc
add_child
parent
cmark_strbuf_grow
buffer.c
target_size > 0
[cmark] cmark_strbuf_grow requests buffer with size > %d, aborting
cmark_strbuf_copy_cstr
0.29.0.gfm.0
[cmark] calloc returned null pointer, aborting
[cmark] realloc returned null pointer, aborting
%%%2X
&#%d;
<!-- end list -->
%d%s%s
  - 
    
-----
mailto:
S_render_node
commonmark.c
cmark_footnote_create
footnotes.c
map->sorted == NULL
0123456789ABCDEF
&amp;
&#x27;
&quot;
&#39;
&#47;
&lt;
&gt;
0123456789ABCDEFabcdef
AElig
Aacute
Abreve
Acirc
Agrave
Alpha
Amacr
Aogon
Aopf
ApplyFunction
Aring
Ascr
Assign
Atilde
Auml
Backslash
Barv
Barwed
Because
Bernoullis
Beta
Bopf
Breve
Bscr
Bumpeq
CHcy
COPY
Cacute
CapitalDifferentialD
Cayleys
Ccaron
Ccedil
Ccirc
Cconint
Cdot
Cedilla
CenterDot
CircleDot
CircleMinus
CirclePlus
CircleTimes
ClockwiseContourIntegral
CloseCurlyDoubleQuote
CloseCurlyQuote
Colon
Colone
Congruent
Conint
ContourIntegral
Copf
Coproduct
CounterClockwiseContourIntegral
Cross
Cscr
CupCap
DDotrahd
DJcy
DScy
DZcy
Dagger
Darr
Dashv
Dcaron
Delta
DiacriticalAcute
DiacriticalDot
DiacriticalDoubleAcute
DiacriticalGrave
DiacriticalTilde
Diamond
DifferentialD
Dopf
DotDot
DotEqual
DoubleContourIntegral
DoubleDot
DoubleDownArrow
DoubleLeftArrow
DoubleLeftRightArrow
DoubleLeftTee
DoubleLongLeftArrow
DoubleLongLeftRightArrow
DoubleLongRightArrow
DoubleRightArrow
DoubleRightTee
DoubleUpArrow
DoubleUpDownArrow
DoubleVerticalBar
DownArrow
DownArrowBar
DownArrowUpArrow
DownBreve
DownLeftRightVector
DownLeftTeeVector
DownLeftVector
DownLeftVectorBar
DownRightTeeVector
DownRightVector
DownRightVectorBar
DownTee
DownTeeArrow
Downarrow
Dscr
Dstrok
Eacute
Ecaron
Ecirc
Edot
Egrave
Element
Emacr
EmptySmallSquare
EmptyVerySmallSquare
Eogon
Eopf
Epsilon
Equal
EqualTilde
Equilibrium
Escr
Esim
Euml
Exists
ExponentialE
FilledSmallSquare
FilledVerySmallSquare
Fopf
ForAll
Fouriertrf
Fscr
GJcy
Gamma
Gammad
Gbreve
Gcedil
Gcirc
Gdot
Gopf
GreaterEqual
GreaterEqualLess
GreaterFullEqual
GreaterGreater
GreaterLess
GreaterSlantEqual
GreaterTilde
Gscr
HARDcy
Hacek
Hcirc
HilbertSpace
Hopf
HorizontalLine
Hscr
Hstrok
HumpDownHump
HumpEqual
IEcy
IJlig
IOcy
Iacute
Icirc
Idot
Igrave
Imacr
ImaginaryI
Implies
Integral
Intersection
InvisibleComma
InvisibleTimes
Iogon
Iopf
Iota
Iscr
Itilde
Iukcy
Iuml
Jcirc
Jopf
Jscr
Jsercy
Jukcy
KHcy
KJcy
Kappa
Kcedil
Kopf
Kscr
LJcy
Lacute
Lambda
Lang
Laplacetrf
Larr
Lcaron
Lcedil
LeftAngleBracket
LeftArrow
LeftArrowBar
LeftArrowRightArrow
LeftCeiling
LeftDoubleBracket
LeftDownTeeVector
LeftDownVector
LeftDownVectorBar
LeftFloor
LeftRightArrow
LeftRightVector
LeftTee
LeftTeeArrow
LeftTeeVector
LeftTriangle
LeftTriangleBar
LeftTriangleEqual
LeftUpDownVector
LeftUpTeeVector
LeftUpVector
LeftUpVectorBar
LeftVector
LeftVectorBar
Leftarrow
Leftrightarrow
LessEqualGreater
LessFullEqual
LessGreater
LessLess
LessSlantEqual
LessTilde
Lleftarrow
Lmidot
LongLeftArrow
LongLeftRightArrow
LongRightArrow
Longleftarrow
Longleftrightarrow
Longrightarrow
Lopf
LowerLeftArrow
LowerRightArrow
Lscr
Lstrok
MediumSpace
Mellintrf
MinusPlus
Mopf
Mscr
NJcy
Nacute
Ncaron
Ncedil
NegativeMediumSpace
NegativeThickSpace
NegativeThinSpace
NegativeVeryThinSpace
NestedGreaterGreater
NestedLessLess
NewLine
NoBreak
NonBreakingSpace
Nopf
NotCongruent
NotCupCap
NotDoubleVerticalBar
NotElement
NotEqual
NotEqualTilde
NotExists
NotGreater
NotGreaterEqual
NotGreaterFullEqual
NotGreaterGreater
NotGreaterLess
NotGreaterSlantEqual
NotGreaterTilde
NotHumpDownHump
NotHumpEqual
NotLeftTriangle
NotLeftTriangleBar
NotLeftTriangleEqual
NotLess
NotLessEqual
NotLessGreater
NotLessLess
NotLessSlantEqual
NotLessTilde
NotNestedGreaterGreater
NotNestedLessLess
NotPrecedes
NotPrecedesEqual
NotPrecedesSlantEqual
NotReverseElement
NotRightTriangle
NotRightTriangleBar
NotRightTriangleEqual
NotSquareSubset
NotSquareSubsetEqual
NotSquareSuperset
NotSquareSupersetEqual
NotSubset
NotSubsetEqual
NotSucceeds
NotSucceedsEqual
NotSucceedsSlantEqual
NotSucceedsTilde
NotSuperset
NotSupersetEqual
NotTilde
NotTildeEqual
NotTildeFullEqual
NotTildeTilde
NotVerticalBar
Nscr
Ntilde
OElig
Oacute
Ocirc
Odblac
Ograve
Omacr
Omega
Omicron
Oopf
OpenCurlyDoubleQuote
OpenCurlyQuote
Oscr
Oslash
Otilde
Otimes
Ouml
OverBar
OverBrace
OverBracket
OverParenthesis
PartialD
PlusMinus
Poincareplane
Popf
Precedes
PrecedesEqual
PrecedesSlantEqual
PrecedesTilde
Prime
Product
Proportion
Proportional
Pscr
QUOT
Qopf
Qscr
RBarr
Racute
Rang
Rarr
Rarrtl
Rcaron
Rcedil
ReverseElement
ReverseEquilibrium
ReverseUpEquilibrium
RightAngleBracket
RightArrow
RightArrowBar
RightArrowLeftArrow
RightCeiling
RightDoubleBracket
RightDownTeeVector
RightDownVector
RightDownVectorBar
RightFloor
RightTee
RightTeeArrow
RightTeeVector
RightTriangle
RightTriangleBar
RightTriangleEqual
RightUpDownVector
RightUpTeeVector
RightUpVector
RightUpVectorBar
RightVector
RightVectorBar
Rightarrow
Ropf
RoundImplies
Rrightarrow
Rscr
RuleDelayed
SHCHcy
SHcy
SOFTcy
Sacute
Scaron
Scedil
Scirc
ShortDownArrow
ShortLeftArrow
ShortRightArrow
ShortUpArrow
Sigma
SmallCircle
Sopf
Sqrt
Square
SquareIntersection
SquareSubset
SquareSubsetEqual
SquareSuperset
SquareSupersetEqual
SquareUnion
Sscr
Star
Subset
SubsetEqual
Succeeds
SucceedsEqual
SucceedsSlantEqual
SucceedsTilde
SuchThat
Superset
SupersetEqual
Supset
THORN
TRADE
TSHcy
TScy
Tcaron
Tcedil
Therefore
Theta
ThickSpace
ThinSpace
Tilde
TildeEqual
TildeFullEqual
TildeTilde
Topf
TripleDot
Tscr
Tstrok
Uacute
Uarr
Uarrocir
Ubrcy
Ubreve
Ucirc
Udblac
Ugrave
Umacr
UnderBar
UnderBrace
UnderBracket
UnderParenthesis
Union
UnionPlus
Uogon
Uopf
UpArrow
UpArrowBar
UpArrowDownArrow
UpDownArrow
UpEquilibrium
UpTee
UpTeeArrow
Uparrow
Updownarrow
UpperLeftArrow
UpperRightArrow
Upsi
Upsilon
Uring
Uscr
Utilde
Uuml
VDash
Vbar
Vdash
Vdashl
Verbar
Vert
VerticalBar
VerticalLine
VerticalSeparator
VerticalTilde
VeryThinSpace
Vopf
Vscr
Vvdash
Wcirc
Wedge
Wopf
Wscr
Xopf
Xscr
YAcy
YIcy
YUcy
Yacute
Ycirc
Yopf
Yscr
Yuml
ZHcy
Zacute
Zcaron
Zdot
ZeroWidthSpace
Zeta
Zopf
Zscr
aacute
abreve
acirc
acute
aelig
agrave
alefsym
aleph
alpha
amacr
amalg
andand
andd
andslope
andv
ange
angle
angmsd
angmsdaa
angmsdab
angmsdac
angmsdad
angmsdae
angmsdaf
angmsdag
angmsdah
angrt
angrtvb
angrtvbd
angsph
angst
angzarr
aogon
aopf
apacir
apid
apos
approx
approxeq
aring
ascr
asymp
asympeq
atilde
auml
awconint
awint
bNot
backcong
backepsilon
backprime
backsim
backsimeq
barvee
barwed
barwedge
bbrk
bbrktbrk
bcong
bdquo
becaus
because
bemptyv
bepsi
bernou
beta
beth
between
bigcap
bigcirc
bigcup
bigodot
bigoplus
bigotimes
bigsqcup
bigstar
bigtriangledown
bigtriangleup
biguplus
bigvee
bigwedge
bkarow
blacklozenge
blacksquare
blacktriangle
blacktriangledown
blacktriangleleft
blacktriangleright
blank
blk12
blk14
blk34
bnequiv
bnot
bopf
bottom
bowtie
boxDL
boxDR
boxDl
boxDr
boxH
boxHD
boxHU
boxHd
boxHu
boxUL
boxUR
boxUl
boxUr
boxV
boxVH
boxVL
boxVR
boxVh
boxVl
boxVr
boxbox
boxdL
boxdR
boxdl
boxdr
boxh
boxhD
boxhU
boxhd
boxhu
boxminus
boxplus
boxtimes
boxuL
boxuR
boxul
boxur
boxv
boxvH
boxvL
boxvR
boxvh
boxvl
boxvr
bprime
breve
brvbar
bscr
bsemi
bsim
bsime
bsol
bsolb
bsolhsub
bull
bullet
bump
bumpE
bumpe
bumpeq
cacute
capand
capbrcup
capcap
capcup
capdot
caps
caret
caron
ccaps
ccaron
ccedil
ccirc
ccups
ccupssm
cdot
cedil
cemptyv
cent
centerdot
chcy
check
checkmark
cirE
circ
circeq
circlearrowleft
circlearrowright
circledR
circledS
circledast
circledcirc
circleddash
cire
cirfnint
cirmid
cirscir
clubs
clubsuit
colon
colone
coloneq
comma
commat
comp
compfn
complement
complexes
cong
congdot
conint
copf
coprod
copysr
crarr
cross
cscr
csub
csube
csup
csupe
ctdot
cudarrl
cudarrr
cuepr
cuesc
cularr
cularrp
cupbrcap
cupcap
cupcup
cupdot
cupor
cups
curarr
curarrm
curlyeqprec
curlyeqsucc
curlyvee
curlywedge
curren
curvearrowleft
curvearrowright
cuvee
cuwed
cwconint
cwint
cylcty
dArr
dHar
dagger
daleth
darr
dash
dashv
dbkarow
dblac
dcaron
ddagger
ddarr
ddotseq
delta
demptyv
dfisht
dharl
dharr
diam
diamond
diamondsuit
diams
digamma
disin
divide
divideontimes
divonx
djcy
dlcorn
dlcrop
dollar
dopf
doteq
doteqdot
dotminus
dotplus
dotsquare
doublebarwedge
downarrow
downdownarrows
downharpoonleft
downharpoonright
drbkarow
drcorn
drcrop
dscr
dscy
dsol
dstrok
dtdot
dtri
dtrif
duarr
duhar
dwangle
dzcy
dzigrarr
eDDot
eDot
eacute
easter
ecaron
ecir
ecirc
ecolon
edot
efDot
egrave
egsdot
elinters
elsdot
emacr
empty
emptyset
emptyv
emsp
emsp13
emsp14
ensp
eogon
eopf
epar
eparsl
eplus
epsi
epsilon
epsiv
eqcirc
eqcolon
eqsim
eqslantgtr
eqslantless
equals
equest
equiv
equivDD
eqvparsl
erDot
erarr
escr
esdot
esim
euml
euro
excl
exist
expectation
exponentiale
fallingdotseq
female
ffilig
fflig
ffllig
filig
fjlig
flat
fllig
fltns
fnof
fopf
forall
fork
forkv
fpartint
frac12
frac13
frac14
frac15
frac16
frac18
frac23
frac25
frac34
frac35
frac38
frac45
frac56
frac58
frac78
frasl
frown
fscr
gacute
gamma
gammad
gbreve
gcirc
gdot
geqq
geqslant
gescc
gesdot
gesdoto
gesdotol
gesl
gesles
gimel
gjcy
gnap
gnapprox
gneq
gneqq
gnsim
gopf
grave
gscr
gsim
gsime
gsiml
gtcc
gtcir
gtdot
gtlPar
gtquest
gtrapprox
gtrarr
gtrdot
gtreqless
gtreqqless
gtrless
gtrsim
gvertneqq
gvnE
hArr
hairsp
half
hamilt
hardcy
harr
harrcir
harrw
hbar
hcirc
hearts
heartsuit
hellip
hercon
hksearow
hkswarow
hoarr
homtht
hookleftarrow
hookrightarrow
hopf
horbar
hscr
hslash
hstrok
hybull
hyphen
iacute
icirc
iecy
iexcl
igrave
iiiint
iiint
iinfin
iiota
ijlig
imacr
imagline
imagpart
imath
imof
imped
incare
infin
infintie
inodot
intcal
integers
intercal
intlarhk
intprod
iocy
iogon
iopf
iota
iprod
iquest
iscr
isin
isinE
isindot
isins
isinsv
isinv
itilde
iukcy
iuml
jcirc
jmath
jopf
jscr
jsercy
jukcy
kappa
kappav
kcedil
kgreen
khcy
kjcy
kopf
kscr
lAarr
lArr
lAtail
lBarr
lHar
lacute
laemptyv
lagran
lambda
lang
langd
langle
laquo
larr
larrb
larrbfs
larrfs
larrhk
larrlp
larrpl
larrsim
larrtl
latail
late
lates
lbarr
lbbrk
lbrace
lbrack
lbrke
lbrksld
lbrkslu
lcaron
lcedil
lceil
lcub
ldca
ldquo
ldquor
ldrdhar
ldrushar
ldsh
leftarrow
leftarrowtail
leftharpoondown
leftharpoonup
leftleftarrows
leftrightarrow
leftrightarrows
leftrightharpoons
leftrightsquigarrow
leftthreetimes
leqq
leqslant
lescc
lesdot
lesdoto
lesdotor
lesg
lesges
lessapprox
lessdot
lesseqgtr
lesseqqgtr
lessgtr
lesssim
lfisht
lfloor
lhard
lharu
lharul
lhblk
ljcy
llarr
llcorner
llhard
lltri
lmidot
lmoust
lmoustache
lnap
lnapprox
lneq
lneqq
lnsim
loang
loarr
lobrk
longleftarrow
longleftrightarrow
longmapsto
longrightarrow
looparrowleft
looparrowright
lopar
lopf
loplus
lotimes
lowast
lowbar
lozenge
lozf
lpar
lparlt
lrarr
lrcorner
lrhar
lrhard
lrtri
lsaquo
lscr
lsim
lsime
lsimg
lsqb
lsquo
lsquor
lstrok
ltcc
ltcir
ltdot
lthree
ltimes
ltlarr
ltquest
ltrPar
ltri
ltrie
ltrif
lurdshar
luruhar
lvertneqq
lvnE
mDDot
macr
male
malt
maltese
mapsto
mapstodown
mapstoleft
mapstoup
marker
mcomma
mdash
measuredangle
micro
midast
midcir
middot
minus
minusb
minusd
minusdu
mlcp
mldr
mnplus
models
mopf
mscr
mstpos
multimap
mumap
nGtv
nLeftarrow
nLeftrightarrow
nLtv
nRightarrow
nVDash
nVdash
nabla
nacute
nang
napE
napid
napos
napprox
natur
natural
naturals
nbsp
nbump
nbumpe
ncap
ncaron
ncedil
ncong
ncongdot
ncup
ndash
neArr
nearhk
nearr
nearrow
nedot
nequiv
nesear
nesim
nexist
nexists
ngeq
ngeqq
ngeqslant
nges
ngsim
ngtr
nhArr
nharr
nhpar
nisd
njcy
nlArr
nlarr
nldr
nleftarrow
nleftrightarrow
nleq
nleqq
nleqslant
nles
nless
nlsim
nltri
nltrie
nmid
nopf
notin
notinE
notindot
notinva
notinvb
notinvc
notni
notniva
notnivb
notnivc
npar
nparallel
nparsl
npart
npolint
nprcue
npre
nprec
npreceq
nrArr
nrarr
nrarrc
nrarrw
nrightarrow
nrtri
nrtrie
nsccue
nsce
nscr
nshortmid
nshortparallel
nsim
nsime
nsimeq
nsmid
nspar
nsqsube
nsqsupe
nsub
nsubE
nsube
nsubset
nsubseteq
nsubseteqq
nsucc
nsucceq
nsup
nsupE
nsupe
nsupset
nsupseteq
nsupseteqq
ntgl
ntilde
ntlg
ntriangleleft
ntrianglelefteq
ntriangleright
ntrianglerighteq
numero
numsp
nvDash
nvHarr
nvap
nvdash
nvge
nvgt
nvinfin
nvlArr
nvle
nvlt
nvltrie
nvrArr
nvrtrie
nvsim
nwArr
nwarhk
nwarr
nwarrow
nwnear
oacute
oast
ocir
ocirc
odash
odblac
odiv
odot
odsold
oelig
ofcir
ogon
ograve
ohbar
oint
olarr
olcir
olcross
oline
omacr
omega
omicron
omid
ominus
oopf
opar
operp
oplus
orarr
order
orderof
ordf
ordm
origof
oror
orslope
oscr
oslash
osol
otilde
otimes
otimesas
ouml
ovbar
para
parallel
parsim
parsl
part
percnt
period
permil
perp
pertenk
phiv
phmmat
phone
pitchfork
planck
planckh
plankv
plus
plusacir
plusb
pluscir
plusdo
plusdu
pluse
plusmn
plussim
plustwo
pointint
popf
pound
prap
prcue
prec
precapprox
preccurlyeq
preceq
precnapprox
precneqq
precnsim
precsim
prime
primes
prnE
prnap
prnsim
prod
profalar
profline
profsurf
prop
propto
prsim
prurel
pscr
puncsp
qint
qopf
qprime
qscr
quaternions
quatint
quest
questeq
quot
rAarr
rArr
rAtail
rBarr
rHar
race
racute
radic
raemptyv
rang
rangd
range
rangle
raquo
rarr
rarrap
rarrb
rarrbfs
rarrc
rarrfs
rarrhk
rarrlp
rarrpl
rarrsim
rarrtl
rarrw
ratail
ratio
rationals
rbarr
rbbrk
rbrace
rbrack
rbrke
rbrksld
rbrkslu
rcaron
rcedil
rceil
rcub
rdca
rdldhar
rdquo
rdquor
rdsh
real
realine
realpart
reals
rect
rfisht
rfloor
rhard
rharu
rharul
rhov
rightarrow
rightarrowtail
rightharpoondown
rightharpoonup
rightleftarrows
rightleftharpoons
rightrightarrows
rightsquigarrow
rightthreetimes
ring
risingdotseq
rlarr
rlhar
rmoust
rmoustache
rnmid
roang
roarr
robrk
ropar
ropf
roplus
rotimes
rpar
rpargt
rppolint
rrarr
rsaquo
rscr
rsqb
rsquo
rsquor
rthree
rtimes
rtri
rtrie
rtrif
rtriltri
ruluhar
sacute
sbquo
scap
scaron
sccue
scedil
scirc
scnE
scnap
scnsim
scpolint
scsim
sdot
sdotb
sdote
seArr
searhk
searr
searrow
sect
semi
seswar
setminus
setmn
sext
sfrown
sharp
shchcy
shcy
shortmid
shortparallel
sigma
sigmaf
sigmav
simdot
sime
simeq
simg
simgE
siml
simlE
simne
simplus
simrarr
slarr
smallsetminus
smashp
smeparsl
smid
smile
smte
smtes
softcy
solb
solbar
sopf
spades
spadesuit
spar
sqcap
sqcaps
sqcup
sqcups
sqsub
sqsube
sqsubset
sqsubseteq
sqsup
sqsupe
sqsupset
sqsupseteq
square
squarf
squf
srarr
sscr
ssetmn
ssmile
sstarf
star
starf
straightepsilon
straightphi
strns
subE
subdot
sube
subedot
submult
subnE
subne
subplus
subrarr
subset
subseteq
subseteqq
subsetneq
subsetneqq
subsim
subsub
subsup
succ
succapprox
succcurlyeq
succeq
succnapprox
succneqq
succnsim
succsim
sung
sup1
sup2
sup3
supE
supdot
supdsub
supe
supedot
suphsol
suphsub
suplarr
supmult
supnE
supne
supplus
supset
supseteq
supseteqq
supsetneq
supsetneqq
supsim
supsub
supsup
swArr
swarhk
swarr
swarrow
swnwar
szlig
target
tbrk
tcaron
tcedil
tdot
telrec
there4
therefore
theta
thetasym
thetav
thickapprox
thicksim
thinsp
thkap
thksim
thorn
tilde
times
timesb
timesbar
timesd
tint
toea
topbot
topcir
topf
topfork
tosa
tprime
trade
triangle
triangledown
triangleleft
trianglelefteq
triangleq
triangleright
trianglerighteq
tridot
trie
triminus
triplus
trisb
tritime
trpezium
tscr
tscy
tshcy
tstrok
twixt
twoheadleftarrow
twoheadrightarrow
uArr
uHar
uacute
uarr
ubrcy
ubreve
ucirc
udarr
udblac
udhar
ufisht
ugrave
uharl
uharr
uhblk
ulcorn
ulcorner
ulcrop
ultri
umacr
uogon
uopf
uparrow
updownarrow
upharpoonleft
upharpoonright
uplus
upsi
upsih
upsilon
upuparrows
urcorn
urcorner
urcrop
uring
urtri
uscr
utdot
utilde
utri
utrif
uuarr
uuml
uwangle
vArr
vBar
vBarv
vDash
vangrt
varepsilon
varkappa
varnothing
varphi
varpi
varpropto
varr
varrho
varsigma
varsubsetneq
varsubsetneqq
varsupsetneq
varsupsetneqq
vartheta
vartriangleleft
vartriangleright
vdash
veebar
veeeq
vellip
verbar
vert
vltri
vnsub
vnsup
vopf
vprop
vrtri
vscr
vsubnE
vsubne
vsupnE
vsupne
vzigzag
wcirc
wedbar
wedge
wedgeq
weierp
wopf
wreath
wscr
xcap
xcirc
xcup
xdtri
xhArr
xharr
xlArr
xlarr
xmap
xnis
xodot
xopf
xoplus
xotime
xrArr
xrarr
xscr
xsqcup
xuplus
xutri
xvee
xwedge
yacute
yacy
ycirc
yicy
yopf
yscr
yucy
yuml
zacute
zcaron
zdot
zeetrf
zeta
zhcy
zigrarr
zopf
zscr
zwnj
</ol>
</section>
</h0
<blockquote
</blockquote>
<ol start="%d"
</ul>
</ol>
</li>
<pre
><code>
 lang="
" data-meta="
"><code>
><code class="language-
</code></pre>
<!-- raw HTML omitted -->
</p>
<br />
<code>
</code>
<strong>
</strong>
<em>
</em>
<a href="
" title="
</a>
<img src="
" alt="
" />
<section class="footnotes" data-footnotes>
<ol>
<li id="fn-
<sup class="footnote-ref"><a href="#fn-
" id="fnref-
" data-footnote-ref>
</a></sup>
html.c
 data-sourcepos="%d:%d-%d:%d"
<a href="#fnref-
" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="
" aria-label="Back to reference 
</a>
 <a href="#fnref-
<sup class="footnote-ref">
</sup></a>
cmark_chunk_ltrim
peek_char_n
inlines.c
!(subj->pos + n < subj->input.len && subj->input.data[subj->pos + n] == 0)
remove_delimiter
delim == subj->last_delim
cmark_iter_next
iterator.c
\textasciitilde{}
\^{}
\textbackslash{}
\textbar{}
\textless{}
\textgreater{}
\textquotedbl{}
\textquotesingle{}
\ldots{}
\begin{quote}
\end{quote}
\begin{
enumerate
itemize
\setcounter{enum
\end{
\item 
\section
\subsection
\subsubsection
\paragraph
\subparagraph
\begin{verbatim}
\end{verbatim}
\begin{center}\rule{0.5\linewidth}{\linethickness}\end{center}
\texttt{
\textbf{
\emph{
\url{
\href{
}\nolinkurl{
\protect\hyperlink{
\protect\includegraphics{
latex.c
\[oq]
\[cq]
\[lq]
\[rq]
\[em]
\[en]
.IP 
\[bu] 2
"%d." 4
\f[C]
\f[]
  *  *  *  *  *
.PD 0
\f[C]
\f[]
\f[B]
\f[I]
[IMAGE: 
man.c
normalize_map_label
map.c
result
flag initialization error in cmark_register_node_flag
too many flags in cmark_register_node_flag
none
block_quote
list
code_block
custom_block
text
html_inline
custom_inline
emph
link
prev
last_child
Invalid '%s' in node type %s at %d:%d
plaintext.c
cmark_reference_create
references.c
cmark_reference_create_attributes
cmark_syntax_extension_add_node
syntax_extension.c
cmark_utf8proc_encode_char
utf8.c
uc >= 0
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document SYSTEM "CommonMark.dtd">
 sourcepos="%d:%d-%d:%d"
 xmlns="http://commonmark.org/xml/1.0"
 xml:space="preserve">
 type="ordered"
 start="%d"
 delim="paren"
 delim="period"
 type="bullet"
 tight="%s"
true
 level="%d"
 info="
 on_enter="
 on_exit="
 destination="
 title="
autolink
http://
https://
ftp://
*_~(
www.
.+-_
xmpp:
postprocess_text
autolink.c
data[start + offset + max_rewind] == '@'
!text->as.literal.alloc
\sout{
.ST "
<del>
</del>
table.c
 --- |
 :-- |
 :-: |
 --: |
commonmark_render
\begin{table}
\begin{tabular}{
\end{tabular}
\end{table}
latex_render
 align="left"
 align="center"
 align="right"
 colspan_filler
 rowspan_filler
 colspan rowspan
 colspan
 rowspan
tab(@);
man_render
<table
</tbody>
</table>
<thead>
<tbody>
</tr>
</thead>
center
right
</th>
</td>
html_render
 style="text-align: 
 align="
 colspan="
 rowspan="
tagfilter
title
textarea
style
iframe
noembed
noframes
script
plaintext
- [x] 
- [ ] 
<input type="checkbox" checked="" disabled="" /> 
<input type="checkbox" disabled="" /> 
 completed="true"
 completed="false"
__consuming
__owned
__setter_access
__shared
_alignment
_backDeploy
_borrow
_borrowing
_BridgeObject
_cdecl
_Class
_compilerInitialized
_const
_consuming
_documentation
_dynamicReplacement
_effects
_expose
_forward
_implements
_linear
_local
_modify
_move
_mutating
_NativeClass
_NativeRefCountedObject
_noMetadata
_nonSendable
_objcImplementation
_objcRuntimeName
_opaqueReturnTypeOf
_optimize
_originallyDefinedIn
_PackageDescription
_private
_projectedValueProperty
_read
_RefCountedObject
_semantics
_specialize
_spi
_spi_available
_swift_native_objc_runtime_base
_Trivial
_TrivialAtMost
_TrivialStride
_typeEraser
_unavailableFromAsync
_underlyingVersion
_UnknownLayout
_version
accesses
actor
addressWithNativeOwner
addressWithOwner
assignment
associatedtype
associativity
async
attached
autoclosure
availability
available
await
backDeployed
before
block
borrowing
break
canImport
case
catch
class
compiler
consume
copy
consuming
continue
convenience
convention
cType
default
defer
deinit
dependsOn
deprecated
derivative
didSet
differentiable
distributed
dynamic
each
else
enum
escaping
exclusivity
exported
extension
fallthrough
false
file
fileprivate
final
discard
forward
func
freestanding
guard
higherThan
import
indirect
init
initializes
inline
inout
internal
introduced
isolated
kind
lazy
left
line
linear
lowerThan
macro
message
module
mutableAddressWithNativeOwner
mutableAddressWithOwner
mutating
noasync
noDerivative
noescape
nonisolated
nonmutating
objc
obsoleted
open
operator
optional
override
package
postfix
precedencegroup
preconcurrency
private
Protocol
protocol
public
reasync
renamed
repeat
required
_resultDependsOn
_resultDependsOnSelf
rethrows
retroactive
return
reverse
safe
scoped
self
sending
Self
Sendable
some
sourceFile
spiModule
static
struct
subscript
super
swift
switch
then
throw
throws
transferring
transpose
Type
typealias
unavailable
unchecked
unowned
unsafe
unsafeAddress
unsafeMutableAddress
visibility
weak
where
while
willSet
witness_method
yield
RawSyntaxData.Layout
RawSyntaxData.ParsedToken
RawSyntaxData.MaterializedToken
Syntax.Info.Root
Syntax.Info.NonRoot
SwiftSyntax/BumpPtrAllocator.swift
Unable to allocate memory!
_TtC11SwiftSyntax16BumpPtrAllocator
initialSlabSize
slabs
current
customSizeSlabs
_totalBytesAllocated
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SyntaxText.swift
If count is not zero, base address must be exist
<#expression#>
<#pattern#>
<#statement#>
<#type#>
<#syntax#>
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/Raw/RawSyntaxLayoutView.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/Raw/RawSyntax.swift
If kind is keyword, the text must be a known token kind
 descendantCount=
.materializedToken(
 numLeadingTrivia=
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SourceLocation.swift
_TtC11SwiftSyntax23SourceLocationConverter
fileName
source
lines
endOfFile
sourceLocationDirectives
SourceLocationConverter must be passed the root of the syntax tree
line comment created that contained a new-line character
The string literal '
' contains string interpolation, which is not allowed
' is not a decimal integer
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/Syntax.swift
_TtCV11SwiftSyntax6Syntax4Info
info
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SyntaxArena.swift
SourceBuffer should only be set once.
_TtC11SwiftSyntax11SyntaxArena
allocator
childRefs
_TtC11SwiftSyntax18ParsingSyntaxArena
sourceBuffer
parseTriviaFunction
SwiftSyntax.ParsingSyntaxArena
init(slabSize:)
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SyntaxChildren.swift
presentIndex(before:) must not be called if there is no present index before the given one
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SyntaxCollection.swift
inserting node at invalid index 
replacing node at invalid index 
Can't remove from an empty collection
SwiftSyntax/SyntaxProtocol.swift
Children of syntax node do not cover all positions in it
 trailingTrivia=
AnyKeyPath & Sendable
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/TokenDiagnostic.swift
SwiftSyntax/TokenSyntax.swift
TokenSyntax must have token as its raw
TokenSyntax cannot be cast to 
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesTUVWXYZ.swift
unexpectedAfterRightParen
unexpectedBetweenElementsAndRightParen
unexpectedBetweenLeftParenAndElements
unexpectedBeforeLeftParen
unexpectedAfterComma
unexpectedBetweenExpressionAndComma
unexpectedBeforeExpression
unexpectedAfterYieldedExpressions
yieldedExpressions
unexpectedBetweenYieldKeywordAndYieldedExpressions
unexpectedBeforeYieldKeyword
unexpectedAfterWildcard
unexpectedBeforeWildcard
unexpectedAfterBody
unexpectedBetweenConditionsAndBody
unexpectedBetweenWhileKeywordAndConditions
unexpectedBeforeWhileKeyword
unexpectedAfterCondition
unexpectedBetweenWhereKeywordAndCondition
unexpectedBeforeWhereKeyword
unexpectedAfterComponents
unexpectedBetweenMajorAndComponents
unexpectedBeforeMajor
unexpectedAfterNumber
unexpectedBetweenPeriodAndNumber
unexpectedBeforePeriod
unexpectedAfterBindings
unexpectedBetweenBindingSpecifierAndBindings
bindingSpecifier
unexpectedBetweenModifiersAndBindingSpecifier
unexpectedBetweenAttributesAndModifiers
unexpectedBeforeAttributes
unexpectedAfterPattern
unexpectedBetweenBindingSpecifierAndPattern
unexpectedBeforeBindingSpecifier
unexpectedAfterColon
unexpectedBetweenThenExpressionAndColon
unexpectedBetweenQuestionMarkAndThenExpression
unexpectedBeforeQuestionMark
unexpectedAfterIsKeyword
unexpectedBeforeIsKeyword
unexpectedAfterQuestionOrExclamationMark
questionOrExclamationMark
unexpectedBetweenAsKeywordAndQuestionOrExclamationMark
unexpectedBeforeAsKeyword
unexpectedAfterFilename
unexpectedBetweenColonAndFilename
unexpectedBetweenSourceFileLabelAndColon
unexpectedBeforeSourceFileLabel
unexpectedAfterMessage
unexpectedBetweenColonAndMessage
unexpectedBetweenMessageLabelAndColon
unexpectedBeforeMessageLabel
unexpectedAfterValue
unexpectedBetweenEqualAndValue
unexpectedBeforeEqual
unexpectedAfterType
unexpectedBeforeType
unexpectedAfterThrowsClause
unexpectedBetweenAsyncSpecifierAndThrowsClause
unexpectedBeforeAsyncSpecifier
unexpectedBetweenColonAndType
unexpectedBeforeColon
unexpectedAfterGenericWhereClause
genericWhereClause
unexpectedBetweenInitializerAndGenericWhereClause
unexpectedBetweenGenericParameterClauseAndInitializer
genericParameterClause
unexpectedBetweenNameAndGenericParameterClause
unexpectedBetweenTypealiasKeywordAndName
typealiasKeyword
unexpectedBetweenModifiersAndTypealiasKeyword
unexpectedAfterTrailingComma
unexpectedBetweenEllipsisAndTrailingComma
unexpectedBetweenTypeAndEllipsis
unexpectedBetweenSecondNameAndColon
unexpectedBetweenFirstNameAndSecondName
unexpectedBetweenInoutKeywordAndFirstName
unexpectedBeforeInoutKeyword
unexpectedBetweenPatternAndTrailingComma
unexpectedBetweenColonAndPattern
unexpectedBetweenLabelAndColon
unexpectedBeforeLabel
unexpectedAfterExpression
unexpectedBetweenQuestionOrExclamationMarkAndExpression
unexpectedBetweenTryKeywordAndQuestionOrExclamationMark
unexpectedBeforeTryKeyword
unexpectedBetweenTypeAndRightParen
unexpectedBetweenLeftParenAndType
unexpectedBetweenThrowsSpecifierAndLeftParen
unexpectedBeforeThrowsSpecifier
unexpectedBetweenThrowKeywordAndExpression
unexpectedBeforeThrowKeyword
unexpectedBetweenThenKeywordAndExpression
unexpectedBeforeThenKeyword
unexpectedAfterElseExpression
unexpectedBetweenColonAndElseExpression
unexpectedBetweenConditionAndQuestionMark
unexpectedBeforeCondition
unexpectedAfterRightBrace
unexpectedBetweenCasesAndRightBrace
unexpectedBetweenLeftBraceAndCases
unexpectedBetweenSubjectAndLeftBrace
unexpectedBetweenSwitchKeywordAndSubject
unexpectedBeforeSwitchKeyword
unexpectedBetweenDefaultKeywordAndColon
unexpectedBeforeDefaultKeyword
unexpectedAfterStatements
unexpectedBetweenLabelAndStatements
unexpectedBetweenAttributeAndLabel
unexpectedBeforeAttribute
unexpectedBetweenCaseItemsAndColon
unexpectedBetweenCaseKeywordAndCaseItems
unexpectedBeforeCaseKeyword
unexpectedBetweenWhereClauseAndTrailingComma
unexpectedBetweenPatternAndWhereClause
unexpectedBeforePattern
unexpectedBetweenWithoutTildeAndType
unexpectedBeforeWithoutTilde
unexpectedAfterSuperKeyword
unexpectedBeforeSuperKeyword
unexpectedAfterAccessorBlock
unexpectedBetweenGenericWhereClauseAndAccessorBlock
unexpectedBetweenReturnClauseAndGenericWhereClause
unexpectedBetweenParameterClauseAndReturnClause
unexpectedBetweenGenericParameterClauseAndParameterClause
unexpectedBetweenSubscriptKeywordAndGenericParameterClause
subscriptKeyword
unexpectedBetweenModifiersAndSubscriptKeyword
unexpectedAfterAdditionalTrailingClosures
additionalTrailingClosures
unexpectedBetweenTrailingClosureAndAdditionalTrailingClosures
unexpectedBetweenRightSquareAndTrailingClosure
unexpectedBetweenArgumentsAndRightSquare
unexpectedBetweenLeftSquareAndArguments
unexpectedBetweenCalledExpressionAndLeftSquare
calledExpression
unexpectedBeforeCalledExpression
unexpectedAfterMemberBlock
unexpectedBetweenGenericWhereClauseAndMemberBlock
unexpectedBetweenInheritanceClauseAndGenericWhereClause
inheritanceClause
unexpectedBetweenGenericParameterClauseAndInheritanceClause
unexpectedBetweenStructKeywordAndName
unexpectedBetweenModifiersAndStructKeyword
unexpectedAfterContent
unexpectedBeforeContent
unexpectedAfterClosingPounds
unexpectedBetweenClosingQuoteAndClosingPounds
unexpectedBetweenSegmentsAndClosingQuote
unexpectedBetweenOpeningQuoteAndSegments
unexpectedBetweenOpeningPoundsAndOpeningQuote
unexpectedBeforeOpeningPounds
unexpectedBetweenDeclNameAndTrailingComma
unexpectedBetweenColonAndDeclName
unexpectedBetweenTargetLabelAndColon
unexpectedBeforeTargetLabel
unexpectedAfterSemicolon
unexpectedBetweenAvailabilityArgumentsAndSemicolon
availabilityArguments
unexpectedBetweenColonAndAvailabilityArguments
unexpectedBetweenAvailabilityLabelAndColon
availabilityLabel
unexpectedBeforeAvailabilityLabel
unexpectedAfterEndOfFileToken
unexpectedBetweenStatementsAndEndOfFileToken
unexpectedBetweenShebangAndStatements
unexpectedBeforeShebang
unexpectedAfterConstraint
unexpectedBetweenSomeOrAnySpecifierAndConstraint
someOrAnySpecifier
unexpectedBeforeSomeOrAnySpecifier
unexpectedAfterSpecifier
unexpectedBeforeSpecifier
unexpectedAfterClosingQuote
unexpectedBeforeOpeningQuote
unexpectedAfterElements
unexpectedBeforeElements
unexpectedAfterRightType
unexpectedBetweenEqualAndRightType
unexpectedBetweenLeftTypeAndEqual
unexpectedBeforeLeftType
unexpectedBetweenReturnKeywordAndExpression
unexpectedBeforeReturnKeyword
unexpectedBetweenArrowAndType
unexpectedBeforeArrow
unexpectedBetweenWhileKeywordAndCondition
unexpectedBetweenBodyAndWhileKeyword
unexpectedBetweenRepeatKeywordAndBody
unexpectedBeforeRepeatKeyword
unexpectedBetweenClosingSlashAndClosingPounds
unexpectedBetweenRegexAndClosingSlash
unexpectedBetweenOpeningSlashAndRegex
unexpectedBetweenOpeningPoundsAndOpeningSlash
unexpectedBetweenPrimaryAssociatedTypeClauseAndInheritanceClause
primaryAssociatedTypeClause
unexpectedBetweenNameAndPrimaryAssociatedTypeClause
unexpectedBetweenProtocolKeywordAndName
unexpectedBetweenModifiersAndProtocolKeyword
unexpectedBetweenNameAndTrailingComma
unexpectedBeforeName
unexpectedAfterRightAngle
unexpectedBetweenPrimaryAssociatedTypesAndRightAngle
primaryAssociatedTypes
unexpectedBetweenLeftAngleAndPrimaryAssociatedTypes
unexpectedBeforeLeftAngle
unexpectedBetweenOperatorAndExpression
unexpectedBeforeOperator
unexpectedAfterPrecedenceGroups
precedenceGroups
unexpectedBetweenColonAndPrecedenceGroups
unexpectedBetweenHigherThanOrLowerThanLabelAndColon
higherThanOrLowerThanLabel
unexpectedBeforeHigherThanOrLowerThanLabel
unexpectedBetweenGroupAttributesAndRightBrace
unexpectedBetweenLeftBraceAndGroupAttributes
unexpectedBetweenNameAndLeftBrace
unexpectedBetweenPrecedencegroupKeywordAndName
precedencegroupKeyword
unexpectedBetweenModifiersAndPrecedencegroupKeyword
unexpectedBetweenColonAndValue
unexpectedBetweenAssociativityLabelAndColon
associativityLabel
unexpectedBeforeAssociativityLabel
unexpectedBetweenAssignmentLabelAndColon
unexpectedBeforeAssignmentLabel
unexpectedBetweenArgumentsAndRightParen
unexpectedBetweenLeftParenAndArguments
unexpectedBetweenPoundSourceLocationAndLeftParen
poundSourceLocation
unexpectedBeforePoundSourceLocation
unexpectedAfterLineNumber
unexpectedBetweenLineColonAndLineNumber
unexpectedBetweenLineLabelAndLineColon
unexpectedBetweenCommaAndLineLabel
unexpectedBetweenFileNameAndComma
unexpectedBetweenFileColonAndFileName
unexpectedBetweenFileLabelAndFileColon
unexpectedBeforeFileLabel
unexpectedAfterOperator
unexpectedBetweenExpressionAndOperator
unexpectedAfterConfig
unexpectedBetweenBaseAndConfig
unexpectedBeforeBase
unexpectedAfterVersion
unexpectedBetweenPlatformAndVersion
unexpectedBeforePlatform
unexpectedBetweenPlatformVersionAndTrailingComma
unexpectedBeforePlatformVersion
unexpectedBetweenAccessorBlockAndTrailingComma
unexpectedBetweenInitializerAndAccessorBlock
unexpectedBetweenTypeAnnotationAndInitializer
unexpectedBetweenPatternAndTypeAnnotation
unexpectedAfterRepetitionPattern
repetitionPattern
unexpectedBetweenRepeatKeywordAndRepetitionPattern
unexpectedAfterPack
unexpectedBetweenEachKeywordAndPack
unexpectedBeforeEachKeyword
unexpectedAfterPlatforms
unexpectedBetweenCommaAndPlatforms
unexpectedBetweenModuleNameAndComma
unexpectedBetweenColonAndModuleName
unexpectedBetweenModuleLabelAndColon
unexpectedBeforeModuleLabel
unexpectedAfterQuestionMark
unexpectedBetweenWrappedTypeAndQuestionMark
unexpectedBeforeWrappedType
unexpectedBetweenExpressionAndQuestionMark
unexpectedAfterInitializer
unexpectedAfterDesignatedTypes
unexpectedBetweenPrecedenceGroupAndDesignatedTypes
unexpectedBetweenColonAndPrecedenceGroup
unexpectedAfterOperatorPrecedenceAndTypes
operatorPrecedenceAndTypes
unexpectedBetweenNameAndOperatorPrecedenceAndTypes
unexpectedBetweenOperatorKeywordAndName
unexpectedBetweenFixitySpecifierAndOperatorKeyword
unexpectedBeforeFixitySpecifier
unexpectedAfterOrdinal
unexpectedBetweenCommaAndOrdinal
unexpectedBetweenMangledNameAndComma
unexpectedBeforeMangledName
unexpectedBetweenNameAndColon
unexpectedAfterNilKeyword
unexpectedBeforeNilKeyword
unexpectedBetweenGenericParameterClauseAndType
unexpectedBeforeGenericParameterClause
unexpectedAfterClosure
unexpectedBetweenColonAndClosure
unexpectedAfterPlaceholder
unexpectedBeforePlaceholder
unexpectedBetweenModifiersAndPlaceholder
unexpectedAfterMetatypeSpecifier
metatypeSpecifier
unexpectedBetweenPeriodAndMetatypeSpecifier
unexpectedBetweenBaseTypeAndPeriod
unexpectedBeforeBaseType
unexpectedAfterGenericArgumentClause
genericArgumentClause
unexpectedBetweenNameAndGenericArgumentClause
unexpectedBetweenPeriodAndName
unexpectedBetweenMembersAndRightBrace
unexpectedBetweenLeftBraceAndMembers
unexpectedBeforeLeftBrace
unexpectedBetweenDeclAndSemicolon
unexpectedBeforeDecl
unexpectedAfterDeclName
unexpectedBetweenPeriodAndDeclName
unexpectedBetweenBaseAndPeriod
unexpectedBetweenCaseKeywordAndPattern
unexpectedBetweenRightParenAndTrailingClosure
unexpectedBetweenGenericArgumentClauseAndLeftParen
unexpectedBetweenMacroNameAndGenericArgumentClause
unexpectedBetweenPoundAndMacroName
unexpectedBeforePound
unexpectedBetweenModifiersAndPound
unexpectedBetweenDefinitionAndGenericWhereClause
unexpectedBetweenSignatureAndDefinition
unexpectedBetweenGenericParameterClauseAndSignature
unexpectedBetweenMacroKeywordAndName
unexpectedBetweenModifiersAndMacroKeyword
unexpectedBetweenScopedKeywordAndArguments
unexpectedBetweenLeftParenAndScopedKeyword
unexpectedBetweenDependsOnKeywordAndLeftParen
dependsOnKeyword
unexpectedBeforeDependsOnKeyword
unexpectedBetweenParameterAndTrailingComma
unexpectedBeforeParameter
unexpectedBetweenAlignmentAndRightParen
unexpectedBetweenCommaAndAlignment
unexpectedBetweenSizeAndComma
unexpectedBetweenLeftParenAndSize
unexpectedBetweenLayoutSpecifierAndLeftParen
unexpectedBetweenColonAndLayoutSpecifier
unexpectedBetweenTypeAndColon
unexpectedAfterStatement
unexpectedBetweenColonAndStatement
unexpectedBetweenValueAndTrailingComma
unexpectedBetweenExpressionAndTrailingComma
unexpectedBetweenColonAndExpression
unexpectedAfterRightSquare
unexpectedBeforeLeftSquare
unexpectedBetweenDeclNameAndGenericArgumentClause
unexpectedBeforeDeclName
unexpectedBeforeQuestionOrExclamationMark
unexpectedBetweenRootAndComponents
unexpectedBetweenBackslashAndRoot
unexpectedBeforeBackslash
unexpectedAfterComponent
unexpectedBetweenPeriodAndComponent
unexpectedBetweenIsKeywordAndType
unexpectedBetweenExpressionAndIsKeyword
unexpectedAfterLiteral
unexpectedBeforeLiteral
unexpectedBetweenGenericWhereClauseAndBody
unexpectedBetweenSignatureAndGenericWhereClause
unexpectedBetweenOptionalMarkAndGenericParameterClause
unexpectedBetweenInitKeywordAndOptionalMark
unexpectedBetweenModifiersAndInitKeyword
unexpectedBetweenTypeAndTrailingComma
unexpectedAfterInheritedTypes
unexpectedBetweenColonAndInheritedTypes
unexpectedAfterRightOperand
unexpectedBetweenOperatorAndRightOperand
unexpectedBetweenLeftOperandAndOperator
unexpectedBeforeLeftOperand
unexpectedBetweenAmpersandAndExpression
unexpectedBeforeAmpersand
unexpectedAfterTrailingPeriod
unexpectedBetweenNameAndTrailingPeriod
unexpectedAfterPath
unexpectedBetweenImportKindSpecifierAndPath
importKindSpecifier
unexpectedBetweenImportKeywordAndImportKindSpecifier
unexpectedBetweenModifiersAndImportKeyword
unexpectedAfterExclamationMark
unexpectedBetweenWrappedTypeAndExclamationMark
unexpectedBetweenCommaAndDeclName
unexpectedBetweenTypeAndComma
unexpectedAfterElseBody
unexpectedBetweenElseKeywordAndElseBody
unexpectedBetweenBodyAndElseKeyword
unexpectedBetweenIfKeywordAndConditions
unexpectedBeforeIfKeyword
unexpectedAfterPoundEndif
unexpectedBetweenClausesAndPoundEndif
unexpectedBeforeClauses
unexpectedBetweenConditionAndElements
unexpectedBetweenPoundKeywordAndCondition
unexpectedBeforePoundKeyword
unexpectedAfterIdentifier
unexpectedBeforeIdentifier
unexpectedBetweenElseKeywordAndBody
unexpectedBetweenConditionsAndElseKeyword
unexpectedBetweenGuardKeywordAndConditions
unexpectedBeforeGuardKeyword
unexpectedAfterRequirements
unexpectedBetweenWhereKeywordAndRequirements
unexpectedBetweenExpressionAndGenericArgumentClause
unexpectedBetweenRequirementAndTrailingComma
unexpectedBeforeRequirement
unexpectedBetweenInheritedTypeAndTrailingComma
unexpectedBetweenColonAndInheritedType
unexpectedBetweenEachKeywordAndName
unexpectedBetweenAttributesAndEachKeyword
unexpectedBetweenGenericWhereClauseAndRightAngle
unexpectedBetweenParametersAndGenericWhereClause
unexpectedBetweenLeftAngleAndParameters
unexpectedBetweenArgumentAndTrailingComma
unexpectedBeforeArgument
unexpectedBetweenArgumentsAndRightAngle
unexpectedBetweenLeftAngleAndArguments
unexpectedAfterReturnClause
unexpectedBetweenEffectSpecifiersAndReturnClause
effectSpecifiers
unexpectedBetweenRightParenAndEffectSpecifiers
unexpectedBetweenParametersAndRightParen
unexpectedBetweenLeftParenAndParameters
unexpectedBetweenParameterClauseAndEffectSpecifiers
unexpectedBeforeParameterClause
unexpectedBetweenDefaultValueAndTrailingComma
unexpectedBetweenEllipsisAndDefaultValue
unexpectedBetweenModifiersAndFirstName
unexpectedBetweenFuncKeywordAndName
unexpectedBetweenModifiersAndFuncKeyword
unexpectedBetweenCalledExpressionAndLeftParen
unexpectedBetweenExpressionAndExclamationMark
unexpectedBetweenWhereClauseAndBody
unexpectedBetweenSequenceAndWhereClause
unexpectedBetweenInKeywordAndSequence
unexpectedBetweenTypeAnnotationAndInKeyword
unexpectedBetweenAwaitKeywordAndCaseKeyword
unexpectedBetweenTryKeywordAndAwaitKeyword
unexpectedBetweenForKeywordAndTryKeyword
unexpectedBeforeForKeyword
unexpectedAfterFallthroughKeyword
fallthroughKeyword
unexpectedBeforeFallthroughKeyword
unexpectedBetweenExtendedTypeAndInheritanceClause
unexpectedBetweenExtensionKeywordAndExtendedType
extensionKeyword
unexpectedBetweenModifiersAndExtensionKeyword
unexpectedBetweenExpressionsAndRightParen
unexpectedBetweenLeftParenAndExpressions
unexpectedBetweenPoundsAndLeftParen
unexpectedBetweenBackslashAndPounds
unexpectedAfterCxxName
unexpectedBetweenCommaAndCxxName
unexpectedBetweenLanguageAndComma
unexpectedBeforeLanguage
unexpectedBetweenEnumKeywordAndName
unexpectedBetweenModifiersAndEnumKeyword
unexpectedBetweenTypeAndDefaultValue
unexpectedBeforeModifiers
unexpectedBetweenRawValueAndTrailingComma
unexpectedBetweenParameterClauseAndRawValue
unexpectedBetweenNameAndParameterClause
unexpectedBetweenCaseKeywordAndElements
unexpectedBetweenModifiersAndCaseKeyword
unexpectedBetweenForLabelAndColon
unexpectedBeforeForLabel
unexpectedAfterCatchClauses
unexpectedBetweenBodyAndCatchClauses
unexpectedBetweenThrowsClauseAndBody
unexpectedBetweenDoKeywordAndThrowsClause
unexpectedBeforeDoKeyword
unexpectedBetweenDoKeywordAndBody
unexpectedBetweenDiscardKeywordAndExpression
unexpectedBeforeDiscardKeyword
unexpectedBetweenArgumentsCommaAndGenericWhereClause
unexpectedBetweenArgumentsAndArgumentsComma
unexpectedBetweenKindSpecifierCommaAndArguments
kindSpecifierComma
unexpectedBetweenKindSpecifierAndKindSpecifierComma
unexpectedBeforeKindSpecifier
unexpectedAfterArguments
unexpectedBetweenColonAndArguments
unexpectedBetweenWrtLabelAndColon
unexpectedBeforeWrtLabel
unexpectedBetweenValueAndRightSquare
unexpectedBetweenKeyAndColon
unexpectedBetweenLeftSquareAndKey
unexpectedBetweenContentAndRightSquare
unexpectedBetweenLeftSquareAndContent
unexpectedBeforeKey
unexpectedAfterName
unexpectedBetweenLeadingCommaAndName
unexpectedBeforeLeadingComma
unexpectedBetweenCommaAndArguments
unexpectedBetweenAccessorSpecifierAndComma
accessorSpecifier
unexpectedBetweenPeriodAndAccessorSpecifier
unexpectedBetweenOriginalDeclNameAndPeriod
originalDeclName
unexpectedBetweenColonAndOriginalDeclName
unexpectedBetweenOfLabelAndColon
unexpectedBeforeOfLabel
unexpectedAfterAsyncSpecifier
unexpectedBetweenEffectSpecifiersAndBody
unexpectedBetweenDeinitKeywordAndEffectSpecifiers
unexpectedBetweenModifiersAndDeinitKeyword
unexpectedBetweenDeferKeywordAndBody
unexpectedBeforeDeferKeyword
unexpectedAfterArgumentNames
unexpectedBetweenBaseNameAndArgumentNames
unexpectedBeforeBaseName
unexpectedAfterDetail
unexpectedBetweenNameAndDetail
unexpectedBetweenDetailAndRightParen
unexpectedBetweenLeftParenAndDetail
unexpectedBetweenCopyKeywordAndExpression
unexpectedBeforeCopyKeyword
unexpectedAfterProtocolName
unexpectedBetweenColonAndProtocolName
unexpectedBetweenWitnessMethodLabelAndColon
witnessMethodLabel
unexpectedBeforeWitnessMethodLabel
unexpectedAfterCTypeString
unexpectedBetweenColonAndCTypeString
unexpectedBetweenCTypeLabelAndColon
unexpectedBetweenCommaAndCTypeLabel
unexpectedBetweenConventionLabelAndComma
unexpectedBeforeConventionLabel
unexpectedAfterLabel
unexpectedBetweenContinueKeywordAndLabel
unexpectedBeforeContinueKeyword
unexpectedBetweenConsumeKeywordAndExpression
unexpectedBeforeConsumeKeyword
unexpectedBetweenColonAndRightType
unexpectedBetweenLeftTypeAndColon
unexpectedBetweenConditionAndTrailingComma
unexpectedAfterAmpersand
unexpectedBetweenTypeAndAmpersand
unexpectedBetweenStatementsAndRightBrace
unexpectedBetweenLeftBraceAndStatements
unexpectedBetweenItemAndSemicolon
unexpectedBeforeItem
unexpectedAfterInKeyword
unexpectedBetweenReturnClauseAndInKeyword
unexpectedBetweenCaptureAndParameterClause
unexpectedBetweenAttributesAndCapture
unexpectedBetweenSignatureAndStatements
unexpectedBetweenLeftBraceAndSignature
unexpectedBetweenEqualAndExpression
unexpectedBetweenNameAndEqual
unexpectedBetweenSpecifierAndName
unexpectedBetweenSpecifierAndLeftParen
unexpectedBetweenItemsAndRightSquare
unexpectedBetweenLeftSquareAndItems
unexpectedAfterClassKeyword
unexpectedBeforeClassKeyword
unexpectedBetweenClassKeywordAndName
unexpectedBetweenModifiersAndClassKeyword
unexpectedBetweenCatchItemsAndBody
unexpectedBetweenCatchKeywordAndCatchItems
unexpectedBeforeCatchKeyword
unexpectedBetweenColonAndVersion
unexpectedBetweenCommaAndLabel
unexpectedBeforeComma
unexpectedBetweenVersionInfoAndRightParen
unexpectedBetweenImportPathAndVersionInfo
unexpectedBetweenLeftParenAndImportPath
unexpectedBetweenCanImportKeywordAndLeftParen
canImportKeyword
unexpectedBeforeCanImportKeyword
unexpectedBetweenBreakKeywordAndLabel
unexpectedBeforeBreakKeyword
unexpectedBetweenBorrowKeywordAndExpression
unexpectedBeforeBorrowKeyword
unexpectedBetweenColonAndPlatforms
unexpectedBetweenBeforeLabelAndColon
unexpectedBeforeBeforeLabel
unexpectedBetweenAwaitKeywordAndExpression
unexpectedBeforeAwaitKeyword
unexpectedBetweenAvailabilityArgumentsAndRightParen
unexpectedBetweenLeftParenAndAvailabilityArguments
unexpectedBetweenAvailabilityKeywordAndLeftParen
availabilityKeyword
unexpectedBeforeAvailabilityKeyword
unexpectedAfterBaseType
unexpectedBetweenAttributesAndBaseType
unexpectedBetweenSpecifiersAndAttributes
unexpectedBeforeSpecifiers
unexpectedBetweenAttributeNameAndLeftParen
unexpectedBetweenAtSignAndAttributeName
unexpectedBeforeAtSign
unexpectedBetweenInheritanceClauseAndInitializer
unexpectedBetweenNameAndInheritanceClause
unexpectedBetweenAssociatedtypeKeywordAndName
associatedtypeKeyword
unexpectedBetweenModifiersAndAssociatedtypeKeyword
unexpectedAfterEqual
unexpectedBetweenQuestionOrExclamationMarkAndType
unexpectedBetweenExpressionAndAsKeyword
unexpectedAfterArrow
unexpectedBetweenEffectSpecifiersAndArrow
unexpectedBeforeEffectSpecifiers
unexpectedBetweenElementAndRightSquare
unexpectedBetweenLeftSquareAndElement
unexpectedBetweenElementsAndRightSquare
unexpectedBetweenLeftSquareAndElements
unexpectedBetweenActorKeywordAndName
unexpectedBetweenModifiersAndActorKeyword
unexpectedBetweenNameAndRightParen
unexpectedBetweenLeftParenAndName
unexpectedBetweenParametersAndEffectSpecifiers
unexpectedBetweenAccessorSpecifierAndParameters
unexpectedBetweenModifierAndAccessorSpecifier
unexpectedBetweenAttributesAndModifier
unexpectedBetweenAccessorsAndRightBrace
unexpectedBetweenLeftBraceAndAccessors
_TtC11SwiftSyntax16SyntaxAnyVisitor
SwiftSyntax/SyntaxBaseNodes.swift
 cannot be cast to 
_TtC11SwiftSyntax14SyntaxRewriter
viewMode
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/SyntaxRewriter.swift
_TtC11SwiftSyntax13SyntaxVisitor
recyclableNodeInfos
recyclableNodeInfosUsageBitmap
#unavailable
#sourceLocation
#endif
#elseif
#else
#available
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/TokenKind.swift
docBlockComment(
carriageReturnLineFeeds(
carriageReturns(
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/Raw/RawSyntaxNodeProtocol.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesAB.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesD.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesC.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesGHI.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesJKLMN.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesEF.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesOP.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesQRS.swift
Swift/x86_64-apple-macos.private.swiftinterface
UnsafeMutablePointer.initialize overlapping range
UnsafeMutablePointer.initialize with negative count
org.swift.swift-syntax
MemberBlockItemListSyntax
Unexpectedly found nil while unwrapping an Optional value
UnsafeMutableRawPointer.initializeMemory overlapping range
Insufficient space allocated to copy string contents
invalid Collection: less than 'count' elements in collection
UnsafeMutableBufferPointer with negative count
CodeBlockItemListSyntax
AttributeListSyntax
AccessorDeclListSyntax
VersionTupleSyntax
SourceFileSyntax
MemberBlockSyntax
GenericParameterClauseSyntax
FunctionParameterSyntax
EnumCaseParameterSyntax
CodeBlockItemSyntax
ClosureParameterSyntax
CatchClauseSyntax
AccessorDeclSyntax
AccessorBlockSyntax
SwitchCaseSyntax
SwiftSyntaxBuilder.Indenter
_TtC18SwiftSyntaxBuilder8Indenter
indentation
offset element 
Parsing the code snippet was expected to produce a 
 but produced a 
key value 
unexpected trivia '
Range requires lowerBound <= upperBound
Must take zero or more splits
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntaxBuilder/SyntaxNodeWithBody.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntaxBuilder/ValidatingSyntaxNodes.swift
SwiftSyntaxBuilder
UnexpectedTrivia
SwiftBasicFormat.BasicFormat
_TtC16SwiftBasicFormat11BasicFormat
indentationWidth
indentationStack
anchorPoints
previousToken
stringLiteralNestingLevel
_TtC16SwiftBasicFormatP33_0AB3BA44B076685D284D1CADB6E5BB9419IndentationInferrer
previousTokenTrailingTrivia
spaceIndentedLines
tabIndentedLines
linesProcessed
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/TokenSpec.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/TokenConsumer.swift
metadata
<#declaration#>
AnyObject
elif
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Expressions.swift
elements must have an even number of elements
Couldn't be a trailing closure
SwiftParser/Expressions.swift
Postfix #if should only have one element
SwiftParser/IncrementalParseTransition.swift
ConcurrentEdits created by translateSequentialEditsToConcurrentEdits do not satisfy ConcurrentEdits requirements
A single edit doesn't satisfy the ConcurrentEdits requirements?
_TtC11SwiftParser26IncrementalParseTransition
previousIncrementalParseResult
edits
reusedNodeCallback
Edits passed to ConcurrentEdits(concurrent:) does not satisfy the requirements posed by ConcurrentEdits
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/IncrementalParseTransition.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Lexer/Cursor.swift
Caller must handle newlines in non-multiline
sourceLocation
elseif
endif
Use Result.keyword instead
Unexpected start
not a hex literal
not at a hex float exponent?!
Unexpected start of escaped identifier
unexpected operator start
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Lexer/LexemeSequence.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Lexer/RegexLiteralLexer.swift
Should have lexed this?
lexing before the operator?
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Lookahead.swift
If tokenKind has a defaultText, the prefix needs to match it
not checking a brace?
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Names.swift
_TtC11SwiftParser21LookaheadTrackerOwner
lookaheadTracker
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Parser.swift
To create a TokenSpec for a keyword use the initializer that takes a keyword
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Statements.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/StringLiteralRepresentedLiteralValue.swift
appendUnescapedLiteralValue relies on properly parsed literals
_TtC11SwiftParserP33_78149DB072C20084E7D780D86E26C3AF41StringLiteralExpressionIndentationChecker
expectedIndentation
arena
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/StringLiterals.swift
String segment produced by the lexer should not have unexpected text or trivia because we would drop it during post-processing
The lexer should only add trailing trivia to a string segment if the newline is escaped by a backslash
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/TriviaParser.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Specifiers.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/ParseSourceFile.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftDiagnostics/Diagnostic.swift
at least one diagnostic must have severity == .error
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftDiagnostics/FixIt.swift
A Fix-It must have at least one change associated with it
expanded code originates here
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftDiagnostics/DiagnosticsFormatter.swift
editor placeholder in source file
'=' must have consistent whitespace on both sides
hexadecimal floating point literal must end with an exponent
expected '}' in \u{...} escape sequence
expected a digit in floating point exponent
expected hexadecimal code in \u{...} escape sequence
expected hexadecimal digit (0-9, A-F) in integer literal
invalid character in source file
invalid escape sequence in literal
an identifier cannot begin with this character
\u{...} escape sequence expects between 1 and 8 hex digits
invalid UTF-8 found in source file
the lexer discovered an error in this token but was not able to represent its offset due to overflow; please split the token
source control conflict marker in source file
unexpected end of block comment
unicode curly quote found; use '"' instead
bare slash regex literal may not start with space
bare slash regex literal may not end with space
multi-line regex closing delimiter must appear on new line
unprintable ASCII character found in source file
unterminated '/*' comment
non-breaking space (U+00A0) used instead of regular space
nul character embedded in middle of file
_TtC22SwiftParserDiagnostics22PresentMakingFormatter
SwiftParserDiagnostics.PresentMakingFormatter
init(indentationWidth:initialIndentation:viewMode:)
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParserDiagnostics/DiagnosticExtensions.swift
extraneous whitespace before '
' is not permitted
extraneous whitespace after '
' is not a valid first character in floating point exponent
' is not a valid digit in floating point exponent
' is not a valid hexadecimal digit (0-9, A-F) in integer literal
' is not a valid digit in integer literal
' is not a valid octal digit (0-7) in integer literal
' is not a valid binary digit (0 or 1) in integer literal
; this is an error in Swift 6
remove whitespace
removeExtraneousWhitespace
insert whitespace
insertWhitespace
replace curly quotes with '"'
replaceCurlyQuoteByNormalQuote
replace non-breaking space with ' '
replaceNonBreakingSpaceBySpace
to match this opening '
_TtC22SwiftParserDiagnostics16NoNewlinesFormat
_TtC22SwiftParserDiagnosticsP33_D814B2AFEC72B63D6ADAFD28B2DCE30C15HasTokenChecker
hasToken
if this name is unavoidable, use backticks to escape it
multi-line string literal closing delimiter must begin on a new line
multiLineStringLiteralMustHaveClosingDelimiterOnNewLine
multi-line string literal content must begin on a new line
multiLineStringLiteralMustBeginOnNewLine
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParserDiagnostics/MissingTokenError.swift
Raw string delimiters should only occur in string interpolation and at the end of a string or regex literal
expected additional '#' characters in closing delimiter
tooFewClosingPoundDelimiters
insert additional closing '#' delimiters
insertExtraClosingPounds
remove extraneous delimiters
removeExtraneousDelimiters
too many '#' characters in closing delimiter
tooManyClosingPoundDelimiters
too many '#' characters to start string interpolation
tooManyRawStringDelimitersToStartInterpolation
_TtC22SwiftParserDiagnostics53MultiLineStringLiteralIndentationDiagnosticsGenerator
closeQuote
finishedDiagnostics
inProgressDiagnostic
SwiftParserDiagnostics.MultiLineStringLiteralIndentationDiagnosticsGenerator
should match indentation here
shouldMatchIndentationOfClosingQuote
change indentation of this line to match closing delimiter
changeIndentationToMatchClosingDelimiter
join the identifiers together
join the identifiers together with camel-case
joinIdentifiersWithCamelCase
unexpected ';' separator
unexpectedSemicolon
parsing has exceeded the maximum nesting level
maximumNestingLevelOverflow
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParserDiagnostics/ParseDiagnosticsGenerator.swift
unexpected ']' in type; did you mean to write an array type?
extraRightBracket
insert attribute argument
insertAttributeArguments
version comparison not needed
versionComparisonNotNeeded
editorPlaceholderInSourceFile
'case' can only appear inside a 'switch' statement or 'enum' declaration
caseOutsideOfSwitchOrEnum
'default' label can only appear inside a 'switch' statement
defaultOutsideOfSwitch
standalone ';' statements are not allowed
standaloneSemicolonStatement
consecutive statements on a line must be separated by newline or ';'
consecutiveStatementsOnSameLine
expected ',' to separate the requirements of this 'where' clause
expectedCommaInWhereClause
deinitializers cannot throw
deinitCannotThrow
expected Sequence expression for for-each loop
expectedSequenceExpressionInForEachLoop
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParserDiagnostics/MissingNodesError.swift
C-style for statement has been removed in Swift 3
ellipsis operator cannot be used with a type parameter pack
typeParameterPackEllipsis
generic signature cannot be declared in enum 'case'
genericParamCantBeUsedInEnumCaseDecl
extra tokens following conditional compilation directive
extraTokensFollowingConditionalCompilationDirective
unexpected 'if' keyword following '#else' conditional compilation directive; did you mean '#elseif'?
unexpectedPoundElseSpaceIf
expected '{' or 'if' after 'else'
expectedLeftBraceOrIfAfterElse
expected '=' instead of '==' to assign default value for parameter
expectedAssignmentInsteadOfComparisonOperator
initializers cannot have a name
initializerCannotHaveName
consecutive declarations on a line must be separated by newline or ';'
consecutiveDeclarationsOnSameLine
operator should not be declared with body
operatorShouldBeDeclaredWithoutBody
remove operator body
removeOperatorBody
operator must be declared as 'prefix', 'postfix', or 'infix'
missingFixityInOperatorDeclaration
extra tokens following the #sourceLocation directive
extraTokensAtTheEndOfSourceLocationDirective
expected 'true' or 'false' after 'assignment'
invalidFlagAfterPrecedenceGroupAssignment
Expected 'none', 'left', or 'right' after 'associativity'
invalidPrecedenceGroupAssociativity
expected ':' or '==' to indicate a conformance or same-type requirement
missingConformanceRequirement
argument cannot be an extended escaping string literal
forbiddenExtendedEscapingString
argument cannot be an interpolated string literal
forbiddenInterpolatedString
escaped newline at the last line of a multi-line string literal is not allowed
escapedNewlineAtLastLineOfMultiLineStringLiteralNotAllowed
Single-quoted string literal found, use '"'
singleQuoteStringLiteral
string literals in Swift are not preceded by an '@' sign
stringLiteralAtSign
subscripts cannot have a name
subscriptsCannotHaveNames
all statements inside a switch must be covered by a 'case' or 'default' label
allStatementsInSwitchMustBeCoveredByCase
'default' cannot be used with a 'where' guard expression
defaultCannotBeUsedWithWhere
expected expression after 'try'
expectedExpressionAfterTry
expected ':' to begin inheritance clause
expectedColonClass
expected ':' after '? ...' in ternary expression
missingColonInTernaryExpr
expected ':' and expression after '? ...' in ternary expression
missingColonAndExprInTernaryExpr
SwiftParserDiagnostics.ParseDiagnosticsGenerator
_TtC22SwiftParserDiagnostics25ParseDiagnosticsGenerator
diagnostics
handledNodes
suppressRemainingDiagnostics
'try' must be placed on the initial value expression
tryOnInitialValueExpression
expected async specifier; did you mean 'async'?
expected throwing specifier; did you mean 'throws'?
misspelledThrows
'try' must be placed on the thrown expression
tryMustBePlacedOnThrownExpr
'try' must be placed on the produced expression
tryMustBePlacedOnThenExpr
'try' must be placed on the returned expression
tryMustBePlacedOnReturnedExpr
unexpected initializer in pattern; did you mean to use '='?
initializerInPattern
'class' constraint can only appear on protocol declarations
classConstraintCanOnlyBeUsedInProtocol
expected ',' joining parts of a multi-clause condition
joinConditionsUsingComma
expected ',' joining platforms in availability condition
joinPlatformsUsingComma
associated types cannot be variadic
associatedTypeCannotUsePack
StaticParserError.
 cannot be used as an expression, did you mean to use '
 cannot be used in an expression, only as a condition of 'if' or 'guard'
cannot parse version component 
deinitializers cannot have 
 conflicts with 
 has already been specified
 must precede '->'
 is considered an identifier and must not appear within an operator name
' is not a valid floating point literal; it must be written '0.
' is not a valid identifier
' cannot be used as an identifier here
 can only start with a letter or underscore, not a number
unexpected tab in indentation
 lines in multi-line string literal
unexpected space in indentation
insufficient indentation
 of line in multi-line string literal
expected argument for '@
 to be surrounded by '"'
missing condition in statement
missing condition in 
expected expression in statement
expected expression in 
 cannot be used in an expression; did you mean 
 before a parameter name is not allowed
 is not allowed in operator names
trailing components of version 
'try' cannot be used with '
use of unknown directive 
unknown parameter '
; valid parameters are 
StaticParserNote.
StaticParserFixIt.
 in front of type
remove redundant 
InsertTokenFixIt
MatchingOpeningTokenNote
MissingNodesError
found an unexpected second identifier; is there an accidental break?
found an unexpected second identifier in 
; is there an accidental break?
_TtC22SwiftParserDiagnostics18PresentNodeChecker
hasPresentToken
_TtC22SwiftParserDiagnostics12MissingMaker
SwiftParserDiagnostics.MissingMaker
generic where clause
generic parameter clause
trailing closures
trailing closure
called expression
inheritance clause
declaration name
primary associated type clause
precedence group
macro definition
parameter reference
constrained type
function signature
parameter pack specifier
associated values
'yield' statement
wildcard pattern
'while' statement
value binding pattern
ternary operator
@_private argument
@_unavailableFromAsync argument
effect specifiers
typealias declaration
'try' expression
'throw' statement
'then' statement
ternay expression
'switch' statement
suppressed type conformance
attribute argument
availability entry
argument to '@_specialize
simple string literal
same type requirement
'return' statement
'repeat' statement
'relation' property of precedencegroup
'associativity' property of precedencegroup
'assignment' property of precedencegroup
'#sourceLocation' directive
'#sourceLocation' arguments
postfix expression
version restriction
variadic expansion
@_originallyDefinedIn arguments
optional chaining
optional binding
operator declaration
opaque return type arguments
Objective-C selector piece
Objective-C selector
named opaque return type
pattern matching
lifetime specifier
layout requirement
labeled statement
key path subscript component
key path property component
key path optional component
key path component
inout expression
implicitly unwrapped optional type
@_implements arguemnts
conditional compilation block
conditional compilation clause
'guard' statement
generic parameter
generic argument
generic argument clause
parameter clause
floating literal
'fallthrough' statement
@_expose arguments
@_effects arguments
editor placeholder
@_dynamicReplacement argument
@_documentation argument
@_documentation arguments
'discard' statement
'@differentiable' arguments
'@differentiable' argument
differentiability arguments
differentiability argument
differentiability parameters
dictionary element
attribute arguments
'defer' statement
'copy' expression
@convention(...) arguments for witness methods
@convention(...) arguments
'continue' statement
'consume' expression
conformance requirement
type composition
closure signature
closure parameter
closure capture specifier
closure capture clause
'canImport' expression
'break' statement
'_borrow' expression
'@backDeployed' arguments
'await' expression
availability argument
availability condition
'@availability' arguments
associatedtype declaration
accessor specifiers
extended delimiter
raw string delimiter
postfix operator
dollar identifier
infix
prefix
LogicalDisjunctionPrecedence
LogicalConjunctionPrecedence
AssignmentPrecedence
FunctionArrowPrecedence
TernaryPrecedence
ComparisonPrecedence
NilCoalescingPrecedence
CastingPrecedence
RangeFormationPrecedence
AdditionPrecedence
MultiplicationPrecedence
BitwiseShiftPrecedence
adjacent operators are in unordered precedence groups '
adjacent operators are in non-associative precedence group '
unknown infix operator '
redefinition of 
unknown precedence group '
redefinition of precedence group '
SwiftOperators/OperatorTable+Defaults.swift
DefaultPrecedence
SwiftOperators/OperatorTable+Folding.swift
Unknown binary operator
_TtCV14SwiftOperators13OperatorTableP33_5A1BC159D67DB48002ADF8010282189714SequenceFolder
firstFatalError
errorHandler
SwiftOperators.SequenceFolder
error handler did not throw again after 
_TtCFV14SwiftOperators13OperatorTable13addSourceFileFzTV11SwiftSyntax16SourceFileSyntax12errorHandlerFzOS_13OperatorErrorT__T_L_23OperatorAndGroupVisitor
opPrecedence
errors
SwiftOperators.OperatorAndGroupVisitor
AllPublicDeclarationsHaveDocumentation
AlwaysUseLiteralForEmptyCollectionInit
AlwaysUseLowerCamelCase
AmbiguousTrailingClosureOverload
BeginDocumentationCommentWithOneLineSummary
DoNotUseSemicolons
DontRepeatTypeInStaticProperties
FileScopedDeclarationPrivacy
FullyIndirectEnum
GroupNumericLiterals
IdentifiersMustBeASCII
NeverForceUnwrap
NeverUseForceTry
NeverUseImplicitlyUnwrappedOptionals
NoAccessLevelOnExtensionDeclaration
NoAssignmentInExpressions
NoCasesWithOnlyFallthrough
NoEmptyTrailingClosureParentheses
NoLabelsInCasePatterns
NoLeadingUnderscores
NoParensAroundConditions
NoPlaygroundLiterals
NoVoidReturnOnFunctionSignature
OmitExplicitReturns
OneVariableDeclarationPerLine
OnlyOneTrailingClosureArgument
ReplaceForEachWithForLoop
ReturnVoidInsteadOfEmptyTuple
TypeNamesShouldBeCapitalized
UseExplicitNilCheckInConditions
UseLetInEveryBoundCaseVariable
UseShorthandTypeNames
UseSingleLinePropertyGetter
UseSynthesizedInitializer
UseTripleSlashForDocumentationComments
UseWhereClausesInForLoops
ValidateDocumentationComments
XCTAssertNoThrow
maximumBlankLines
respectsExistingLineBreaks
lineBreakBeforeControlFlowKeywords
lineBreakBeforeEachArgument
lineBreakBeforeEachGenericRequirement
prioritizeKeepingFunctionOutputTogether
indentConditionalCompilationBlocks
lineBreakAroundMultilineExpressionChainComponents
fileScopedDeclarationPrivacy
indentSwitchCaseLabels
spacesAroundRangeFormationOperators
noAssignmentInExpressions
multiElementCollectionTrailingCommas
allowedFunctions
This version of the formatter does not support configuration version 
One of "tabs" or "spaces" must be specified
Only one of "tabs" or "spaces" may be specified
_TtC11SwiftFormat14SwiftFormatter
configuration
_TtC11SwiftFormat11SwiftLinter
findingConsumer
debugOptions
_TtC11SwiftFormat7Context
findingEmitter
fileURL
importsXCTest
sourceLocationConverter
ruleMask
ruleNameCache
_TtC11SwiftFormat14FindingEmitter
consumer
_TtC11SwiftFormatP33_9DCABA9718CACA9DAAA8F2BE0366749620ImportsXCTestVisitor
SwiftFormat.ImportsXCTestVisitor
_TtC11SwiftFormat12LintPipeline
context
ruleCache
shouldSkipChildren
SwiftFormat.LintPipeline
_TtC11SwiftFormat8RuleMask
allRulesIgnoredRanges
ruleMap
_TtC11SwiftFormatP33_394CCCA886A18C25F04A35788218087327RuleStatusCollectionVisitor
ignorePattern
ignoreRegex
ignoreFilePattern
ignoreFileRegex
SwiftFormat.RuleStatusCollectionVisitor
init(viewMode:)
^\s*\/\/\s*swift-format-ignore((:\s+(([A-z0-9]+[,\s]*)+))?$|\s+$)
^\s*\/\/\s*swift-format-ignore-file$
SwiftFormat/RuleMask.swift
SwiftFormat.SyntaxFormatRule
_TtC11SwiftFormat16SyntaxFormatRule
SwiftFormat.SyntaxLintRule
_TtC11SwiftFormat14SyntaxLintRule
SwiftFormat/PrettyPrint.swift
At least one .break(.open) was not matched by a .break(.close)
_TtC11SwiftFormat13PrettyPrinter
maxLineLength
tokens
outputBuffer
spaceRemaining
lengths
lastBreak
forceBreakStack
printTokenStream
whitespaceOnly
activeOpenBreaks
activeBreakingContexts
lastEndedBreakingContext
lineNumber
currentLineIsContinuation
continuationStack
commaDelimitedRegionStack
consecutiveNewlineCount
pendingSpaces
isAtStartOfLine
activeBreakSuppressionCount
allowSuppressedDiscretionaryBreaks
debugIndent
[END BREAKING CONTEXT Idx: 
[START BREAKING CONTEXT Idx: 
[COMMA DELIMITED END Idx: 
[COMMA DELIMITED START Idx: 
[PRINTER CONTROL Kind: 
[VERBATIM Length: 
[COMMENT DocBlock Length: 
[COMMENT Block Length: 
[COMMENT DocLine Length: 
[COMMENT Line Length: 
[OPEN Inconsistent Length: 
[OPEN Consistent Length: 
Found trailing comma end with no corresponding start.
remove trailing comma from the last element in single line collection literal
add trailing comma to the last element in multiline collection literal
move end-of-line comment that exceeds the line length
Unmatched closing break
Encountered unmatched contextualBreakingEnd token.
EndOfLineComment
_TtC11SwiftFormatP33_0BA2403CD207964798477A9BC8BD25E818TokenStreamCreator
beforeMap
afterMap
config
operatorTable
maxlinelength
lastBreakIndex
canMergeNewlinesIntoLastBreak
pendingMultilineStringBreakKinds
ignoredTokens
preVisitedExprs
rootExprs
closingDelimiterTokens
forcedBreakingClosures
openings
_TtC11SwiftFormat21CommentMovingRewriter
swift-format-ignore
swift-format-ignore-file
SwiftFormat.TokenStreamCreator
SwiftFormat/TokenStreamCreator.swift
Found non-break token at lastBreakIndex. TokenStreamCreator is invalid.
ExtensionDeclSyntax.extendedType must have at least one token
SpacingCharacter
TrailingWhitespace
_TtC11SwiftFormat16WhitespaceLinter
userText
formattedText
isLineTooLong
replace leading whitespace with 
remove all leading whitespace
line is too long
remove trailing whitespace
remove line break
use spaces for spacing
_TtC11SwiftFormat38AllPublicDeclarationsHaveDocumentation
add a documentation comment for '
_TtC11SwiftFormat38AlwaysUseLiteralForEmptyCollectionInit
function parameter
_TtC11SwiftFormat23AlwaysUseLowerCamelCase
testCaseFuncs
' using lowerCamelCase
_TtC11SwiftFormat32AmbiguousTrailingClosureOverload
' so it is no longer ambiguous when called with a trailing closure
ambiguous overload '
_TtC11SwiftFormat43BeginDocumentationCommentWithOneLineSummary
add a blank comment line after this sentence: "
terminate this sentence with a period: "
_TtC11SwiftFormat18DoNotUseSemicolons
remove ';' and move the next statement to a new line
_TtC11SwiftFormat32DontRepeatTypeInStaticProperties
remove the suffix '
' from the name of the variable '
_TtC11SwiftFormat28FileScopedDeclarationPrivacy
replace 'private' with 'fileprivate' on file-scoped declarations
replace 'fileprivate' with 'private' on file-scoped declarations
' itself as indirect when all cases are indirect
_TtC11SwiftFormat17FullyIndirectEnum
remove 'indirect' here
_TtC11SwiftFormat20GroupNumericLiterals
 digits in this 
 literal using a '_' separator
_TtC11SwiftFormat22IdentifiersMustBeASCII
remove non-ASCII characters from '
do not force cast to '
do not force unwrap '
_TtC11SwiftFormat16NeverForceUnwrap
do not use force try
_TtC11SwiftFormat16NeverUseForceTry
_TtC11SwiftFormat36NeverUseImplicitlyUnwrappedOptionals
remove this redundant 'internal' access modifier from this extension
' access modifier to precede each member inside this extension
' access modifier and declare each member inside this extension as 'fileprivate'
_TtC11SwiftFormat35NoAccessLevelOnExtensionDeclaration
' access modifier to this declaration
move this assignment expression into its own statement
_TtC11SwiftFormat25NoAssignmentInExpressions
replace this block comment with line comments
_TtC11SwiftFormat15NoBlockComments
_TtC11SwiftFormat26NoCasesWithOnlyFallthrough
combine this fallthrough-only 'case' and the following 'case' into a single 'case'
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/swift-format/Sources/SwiftFormat/Rules/NoCasesWithOnlyFallthrough.swift
Must have at least one case to merge
remove the empty parentheses following '
_TtC11SwiftFormat33NoEmptyTrailingClosureParentheses
remove the label '
' from this 'case' pattern
_TtC11SwiftFormat22NoLabelsInCasePatterns
_TtC11SwiftFormat20NoLeadingUnderscores
remove the leading '_' from the name '
_TtC11SwiftFormat24NoParensAroundConditions
remove the parentheses around this expression
_TtC11SwiftFormat20NoPlaygroundLiterals
replace '#colorLiteral' with a call to an initializer on 'NSColor' or 'UIColor'
replace '#fileLiteral' with a call to a method such as 'Bundle.url(forResource:withExtension:)'
replace '#imageLiteral' with a call to an initializer on 'NSImage' or 'UIImage'
remove the explicit return type '
' from this function
_TtC11SwiftFormat31NoVoidReturnOnFunctionSignature
'return' can be omitted because body consists of a single expression
_TtC11SwiftFormat19OmitExplicitReturns
' to its own 'case' declaration
_TtC11SwiftFormat14OneCasePerLine
split this variable declaration to introduce only one variable per '
_TtC11SwiftFormat29OneVariableDeclarationPerLine
revise this function call to avoid using both closure arguments and a trailing closure
_TtC11SwiftFormat30OnlyOneTrailingClosureArgument
_TtC11SwiftFormat14OrderedImports
_TtC11SwiftFormatP33_494C8B4EB407CC7E4003E083162582164Line
leadingTrivia
trailingTrivia
syntaxNode
sort import statements lexicographically
remove this duplicate import
place regular imports before declaration imports
 imports before 
place imports at the top of the file
(Line in _494C8B4EB407CC7E4003E08316258216)
replace use of '.forEach { ... }' with for-in loop
_TtC11SwiftFormat25ReplaceForEachWithForLoop
replace '()' with 'Void'
_TtC11SwiftFormat29ReturnVoidInsteadOfEmptyTuple
_TtC11SwiftFormat28TypeNamesShouldBeCapitalized
' using UpperCamelCase; for example, '
replace this 'if/else' block with a 'guard' statement containing the early exit
_TtC11SwiftFormat13UseEarlyExits
compare this value using `!= nil` instead of binding and discarding it
_TtC11SwiftFormat31UseExplicitNilCheckInConditions
move this 'let' keyword inside the 'case' pattern, before each of the bound variables
_TtC11SwiftFormat30UseLetInEveryBoundCaseVariable
use shorthand syntax for this '
_TtC11SwiftFormat21UseShorthandTypeNames
remove 'get {...}' around the accessor and move its body directly into the computed property
_TtC11SwiftFormat27UseSingleLinePropertyGetter
remove this explicit initializer, which is identical to the compiler-synthesized initializer
_TtC11SwiftFormat25UseSynthesizedInitializer
_TtC11SwiftFormat38UseTripleSlashForDocumentationComments
replace documentation block comments with documentation line comments
_TtC11SwiftFormat25UseWhereClausesInForLoops
replace this 'guard' statement with a 'where' clause
replace this 'if' statement with a 'where' clause
_TtC11SwiftFormat29ValidateDocumentationComments
change the parameters of the documentation of '
' to match its parameters
replace the singular inline 'Parameter' section with a plural 'Parameters:' section that has the parameters nested inside it
replace the plural 'Parameters:' section with a singular inline 'Parameter' section
add a 'Returns:' section to document the return value of '
remove the 'Returns:' section of '
'; it does not return a value
add a 'Throws:' section to document the errors thrown by '
remove the 'Throws:' sections of '
'; it does not throw any errors
    opts="$opts 
    if [[ $COMP_CWORD == "
" ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        return
    fi
    case ${COMP_WORDS[
    return
    ;;
    COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
cur="${COMP_WORDS[COMP_CWORD]}"
prev="${COMP_WORDS[COMP_CWORD-1]}"
COMPREPLY=()
COMPREPLY=( $(compgen -W "$("${COMP_WORDS[0]}" 
 "${COMP_WORDS[@]}")" -- "$cur") )
COMPREPLY=( $(compgen -W "
COMPREPLY=( $(compgen -d -- "$cur") )
COMPREPLY=( $(compgen -f -- "$cur") )
$("${COMP_WORDS[0]}" ---completion 
 "${COMP_WORDS[@]}")
ArgumentParser/CompletionsGenerator.swift
Invalid CompletionShell: 
-r -f -a '(command 
 -- --custom (commandline -opc)[1..-1])'
-r -f -a '(__fish_complete_directories)'
-r -f -a '(for i in 
    set -l currentCommands (
 (commandline -opc))
    set -l expectedCommands (string split "
" $argv[1])
    set -l subcommands (string split "
" $argv[2])
    if [ (count $currentCommands) -ge (count $expectedCommands) ]
        for i in (seq (count $expectedCommands))
            if [ $currentCommands[$i] != $expectedCommands[$i] ]
                return 1
            end
        end
        if [ (count $currentCommands) -eq (count $expectedCommands) ]
            return 0
        end
        if [ (count $subcommands) -gt 1 ]
            for i in (seq (count $subcommands))
                if [ $currentCommands[(math (count $expectedCommands) + 1)] = $subcommands[$i] ]
                    return 1
                end
            end
        end
        return 0
    end
    return 1
# A function which filters options which starts with "-" from $argv.
function 
    set -l results
    for i in (seq (count $argv))
        switch (echo $argv[$i] | string sub -l 1)
            case '-'
            case '*'
                echo $argv[$i]
        end
    end
local context state state_descr line
_commandname=$words[1]
typeset -A opt_args
_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
'(-): :->command'
case $state in
    (command)
        local subcommands
        subcommands=(
        )
        _describe "subcommand" subcommands
        ;;
    (arg)
        case ${words[1]} in
        esac
        ;;
esac
() {
    integer ret=1
    local -a args
    args+=(
    )
    _arguments -w -s -S $args[@] && ret=0
    return ret
{_custom_completion $_
{local -a list; list=(${(f)"$(
)"}); _describe '''' list}
Show help information.
Show the version.
ArgumentParser/Argument.swift
--------------------------------------------------------------------
Can't read a value from a parsable
argument definition.
This error indicates that a property declared with an `@Argument`,
`@Option`, `@Flag`, or `@OptionGroup` property wrapper was neither
initialized to a value nor decoded from command-line arguments.
To get a valid value, either call one of the static parsing methods
(`parse`, `parseAsRoot`, or `main`) or define an initializer that
initializes _every_ property of your parsable type.
--------------------------------------------------------------------
Argument(*definition*)
--experimental-dump-help
ArgumentParser/Flag.swift
Flag(*definition*)
ArgumentParser/NameSpecification.swift
' has not characters to form short option name.
ArgumentParser/Option.swift
Option(*definition*)
ArgumentParser/OptionGroup.swift
OptionGroup(*definition*)
Tree<ParsableCommand.Type>
_TtC14ArgumentParser15ArgumentDecoder
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
ArgumentParser/ArgumentDecoder.swift
experimental-dump-help
ArgumentParser/CommandParser.swift
Unexpected error: 
The ParsableCommand "
" can't have itself as its own subcommand.
generateCompletionScript
ArgumentParser/Parsed.swift
Trying to get the argument set from a resolved/parsed property.
Show subcommand help information.
 <subcommand>' for detailed help.
ArgumentParser/HelpGenerator.swift
' for more information.
Unspecified version
ArgumentParser/UsageGenerator.swift
preferredName cannot be nil for named arguments
Missing required subcommand.
Invalid option: -
Invalid option: 
' does not take any value, but '
' was specified.
Internal error. Invalid state while parsing command-line arguments.
Internal error. Parsing command-line arguments hit unimplemented code path.
Can't generate completion scripts for '
Please use --generate-completion-script=<shell> with one of:
    
Can't autodetect a supported shell.
Please use --generate-completion-script=<shell> with one of:
    
Unknown option '
'. Did you mean '
Missing value for '
 unexpected arguments: '
Unexpected argument '
Value to be set with 
 had already been set with 
Missing one of: '
Missing expected argument '
No value set for non-argument var 
. Replace with a static variable, or let constant.
' is invalid for '
' is invalid for '<
. Please provide one of the following:
. Please provide one of 
SHELL
element
children
long
short
longWithSingleDash
positional
option
flag
serializationVersion
defaultSubcommand
attributesOfItemAtPath:error:
closeFile
currentDirectoryPath
defaultManager
destinationOfSymbolicLinkAtPath:error:
environment
fileDescriptor
fileExistsAtPath:isDirectory:
fileHandleForReadingFromURL:error:
fileHandleWithStandardError
fileHandleWithStandardInput
fileHandleWithStandardOutput
firstMatchInString:options:range:
initWithPattern:options:error:
initWithTagSchemes:
isReadableFileAtPath:
nextObject
numberOfRanges
processInfo
rangeAtIndex:
readDataToEndOfFile
setString:
writeData:
Parsing a `%s` node from string interpolation produced the following parsing errors.
Set a breakpoint in `SyntaxParseable.logStringInterpolationParsingError()` to debug the failure.
To explicitly support parsing of invalid source code, import SwiftParser and invoke the parser as follows
  var parser = Parser(source)
  %s.parse(from: &parser)
%{private}s
Note
Important
Experiment
Warning
Attention
Author
Authors
Complexity
Copyright
Date
Invariant
MutatingVariant
Postcondition
Precondition
Remark
Requires
Since
ToDo
Version
Throws
SeeAlso
RawSyntaxData
RawSyntax?
Syntax
Syntax.Info
 !"#$%&
 !"#$%
&<<=
&>>=
NoBlockComments
OneCasePerLine
OrderedImports
UseEarlyExits
green
blue
alpha
resourceName
resourceName
help
version
bash
fish
swift_format
ConfigurationLoader
FileAttributeType
NNSFileAttributeType
FileAttributeKey
NNSFileAttributeKey
Foundation
swift_format
FormatFrontend
swift_format
Frontend
FileToProcess
swift_format
LintFrontend
DumpConfiguration
Format
CodingKeys
Lint
CodingKeys
$-28
swift_format
LintFormatOptions
CodingKeys
swift_format
PerformanceMeasurementsOptions
CodingKeys
swift_format
SwiftFormatCommand
CodingKeys
swift_format
Diagnostic
Location
Severity
swift_format
DiagnosticsEngine
swift_format
FileHandleTextOutputStream
swift_format
FileIterator
swift_format
FormatError
swift_format
StderrDiagnosticPrinter
swift_format
VersionOptions
CodingKeys
Markdown
TypedChildIndexPath
Element
cmark_node
cmark_event_type
cmark_iter
__Unnamed_union_as
__Unnamed_union_footnote
cmark_syntax_extension
cmark_strbuf
cmark_iter_state
cmark_mem
cmark_html_renderer
cmark_renderer
cmark_node_type
_cmark_llist
delimiter
cmark_parser
cmark_escaping
cmark_map
cmark_map_entry
Markdown
DirectiveArgumentText
ParseError
LineSegment
DirectiveArgument
Markdown
Document
Markdown
LiteralMarkup
Markdown
Markup
SoftBreakDeleter
Markdown
MarkupChildren
Iterator
ReversedMarkupChildren
Markdown
_MarkupData
MarkupMetadata
AbsoluteRawMarkup
MarkupIdentifier
Markdown
PlainTextConvertibleMarkup
 =DKV]hov}
5<CNU`gnu
=FO^gv
)FNVbjv~
5<CNU`gnu
=FO^gv
Markdown
RawMarkupHeader
RawMarkup
Error
RawMarkupData
Markdown
BlockDirective
Markdown
BlockQuote
Markdown
CustomBlock
Markdown
DoxygenParameter
Markdown
DoxygenReturns
Markdown
Checkbox
ListItem
Markdown
OrderedList
Markdown
UnorderedList
Markdown
Paragraph
Markdown
CodeBlock
Markdown
HTMLBlock
Markdown
Heading
Markdown
ThematicBreak
Markdown
Table
ColumnAlignment
Body
Cell
Markdown
TableCellContainer
Head
Markdown
_TableRowProtocol
Markdown
Replacement
Markdown
SourceLocation
Markdown
Emphasis
Markdown
Image
Markdown
InlineAttributes
Markdown
Link
Markdown
Strikethrough
Markdown
Strong
Markdown
CustomInline
Markdown
InlineCode
Markdown
InlineHTML
Markdown
LineBreak
Markdown
SoftBreak
Markdown
SymbolLink
Markdown
Text
Note
Important
Experiment
Warning
Attention
Author
Authors
Complexity
Copyright
Date
Invariant
MutatingVariant
Postcondition
Precondition
Remark
Requires
Since
ToDo
Version
Throws
SeeAlso
Markdown
Aside
Kind
Markdown
ParseContainer
PendingDoxygenCommand
PendingBlockDirective
TrimmedLine
CommandKind
ParseState
#+1:>AHLT]afjow{
GIM.
Markdown
MarkupConverterState
PendingTableBody
MarkupConversion
Markdown
LazySplitLines
Iterator
Markdown
ParseOptions
Markdown
RangeAdjuster
Markdown
RangeTracker
Markdown
MarkupRewriter
Markdown
BasicBlockContainer
Markdown
BasicInlineContainer
Markdown
BlockContainer
Markdown
BlockMarkup
Markdown
InlineContainer
Markdown
InlineMarkup
RecurringInlineMarkup
Markdown
ListItemContainer
Markdown
MarkupVisitor
Result
Markdown
MarkupWalker
Markdown
MarkupFormatter
Options
UnorderedListMarker
UseCodeFence
ThematicBreakCharacter
EmphasisMarker
PreferredHeadingStyle
OrderedListNumerals
PreferredLineLimit
SplittingElement
DoxygenCommandPrefix
State
BreakDeleter
Markdown
MarkupDumpOptions
MarkupTreeDumper
&d&dd
ddd&F
'4>X\bpz
=;==QAAAAAT
I111NS11X]H
"%(+.
%(+.147:=
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@
@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
SwiftSyntax
AbsolutePosition
SwiftSyntax
AbsoluteRawSyntax
SwiftSyntax
AbsoluteSyntaxInfo
AbsoluteSyntaxPosition
SwiftSyntax
BumpPtrAllocator
SwiftSyntax
Identifier
RawIdentifier
SwiftSyntax
SyntaxMemoryLayout
Value
SwiftSyntax
RawSyntax
RawSyntaxData
Payload
Layout
MaterializedToken
ParsedToken
RecursiveRawSyntaxFlags
SwiftSyntax
RawSyntaxLayoutView
SwiftSyntax
RawSyntaxNodeProtocol
RawTokenSyntax
G'GGGG4G
SwiftSyntax
RawSyntaxTokenView
SwiftSyntax
SourceEdit
SwiftSyntax
SourceLength
SwiftSyntax
SourceLocation
SourceRange
SourceLocationConverter
SourceLocationDirectiveArguments
CodingKeys
Error
SwiftSyntax
SourcePresence
SwiftSyntax
Syntax
Info
SyntaxNode
InfoImpl
NonRoot
Root
SwiftSyntax
SyntaxArena
ParsingSyntaxArena
RetainedSyntaxArena
SyntaxArenaRef
SwiftSyntax
SyntaxArenaAllocatedPointer
SyntaxArenaAllocatedBufferPointer
SwiftSyntax
SyntaxChildrenIndex
SyntaxChildren
RawSyntaxChildren
Iterator
NonNilRawSyntaxChildren
SyntaxChildrenIndexData
SwiftSyntax
SyntaxCollection
SyntaxCollectionIterator
SwiftSyntax
SyntaxHashable
SwiftSyntax
SyntaxIdentifier
SyntaxIndexInTree
SwiftSyntax
SyntaxNodeStructure
SyntaxChoice
SwiftSyntax
SyntaxProtocol
SyntaxChildChoices
SwiftSyntax
SyntaxText
SwiftSyntax
SyntaxTreeViewMode
SwiftSyntax
TokenDiagnostic
Severity
Kind
SwiftSyntax
TokenSequence
Iterator
ReversedTokenSequence
SwiftSyntax
TokenSyntax
SwiftSyntax
TriviaPosition
Trivia
SwiftSyntax
ByteSourceRange
IncrementalEdit
SwiftSyntax
Keyword
SwiftSyntax
SyntaxAnyVisitor
SwiftSyntax
DeclSyntaxProtocol
DeclSyntax
_LeafDeclSyntaxNodeProtocol
ExprSyntaxProtocol
ExprSyntax
_LeafExprSyntaxNodeProtocol
PatternSyntaxProtocol
PatternSyntax
_LeafPatternSyntaxNodeProtocol
StmtSyntaxProtocol
StmtSyntax
_LeafStmtSyntaxNodeProtocol
TypeSyntaxProtocol
TypeSyntax
_LeafTypeSyntaxNodeProtocol
_LeafSyntaxNodeProtocol
SwiftSyntax
AccessorDeclListSyntax
ArrayElementListSyntax
AttributeListSyntax
Element
AvailabilityArgumentListSyntax
CatchClauseListSyntax
CatchItemListSyntax
ClosureCaptureListSyntax
ClosureParameterListSyntax
ClosureShorthandParameterListSyntax
CodeBlockItemListSyntax
CompositionTypeElementListSyntax
ConditionElementListSyntax
DeclModifierListSyntax
DeclNameArgumentListSyntax
DesignatedTypeListSyntax
DictionaryElementListSyntax
DifferentiabilityArgumentListSyntax
DocumentationAttributeArgumentListSyntax
EffectsAttributeArgumentListSyntax
EnumCaseElementListSyntax
EnumCaseParameterListSyntax
ExprListSyntax
FunctionParameterListSyntax
GenericArgumentListSyntax
GenericParameterListSyntax
GenericRequirementListSyntax
IfConfigClauseListSyntax
ImportPathComponentListSyntax
InheritedTypeListSyntax
KeyPathComponentListSyntax
LabeledExprListSyntax
LifetimeSpecifierArgumentListSyntax
MemberBlockItemListSyntax
MultipleTrailingClosureElementListSyntax
ObjCSelectorPieceListSyntax
PatternBindingListSyntax
PlatformVersionItemListSyntax
PrecedenceGroupAttributeListSyntax
PrecedenceGroupNameListSyntax
PrimaryAssociatedTypeListSyntax
SimpleStringLiteralSegmentListSyntax
SpecializeAttributeArgumentListSyntax
StringLiteralSegmentListSyntax
SwitchCaseItemListSyntax
SwitchCaseListSyntax
TuplePatternElementListSyntax
TupleTypeElementListSyntax
TypeSpecifierListSyntax
UnexpectedNodesSyntax
VersionComponentListSyntax
YieldedExpressionListSyntax
SwiftSyntax
SyntaxEnum
DeclSyntaxEnum
ExprSyntaxEnum
PatternSyntaxEnum
StmtSyntaxEnum
TypeSyntaxEnum
SwiftSyntax
SyntaxKind
SwiftSyntax
SyntaxRewriter
SwiftSyntax
BracedSyntax
DeclGroupSyntax
EffectSpecifiersSyntax
FreestandingMacroExpansionSyntax
NamedDeclSyntax
MissingNodeSyntax
ParenthesizedSyntax
WithAttributesSyntax
WithCodeBlockSyntax
WithGenericParametersSyntax
WithModifiersSyntax
WithOptionalCodeBlockSyntax
WithStatementsSyntax
WithTrailingCommaSyntax
SwiftSyntax
SyntaxVisitorContinueKind
SyntaxVisitor
"',1
6;@EJO
TY^chmrw|
 "$&(*,.02468:<>@BDF
#,3<ENW`ir
SwiftSyntax
TokenKind
RawTokenKind
 !&'()*+-.1
'6DSZbimsx
!2%5(+/
H'HHHH4HF
F$FFFF0F
SwiftSyntax
TriviaPiece
RawTriviaPiece
SwiftSyntax
RawAccessorBlockSyntax
Accessors
RawAccessorDeclListSyntax
RawAccessorDeclSyntax
RawAccessorEffectSpecifiersSyntax
RawAccessorParametersSyntax
RawActorDeclSyntax
RawArrayElementListSyntax
RawArrayElementSyntax
RawArrayExprSyntax
RawArrayTypeSyntax
RawArrowExprSyntax
RawAsExprSyntax
RawAssignmentExprSyntax
RawAssociatedTypeDeclSyntax
RawAttributeListSyntax
Element
RawAttributeSyntax
Arguments
RawAttributedTypeSyntax
RawAvailabilityArgumentListSyntax
RawAvailabilityArgumentSyntax
Argument
RawAvailabilityConditionSyntax
RawAvailabilityLabeledArgumentSyntax
Value
RawAwaitExprSyntax
RawBackDeployedAttributeArgumentsSyntax
RawBinaryOperatorExprSyntax
RawBooleanLiteralExprSyntax
RawBorrowExprSyntax
RawBreakStmtSyntax


























SwiftSyntax
Raw_CanImportExprSyntax
Raw_CanImportVersionInfoSyntax
RawCatchClauseListSyntax
RawCatchClauseSyntax
RawCatchItemListSyntax
RawCatchItemSyntax
RawClassDeclSyntax
RawClassRestrictionTypeSyntax
RawClosureCaptureClauseSyntax
RawClosureCaptureListSyntax
RawClosureCaptureSpecifierSyntax
RawClosureCaptureSyntax
RawClosureExprSyntax
RawClosureParameterClauseSyntax
RawClosureParameterListSyntax
RawClosureParameterSyntax
RawClosureShorthandParameterListSyntax
RawClosureShorthandParameterSyntax
RawClosureSignatureSyntax
ParameterClause
RawCodeBlockItemListSyntax
RawCodeBlockItemSyntax
Item
RawCodeBlockSyntax
RawCompositionTypeElementListSyntax
RawCompositionTypeElementSyntax
RawCompositionTypeSyntax
RawConditionElementListSyntax
RawConditionElementSyntax
Condition
RawConformanceRequirementSyntax
RawConsumeExprSyntax
RawContinueStmtSyntax
RawConventionAttributeArgumentsSyntax
RawConventionWitnessMethodAttributeArgumentsSyntax
RawCopyExprSyntax
SwiftSyntax
RawDeclSyntaxNodeProtocol
RawDeclModifierDetailSyntax
RawDeclModifierListSyntax
RawDeclModifierSyntax
RawDeclNameArgumentListSyntax
RawDeclNameArgumentSyntax
RawDeclNameArgumentsSyntax
RawDeclReferenceExprSyntax
RawDeclSyntax
RawDeferStmtSyntax
RawDeinitializerDeclSyntax
RawDeinitializerEffectSpecifiersSyntax
RawDerivativeAttributeArgumentsSyntax
RawDesignatedTypeListSyntax
RawDesignatedTypeSyntax
RawDictionaryElementListSyntax
RawDictionaryElementSyntax
RawDictionaryExprSyntax
Content
RawDictionaryTypeSyntax
RawDifferentiabilityArgumentListSyntax
RawDifferentiabilityArgumentSyntax
RawDifferentiabilityArgumentsSyntax
RawDifferentiabilityWithRespectToArgumentSyntax
Arguments
RawDifferentiableAttributeArgumentsSyntax
RawDiscardAssignmentExprSyntax
RawDiscardStmtSyntax
RawDoExprSyntax
RawDoStmtSyntax
RawDocumentationAttributeArgumentListSyntax
RawDocumentationAttributeArgumentSyntax
Value
RawDynamicReplacementAttributeArgumentsSyntax
SwiftSyntax
RawExprSyntaxNodeProtocol
RawEditorPlaceholderDeclSyntax
RawEditorPlaceholderExprSyntax
RawEffectsAttributeArgumentListSyntax
RawEnumCaseDeclSyntax
RawEnumCaseElementListSyntax
RawEnumCaseElementSyntax
RawEnumCaseParameterClauseSyntax
RawEnumCaseParameterListSyntax
RawEnumCaseParameterSyntax
RawEnumDeclSyntax
RawExposeAttributeArgumentsSyntax
RawExprListSyntax
RawExprSyntax
RawExpressionPatternSyntax
RawExpressionSegmentSyntax
RawExpressionStmtSyntax
RawExtensionDeclSyntax
RawFallThroughStmtSyntax
RawFloatLiteralExprSyntax
RawForStmtSyntax
RawForceUnwrapExprSyntax
RawFunctionCallExprSyntax
RawFunctionDeclSyntax
RawFunctionEffectSpecifiersSyntax
RawFunctionParameterClauseSyntax
RawFunctionParameterListSyntax
RawFunctionParameterSyntax
RawFunctionSignatureSyntax
RawFunctionTypeSyntax
SwiftSyntax
RawGenericArgumentClauseSyntax
RawGenericArgumentListSyntax
RawGenericArgumentSyntax
RawGenericParameterClauseSyntax
RawGenericParameterListSyntax
RawGenericParameterSyntax
RawGenericRequirementListSyntax
RawGenericRequirementSyntax
Requirement
RawGenericSpecializationExprSyntax
RawGenericWhereClauseSyntax
RawGuardStmtSyntax
RawIdentifierPatternSyntax
RawIdentifierTypeSyntax
RawIfConfigClauseListSyntax
RawIfConfigClauseSyntax
Elements
RawIfConfigDeclSyntax
RawIfExprSyntax
ElseBody
RawImplementsAttributeArgumentsSyntax
RawImplicitlyUnwrappedOptionalTypeSyntax
RawImportDeclSyntax
RawImportPathComponentListSyntax
RawImportPathComponentSyntax
RawInOutExprSyntax
RawInfixOperatorExprSyntax
RawInheritanceClauseSyntax
RawInheritedTypeListSyntax
RawInheritedTypeSyntax
RawInitializerClauseSyntax
RawInitializerDeclSyntax
RawIntegerLiteralExprSyntax
RawIsExprSyntax
RawIsTypePatternSyntax
SwiftSyntax
RawKeyPathComponentListSyntax
RawKeyPathComponentSyntax
Component
RawKeyPathExprSyntax
RawKeyPathOptionalComponentSyntax
RawKeyPathPropertyComponentSyntax
RawKeyPathSubscriptComponentSyntax
RawLabeledExprListSyntax
RawLabeledExprSyntax
RawLabeledSpecializeArgumentSyntax
RawLabeledStmtSyntax
RawLayoutRequirementSyntax
RawLifetimeSpecifierArgumentListSyntax
RawLifetimeSpecifierArgumentSyntax
RawLifetimeTypeSpecifierSyntax
RawMacroDeclSyntax
RawMacroExpansionDeclSyntax
RawMacroExpansionExprSyntax
RawMatchingPatternConditionSyntax
RawMemberAccessExprSyntax
RawMemberBlockItemListSyntax
RawMemberBlockItemSyntax
RawMemberBlockSyntax
RawMemberTypeSyntax
RawMetatypeTypeSyntax
RawMissingDeclSyntax
RawMissingExprSyntax
RawMissingPatternSyntax
RawMissingStmtSyntax
RawMissingSyntax
RawMissingTypeSyntax
RawMultipleTrailingClosureElementListSyntax
RawMultipleTrailingClosureElementSyntax
RawNamedOpaqueReturnTypeSyntax
RawNilLiteralExprSyntax
SwiftSyntax
RawPatternSyntaxNodeProtocol
RawObjCSelectorPieceListSyntax
RawObjCSelectorPieceSyntax
RawOpaqueReturnTypeOfAttributeArgumentsSyntax
RawOperatorDeclSyntax
RawOperatorPrecedenceAndTypesSyntax
RawOptionalBindingConditionSyntax
RawOptionalChainingExprSyntax
RawOptionalTypeSyntax
RawOriginallyDefinedInAttributeArgumentsSyntax
RawPackElementExprSyntax
RawPackElementTypeSyntax
RawPackExpansionExprSyntax
RawPackExpansionTypeSyntax
RawPatternBindingListSyntax
RawPatternBindingSyntax
RawPatternExprSyntax
RawPatternSyntax
RawPlatformVersionItemListSyntax
RawPlatformVersionItemSyntax
RawPlatformVersionSyntax
RawPostfixIfConfigExprSyntax
RawPostfixOperatorExprSyntax
RawPoundSourceLocationArgumentsSyntax
RawPoundSourceLocationSyntax
RawPrecedenceGroupAssignmentSyntax
RawPrecedenceGroupAssociativitySyntax
RawPrecedenceGroupAttributeListSyntax
Element
RawPrecedenceGroupDeclSyntax
RawPrecedenceGroupNameListSyntax
RawPrecedenceGroupNameSyntax
RawPrecedenceGroupRelationSyntax
RawPrefixOperatorExprSyntax
RawPrimaryAssociatedTypeClauseSyntax
RawPrimaryAssociatedTypeListSyntax
RawPrimaryAssociatedTypeSyntax
RawProtocolDeclSyntax
SwiftSyntax
RawStmtSyntaxNodeProtocol
RawRegexLiteralExprSyntax
RawRepeatStmtSyntax
RawReturnClauseSyntax
RawReturnStmtSyntax
RawSameTypeRequirementSyntax
RawSequenceExprSyntax
RawSimpleStringLiteralExprSyntax
RawSimpleStringLiteralSegmentListSyntax
RawSimpleTypeSpecifierSyntax
RawSomeOrAnyTypeSyntax
RawSourceFileSyntax
RawSpecializeAttributeArgumentListSyntax
Element
RawSpecializeAvailabilityArgumentSyntax
RawSpecializeTargetFunctionArgumentSyntax
RawStmtSyntax
RawStringLiteralExprSyntax
RawStringLiteralSegmentListSyntax
RawStringSegmentSyntax
RawStructDeclSyntax
RawSubscriptCallExprSyntax
RawSubscriptDeclSyntax
RawSuperExprSyntax
RawSuppressedTypeSyntax
RawSwitchCaseItemListSyntax
RawSwitchCaseItemSyntax
RawSwitchCaseLabelSyntax
RawSwitchCaseListSyntax
RawSwitchCaseSyntax
Label
RawSwitchDefaultLabelSyntax
RawSwitchExprSyntax
SwiftSyntax
RawTypeSyntaxNodeProtocol
RawTernaryExprSyntax
RawThenStmtSyntax
RawThrowStmtSyntax
RawThrowsClauseSyntax
RawTryExprSyntax
RawTupleExprSyntax
RawTuplePatternElementListSyntax
RawTuplePatternElementSyntax
RawTuplePatternSyntax
RawTupleTypeElementListSyntax
RawTupleTypeElementSyntax
RawTupleTypeSyntax
RawTypeAliasDeclSyntax
RawTypeAnnotationSyntax
RawTypeEffectSpecifiersSyntax
RawTypeExprSyntax
RawTypeInitializerClauseSyntax
RawTypeSpecifierListSyntax
Element
RawTypeSyntax
RawUnavailableFromAsyncAttributeArgumentsSyntax
RawUnderscorePrivateAttributeArgumentsSyntax
RawUnexpectedNodesSyntax
RawUnresolvedAsExprSyntax
RawUnresolvedIsExprSyntax
RawUnresolvedTernaryExprSyntax
RawValueBindingPatternSyntax
RawVariableDeclSyntax
RawVersionComponentListSyntax
RawVersionComponentSyntax
RawVersionTupleSyntax
RawWhereClauseSyntax
RawWhileStmtSyntax
RawWildcardPatternSyntax
RawYieldStmtSyntax
YieldedExpressions
RawYieldedExpressionListSyntax
RawYieldedExpressionSyntax
RawYieldedExpressionsClauseSyntax
;;;;;;;;;;;;;;;;;
;;;;D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GJ;;;;;;;;;;;M;;;;;;;;;;P;;;;S;V;;Y;;;;;;;\
SwiftSyntax
AccessorBlockSyntax
Accessors
AccessorDeclSyntax
AccessorEffectSpecifiersSyntax
AccessorParametersSyntax
ActorDeclSyntax
ArrayElementSyntax
ArrayExprSyntax
ArrayTypeSyntax
ArrowExprSyntax
AsExprSyntax
AssignmentExprSyntax
AssociatedTypeDeclSyntax
AttributeSyntax
Arguments
AttributedTypeSyntax
AvailabilityArgumentSyntax
Argument
AvailabilityConditionSyntax
AvailabilityLabeledArgumentSyntax
Value
AwaitExprSyntax
BackDeployedAttributeArgumentsSyntax
BinaryOperatorExprSyntax
BooleanLiteralExprSyntax
BorrowExprSyntax
BreakStmtSyntax
SwiftSyntax
_CanImportExprSyntax
_CanImportVersionInfoSyntax
CatchClauseSyntax
CatchItemSyntax
ClassDeclSyntax
ClassRestrictionTypeSyntax
ClosureCaptureClauseSyntax
ClosureCaptureSpecifierSyntax
ClosureCaptureSyntax
ClosureExprSyntax
ClosureParameterClauseSyntax
ClosureParameterSyntax
ClosureShorthandParameterSyntax
ClosureSignatureSyntax
ParameterClause
CodeBlockItemSyntax
Item
CodeBlockSyntax
CompositionTypeElementSyntax
CompositionTypeSyntax
ConditionElementSyntax
Condition
ConformanceRequirementSyntax
ConsumeExprSyntax
ContinueStmtSyntax
ConventionAttributeArgumentsSyntax
ConventionWitnessMethodAttributeArgumentsSyntax
CopyExprSyntax
SwiftSyntax
DeclModifierDetailSyntax
DeclModifierSyntax
DeclNameArgumentSyntax
DeclNameArgumentsSyntax
DeclReferenceExprSyntax
DeferStmtSyntax
DeinitializerDeclSyntax
DeinitializerEffectSpecifiersSyntax
DerivativeAttributeArgumentsSyntax
DesignatedTypeSyntax
DictionaryElementSyntax
DictionaryExprSyntax
Content
DictionaryTypeSyntax
DifferentiabilityArgumentSyntax
DifferentiabilityArgumentsSyntax
DifferentiabilityWithRespectToArgumentSyntax
Arguments
DifferentiableAttributeArgumentsSyntax
DiscardAssignmentExprSyntax
DiscardStmtSyntax
DoExprSyntax
DoStmtSyntax
DocumentationAttributeArgumentSyntax
Value
DynamicReplacementAttributeArgumentsSyntax
SwiftSyntax
EditorPlaceholderDeclSyntax
EditorPlaceholderExprSyntax
EnumCaseDeclSyntax
EnumCaseElementSyntax
EnumCaseParameterClauseSyntax
EnumCaseParameterSyntax
EnumDeclSyntax
ExposeAttributeArgumentsSyntax
ExpressionPatternSyntax
ExpressionSegmentSyntax
ExpressionStmtSyntax
ExtensionDeclSyntax
FallThroughStmtSyntax
FloatLiteralExprSyntax
ForStmtSyntax
ForceUnwrapExprSyntax
FunctionCallExprSyntax
FunctionDeclSyntax
FunctionEffectSpecifiersSyntax
FunctionParameterClauseSyntax
FunctionParameterSyntax
FunctionSignatureSyntax
FunctionTypeSyntax
SwiftSyntax
GenericArgumentClauseSyntax
GenericArgumentSyntax
GenericParameterClauseSyntax
GenericParameterSyntax
GenericRequirementSyntax
Requirement
GenericSpecializationExprSyntax
GenericWhereClauseSyntax
GuardStmtSyntax
IdentifierPatternSyntax
IdentifierTypeSyntax
IfConfigClauseSyntax
Elements
IfConfigDeclSyntax
IfExprSyntax
ElseBody
ImplementsAttributeArgumentsSyntax
ImplicitlyUnwrappedOptionalTypeSyntax
ImportDeclSyntax
ImportPathComponentSyntax
InOutExprSyntax
InfixOperatorExprSyntax
InheritanceClauseSyntax
InheritedTypeSyntax
InitializerClauseSyntax
InitializerDeclSyntax
IntegerLiteralExprSyntax
IsExprSyntax
IsTypePatternSyntax
SwiftSyntax
KeyPathComponentSyntax
Component
KeyPathExprSyntax
KeyPathOptionalComponentSyntax
KeyPathPropertyComponentSyntax
KeyPathSubscriptComponentSyntax
LabeledExprSyntax
LabeledSpecializeArgumentSyntax
LabeledStmtSyntax
LayoutRequirementSyntax
LifetimeSpecifierArgumentSyntax
LifetimeTypeSpecifierSyntax
MacroDeclSyntax
MacroExpansionDeclSyntax
MacroExpansionExprSyntax
MatchingPatternConditionSyntax
MemberAccessExprSyntax
MemberBlockItemSyntax
MemberBlockSyntax
MemberTypeSyntax
MetatypeTypeSyntax
MissingDeclSyntax
MissingExprSyntax
MissingPatternSyntax
MissingStmtSyntax
MissingSyntax
MissingTypeSyntax
MultipleTrailingClosureElementSyntax
NamedOpaqueReturnTypeSyntax
NilLiteralExprSyntax
SwiftSyntax
ObjCSelectorPieceSyntax
OpaqueReturnTypeOfAttributeArgumentsSyntax
OperatorDeclSyntax
OperatorPrecedenceAndTypesSyntax
OptionalBindingConditionSyntax
OptionalChainingExprSyntax
OptionalTypeSyntax
OriginallyDefinedInAttributeArgumentsSyntax
PackElementExprSyntax
PackElementTypeSyntax
PackExpansionExprSyntax
PackExpansionTypeSyntax
PatternBindingSyntax
PatternExprSyntax
PlatformVersionItemSyntax
PlatformVersionSyntax
PostfixIfConfigExprSyntax
PostfixOperatorExprSyntax
PoundSourceLocationArgumentsSyntax
PoundSourceLocationSyntax
PrecedenceGroupAssignmentSyntax
PrecedenceGroupAssociativitySyntax
PrecedenceGroupDeclSyntax
PrecedenceGroupNameSyntax
PrecedenceGroupRelationSyntax
PrefixOperatorExprSyntax
PrimaryAssociatedTypeClauseSyntax
PrimaryAssociatedTypeSyntax
ProtocolDeclSyntax
SwiftSyntax
RegexLiteralExprSyntax
RepeatStmtSyntax
ReturnClauseSyntax
ReturnStmtSyntax
SameTypeRequirementSyntax
SequenceExprSyntax
SimpleStringLiteralExprSyntax
SimpleTypeSpecifierSyntax
SomeOrAnyTypeSyntax
SourceFileSyntax
SpecializeAvailabilityArgumentSyntax
SpecializeTargetFunctionArgumentSyntax
StringLiteralExprSyntax
StringSegmentSyntax
StructDeclSyntax
SubscriptCallExprSyntax
SubscriptDeclSyntax
SuperExprSyntax
SuppressedTypeSyntax
SwitchCaseItemSyntax
SwitchCaseLabelSyntax
SwitchCaseSyntax
Label
SwitchDefaultLabelSyntax
SwitchExprSyntax
SwiftSyntax
TernaryExprSyntax
ThenStmtSyntax
ThrowStmtSyntax
ThrowsClauseSyntax
TryExprSyntax
TupleExprSyntax
TuplePatternElementSyntax
TuplePatternSyntax
TupleTypeElementSyntax
TupleTypeSyntax
TypeAliasDeclSyntax
TypeAnnotationSyntax
TypeEffectSpecifiersSyntax
TypeExprSyntax
TypeInitializerClauseSyntax
UnavailableFromAsyncAttributeArgumentsSyntax
UnderscorePrivateAttributeArgumentsSyntax
UnresolvedAsExprSyntax
UnresolvedIsExprSyntax
UnresolvedTernaryExprSyntax
ValueBindingPatternSyntax
VariableDeclSyntax
VersionComponentSyntax
VersionTupleSyntax
WhereClauseSyntax
WhileStmtSyntax
WildcardPatternSyntax
YieldStmtSyntax
YieldedExpressions
YieldedExpressionSyntax
YieldedExpressionsClauseSyntax
SwiftSyntaxBuilder
SwiftSyntaxBuilder
DeclSyntaxParseable
SwiftSyntaxBuilder
Indenter
SwiftSyntaxBuilder
ListBuilder
FinalResult
SwiftSyntaxBuilder
SyntaxStringInterpolation
SyntaxExpressibleByStringInterpolation
SyntaxStringInterpolationInvalidNodeTypeError
ExpressibleByLiteralSyntax
LiteralType
InterpolatedSyntaxNode
UnexpectedTrivia
SyntaxStringInterpolationDiagnosticError
SwiftSyntaxBuilder
SyntaxNodeString
HasTrailingCodeBlock
HasTrailingMemberDeclBlock
SwiftSyntaxBuilder
AccessorDeclListBuilder
ArrayElementListBuilder
AttributeListBuilder
AvailabilityArgumentListBuilder
CatchClauseListBuilder
CatchItemListBuilder
ClosureCaptureListBuilder
ClosureParameterListBuilder
ClosureShorthandParameterListBuilder
CodeBlockItemListBuilder
CompositionTypeElementListBuilder
ConditionElementListBuilder
DeclModifierListBuilder
DeclNameArgumentListBuilder
DesignatedTypeListBuilder
DictionaryElementListBuilder
DifferentiabilityArgumentListBuilder
DocumentationAttributeArgumentListBuilder
EffectsAttributeArgumentListBuilder
EnumCaseElementListBuilder
EnumCaseParameterListBuilder
ExprListBuilder
FunctionParameterListBuilder
GenericArgumentListBuilder
GenericParameterListBuilder
GenericRequirementListBuilder
IfConfigClauseListBuilder
ImportPathComponentListBuilder
InheritedTypeListBuilder
KeyPathComponentListBuilder
LabeledExprListBuilder
LifetimeSpecifierArgumentListBuilder
MemberBlockItemListBuilder
MultipleTrailingClosureElementListBuilder
ObjCSelectorPieceListBuilder
PatternBindingListBuilder
PlatformVersionItemListBuilder
PrecedenceGroupAttributeListBuilder
PrecedenceGroupNameListBuilder
PrimaryAssociatedTypeListBuilder
SimpleStringLiteralSegmentListBuilder
SpecializeAttributeArgumentListBuilder
StringLiteralSegmentListBuilder
SwitchCaseItemListBuilder
SwitchCaseListBuilder
TuplePatternElementListBuilder
TupleTypeElementListBuilder
TypeSpecifierListBuilder
UnexpectedNodesBuilder
VersionComponentListBuilder
YieldedExpressionListBuilder
SwiftSyntaxBuilder
!v04?CvNvR
\\\\\\\\\\\\\\\\
SwiftBasicFormat
BasicFormat
SwiftBasicFormat
IndentationInferrer
AccessLevelModifier
AccessorIntroducer
IfConfigContinuationClauseStartKeyword
&&&'&&&&&
CollectionKind
SwiftParser
IncrementalParseTransition
ConcurrentEdits
IncrementalParseLookup
ConcurrentEditsError
SyntaxCursor
SwiftParser
IdentifierCheckContext
SwiftParser
StringLiteralKind
Cursor
Result
UnknownCharactersClassification
LexingDiagnostic
StateTransition
State
StateStack
NewlinePresence
Position
TriviaLexingMode
Lexeme
Flags
LexemeSequence
SwiftParser
Lexer
Element
SwiftParser
RegexLiteralLexemes
Builder
Kind
222222222222
222222222222222222222222222222
22222222222222222222222222222
SkippingState
Lookahead
BracketedTokens
AccessLevelModifier
SwiftParser
NominalTypeDeclarationTrait
PrimaryOrGenerics
SwiftParser
RawParameterTrait
RawParameterListTrait
ParameterSyntax
RawParameterClauseTrait
Parameters
SwiftParser
IncrementalParseResult
SwiftParser
Parser
LookaheadTracker
LookaheadTrackerOwner
LookaheadRanges
SwiftParser
AsyncEffectSpecifier
ThrowsEffectSpecifier
EffectSpecifier
RawMisplacedEffectSpecifiersTrait
MisspelledAsyncTokenKinds CorrectAsyncTokenKinds MisspelledThrowsTokenKinds CorrectThrowsTokenKinds
RawEffectSpecifiersTrait
MisspelledThrowsTokenKinds
MisspelledAsyncTokenKinds
CorrectThrowsTokenKinds
CorrectAsyncTokenKinds
;G6L
#%!'
SwiftParser
StringLiteralExpressionIndentationChecker
SwiftVersion
SwiftParser
UnexpectedNodesCombinable
SwiftParser
TokenConsumer
Token
, $(SwiftParser
TokenPrecedence
SwiftParser
TokenSpec
cbbbbb
bbbb
bbbbb
bbbbbb
!bb#


SwiftParser
TokenSpecSet
DeclarationStart
DeclarationModifier
PostfixOperatorLike
BinaryOperatorLike
OperatorLike
AccessorModifier
SwitchCaseStart
CanBeStatementStart
EitherTokenSpecSet
PureDeclarationKeyword
SwiftParser
TriviaParser
ExperimentalFeatures
SwiftParser
SyntaxParseable
SwiftParser
AccessorSpecifierOptions
QuestionOrExclamationMarkOptions
AvailabilityKeywordOptions
LabelOptions
LiteralOptions
SpecifierOptions
DetailOptions
FirstNameOptions
SecondNameOptions
NameOptions
ConsumeKeywordOptions
BaseNameOptions
ArgumentOptions
KindSpecifierOptions
AsyncSpecifierOptions
IdentifierOptions
PoundKeywordOptions
ImportKindSpecifierOptions
OptionalMarkOptions
LayoutSpecifierOptions
ParameterOptions
MetatypeSpecifierOptions
FixitySpecifierOptions
BindingSpecifierOptions
ValueOptions
HigherThanOrLowerThanLabelOptions
EqualOptions
OpeningQuoteOptions
ClosingQuoteOptions
SomeOrAnySpecifierOptions
ThrowsSpecifierOptions
SwiftDiagnostics
Diagnostic
DiagnosticsError
SwiftDiagnostics
ANSIDiagnosticDecorator
 !"#$%'
SwiftDiagnostics
BasicDiagnosticDecorator
SwiftDiagnostics
DiagnosticDecorator
SwiftDiagnostics
DiagnosticsFormatter
AnnotatedSourceLine
SwiftDiagnostics
FixItMessage
FixIt
Change
SwiftDiagnostics
GroupedDiagnostics
SourceFileID
SourceFile
SwiftDiagnostics
MessageID
DiagnosticSeverity
DiagnosticMessage
SwiftDiagnostics
NoteMessage
Note
SwiftParserDiagnostics
PresentMakingFormatter
MultiNodeChange
#'.26:>BFJN
StaticTokenError
StaticTokenWarning
SwiftParserDiagnostics
TokenError
TokenWarning
ExtraneousLeadingWhitespaceError
ExtraneousTrailingWhitespaceError
InvalidFloatingPointExponentDigit
Kind
InvalidDigitInIntegerLiteral
ErrorToWarningDowngrade
SwiftParserDiagnostics
NoNewlinesFormat
HasTokenChecker
MissingNodesError
MatchingOpeningTokenNote
InsertTokenFixIt
NodesDescriptionPart
JJJJJJJ- JJJJJJJJJJJJ:J>
SwiftParserDiagnostics
MultiLineStringLiteralIndentationDiagnosticsGenerator
InProgressDiagnostic
SwiftParserDiagnostics
ParseDiagnosticsGenerator
00000000&
SwiftParserDiagnostics
ParserError
ParserNote
ParserFixIt
StaticParserError
AsyncMustPrecedeThrows
AvailabilityConditionAsExpression
AvailabilityConditionInExpression
CannotParseVersionTuple
DeinitializerSignatureError
DuplicateEffectSpecifiers
EffectsSpecifierAfterArrow
ExtraneousCodeAtTopLevel
ExtraneousWhitespace
IdentifierNotAllowedInOperatorName
InvalidFloatLiteralMissingLeadingZero
InvalidIdentifierError
InvalidIndentationInMultiLineStringLiteralError
Kind
MissingAttributeArgument
MissingBothStringQuotesOfStringSegments
MissingConditionInStatement
MissingExpressionInStatement
NegatedAvailabilityCondition
SpaceSeparatedIdentifiersError
SpecifierOnParameterName
TokensNotAllowedInOperatorName
TrailingVersionAreIgnored
TryCannotBeUsed
UnexpectedNodesError
UnknownDirectiveError
UnknownParameterError
EffectSpecifierDeclaredHere
StaticParserNote
StaticParserFixIt
InsertFixIt
MoveTokensAfterFixIt
MoveTokensInFrontOfFixIt
MoveTokensInFrontOfTypeFixIt
RemoveRedundantFixIt
RemoveNodesFixIt
ReplaceTokensFixIt
SwiftParserDiagnostics
PresentNodeChecker
MissingMaker
!(/4:CKQZ_
jmpsvy}
SwiftOperators
OperatorKind
Operator
SwiftOperators
OperatorError
SequenceFolder
OperatorAndGroupVisitor
SwiftOperators
OperatorTable
0SwiftOperators
PrecedenceGraph
SwiftOperators
Associativity
PrecedenceRelation
Kind
PrecedenceGroup
NLTag
NLTagScheme
NaturalLanguage
!$*07>DJPU[a
SwiftFormat
Configuration
FileScopedDeclarationPrivacyConfiguration
AccessLevel
NoAssignmentInExpressionsConfiguration
CodingKeys
SwiftFormat
DebugOptions
SwiftFormat
Finding
Severity
Location
Message
Note
SwiftFormat
FindingCategorizing
SwiftFormat
Indent
CodingKeys
SwiftFormat
SwiftFormatError
SwiftFormat
SwiftFormatter
SwiftFormat
SwiftLinter
SwiftFormat
Context
XCTestImportState
SwiftFormat
DocumentationComment
Parameter
ParameterLayout
ParameterOutlineMarkupRewriter
SimpleFieldMarkupRewriter
SwiftFormat
DocumentationCommentText
Introducer
Line
SwiftFormat
FindingEmitter
SwiftFormat
ImportsXCTestVisitor
SwiftFormat
DowngradedDiagnosticMessage
SwiftFormat
LintPipeline
SwiftFormat
Rule
FindingAnchor
SwiftFormat
RuleBasedFindingCategory
SwiftFormat
RuleMask
RuleStatusCollectionVisitor
RuleStatusDirectiveMatch
SwiftFormat
RuleRegistry
SwiftFormat
RuleState
SwiftFormat
SyntaxFormatRule
SwiftFormat
SyntaxLintRule
SwiftFormat
WithSemicolonSyntax
SwiftFormat
Comment
Kind
SwiftFormat
PrettyPrinter
ActiveBreakingContext
ActiveOpenBreak
BreakingBehavior
SwiftFormat
PrettyPrintFindingCategory
SwiftFormat
BreakKind
Token
OpenBreakKind
PrinterControlKind
NewlineBehavior
GroupBreakStyle
SwiftFormat
TokenStreamCreator
CommentMovingRewriter
CallingExprSyntaxProtocol
SwiftFormat
Verbatim
IndentingBehavior
"SwiftFormat
WhitespaceFindingCategory
SwiftFormat
WhitespaceLinter
WhitespaceIndentation
SwiftFormat
AllPublicDeclarationsHaveDocumentation
SwiftFormat
AlwaysUseLiteralForEmptyCollectionInit
SwiftFormat
AlwaysUseLowerCamelCase
SwiftFormat
AmbiguousTrailingClosureOverload
SwiftFormat
BeginDocumentationCommentWithOneLineSummary
SwiftFormat
DoNotUseSemicolons
SwiftFormat
DontRepeatTypeInStaticProperties
SwiftFormat
FileScopedDeclarationPrivacy
SwiftFormat
FullyIndirectEnum
SwiftFormat
GroupNumericLiterals
$&SwiftFormat
IdentifiersMustBeASCII
SwiftFormat
NeverForceUnwrap
SwiftFormat
NeverUseForceTry
SwiftFormat
NeverUseImplicitlyUnwrappedOptionals
|||||||||||||||||||||
||||||||||||
SwiftFormat
NoAccessLevelOnExtensionDeclaration
SwiftFormat
NoAssignmentInExpressions
SwiftFormat
NoBlockComments
SwiftFormat
NoCasesWithOnlyFallthrough
SwiftFormat
NoEmptyTrailingClosureParentheses
SwiftFormat
NoLabelsInCasePatterns
SwiftFormat
NoLeadingUnderscores
SwiftFormat
NoParensAroundConditions
SwiftFormat
NoPlaygroundLiterals
SwiftFormat
NoVoidReturnOnFunctionSignature
SwiftFormat
OmitExplicitReturns
SwiftFormat
OneCasePerLine
SwiftFormat
OneVariableDeclarationPerLine
SwiftFormat
OnlyOneTrailingClosureArgument
SwiftFormat
OrderedImports
LineType
Line
SyntaxNode
SwiftFormat
ReplaceForEachWithForLoop
SwiftFormat
ReturnVoidInsteadOfEmptyTuple
SwiftFormat
TypeNamesShouldBeCapitalized
SwiftFormat
UseEarlyExits
SwiftFormat
UseExplicitNilCheckInConditions
SwiftFormat
UseLetInEveryBoundCaseVariable
SwiftFormat
UseShorthandTypeNames
SwiftFormat
UseSingleLinePropertyGetter
SwiftFormat
UseSynthesizedInitializer
SwiftFormat
UseTripleSlashForDocumentationComments
SwiftFormat
UseWhereClausesInForLoops
SwiftFormat
ValidateDocumentationComments
@help
q.Hg
ArgumentParser
CompletionShell
ArgumentParser
Argument
ArgumentArrayParsingStrategy
ArgumentParser
ArgumentHelp
ArgumentParser
ArgumentVisibility
Representation
ArgumentParser
CompletionKind
Kind
ArgumentParser
ValidationError
ExitCode
CleanExit
Representation
ArgumentParser
Flag
FlagInversion
FlagExclusivity
Representation
ArgumentParser
NameSpecification
Element
Representation
ArgumentParser
Option
SingleValueParsingStrategy
ArrayParsingStrategy
ArgumentParser
OptionGroup
ArgumentParser
AsyncParsableCommand
AsyncMainProtocol
Command
ArgumentParser
CommandConfiguration
ArgumentParser
EnumerableFlag
ArgumentParser
ExpressibleByArgument
ArgumentParser
ParsableArguments
ArgumentSetProvider
_WrappedParsableCommand
CodingKeys
ArgumentParser
ParsableArgumentsValidator
ParsableArgumentsValidatorError
ArgumentParser
ParsableCommand
ArgumentParser
ArgumentDecoder
ParsedArgumentsContainer
ArrayWrapperProtocol
DecodedArguments
SingleValueDecoder
UnkeyedContainer
ArrayWrapper
SingleValueContainer
Error
ArgumentParser
ArgumentDefinitionContainer
Contained Initial
ArgumentDefinitionContainerExpressibleByArgument
ArgumentDefinition
ParsingStrategy
Bare
Update
Help
Kind
Options
ArgumentParser
ArgumentSet
ArgumentParser
CommandError
AutodetectedGenerateCompletions
GenerateCompletions
HelpRequested
CodingKeys
ArgumentParser
InputKey
ArgumentParser
InputOrigin
Element
ArgumentParser
Name
ArgumentParser
ParsedWrapper
Value
DecodableParsedWrapper
Parsed
ArgumentParser
ParsedValues
Element
ArgumentParser
ParserError
InternalParseError
InputIndex
ArgumentParser
ParsedArgument
Value
Element
Index
SplitArguments
SubIndex
ArgumentParser
HelpCommand
CodingKeys
Element
ArgumentParser
HelpGenerator
Section
DiscussionSection
Header
&33ArgumentParser
MessageInfo
&33StandardError
ArgumentParser
Platform
ArgumentParser
Tree
InitializationError
 %.5=EK
ArgumentParserToolInfo
ToolInfoHeader
ToolInfoV0
CommandInfoV0
ArgumentInfoV0
NameInfoV0
KindV0
CodingKeys
SDySS
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
ySbG
So12NSFileHandleC
SSSgSg
ySSSbG
ySSSgG
SgGG
yAAy
SgGGADG
SgIegno_
yyXlG
SgGGAE_G
Sg_G
SgG_G
ySaySSGG
ySbSgG
Iegn_
yypG
Sb8inserted_
17memberAfterInsertt
_pXpG
SSSg
Sayy
$sST
$sSt
ySay
So21NSDirectoryEnumeratorCSg
ShySSG
ySSG
ypSg
So17OS_dispatch_queueC
SnySiG
$sSk
_pXpSgt
$ss25ExpressibleByArrayLiteralP
$sSK
$sSl
$sST
_pXpSg
yyXlG
SvSg
ySpy
GSg_SvSgtXCSg
$sSY
SvSgSi_SitXCSg
SvSgAA_SitXCSg
ySvSgXCSg
GSg_Spy
GSgSpy
GSgAASpy
GSgtXCSg
GSgSpy
GSg_
GSgACSpy
GSgAGtXCSg
GSgSpy
GSg_Spy
GSgAC
SgtXCSg
GSgSpy
GSg_Spy
SgA2CtXCSg
GSgSpy
GSg_Spy
GSgtXCSg
GSg_Spy
tXCSg
GSg_Spy
GSgtXCSg
ySpy
GSg_Spy
GSgSpy
tXCSg
ySpy
GSg_Spy
GSgSpy
tXCSg
GSg_SPy
GSgSitXCSg
GSgSpy
GSg_Spy
GSgACtXCSg
ySpy
GSg_Spy
GSgSpy
GSgtXCSg
GSg_Spy
GSgAAtXCSg
XCSg
ySpy
GSg_Spy
tXCSg
ySpy
GSgXCSg
ySpy
GSg_Spy
GSgSPy
GSgSb
tXCSg
SpySpy
GSgGSg
ySpy
GSg_Spy
GSgtXCSg
5lower_AA5uppert
8locationt
SS4name_
13firstLocationAB09duplicateC0t
ySi6offset_
_p7elementtG
Si6offset_
_p7elementt
ySsG
ySSG
ySuG
ySiG
ySu7colspan_Su7rowspantG
GSg_ACt
_AAt
$s8Markdown13LiteralMarkupP
_pSg
SaySiG
$s8Markdown6MarkupP
SS4name_
Sg0A8Location
9argumentst
$s8Markdown13MarkupVisitorP
$sSt
$s8Markdown26PlainTextConvertibleMarkupP
SS_SSSg8languaget
Si5level_t
Sg8checkbox_t
Su10startIndex_t
SSSg6source_AA5titlet
SSSg11destination_AA5titlet
SSSg11destination_t
SS10attributes_t
SgG16columnAlignments_t
Su7colspan_Su7rowspant
SS4name_t
4from_
_pXp2tot
Sg_ABt
_AAt
SaySsG
ySaySSGG
SaySSG
4line_Si11indentationtG
4line_Si11indentationt
$s8Markdown18TableCellContainerP
$s8Markdown17_TableRowProtocolP
Sg_ABt
_pSg
ySi_
_pXpSgtG
$ss12CaseIterableP
SaySu7colspan_Su7rowspantGG
SaySu7colspan_Su7rowspantG_G
ySaySu7colspan_Su7rowspantGG
Su7colspan_Su7rowspantG
Su7colspan_Su7rowspant_G
SaySSGG
SaySSG_G
Su_G
SS_G
_p_G
_pSg
_Say
_Say
SiSg
G_Sb13isInCodeFencet
14pendingCommand_
9remaindertSg
14pendingCommand_
9remaindert
ySsG
Ss4name_t
ySay
$ss9OptionSetP
$ss10SetAlgebraP
$s8Markdown14MarkupRewriterP
6Result
$s8Markdown19BasicBlockContainerP
$s8Markdown20BasicInlineContainerP
$s8Markdown14BlockContainerP
$s8Markdown11BlockMarkupP
$s8Markdown15InlineContainerP
$s8Markdown12InlineMarkupP
$s8Markdown21RecurringInlineMarkupP
$s8Markdown17ListItemContainerP
$s8Markdown12MarkupWalkerP
_pSg
SSIegnr_
SuIegnr_
SaySSGIegnr_
SaySu7colspan_Su7rowspantGIegnr_
Si6offset_
7elementt
Si6offset_
7elementtSg
SSSg
Su5start_t
SaySJG
Su7colspan_Su7rowspantIegnr_
Si6offset_
_p7elementtSg
ySSG
SaySwG
Sv7pointer_Sv3endtSg
ySi10sourceLine_
Sg9argumentstG
Si10sourceLine_
Sg9argumentst
ySi6offset_
Sg7elementtG
ySwG
ypSg
SayypG
$ss12IdentifiableP
ySS_
SnySiG
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$sSY
$ss9OptionSetP
$s11SwiftSyntax03RawB12NodeProtocolP
Sg3raw_
10syntaxInfotG
SaySi10sourceLine_
Sg9argumentstG
$sSk
yxGG
$sSK
$sSl
yx_G
$sST
SPyxG
SRyxG
$sSt
Sg3raw_
10syntaxInfot
$s11SwiftSyntax0B10CollectionP
7ElementSTQz
5IndexSlQz
$s11SwiftSyntax0B8HashableP
_pSg
$s11SwiftSyntax0B8ProtocolP
$s11SwiftSyntax0B12ChildChoicesP
_pXp
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
_AAt
ySS_yptG
SaySSG
_pSg
_pSg
_pSg
_pSg
_pSg
$s11SwiftSyntax04DeclB8ProtocolP
$s11SwiftSyntax09_LeafDeclB12NodeProtocolP
$s11SwiftSyntax04ExprB8ProtocolP
$s11SwiftSyntax09_LeafExprB12NodeProtocolP
$s11SwiftSyntax07PatternB8ProtocolP
$s11SwiftSyntax012_LeafPatternB12NodeProtocolP
$s11SwiftSyntax04StmtB8ProtocolP
$s11SwiftSyntax09_LeafStmtB12NodeProtocolP
$s11SwiftSyntax04TypeB8ProtocolP
$s11SwiftSyntax09_LeafTypeB12NodeProtocolP
$s11SwiftSyntax05_LeafB12NodeProtocolP
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
_pSg
$s11SwiftSyntax06BracedB0P
$s11SwiftSyntax09DeclGroupB0P
$s11SwiftSyntax016EffectSpecifiersB0P
$s11SwiftSyntax026FreestandingMacroExpansionB0P
$s11SwiftSyntax09NamedDeclB0P
$s11SwiftSyntax011MissingNodeB0P
$s11SwiftSyntax013ParenthesizedB0P
$s11SwiftSyntax014WithAttributesB0P
$s11SwiftSyntax013WithCodeBlockB0P
$s11SwiftSyntax021WithGenericParametersB0P
$s11SwiftSyntax013WithModifiersB0P
$s11SwiftSyntax021WithOptionalCodeBlockB0P
$s11SwiftSyntax014WithStatementsB0P
$s11SwiftSyntax017WithTrailingCommaB0P
ySSG
yypG
$s11SwiftSyntax07RawDeclB12NodeProtocolP
$s11SwiftSyntax07RawExprB12NodeProtocolP
$s11SwiftSyntax010RawPatternB12NodeProtocolP
$s11SwiftSyntax07RawStmtB12NodeProtocolP
$s11SwiftSyntax07RawTypeB12NodeProtocolP
yyXlG
$ss27ExpressibleByBooleanLiteralP
$ss25ExpressibleByFloatLiteralP
$ss27ExpressibleByIntegerLiteralP
$s18SwiftSyntaxBuilder04DeclB9ParseableP
ySay
ySay
ySsG
$s18SwiftSyntaxBuilder04ListC0P
11FinalResult
yyXlG
$ss27StringInterpolationProtocolP
$s18SwiftSyntaxBuilder020ExpressibleByLiteralB0P
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
$s18SwiftSyntaxBuilder0B32ExpressibleByStringInterpolationP
19StringInterpolation
_pXp
11LiteralType
SaySsG
$s18SwiftSyntaxBuilder20HasTrailingCodeBlockP
$s18SwiftSyntaxBuilder26HasTrailingMemberDeclBlockP
11indentation_Sb13isUserDefinedtG
yS2iG
11indentation_Sb13isUserDefinedtG
11indentation_Sb13isUserDefinedt
SDyS2iG
ySiG
$ss12CaseIterableP
3key_
Sg21unexpectedBeforeColon
5colonAA5valuet
SiSg
Si15delimiterLength_t
4kind_Si15delimiterLengtht
Sb11isRawString_t
17stringLiteralKind_t
17stringLiteralKind_Si10parenCountt
5index_SPy
G7lexemest
8newState_t
5index_
7lexemest
5error_t
SaySSG
$ss9OptionSetP
$sSY
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
ySSG
ySiG
$sSt
$sST
$sSl
$sSK
$sSk
8slashEnd_Si9numPoundstSg
5IndexSlQzz_x_SlRz
7ElementSTRtzlXX
$s11SwiftParser13TokenConsumerP
5start_t
_AAt
$s11SwiftParser27NominalTypeDeclarationTraitP
$s11SwiftParser21RawParameterListTraitP
$s11SwiftParser23RawParameterClauseTraitP
$s11SwiftParser17RawParameterTraitP
15ParameterSyntax
10Parameters
$s11SwiftParser33RawMisplacedEffectSpecifiersTraitP
22CorrectAsyncTokenKinds
23CorrectThrowsTokenKinds
25MisspelledAsyncTokenKinds
26MisspelledThrowsTokenKinds
$s11SwiftParser24RawEffectSpecifiersTraitP
$s11SwiftParser25UnexpectedNodesCombinableP
16closingDelimiter_t
$s11SwiftParser12TokenSpecSetP
yxq_GG
$s11SwiftParser15SyntaxParseableP
$s16SwiftDiagnostics19DiagnosticDecoratorP
SaySSG
$s16SwiftDiagnostics12FixItMessageP
7oldNode_AA03newB0t
5token_
9newTriviat
ySnySiGG
ySSG
Si3key_Say
G5valuet
ySi3key_Say
G5valuetG
ySiSay
ySiG
ySiG
ySny
SnySiG
ySay
$s16SwiftDiagnostics17DiagnosticMessageP
$s16SwiftDiagnostics11NoteMessageP
$sSY
$s22SwiftParserDiagnostics10TokenErrorP
$s22SwiftParserDiagnostics12TokenWarningP
ySSG
10diagnostic_Say
G12handledNodestG
10diagnostic_Say
G12handledNodest
ySnySiGG
SaySSG
ySSG
10diagnostic_Say
G12handledNodestG
_pSg
_pSg
10diagnostic_Say
G12handledNodestSg
SbIegnr_
Sg_yyc
_pSg
$s22SwiftParserDiagnostics0B5ErrorP
$s22SwiftParserDiagnostics0B4NoteP
$s22SwiftParserDiagnostics0B5FixItP
$sSY
SSSg
8existing_AA3newt
14referencedFromt
8existing_AA3newt
12leftOperator_SS0A15PrecedenceGroupAA05rightB0SS0ecD0t
_pIgnzo_
ySay
ySay
SDySS
SaySSG
ySSG
ySS3key_
5valuetG
SS3key_
5valuet
ySnySiGG
ySS3key_
5valuetG
SS3key_
5valuet
SDySS
ySS_
ySSG
ySSG
ySbG
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
SDySSSbG
SaySSG
$ss9OptionSetP
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
$ss26ExpressibleByStringLiteralP
$ss32ExpressibleByStringInterpolationP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
$s11SwiftFormat19FindingCategorizingP
SDySOSSG
ySSSiG
ySSSay
ySOSSG
ySSSbG
ySi_
_pXpSgtG
_pSg
SSSg
$s8Markdown13MarkupVisitorP
_pSg
_pSg
SDySO
SDySO
$s11SwiftFormat4RuleP
SaySsG
_pXp
SDySSSay
So19NSRegularExpressionC
SaySSG9ruleNames_t
ySO_SStG
SO_SSt
ySS_SbtG
SS_Sbt
$s11SwiftFormat19WithSemicolonSyntaxP
yypG
SaySiG
SaySbG
_Si4size
8newlinest
Si4size_Sb8flexiblet
_Sb12wasEndOfLinet
4kind_t
Sb16hasTrailingComma_Sb15isSingleElementt
4kind_t
Sb9mustBreak_t
Sb20ignoresDiscretionary_t
Si5count_Sb13discretionaryt
Si5count_t
Sb18allowDiscretionary_t
SaySay
SiSg
$s11SwiftFormat25CallingExprSyntaxProtocolP
SaySay
_pSg
ySSSay
ySiG
6import_SayABG8commentstG
6import_SayAAG8commentst
ySi6offset_
7elementtG
Si6offset_
7elementt
SaySJG
ySJG
_pSg
4char_Si5counttG
ySsG
ySay
ySay
ySnySiGG
yyXlG
ySny
_Sb8sortablet
_pXpG
SaySSG
SaySsG
$sSY
$ss12CaseIterableP
SSSg
ySSG
ySSG
_pIeggrzo_
qd__
qd__Sg
SSqd__
_pIeggrzo_
Sayqd__G
$s14ArgumentParser13ParsedWrapperP
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SaySSG10extensions_t
SaySSGAAc
_pXpSg
SbSg
Sayqd__GSg
ypSg
Sbz_Xx
$ss25ExpressibleByArrayLiteralP
SS_Sb14withSingleDasht
SJ_Sb14allowingJoinedt
_pSg
$s14ArgumentParser20AsyncParsableCommandP
$s14ArgumentParser17AsyncMainProtocolP
7Command
_pXpG
$s14ArgumentParser14EnumerableFlagP
8RawValueSYQz
$s14ArgumentParser013ExpressibleByA0P
yypG
$s14ArgumentParser17ParsableArgumentsP
$s14ArgumentParser0A11SetProviderP
SSSg5label_yp5valuet
_pSg
SgSSyp
_pIegggggrzo_
$s14ArgumentParser26ParsableArgumentsValidator33_D8B6916CE93C2FC7F7BEDE789FAE65F8LLP
$s14ArgumentParser31ParsableArgumentsValidatorErrorP
$s14ArgumentParser15ParsableCommandP
_SitG
_Sit
_pXpG
ySsG
_SStG
_SSt
ySi_
_pXmTSg
$s14ArgumentParser20ArrayWrapperProtocolP
_pXp
$ss30KeyedDecodingContainerProtocolP
SayypG
yypG
_pXpGG
ySnySiGG
ySaySSGG
ySiG
_pXp_AA_pXpt
SayxG
$s14ArgumentParser0A19DefinitionContainerP
$s14ArgumentParser0a32DefinitionContainerExpressibleByA0P
9Contained
ztKc
SS9Contained
_pIeggrzo_
SgSS9Contained
_pIegggggrzo_
7Initial
QzSg
ztKc
SgSS
ztKc
$ss10SetAlgebraP
$ss9OptionSetP
$sST
SnySiG
$sSl
$sSK
$sSk
yyXlG
_SStSg
_pSg
ySSG
ySbG
SgS2S
_pIegggggrzo_
$s14ArgumentParser22DecodableParsedWrapperP
5Value
_pXpGADG
ySSSay
10visibility_t
SSSg5shell_t
_SStG
8previous_AA9duplicateSaySSG13originalInputt
6forKey_t
SgSS
6forKey
_pSg13originalErrort
ypSg_
6forKeyt
Si_Sit
_SSt
Sb8inserted_
17memberAfterInsertt
ySaySSGG
ySaySSGSSG
SaySSGSg
_ypt
ySSSgG
yAAyABySaySSSgGACGGSSGG
yAAySaySSSgGACGGSSG
ySaySSSgGACGG
ySaySSSgGABG
SaySSSgG
ySay
GSSG
SS4text_t
SS7message_SS5usageSS4helpt
SS7message_
8exitCodet
yxGSgXw
yxGG
_pXpGACG
_pXpGACSgIegnr_
_pXp
SaySSGSg
SaySSG
$sSY
SSSg
cache
_rawValue
RawValue
_ObjectiveCType
inPlace
diagnosticPrinter
diagnosticsEngine
lintFormatOptions
configurationLoader
fileHandle
configuration
$__lazy_storage_$_sourceText
_inPlace
_formatOptions
_performanceMeasurementOptions
inPlace
formatOptions
performanceMeasurementOptions
_lintOptions
_strict
_performanceMeasurementOptions
lintOptions
strict
performanceMeasurementOptions
_configuration
_assumeFilename
_recursive
_ignoreUnparsableFiles
_parallel
_colorDiagnostics
_followSymlinks
_paths
_debugDisablePrettyPrint
_debugDumpTokenStream
configuration
assumeFilename
recursive
ignoreUnparsableFiles
parallel
colorDiagnostics
followSymlinks
paths
debugDisablePrettyPrint
debugDumpTokenStream
_measureInstructions
measureInstructions
_versionOptions
versionOptions
severity
location
category
message
note
warning
error
file
line
column
handlers
hasErrors
hasWarnings
fileHandle
Element
Iterator
urls
followSymlinks
urlIterator
dirIterator
workingDirectory
currentDirectory
visited
fileSuffix
message
printQueue
useColors
_version
version
Element
Index
SubSequence
Indices
ArrayLiteralElement
Iterator
elements
index
expectedType
root
next
rawValue
content
prev
parent
first_child
last_child
user_data
user_data_free_func
start_line
start_column
end_line
end_column
internal_offset
type
flags
backtick_count
extension
ancestor_extension
footnote
parent_footnote_def
RawValue
calloc
realloc
free
ev_type
node
asize
size
last_block_matches
try_opening_block
match_inline
insert_inline_from_delim
special_inline_chars
name
priv
emphasis
free_function
get_type_string_func
can_contain_func
contains_inlines_func
commonmark_render_func
plaintext_render_func
latex_render_func
xml_attr_func
man_render_func
html_render_func
html_filter_func
postprocess_func
opaque_alloc_func
opaque_free_func
commonmark_escape_func
refmap
current
line_number
offset
column
first_nonspace
first_nonspace_column
thematic_break_kill_pos
indent
blank
partially_consumed_tab
curline
last_line_length
linebuf
options
last_buffer_ended_with_cr
total_size
syntax_extensions
inline_syntax_extensions
backslash_ispunct
skip_chars
special_chars
previous
inl_text
position
length
delim_char
can_open
can_close
data
buffer
prefix
width
need_cr
last_breakable
begin_line
begin_content
no_linebreaks
in_tight_list_item
outc
blankline
footnote_ix
html
plain
filter_extensions
written_footnote_ix
opaque
refs
sorted
ref_size
max_ref_size
label
segments
duplicateArgument
missingExpectedCharacter
unexpectedCharacter
untrimmedText
lineStartIndex
parseIndex
range
name
nameRange
value
valueRange
hasTrailingComma
_data
Result
Element
Iterator
parent
childMetadata
parent
markup
metadata
indexInParent
rootId
childId
data
childCount
subtreeCount
parsedRange
codeBlock
heading
htmlBlock
listItem
orderedList
blockDirective
inlineCode
customInline
image
inlineHTML
link
text
symbolLink
inlineAttributes
table
tableCell
doxygenParam
blockQuote
customBlock
document
thematicBreak
unorderedList
paragraph
emphasis
lineBreak
softBreak
strong
strikethrough
tableHead
tableBody
tableRow
doxygenReturns
concreteConversionError
_data
_data
_data
_data
_data
checked
unchecked
_data
_data
_data
_data
_data
_data
_data
_data
_data
left
center
right
_data
_data
ArrayLiteralElement
_data
ArrayLiteralElement
_data
range
replacementText
line
column
source
_data
_data
_data
_data
_data
_data
_data
_data
_data
_data
_data
_data
_data
RawValue
AllCases
kind
content
rawValue
text
range
untrimmedText
startParseIndex
parseIndex
lineNumber
source
atIndentationColumnCount
innerIndentationColumnCount
atLocation
nameLocation
name
argumentsText
parseState
endLocation
pendingLine
atSignIndentation
innerIndentation
kind
root
lineRun
blockDirective
doxygenCommand
argumentsStart
argumentsEnd
contentsStart
contents
contentsEnd
done
param
returns
state
result
range
source
iterator
event
node
options
headerSeen
pendingTableBody
input
source
Element
Iterator
precedingConsecutiveEmptyLineCount
rawLines
index
Element
RawValue
ArrayLiteralElement
rawValue
startLine
ranges
trimmedIndentationPerLine
Result
totalRange
RawValue
AllCases
Result
formattingOptions
result
state
orderedListNumerals
unorderedListMarker
useCodeFence
defaultCodeBlockLanguage
thematicBreakCharacter
thematicBreakLength
emphasisMarker
condenseAutolinks
preferredHeadingStyle
preferredLineLimit
customLinePrefix
doxygenCommandPrefix
dash
plus
star
onlyWhenLanguageIsPresent
always
never
underline
setext
allSame
incrementing
lineSplittingElement
maxLength
softBreak
hardBreak
backslash
currentLength
queuedNewlines
newlineStreak
lastLineLength
lineNumber
Element
RawValue
ArrayLiteralElement
rawValue
options
result
path
Result
utf8Offset
info
position
nodeId
offset
indexInParent
initialSlabSize
slabs
current
customSizeSlabs
_totalBytesAllocated
arena
name
size
stride
alignment
pointer
payload
arenaReference
parsedToken
materializedToken
layout
tokenKind
wholeText
textRange
presence
tokenDiagnosticKind
tokenDiagnosticByteOffset
tokenText
triviaPieces
numLeadingTrivia
byteLength
kind
descendantCount
recursiveFlags
rawValue
ArrayLiteralElement
Element
RawValue
range
replacement
utf8Length
line
column
offset
file
presumedLine
presumedFile
start
fileName
source
lines
endOfFile
sourceLocationDirectives
nonDecimalLineNumber
stringInterpolationInFileName
present
missing
info
root
nonRoot
arena
parent
absoluteInfo
allocator
childRefs
sourceBuffer
parseTriviaFunction
arena
_value
Element
Index
SubSequence
Indices
Iterator
pointer
buffer
Element
Index
SubSequence
Indices
Iterator
data
rawChildren
parent
offset
indexInParent
indexInTree
viewMode
allChildren
startIndex
collection
nextIndex
rootId
numberOfChildren
iterator
Element
parent
iterator
rootId
indexInTree
layout
collection
choices
node
token
Element
Index
SubSequence
Indices
Iterator
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
buffer
sourceAccurate
fixedUp
kind
byteOffset
warning
error
editorPlaceholder
equalMustHaveConsistentWhitespaceOnBothSides
expectedBinaryExponentInHexFloatLiteral
expectedClosingBraceInUnicodeEscape
expectedDigitInFloatLiteral
expectedHexCodeInUnicodeEscape
expectedHexDigitInHexLiteral
extraneousLeadingWhitespaceError
extraneousLeadingWhitespaceWarning
extraneousTrailingWhitespaceError
extraneousTrailingWhitespaceWarning
insufficientIndentationInMultilineStringLiteral
invalidBinaryDigitInIntegerLiteral
invalidCharacter
invalidDecimalDigitInIntegerLiteral
invalidEscapeSequenceInStringLiteral
invalidFloatingPointExponentCharacter
invalidFloatingPointExponentDigit
invalidHexDigitInIntegerLiteral
invalidIdentifierStartCharacter
invalidNumberOfHexDigitsInUnicodeEscape
invalidOctalDigitInIntegerLiteral
invalidUtf8
multilineRegexClosingNotOnNewline
nonBreakingSpace
nulCharacter
sourceConflictMarker
spaceAtEndOfRegexLiteral
spaceAtStartOfRegexLiteral
tokenDiagnosticOffsetOverflow
unexpectedBlockCommentEnd
unicodeCurlyQuote
unprintableAsciiCharacter
unterminatedBlockComment
Element
Iterator
node
viewMode
nextToken
endToken
startPosition
_syntaxNode
Element
Index
Iterator
SubSequence
Indices
ArrayLiteralElement
leading
trailing
pieces
offset
length
range
replacement
RawValue
__consuming
__owned
__setter_access
__shared
_alignment
_backDeploy
_borrow
_borrowing
_BridgeObject
_cdecl
_Class
_compilerInitialized
_const
_consuming
_documentation
_dynamicReplacement
_effects
_expose
_forward
_implements
_linear
_local
_modify
_move
_mutating
_NativeClass
_NativeRefCountedObject
_noMetadata
_nonSendable
_objcImplementation
_objcRuntimeName
_opaqueReturnTypeOf
_optimize
_originallyDefinedIn
_PackageDescription
_private
_projectedValueProperty
_read
_RefCountedObject
_semantics
_specialize
_spi
_spi_available
_swift_native_objc_runtime_base
_Trivial
_TrivialAtMost
_TrivialStride
_typeEraser
_unavailableFromAsync
_underlyingVersion
_UnknownLayout
_version
accesses
actor
addressWithNativeOwner
addressWithOwner
assignment
associatedtype
associativity
async
attached
autoclosure
availability
available
await
backDeployed
before
block
borrowing
break
canImport
case
catch
class
compiler
consume
copy
consuming
continue
convenience
convention
cType
default
defer
deinit
dependsOn
deprecated
derivative
didSet
differentiable
distributed
dynamic
each
else
enum
escaping
exclusivity
exported
extension
fallthrough
false
file
fileprivate
final
discard
forward
func
freestanding
guard
higherThan
import
indirect
infix
init
initializes
inline
inout
internal
introduced
isolated
kind
lazy
left
line
linear
lowerThan
macro
message
metadata
module
mutableAddressWithNativeOwner
mutableAddressWithOwner
mutating
noasync
noDerivative
noescape
none
nonisolated
nonmutating
objc
obsoleted
open
operator
optional
override
package
postfix
precedencegroup
preconcurrency
prefix
private
Protocol
protocol
public
reasync
renamed
repeat
required
_resultDependsOn
_resultDependsOnSelf
rethrows
retroactive
return
reverse
right
safe
scoped
self
sending
Self
Sendable
some
sourceFile
spiModule
static
struct
subscript
super
swift
switch
target
then
throw
throws
transferring
transpose
true
Type
typealias
unavailable
unchecked
unowned
unsafe
unsafeAddress
unsafeMutableAddress
visibility
weak
where
while
willSet
witness_method
yield
_syntaxNode
Iterator
Element
Index
SubSequence
Indices
ArrayLiteralElement
_syntaxNode
attribute
ifConfigDecl
precedenceGroupRelation
precedenceGroupAssignment
precedenceGroupAssociativity
labeledSpecializeArgument
specializeAvailabilityArgument
specializeTargetFunctionArgument
genericWhereClause
stringSegment
expressionSegment
switchCase
simpleTypeSpecifier
lifetimeTypeSpecifier
token
accessorBlock
accessorDeclList
accessorDecl
accessorEffectSpecifiers
accessorParameters
actorDecl
arrayElementList
arrayElement
arrayExpr
arrayType
arrowExpr
asExpr
assignmentExpr
associatedTypeDecl
attributeList
attribute
attributedType
availabilityArgumentList
availabilityArgument
availabilityCondition
availabilityLabeledArgument
awaitExpr
backDeployedAttributeArguments
binaryOperatorExpr
booleanLiteralExpr
borrowExpr
breakStmt
_canImportExpr
_canImportVersionInfo
catchClauseList
catchClause
catchItemList
catchItem
classDecl
classRestrictionType
closureCaptureClause
closureCaptureList
closureCaptureSpecifier
closureCapture
closureExpr
closureParameterClause
closureParameterList
closureParameter
closureShorthandParameterList
closureShorthandParameter
closureSignature
codeBlockItemList
codeBlockItem
codeBlock
compositionTypeElementList
compositionTypeElement
compositionType
conditionElementList
conditionElement
conformanceRequirement
consumeExpr
continueStmt
conventionAttributeArguments
conventionWitnessMethodAttributeArguments
copyExpr
declModifierDetail
declModifierList
declModifier
declNameArgumentList
declNameArgument
declNameArguments
declReferenceExpr
deferStmt
deinitializerDecl
deinitializerEffectSpecifiers
derivativeAttributeArguments
designatedTypeList
designatedType
dictionaryElementList
dictionaryElement
dictionaryExpr
dictionaryType
differentiabilityArgumentList
differentiabilityArgument
differentiabilityArguments
differentiabilityWithRespectToArgument
differentiableAttributeArguments
discardAssignmentExpr
discardStmt
doExpr
doStmt
documentationAttributeArgumentList
documentationAttributeArgument
dynamicReplacementAttributeArguments
editorPlaceholderDecl
editorPlaceholderExpr
effectsAttributeArgumentList
enumCaseDecl
enumCaseElementList
enumCaseElement
enumCaseParameterClause
enumCaseParameterList
enumCaseParameter
enumDecl
exposeAttributeArguments
exprList
expressionPattern
expressionSegment
expressionStmt
extensionDecl
fallThroughStmt
floatLiteralExpr
forStmt
forceUnwrapExpr
functionCallExpr
functionDecl
functionEffectSpecifiers
functionParameterClause
functionParameterList
functionParameter
functionSignature
functionType
genericArgumentClause
genericArgumentList
genericArgument
genericParameterClause
genericParameterList
genericParameter
genericRequirementList
genericRequirement
genericSpecializationExpr
genericWhereClause
guardStmt
identifierPattern
identifierType
ifConfigClauseList
ifConfigClause
ifConfigDecl
ifExpr
implementsAttributeArguments
implicitlyUnwrappedOptionalType
importDecl
importPathComponentList
importPathComponent
inOutExpr
infixOperatorExpr
inheritanceClause
inheritedTypeList
inheritedType
initializerClause
initializerDecl
integerLiteralExpr
isExpr
isTypePattern
keyPathComponentList
keyPathComponent
keyPathExpr
keyPathOptionalComponent
keyPathPropertyComponent
keyPathSubscriptComponent
labeledExprList
labeledExpr
labeledSpecializeArgument
labeledStmt
layoutRequirement
lifetimeSpecifierArgumentList
lifetimeSpecifierArgument
lifetimeTypeSpecifier
macroDecl
macroExpansionDecl
macroExpansionExpr
matchingPatternCondition
memberAccessExpr
memberBlockItemList
memberBlockItem
memberBlock
memberType
metatypeType
missingDecl
missingExpr
missingPattern
missingStmt
missing
missingType
multipleTrailingClosureElementList
multipleTrailingClosureElement
namedOpaqueReturnType
nilLiteralExpr
objCSelectorPieceList
objCSelectorPiece
opaqueReturnTypeOfAttributeArguments
operatorDecl
operatorPrecedenceAndTypes
optionalBindingCondition
optionalChainingExpr
optionalType
originallyDefinedInAttributeArguments
packElementExpr
packElementType
packExpansionExpr
packExpansionType
patternBindingList
patternBinding
patternExpr
platformVersionItemList
platformVersionItem
platformVersion
postfixIfConfigExpr
postfixOperatorExpr
poundSourceLocationArguments
poundSourceLocation
precedenceGroupAssignment
precedenceGroupAssociativity
precedenceGroupAttributeList
precedenceGroupDecl
precedenceGroupNameList
precedenceGroupName
precedenceGroupRelation
prefixOperatorExpr
primaryAssociatedTypeClause
primaryAssociatedTypeList
primaryAssociatedType
protocolDecl
regexLiteralExpr
repeatStmt
returnClause
returnStmt
sameTypeRequirement
sequenceExpr
simpleStringLiteralExpr
simpleStringLiteralSegmentList
simpleTypeSpecifier
someOrAnyType
sourceFile
specializeAttributeArgumentList
specializeAvailabilityArgument
specializeTargetFunctionArgument
stringLiteralExpr
stringLiteralSegmentList
stringSegment
structDecl
subscriptCallExpr
subscriptDecl
superExpr
suppressedType
switchCaseItemList
switchCaseItem
switchCaseLabel
switchCaseList
switchCase
switchDefaultLabel
switchExpr
ternaryExpr
thenStmt
throwStmt
throwsClause
tryExpr
tupleExpr
tuplePatternElementList
tuplePatternElement
tuplePattern
tupleTypeElementList
tupleTypeElement
tupleType
typeAliasDecl
typeAnnotation
typeEffectSpecifiers
typeExpr
typeInitializerClause
typeSpecifierList
unavailableFromAsyncAttributeArguments
underscorePrivateAttributeArguments
unexpectedNodes
unresolvedAsExpr
unresolvedIsExpr
unresolvedTernaryExpr
valueBindingPattern
variableDecl
versionComponentList
versionComponent
versionTuple
whereClause
whileStmt
wildcardPattern
yieldStmt
yieldedExpressionList
yieldedExpression
yieldedExpressionsClause
token
accessorBlock
accessorDeclList
accessorDecl
accessorEffectSpecifiers
accessorParameters
actorDecl
arrayElementList
arrayElement
arrayExpr
arrayType
arrowExpr
asExpr
assignmentExpr
associatedTypeDecl
attributeList
attribute
attributedType
availabilityArgumentList
availabilityArgument
availabilityCondition
availabilityLabeledArgument
awaitExpr
backDeployedAttributeArguments
binaryOperatorExpr
booleanLiteralExpr
borrowExpr
breakStmt
_canImportExpr
_canImportVersionInfo
catchClauseList
catchClause
catchItemList
catchItem
classDecl
classRestrictionType
closureCaptureClause
closureCaptureList
closureCaptureSpecifier
closureCapture
closureExpr
closureParameterClause
closureParameterList
closureParameter
closureShorthandParameterList
closureShorthandParameter
closureSignature
codeBlockItemList
codeBlockItem
codeBlock
compositionTypeElementList
compositionTypeElement
compositionType
conditionElementList
conditionElement
conformanceRequirement
consumeExpr
continueStmt
conventionAttributeArguments
conventionWitnessMethodAttributeArguments
copyExpr
declModifierDetail
declModifierList
declModifier
declNameArgumentList
declNameArgument
declNameArguments
declReferenceExpr
deferStmt
deinitializerDecl
deinitializerEffectSpecifiers
derivativeAttributeArguments
designatedTypeList
designatedType
dictionaryElementList
dictionaryElement
dictionaryExpr
dictionaryType
differentiabilityArgumentList
differentiabilityArgument
differentiabilityArguments
differentiabilityWithRespectToArgument
differentiableAttributeArguments
discardAssignmentExpr
discardStmt
doExpr
doStmt
documentationAttributeArgumentList
documentationAttributeArgument
dynamicReplacementAttributeArguments
editorPlaceholderDecl
editorPlaceholderExpr
effectsAttributeArgumentList
enumCaseDecl
enumCaseElementList
enumCaseElement
enumCaseParameterClause
enumCaseParameterList
enumCaseParameter
enumDecl
exposeAttributeArguments
exprList
expressionPattern
expressionSegment
expressionStmt
extensionDecl
fallThroughStmt
floatLiteralExpr
forStmt
forceUnwrapExpr
functionCallExpr
functionDecl
functionEffectSpecifiers
functionParameterClause
functionParameterList
functionParameter
functionSignature
functionType
genericArgumentClause
genericArgumentList
genericArgument
genericParameterClause
genericParameterList
genericParameter
genericRequirementList
genericRequirement
genericSpecializationExpr
genericWhereClause
guardStmt
identifierPattern
identifierType
ifConfigClauseList
ifConfigClause
ifConfigDecl
ifExpr
implementsAttributeArguments
implicitlyUnwrappedOptionalType
importDecl
importPathComponentList
importPathComponent
inOutExpr
infixOperatorExpr
inheritanceClause
inheritedTypeList
inheritedType
initializerClause
initializerDecl
integerLiteralExpr
isExpr
isTypePattern
keyPathComponentList
keyPathComponent
keyPathExpr
keyPathOptionalComponent
keyPathPropertyComponent
keyPathSubscriptComponent
labeledExprList
labeledExpr
labeledSpecializeArgument
labeledStmt
layoutRequirement
lifetimeSpecifierArgumentList
lifetimeSpecifierArgument
lifetimeTypeSpecifier
macroDecl
macroExpansionDecl
macroExpansionExpr
matchingPatternCondition
memberAccessExpr
memberBlockItemList
memberBlockItem
memberBlock
memberType
metatypeType
missingDecl
missingExpr
missingPattern
missingStmt
missing
missingType
multipleTrailingClosureElementList
multipleTrailingClosureElement
namedOpaqueReturnType
nilLiteralExpr
objCSelectorPieceList
objCSelectorPiece
opaqueReturnTypeOfAttributeArguments
operatorDecl
operatorPrecedenceAndTypes
optionalBindingCondition
optionalChainingExpr
optionalType
originallyDefinedInAttributeArguments
packElementExpr
packElementType
packExpansionExpr
packExpansionType
patternBindingList
patternBinding
patternExpr
platformVersionItemList
platformVersionItem
platformVersion
postfixIfConfigExpr
postfixOperatorExpr
poundSourceLocationArguments
poundSourceLocation
precedenceGroupAssignment
precedenceGroupAssociativity
precedenceGroupAttributeList
precedenceGroupDecl
precedenceGroupNameList
precedenceGroupName
precedenceGroupRelation
prefixOperatorExpr
primaryAssociatedTypeClause
primaryAssociatedTypeList
primaryAssociatedType
protocolDecl
regexLiteralExpr
repeatStmt
returnClause
returnStmt
sameTypeRequirement
sequenceExpr
simpleStringLiteralExpr
simpleStringLiteralSegmentList
simpleTypeSpecifier
someOrAnyType
sourceFile
specializeAttributeArgumentList
specializeAvailabilityArgument
specializeTargetFunctionArgument
stringLiteralExpr
stringLiteralSegmentList
stringSegment
structDecl
subscriptCallExpr
subscriptDecl
superExpr
suppressedType
switchCaseItemList
switchCaseItem
switchCaseLabel
switchCaseList
switchCase
switchDefaultLabel
switchExpr
ternaryExpr
thenStmt
throwStmt
throwsClause
tryExpr
tupleExpr
tuplePatternElementList
tuplePatternElement
tuplePattern
tupleTypeElementList
tupleTypeElement
tupleType
typeAliasDecl
typeAnnotation
typeEffectSpecifiers
typeExpr
typeInitializerClause
typeSpecifierList
unavailableFromAsyncAttributeArguments
underscorePrivateAttributeArguments
unexpectedNodes
unresolvedAsExpr
unresolvedIsExpr
unresolvedTernaryExpr
valueBindingPattern
variableDecl
versionComponentList
versionComponent
versionTuple
whereClause
whileStmt
wildcardPattern
yieldStmt
yieldedExpressionList
yieldedExpression
yieldedExpressionsClause
viewMode
visitChildren
skipChildren
viewMode
recyclableNodeInfos
recyclableNodeInfosUsageBitmap
RawValue
binaryOperator
dollarIdentifier
floatLiteral
identifier
integerLiteral
keyword
postfixOperator
prefixOperator
rawStringPoundDelimiter
regexLiteralPattern
regexPoundDelimiter
shebang
stringSegment
unknown
arrow
atSign
backslash
backtick
colon
comma
ellipsis
endOfFile
equal
exclamationMark
infixQuestionMark
leftAngle
leftBrace
leftParen
leftSquare
multilineStringQuote
period
postfixQuestionMark
pound
poundAvailable
poundElse
poundElseif
poundEndif
poundIf
poundSourceLocation
poundUnavailable
prefixAmpersand
regexSlash
rightAngle
rightBrace
rightParen
rightSquare
semicolon
singleQuote
stringQuote
wildcard
backslashes
blockComment
carriageReturns
carriageReturnLineFeeds
docBlockComment
docLineComment
formfeeds
lineComment
newlines
pounds
spaces
tabs
unexpectedText
verticalTabs
accessors
getter
attribute
ifConfigDecl
argumentList
token
string
availability
specializeArguments
objCName
implementsArguments
differentiableArguments
derivativeRegistrationArguments
backDeployedArguments
conventionArguments
conventionWitnessMethodArguments
opaqueReturnTypeOfAttributeArguments
exposeAttributeArguments
originallyDefinedInArguments
underscorePrivateAttributeArguments
dynamicReplacementArguments
unavailableFromAsyncArguments
effectsArguments
documentationArguments
availabilityVersionRestriction
availabilityLabeledArgument
version
simpleInput
parameterClause
decl
stmt
expr
expression
availability
matchingPattern
optionalBinding
colon
elements
argument
argumentList
token
string
sameTypeRequirement
conformanceRequirement
layoutRequirement
statements
switchCases
decls
postfixExpression
attributes
ifExpr
codeBlock
property
subscript
optional
precedenceGroupRelation
precedenceGroupAssignment
precedenceGroupAssociativity
labeledSpecializeArgument
specializeAvailabilityArgument
specializeTargetFunctionArgument
genericWhereClause
stringSegment
expressionSegment
switchCase
ifConfigDecl
default
case
simpleTypeSpecifier
lifetimeTypeSpecifier
multiple
single
_syntaxNode
accessors
getter
argumentList
token
string
availability
specializeArguments
objCName
implementsArguments
differentiableArguments
derivativeRegistrationArguments
backDeployedArguments
conventionArguments
conventionWitnessMethodArguments
opaqueReturnTypeOfAttributeArguments
exposeAttributeArguments
originallyDefinedInArguments
underscorePrivateAttributeArguments
dynamicReplacementArguments
unavailableFromAsyncArguments
effectsArguments
documentationArguments
availabilityVersionRestriction
availabilityLabeledArgument
version
_syntaxNode
simpleInput
parameterClause
decl
stmt
expr
expression
availability
matchingPattern
optionalBinding
_syntaxNode
colon
elements
argument
argumentList
token
string
_syntaxNode
_syntaxNode
sameTypeRequirement
conformanceRequirement
layoutRequirement
statements
switchCases
decls
postfixExpression
attributes
ifExpr
codeBlock
_syntaxNode
property
subscript
optional
_syntaxNode
_syntaxNode
default
case
_syntaxNode
multiple
single
BooleanLiteralType
FloatLiteralType
IntegerLiteralType
indentation
StringLiteralType
LiteralType
StringInterpolation
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
sourceText
lastIndentation
interpolatedSyntaxNodes
expectedType
actualType
diagnostics
tree
node
startIndex
endIndex
triviaContents
diagnosticID
severity
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
sourceText
FinalResult
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
indentationWidth
indentationStack
anchorPoints
previousToken
stringLiteralNestingLevel
previousTokenTrailingTrivia
spaceIndentedLines
tabIndentedLines
linesProcessed
private
fileprivate
internal
public
open
AllCases
attributes
modifier
kind
unexpectedBeforeToken
token
poundElseif
poundElse
pound
AllCases
dictionary
array
previousIncrementalParseResult
edits
reusedNodeCallback
editsNotConcurrent
transition
cursor
node
finished
viewMode
variableName
memberAccess
singleLine
multiLine
singleQuote
position
previousTokenKind
previousLexemeTrailingNewlinePresence
previousKeyword
stateStack
input
previous
absent
present
topState
afterRawStringDelimiter
inStringLiteral
afterStringLiteral
inStringInterpolationStart
inStringInterpolation
inRegexLiteral
normal
preferRegexOverBinaryOperator
afterClosingStringQuote
push
pushRegexLexemes
replace
kind
trivia
lexemeContents
tokenKind
flags
error
stateTransition
trailingTriviaLexingMode
keywordKind
trailingNewlinePresence
noNewlines
escapedNewlineInMultiLineStringLiteral
Element
RawValue
ArrayLiteralElement
rawTokenKind
flags
diagnostic
start
leadingTriviaByteLength
textByteLength
trailingTriviaByteLength
cursor
rawValue
Element
Iterator
sourceBufferStart
cursor
nextToken
lexerStateAllocator
lookaheadTracker
Element
Iterator
Index
SubSequence
Indices
kind
error
builder
openingPounds
openingSlash
pattern
closingSlash
closingPounds
numOpenPounds
patternByteLength
numClosePounds
_startInput
_patternErrorOffset
_patternErrorKind
_startPrevious
lexemeCount
RawValue
Token
skipSinglePost
skipUntil
skipSingle
lexemes
currentToken
tokensConsumed
swiftVersion
experimentalFeatures
leftParen
leftBrace
leftSquare
poundIf
poundElse
poundElseif
AllCases
private
fileprivate
internal
public
AllCases
PrimaryOrGenerics
ParameterSyntax
Parameters
tree
lookaheadRanges
Token
arena
lexemes
currentToken
nestingLevel
maximumNestingLevel
parseLookup
lookaheadRanges
lookaheadTrackerOwner
swiftVersion
experimentalFeatures
_emptyRawMultipleTrailingClosureElementListSyntax
_emptyRawDeclModifierListSyntax
_emptyRawAttributeListSyntax
_emptyRawTypeSpecifierListSyntax
furthestOffset
lookaheadTracker
AllCases
MisspelledAsyncTokenKinds
CorrectAsyncTokenKinds
MisspelledThrowsTokenKinds
CorrectThrowsTokenKinds
async
await
reasync
rethrows
throw
throws
asyncSpecifier
throwsSpecifier
expectedIndentation
arena
weakBracketed
openingBrace
unknownToken
identifierLike
exprKeyword
weakPunctuator
mediumPunctuator
weakBracketClose
stmtKeyword
strongPunctuator
closingBrace
declKeyword
openingPoundIf
closingPoundIf
rawTokenKind
keyword
remapping
recoveryPrecedence
allowAtStartOfLine
actor
associatedtype
case
class
deinit
enum
extension
func
import
init
macro
operator
precedencegroup
protocol
struct
subscript
typealias
pound
break
continue
defer
fallthrough
discard
guard
repeat
return
switch
then
throw
while
yield
default
__consuming
consuming
borrowing
mutating
nonmutating
binaryOperatorLike
postfixOperatorLike
prefixOperator
binaryOperator
infixQuestionMark
equal
arrow
postfixOperator
exclamationMark
postfixQuestionMark
__setter_access
_const
_local
async
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
nonisolated
open
optional
override
package
postfix
prefix
private
public
reasync
required
rethrows
sending
static
transferring
unowned
weak
_resultDependsOn
_resultDependsOnSelf
declarationModifier
declarationKeyword
AllCases
Element
RawValue
ArrayLiteralElement
rawValue
AllCases
didSet
willSet
unsafeAddress
addressWithOwner
addressWithNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
_read
_modify
init
postfixQuestionMark
exclamationMark
poundAvailable
poundUnavailable
message
renamed
introduced
obsoleted
deprecated
true
false
_version
_underlyingVersion
weak
unowned
safe
unsafe
identifier
wildcard
_move
consume
__consuming
__setter_access
_const
_local
actor
async
borrowing
class
consuming
convenience
distributed
dynamic
fileprivate
final
indirect
infix
internal
isolated
lazy
mutating
nonisolated
nonmutating
open
optional
override
package
postfix
prefix
private
public
reasync
_resultDependsOnSelf
required
static
transferring
sending
self
Self
deinit
subscript
dollarIdentifier
binaryOperator
integerLiteral
_forward
reverse
_linear
visibility
metadata
prefixOperator
postfixOperator
poundIf
poundElseif
poundElse
typealias
struct
enum
protocol
func
inout
target
availability
exported
kind
spiModule
_Trivial
_TrivialAtMost
_UnknownLayout
_RefCountedObject
_NativeRefCountedObject
_Class
_NativeClass
_BridgeObject
_TrivialStride
Type
Protocol
_mutating
_borrowing
_consuming
left
right
none
higherThan
lowerThan
stringQuote
multilineStringQuote
__shared
__owned
_resultDependsOn
some
singleQuote
throws
rethrows
diagMessage
node
position
highlights
notes
fixIts
diagnostics
contextSize
diagnosticDecorator
diagnostics
sourceString
suffixText
message
changes
replace
replaceLeadingTrivia
replaceTrailingTrivia
sourceFiles
rootIndexes
tree
sourceLocationConverter
displayName
parent
children
diagnostics
domain
error
warning
note
remark
node
position
noteMessage
primitiveChanges
RawValue
editorPlaceholder
equalMustHaveConsistentWhitespaceOnBothSides
expectedBinaryExponentInHexFloatLiteral
expectedClosingBraceInUnicodeEscape
expectedDigitInFloatLiteral
expectedHexCodeInUnicodeEscape
expectedHexDigitInHexLiteral
invalidCharacter
invalidEscapeSequenceInStringLiteral
invalidIdentifierStartCharacter
invalidNumberOfHexDigitsInUnicodeEscape
invalidUtf8
tokenDiagnosticOffsetOverflow
sourceConflictMarker
unexpectedBlockCommentEnd
unicodeCurlyQuote
spaceAtStartOfRegexLiteral
spaceAtEndOfRegexLiteral
multilineRegexClosingNotOnNewline
unprintableAsciiCharacter
unterminatedBlockComment
nonBreakingSpace
nulCharacter
tokenText
kind
digit
character
binary
octal
decimal
error
hasToken
missingNodes
openingToken
tokensWithDefaultText
tokenWithoutDefaultText
node
closeQuote
finishedDiagnostics
inProgressDiagnostic
anchor
position
kind
lines
changes
handledNodes
diagnostics
handledNodes
suppressRemainingDiagnostics
message
messageID
asyncKeywords
throwsKeyword
availabilityToken
negatedAvailabilityToken
availabilityCondition
versionTuple
name
params
returnClause
correctSpecifier
unexpectedSpecifier
effectsSpecifiersAfterArrow
extraneousCode
tokenWithWhitespace
identifier
decimalDigits
invalidIdentifier
missingIdentifier
kind
lines
insufficientIndentation
unexpectedSpace
unexpectedTab
attributeName
stringSegments
node
negatedAvailabilityKeyword
firstToken
additionalTokens
misplacedSpecifiers
tokens
major
components
severity
nextToken
unexpectedNodes
unexpected
parameter
validParameters
specifier
tokenToBeInserted
movedTokens
after
inFrontOf
removeTokens
nodesToRemove
replaceTokens
replacements
hasPresentToken
RawValue
infix
prefix
postfix
kind
name
precedenceGroup
syntax
groupAlreadyExists
missingGroup
operatorAlreadyExists
missingOperator
incomparableOperators
firstFatalError
opPrecedence
errorHandler
opPrecedence
errors
precedenceGraph
infixOperators
prefixOperators
postfixOperators
precedenceGroups
RawValue
none
left
right
kind
groupName
syntax
higherThan
lowerThan
name
associativity
assignment
relations
_rawValue
RawValue
_ObjectiveCType
RawValue
version
rules
maximumBlankLines
lineLength
tabWidth
indentation
respectsExistingLineBreaks
lineBreakBeforeControlFlowKeywords
lineBreakBeforeEachArgument
lineBreakBeforeEachGenericRequirement
prioritizeKeepingFunctionOutputTogether
indentConditionalCompilationBlocks
lineBreakAroundMultilineExpressionChainComponents
fileScopedDeclarationPrivacy
indentSwitchCaseLabels
spacesAroundRangeFormationOperators
noAssignmentInExpressions
multiElementCollectionTrailingCommas
accessLevel
private
fileprivate
allowedFunctions
Element
RawValue
ArrayLiteralElement
rawValue
StringLiteralType
StringInterpolation
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
category
message
severity
location
notes
warning
error
refactoring
convention
file
line
column
text
tabs
spaces
fileNotReadable
isDirectory
fileContainsInvalidSyntax
configuration
findingConsumer
debugOptions
configuration
findingConsumer
debugOptions
configuration
operatorTable
findingEmitter
fileURL
importsXCTest
sourceLocationConverter
ruleMask
ruleNameCache
notDetermined
doesNotImportXCTest
briefSummary
bodyNodes
parameterLayout
parameters
returns
throws
name
comment
outline
separated
mixed
origin
fieldName
paragraph
expectParameterLabel
parameterName
Result
text
startIndex
introducer
line
block
mixed
firstNonspaceDistance
consumer
context
originalDiagnostic
context
ruleCache
shouldSkipChildren
leadingTrivia
trailingTrivia
start
ruleType
severity
allRulesIgnoredRanges
ruleMap
sourceLocationConverter
ignorePattern
ignoreRegex
ignoreFilePattern
ignoreFileRegex
subset
default
disabled
context
context
kind
text
length
line
docLine
block
docBlock
context
maxLineLength
tokens
outputBuffer
spaceRemaining
lengths
lastBreak
forceBreakStack
printTokenStream
whitespaceOnly
activeOpenBreaks
activeBreakingContexts
lastEndedBreakingContext
lineNumber
currentLineIsContinuation
continuationStack
commaDelimitedRegionStack
consecutiveNewlineCount
pendingSpaces
isAtStartOfLine
activeBreakSuppressionCount
allowSuppressedDiscretionaryBreaks
debugIndent
index
kind
contributesContinuationIndent
contributesBlockIndent
contextualBreakingBehavior
unset
continuation
maintain
endOfLineComment
trailingComma
syntax
open
break
space
comment
verbatim
printerControl
commaDelimitedRegionEnd
close
commaDelimitedRegionStart
contextualBreakingStart
contextualBreakingEnd
continue
same
reset
contextual
consistent
inconsistent
elective
soft
hard
disableBreaking
enableBreaking
block
continuation
tokens
beforeMap
afterMap
config
operatorTable
maxlinelength
lastBreakIndex
canMergeNewlinesIntoLastBreak
pendingMultilineStringBreakKinds
ignoredTokens
preVisitedExprs
rootExprs
closingDelimiterTokens
forcedBreakingClosures
openings
indentingBehavior
lines
leadingWhitespaceCounts
none
allLines
firstLine
trailingWhitespace
indentation
spacing
spacingCharacter
removeLine
addLines
lineLength
userText
formattedText
context
isLineTooLong
homogeneous
heterogeneous
none
testCaseFuncs
regularImport
declImport
testableImport
codeBlock
comment
blankLine
leadingTrivia
trailingTrivia
syntaxNode
nonImportCodeBlocks
importCodeBlock
RawValue
AllCases
rawValue
Value
_parsedValue
base
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
abstract
discussion
valueName
visibility
base
default
hidden
private
kind
list
file
shellCommand
custom
default
directory
RawValue
message
rawValue
base
helpRequest
dumpRequest
Value
_parsedValue
base
prefixedNo
prefixedEnableDisable
exclusive
chooseFirst
chooseLast
ArrayLiteralElement
elements
base
customLong
customShort
long
short
Value
_parsedValue
base
Value
_parsedValue
_visibility
_dummy
title
commandName
_superCommandName
abstract
usage
discussion
version
shouldDisplay
subcommands
defaultSubcommand
helpNames
_options
options
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
underlying
parsedElement
type
value
wrongKeyType
topLevelHasNoUnkeyedContainer
topLevelHasNoSingleValueContainer
singleValueDecoderHasNoContainer
base
currentIndex
array
Contained
Initial
default
scanningForValue
unconditional
upToNextOption
allRemainingInput
postTerminator
allUnrecognized
kind
help
completion
parsingStrategy
update
initial
options
defaultValue
keys
allValues
isComposite
abstract
discussion
valueName
visibility
parentTitle
nullary
unary
named
positional
rawValue
ArrayLiteralElement
Element
RawValue
Element
Iterator
Index
SubSequence
Indices
content
namePositions
commandStack
parserError
visibility
_generateCompletionScript
generateCompletionScript
name
path
_elements
ArrayLiteralElement
argumentIndex
defaultValue
long
short
longWithSingleDash
value
definition
value
inputOrigin
shouldClearArrayIfParsed
elements
originalInput
capturedUnrecognizedArguments
helpRequested
completionScriptRequested
completionScriptCustomResponse
unsupportedShell
unknownOption
invalidOption
nonAlphanumericShortOption
missingValueForOption
unexpectedValueForOption
unexpectedExtraValues
duplicateExclusiveValues
noValue
unableToParseValue
userValidationError
noArguments
versionRequested
dumpHelpRequested
notImplemented
invalidState
missingSubcommand
wrongType
subcommandLevelMismatch
subcommandLevelMissing
subcommandLevelDuplicated
subcommandNameMismatch
expectedCommandButNoneFound
_elements
firstUnused
originalInput
inputIndex
subIndex
value
index
option
terminator
name
nameWithValue
rawValue
RawValue
complete
_subcommands
_help
commandStack
visibility
subcommands
help
header
elements
discussion
isSubcommands
commandStack
abstract
usage
sections
discussionSections
label
title
positionalArguments
subcommands
options
content
help
validation
other
element
parent
children
recursiveSubcommand
RawValue
serializationVersion
command
superCommands
commandName
abstract
discussion
defaultSubcommand
subcommands
arguments
kind
shouldDisplay
sectionTitle
isOptional
isRepeating
names
preferredName
valueName
defaultValue
allValues
name
long
short
longWithSingleDash
positional
option
flag
_TtC12swift_format14FormatFrontend
inPlace
Unable to format 
: file is not readable or does not exist.
_TtC12swift_format8Frontend
diagnosticPrinter
diagnosticsEngine
lintFormatOptions
configurationLoader
_TtCC12swift_format8Frontend13FileToProcess
fileHandle
$__lazy_storage_$_sourceText
swift_format/Frontend.swift
Must be overridden by subclasses.
Configuration contains an unrecognized rule: 
Unable to read configuration for 
Unable to read configuration: 
: file is not readable or does not exist
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/swift-format/Sources/swift-format/Frontend/Frontend.swift
processURLs(_:) should only be called when 'urls' is non-empty.
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
v8@?0
_TtC12swift_format12LintFrontend
Could not dump the default configuration: 
Could not dump the default configuration: the JSON was not valid UTF-8
Dump the default configuration in JSON format to standard output
Format Swift source code
When no files are specified, it expects the source from standard input.
'--in-place' is only valid when formatting files
Overwrite the current file when formatting.
performanceMeasurementOptions
Diagnose style issues in Swift source code
Fail on warnings.
' is a path to a directory, not a Swift source file.
Use the '--recursive' option to handle directories.
'--assume-filename' is only valid when reading from stdin
'--recursive' is only valid when formatting or linting files
The path to a JSON file containing the configuration of the linter/formatter or a JSON string containing the configuration directly.
When using standard input, the filename of the source to include in diagnostics.
Recursively run on '.swift' files in any provided directories.
Ignores unparsable files, disabling all diagnostics and formatting for files that contain invalid syntax.
Process files in parallel, simultaneously across multiple cores.
Enables or disables color diagnostics when printing to standard error. The default behavior if this flag is omitted is to use colors if standard error is connected to a terminal, and to not use colors otherwise.
Follow symbolic links passed on the command line, or found during directory traversal when using `-r/--recursive`.
Zero or more input filenames.
ignoreUnparsableFiles
colorDiagnostics
debugDisablePrettyPrint
debugDumpTokenStream
Instructions executed: 
Measure number of instructions executed by swift-format
measureInstructions
Format or lint Swift source code
_TtC12swift_format17DiagnosticsEngine
handlers
hasErrors
hasWarnings
_TtC12swift_format23StderrDiagnosticPrinter
printQueue
useColors
com.apple.swift-format.StderrDiagnosticPrinter
Print the version and exit
document
block_quote
list
item
code_block
html_block
custom_block
paragraph
heading
thematic_break
text
softbreak
linebreak
code
html_inline
custom_inline
emph
strong
link
image
attribute
NONE
<unknown>
table_header
table_row
table_cell
NonMutatingVariant
when-language-present
always
never
setext
soft-break
hard-break
Markdown/Document.swift
Markdown/Text.swift
_TtC8Markdown9RawMarkup
Markdown/BlockDirective.swift
 markup wrapped unexpected 
Markdown/BlockQuote.swift
Markdown/CustomBlock.swift
Markdown/DoxygenParameter.swift
Fatal error
Markdown/DoxygenReturns.swift
Markdown/ListItem.swift
Markdown/OrderedList.swift
Markdown/UnorderedList.swift
Markdown/Paragraph.swift
Markdown/CodeBlock.swift
Markdown/HTMLBlock.swift
Markdown/Heading.swift
Markdown/ThematicBreak.swift
Markdown/Table.swift
Markdown/TableBody.swift
Markdown/TableCell.swift
Markdown/TableHead.swift
Markdown/TableRow.swift
Markdown/Emphasis.swift
Markdown/Image.swift
Markdown/InlineAttributes.swift
Markdown/Link.swift
Markdown/Strikethrough.swift
Markdown/Strong.swift
Markdown/CustomInline.swift
Markdown/InlineCode.swift
Markdown/InlineHTML.swift
Markdown/LineBreak.swift
Markdown/SoftBreak.swift
Markdown/SymbolLink.swift
Mutating Variant
Non-Mutating Variant
* Doxygen command 
* Block directive '
'param' Argument: '
Markdown/BlockDirectiveParser.swift
Tried to convert a non-root container to a `Document`
Conversion from ParseContainer.document to RawMarkup.document failed
Doxygen commands cannot have children
Line runs cannot have children
Cannot push additional document containers onto the parse container stack
A closed block directive container cannot accept further lines of content.
Non-whitespace character found while calculating equivalent indentation column count
table
strikethrough
tasklist
Markdown/CommonMarkConverter.swift
Unknown cmark node type '
' encountered during conversion
cmark top-level conversion didn't produce a RawMarkup.document
Converted cmark list had a node other than RawMarkup.listItem
cmark reported a list node but said its list type is CMARK_NO_LIST?
Expected literal content for cmark node but got null pointer
Unexpected table column character for cmark table: 
Markdown/MarkupFormatter.swift
Formatter not implemented for 
Unexpected heading level 
 while formatting for setext-style heading
visitTableHead(_:)
 directly; markdown tables must be formatted as a single unit. Call `visitTable` on the parent table
visitTableBody(_:)
visitTableRow(_:)
visitTableCell(_:)
customInline.text
 Argument text segments:
finalize
blocks.c
b->flags & CMARK_NODE__OPEN
pos < node_content->size
parse_html_block_prefix
html_block_type >= 1 && html_block_type <= 7
add_text_to_container
parser->current != NULL
add_line
node->flags & CMARK_NODE__OPEN
cmark_chunk_rtrim
chunk.h
!c->alloc
add_child
parent
cmark_strbuf_grow
buffer.c
target_size > 0
[cmark] cmark_strbuf_grow requests buffer with size > %d, aborting
cmark_strbuf_copy_cstr
0.29.0.gfm.0
[cmark] calloc returned null pointer, aborting
[cmark] realloc returned null pointer, aborting
%%%2X
&#%d;
<!-- end list -->
%d%s%s
  - 
    
-----
mailto:
S_render_node
commonmark.c
cmark_footnote_create
footnotes.c
map->sorted == NULL
0123456789ABCDEF
&amp;
&#x27;
&quot;
&#39;
&#47;
&lt;
&gt;
0123456789ABCDEFabcdef
AElig
Aacute
Abreve
Acirc
Agrave
Alpha
Amacr
Aogon
Aopf
ApplyFunction
Aring
Ascr
Assign
Atilde
Auml
Backslash
Barv
Barwed
Because
Bernoullis
Beta
Bopf
Breve
Bscr
Bumpeq
CHcy
COPY
Cacute
CapitalDifferentialD
Cayleys
Ccaron
Ccedil
Ccirc
Cconint
Cdot
Cedilla
CenterDot
CircleDot
CircleMinus
CirclePlus
CircleTimes
ClockwiseContourIntegral
CloseCurlyDoubleQuote
CloseCurlyQuote
Colon
Colone
Congruent
Conint
ContourIntegral
Copf
Coproduct
CounterClockwiseContourIntegral
Cross
Cscr
CupCap
DDotrahd
DJcy
DScy
DZcy
Dagger
Darr
Dashv
Dcaron
Delta
DiacriticalAcute
DiacriticalDot
DiacriticalDoubleAcute
DiacriticalGrave
DiacriticalTilde
Diamond
DifferentialD
Dopf
DotDot
DotEqual
DoubleContourIntegral
DoubleDot
DoubleDownArrow
DoubleLeftArrow
DoubleLeftRightArrow
DoubleLeftTee
DoubleLongLeftArrow
DoubleLongLeftRightArrow
DoubleLongRightArrow
DoubleRightArrow
DoubleRightTee
DoubleUpArrow
DoubleUpDownArrow
DoubleVerticalBar
DownArrow
DownArrowBar
DownArrowUpArrow
DownBreve
DownLeftRightVector
DownLeftTeeVector
DownLeftVector
DownLeftVectorBar
DownRightTeeVector
DownRightVector
DownRightVectorBar
DownTee
DownTeeArrow
Downarrow
Dscr
Dstrok
Eacute
Ecaron
Ecirc
Edot
Egrave
Element
Emacr
EmptySmallSquare
EmptyVerySmallSquare
Eogon
Eopf
Epsilon
Equal
EqualTilde
Equilibrium
Escr
Esim
Euml
Exists
ExponentialE
FilledSmallSquare
FilledVerySmallSquare
Fopf
ForAll
Fouriertrf
Fscr
GJcy
Gamma
Gammad
Gbreve
Gcedil
Gcirc
Gdot
Gopf
GreaterEqual
GreaterEqualLess
GreaterFullEqual
GreaterGreater
GreaterLess
GreaterSlantEqual
GreaterTilde
Gscr
HARDcy
Hacek
Hcirc
HilbertSpace
Hopf
HorizontalLine
Hscr
Hstrok
HumpDownHump
HumpEqual
IEcy
IJlig
IOcy
Iacute
Icirc
Idot
Igrave
Imacr
ImaginaryI
Implies
Integral
Intersection
InvisibleComma
InvisibleTimes
Iogon
Iopf
Iota
Iscr
Itilde
Iukcy
Iuml
Jcirc
Jopf
Jscr
Jsercy
Jukcy
KHcy
KJcy
Kappa
Kcedil
Kopf
Kscr
LJcy
Lacute
Lambda
Lang
Laplacetrf
Larr
Lcaron
Lcedil
LeftAngleBracket
LeftArrow
LeftArrowBar
LeftArrowRightArrow
LeftCeiling
LeftDoubleBracket
LeftDownTeeVector
LeftDownVector
LeftDownVectorBar
LeftFloor
LeftRightArrow
LeftRightVector
LeftTee
LeftTeeArrow
LeftTeeVector
LeftTriangle
LeftTriangleBar
LeftTriangleEqual
LeftUpDownVector
LeftUpTeeVector
LeftUpVector
LeftUpVectorBar
LeftVector
LeftVectorBar
Leftarrow
Leftrightarrow
LessEqualGreater
LessFullEqual
LessGreater
LessLess
LessSlantEqual
LessTilde
Lleftarrow
Lmidot
LongLeftArrow
LongLeftRightArrow
LongRightArrow
Longleftarrow
Longleftrightarrow
Longrightarrow
Lopf
LowerLeftArrow
LowerRightArrow
Lscr
Lstrok
MediumSpace
Mellintrf
MinusPlus
Mopf
Mscr
NJcy
Nacute
Ncaron
Ncedil
NegativeMediumSpace
NegativeThickSpace
NegativeThinSpace
NegativeVeryThinSpace
NestedGreaterGreater
NestedLessLess
NewLine
NoBreak
NonBreakingSpace
Nopf
NotCongruent
NotCupCap
NotDoubleVerticalBar
NotElement
NotEqual
NotEqualTilde
NotExists
NotGreater
NotGreaterEqual
NotGreaterFullEqual
NotGreaterGreater
NotGreaterLess
NotGreaterSlantEqual
NotGreaterTilde
NotHumpDownHump
NotHumpEqual
NotLeftTriangle
NotLeftTriangleBar
NotLeftTriangleEqual
NotLess
NotLessEqual
NotLessGreater
NotLessLess
NotLessSlantEqual
NotLessTilde
NotNestedGreaterGreater
NotNestedLessLess
NotPrecedes
NotPrecedesEqual
NotPrecedesSlantEqual
NotReverseElement
NotRightTriangle
NotRightTriangleBar
NotRightTriangleEqual
NotSquareSubset
NotSquareSubsetEqual
NotSquareSuperset
NotSquareSupersetEqual
NotSubset
NotSubsetEqual
NotSucceeds
NotSucceedsEqual
NotSucceedsSlantEqual
NotSucceedsTilde
NotSuperset
NotSupersetEqual
NotTilde
NotTildeEqual
NotTildeFullEqual
NotTildeTilde
NotVerticalBar
Nscr
Ntilde
OElig
Oacute
Ocirc
Odblac
Ograve
Omacr
Omega
Omicron
Oopf
OpenCurlyDoubleQuote
OpenCurlyQuote
Oscr
Oslash
Otilde
Otimes
Ouml
OverBar
OverBrace
OverBracket
OverParenthesis
PartialD
PlusMinus
Poincareplane
Popf
Precedes
PrecedesEqual
PrecedesSlantEqual
PrecedesTilde
Prime
Product
Proportion
Proportional
Pscr
QUOT
Qopf
Qscr
RBarr
Racute
Rang
Rarr
Rarrtl
Rcaron
Rcedil
ReverseElement
ReverseEquilibrium
ReverseUpEquilibrium
RightAngleBracket
RightArrow
RightArrowBar
RightArrowLeftArrow
RightCeiling
RightDoubleBracket
RightDownTeeVector
RightDownVector
RightDownVectorBar
RightFloor
RightTee
RightTeeArrow
RightTeeVector
RightTriangle
RightTriangleBar
RightTriangleEqual
RightUpDownVector
RightUpTeeVector
RightUpVector
RightUpVectorBar
RightVector
RightVectorBar
Rightarrow
Ropf
RoundImplies
Rrightarrow
Rscr
RuleDelayed
SHCHcy
SHcy
SOFTcy
Sacute
Scaron
Scedil
Scirc
ShortDownArrow
ShortLeftArrow
ShortRightArrow
ShortUpArrow
Sigma
SmallCircle
Sopf
Sqrt
Square
SquareIntersection
SquareSubset
SquareSubsetEqual
SquareSuperset
SquareSupersetEqual
SquareUnion
Sscr
Star
Subset
SubsetEqual
Succeeds
SucceedsEqual
SucceedsSlantEqual
SucceedsTilde
SuchThat
Superset
SupersetEqual
Supset
THORN
TRADE
TSHcy
TScy
Tcaron
Tcedil
Therefore
Theta
ThickSpace
ThinSpace
Tilde
TildeEqual
TildeFullEqual
TildeTilde
Topf
TripleDot
Tscr
Tstrok
Uacute
Uarr
Uarrocir
Ubrcy
Ubreve
Ucirc
Udblac
Ugrave
Umacr
UnderBar
UnderBrace
UnderBracket
UnderParenthesis
Union
UnionPlus
Uogon
Uopf
UpArrow
UpArrowBar
UpArrowDownArrow
UpDownArrow
UpEquilibrium
UpTee
UpTeeArrow
Uparrow
Updownarrow
UpperLeftArrow
UpperRightArrow
Upsi
Upsilon
Uring
Uscr
Utilde
Uuml
VDash
Vbar
Vdash
Vdashl
Verbar
Vert
VerticalBar
VerticalLine
VerticalSeparator
VerticalTilde
VeryThinSpace
Vopf
Vscr
Vvdash
Wcirc
Wedge
Wopf
Wscr
Xopf
Xscr
YAcy
YIcy
YUcy
Yacute
Ycirc
Yopf
Yscr
Yuml
ZHcy
Zacute
Zcaron
Zdot
ZeroWidthSpace
Zeta
Zopf
Zscr
aacute
abreve
acirc
acute
aelig
agrave
alefsym
aleph
alpha
amacr
amalg
andand
andd
andslope
andv
ange
angle
angmsd
angmsdaa
angmsdab
angmsdac
angmsdad
angmsdae
angmsdaf
angmsdag
angmsdah
angrt
angrtvb
angrtvbd
angsph
angst
angzarr
aogon
aopf
apacir
apid
apos
approx
approxeq
aring
ascr
asymp
asympeq
atilde
auml
awconint
awint
bNot
backcong
backepsilon
backprime
backsim
backsimeq
barvee
barwed
barwedge
bbrk
bbrktbrk
bcong
bdquo
becaus
because
bemptyv
bepsi
bernou
beta
beth
between
bigcap
bigcirc
bigcup
bigodot
bigoplus
bigotimes
bigsqcup
bigstar
bigtriangledown
bigtriangleup
biguplus
bigvee
bigwedge
bkarow
blacklozenge
blacksquare
blacktriangle
blacktriangledown
blacktriangleleft
blacktriangleright
blank
blk12
blk14
blk34
bnequiv
bnot
bopf
bottom
bowtie
boxDL
boxDR
boxDl
boxDr
boxH
boxHD
boxHU
boxHd
boxHu
boxUL
boxUR
boxUl
boxUr
boxV
boxVH
boxVL
boxVR
boxVh
boxVl
boxVr
boxbox
boxdL
boxdR
boxdl
boxdr
boxh
boxhD
boxhU
boxhd
boxhu
boxminus
boxplus
boxtimes
boxuL
boxuR
boxul
boxur
boxv
boxvH
boxvL
boxvR
boxvh
boxvl
boxvr
bprime
breve
brvbar
bscr
bsemi
bsim
bsime
bsol
bsolb
bsolhsub
bull
bullet
bump
bumpE
bumpe
bumpeq
cacute
capand
capbrcup
capcap
capcup
capdot
caps
caret
caron
ccaps
ccaron
ccedil
ccirc
ccups
ccupssm
cdot
cedil
cemptyv
cent
centerdot
chcy
check
checkmark
cirE
circ
circeq
circlearrowleft
circlearrowright
circledR
circledS
circledast
circledcirc
circleddash
cire
cirfnint
cirmid
cirscir
clubs
clubsuit
colon
colone
coloneq
comma
commat
comp
compfn
complement
complexes
cong
congdot
conint
copf
coprod
copysr
crarr
cross
cscr
csub
csube
csup
csupe
ctdot
cudarrl
cudarrr
cuepr
cuesc
cularr
cularrp
cupbrcap
cupcap
cupcup
cupdot
cupor
cups
curarr
curarrm
curlyeqprec
curlyeqsucc
curlyvee
curlywedge
curren
curvearrowleft
curvearrowright
cuvee
cuwed
cwconint
cwint
cylcty
dArr
dHar
dagger
daleth
darr
dash
dashv
dbkarow
dblac
dcaron
ddagger
ddarr
ddotseq
delta
demptyv
dfisht
dharl
dharr
diam
diamond
diamondsuit
diams
digamma
disin
divide
divideontimes
divonx
djcy
dlcorn
dlcrop
dollar
dopf
doteq
doteqdot
dotminus
dotplus
dotsquare
doublebarwedge
downarrow
downdownarrows
downharpoonleft
downharpoonright
drbkarow
drcorn
drcrop
dscr
dscy
dsol
dstrok
dtdot
dtri
dtrif
duarr
duhar
dwangle
dzcy
dzigrarr
eDDot
eDot
eacute
easter
ecaron
ecir
ecirc
ecolon
edot
efDot
egrave
egsdot
elinters
elsdot
emacr
empty
emptyset
emptyv
emsp
emsp13
emsp14
ensp
eogon
eopf
epar
eparsl
eplus
epsi
epsilon
epsiv
eqcirc
eqcolon
eqsim
eqslantgtr
eqslantless
equals
equest
equiv
equivDD
eqvparsl
erDot
erarr
escr
esdot
esim
euml
euro
excl
exist
expectation
exponentiale
fallingdotseq
female
ffilig
fflig
ffllig
filig
fjlig
flat
fllig
fltns
fnof
fopf
forall
fork
forkv
fpartint
frac12
frac13
frac14
frac15
frac16
frac18
frac23
frac25
frac34
frac35
frac38
frac45
frac56
frac58
frac78
frasl
frown
fscr
gacute
gamma
gammad
gbreve
gcirc
gdot
geqq
geqslant
gescc
gesdot
gesdoto
gesdotol
gesl
gesles
gimel
gjcy
gnap
gnapprox
gneq
gneqq
gnsim
gopf
grave
gscr
gsim
gsime
gsiml
gtcc
gtcir
gtdot
gtlPar
gtquest
gtrapprox
gtrarr
gtrdot
gtreqless
gtreqqless
gtrless
gtrsim
gvertneqq
gvnE
hArr
hairsp
half
hamilt
hardcy
harr
harrcir
harrw
hbar
hcirc
hearts
heartsuit
hellip
hercon
hksearow
hkswarow
hoarr
homtht
hookleftarrow
hookrightarrow
hopf
horbar
hscr
hslash
hstrok
hybull
hyphen
iacute
icirc
iecy
iexcl
igrave
iiiint
iiint
iinfin
iiota
ijlig
imacr
imagline
imagpart
imath
imof
imped
incare
infin
infintie
inodot
intcal
integers
intercal
intlarhk
intprod
iocy
iogon
iopf
iota
iprod
iquest
iscr
isin
isinE
isindot
isins
isinsv
isinv
itilde
iukcy
iuml
jcirc
jmath
jopf
jscr
jsercy
jukcy
kappa
kappav
kcedil
kgreen
khcy
kjcy
kopf
kscr
lAarr
lArr
lAtail
lBarr
lHar
lacute
laemptyv
lagran
lambda
lang
langd
langle
laquo
larr
larrb
larrbfs
larrfs
larrhk
larrlp
larrpl
larrsim
larrtl
latail
late
lates
lbarr
lbbrk
lbrace
lbrack
lbrke
lbrksld
lbrkslu
lcaron
lcedil
lceil
lcub
ldca
ldquo
ldquor
ldrdhar
ldrushar
ldsh
leftarrow
leftarrowtail
leftharpoondown
leftharpoonup
leftleftarrows
leftrightarrow
leftrightarrows
leftrightharpoons
leftrightsquigarrow
leftthreetimes
leqq
leqslant
lescc
lesdot
lesdoto
lesdotor
lesg
lesges
lessapprox
lessdot
lesseqgtr
lesseqqgtr
lessgtr
lesssim
lfisht
lfloor
lhard
lharu
lharul
lhblk
ljcy
llarr
llcorner
llhard
lltri
lmidot
lmoust
lmoustache
lnap
lnapprox
lneq
lneqq
lnsim
loang
loarr
lobrk
longleftarrow
longleftrightarrow
longmapsto
longrightarrow
looparrowleft
looparrowright
lopar
lopf
loplus
lotimes
lowast
lowbar
lozenge
lozf
lpar
lparlt
lrarr
lrcorner
lrhar
lrhard
lrtri
lsaquo
lscr
lsim
lsime
lsimg
lsqb
lsquo
lsquor
lstrok
ltcc
ltcir
ltdot
lthree
ltimes
ltlarr
ltquest
ltrPar
ltri
ltrie
ltrif
lurdshar
luruhar
lvertneqq
lvnE
mDDot
macr
male
malt
maltese
mapsto
mapstodown
mapstoleft
mapstoup
marker
mcomma
mdash
measuredangle
micro
midast
midcir
middot
minus
minusb
minusd
minusdu
mlcp
mldr
mnplus
models
mopf
mscr
mstpos
multimap
mumap
nGtv
nLeftarrow
nLeftrightarrow
nLtv
nRightarrow
nVDash
nVdash
nabla
nacute
nang
napE
napid
napos
napprox
natur
natural
naturals
nbsp
nbump
nbumpe
ncap
ncaron
ncedil
ncong
ncongdot
ncup
ndash
neArr
nearhk
nearr
nearrow
nedot
nequiv
nesear
nesim
nexist
nexists
ngeq
ngeqq
ngeqslant
nges
ngsim
ngtr
nhArr
nharr
nhpar
nisd
njcy
nlArr
nlarr
nldr
nleftarrow
nleftrightarrow
nleq
nleqq
nleqslant
nles
nless
nlsim
nltri
nltrie
nmid
nopf
notin
notinE
notindot
notinva
notinvb
notinvc
notni
notniva
notnivb
notnivc
npar
nparallel
nparsl
npart
npolint
nprcue
npre
nprec
npreceq
nrArr
nrarr
nrarrc
nrarrw
nrightarrow
nrtri
nrtrie
nsccue
nsce
nscr
nshortmid
nshortparallel
nsim
nsime
nsimeq
nsmid
nspar
nsqsube
nsqsupe
nsub
nsubE
nsube
nsubset
nsubseteq
nsubseteqq
nsucc
nsucceq
nsup
nsupE
nsupe
nsupset
nsupseteq
nsupseteqq
ntgl
ntilde
ntlg
ntriangleleft
ntrianglelefteq
ntriangleright
ntrianglerighteq
numero
numsp
nvDash
nvHarr
nvap
nvdash
nvge
nvgt
nvinfin
nvlArr
nvle
nvlt
nvltrie
nvrArr
nvrtrie
nvsim
nwArr
nwarhk
nwarr
nwarrow
nwnear
oacute
oast
ocir
ocirc
odash
odblac
odiv
odot
odsold
oelig
ofcir
ogon
ograve
ohbar
oint
olarr
olcir
olcross
oline
omacr
omega
omicron
omid
ominus
oopf
opar
operp
oplus
orarr
order
orderof
ordf
ordm
origof
oror
orslope
oscr
oslash
osol
otilde
otimes
otimesas
ouml
ovbar
para
parallel
parsim
parsl
part
percnt
period
permil
perp
pertenk
phiv
phmmat
phone
pitchfork
planck
planckh
plankv
plus
plusacir
plusb
pluscir
plusdo
plusdu
pluse
plusmn
plussim
plustwo
pointint
popf
pound
prap
prcue
prec
precapprox
preccurlyeq
preceq
precnapprox
precneqq
precnsim
precsim
prime
primes
prnE
prnap
prnsim
prod
profalar
profline
profsurf
prop
propto
prsim
prurel
pscr
puncsp
qint
qopf
qprime
qscr
quaternions
quatint
quest
questeq
quot
rAarr
rArr
rAtail
rBarr
rHar
race
racute
radic
raemptyv
rang
rangd
range
rangle
raquo
rarr
rarrap
rarrb
rarrbfs
rarrc
rarrfs
rarrhk
rarrlp
rarrpl
rarrsim
rarrtl
rarrw
ratail
ratio
rationals
rbarr
rbbrk
rbrace
rbrack
rbrke
rbrksld
rbrkslu
rcaron
rcedil
rceil
rcub
rdca
rdldhar
rdquo
rdquor
rdsh
real
realine
realpart
reals
rect
rfisht
rfloor
rhard
rharu
rharul
rhov
rightarrow
rightarrowtail
rightharpoondown
rightharpoonup
rightleftarrows
rightleftharpoons
rightrightarrows
rightsquigarrow
rightthreetimes
ring
risingdotseq
rlarr
rlhar
rmoust
rmoustache
rnmid
roang
roarr
robrk
ropar
ropf
roplus
rotimes
rpar
rpargt
rppolint
rrarr
rsaquo
rscr
rsqb
rsquo
rsquor
rthree
rtimes
rtri
rtrie
rtrif
rtriltri
ruluhar
sacute
sbquo
scap
scaron
sccue
scedil
scirc
scnE
scnap
scnsim
scpolint
scsim
sdot
sdotb
sdote
seArr
searhk
searr
searrow
sect
semi
seswar
setminus
setmn
sext
sfrown
sharp
shchcy
shcy
shortmid
shortparallel
sigma
sigmaf
sigmav
simdot
sime
simeq
simg
simgE
siml
simlE
simne
simplus
simrarr
slarr
smallsetminus
smashp
smeparsl
smid
smile
smte
smtes
softcy
solb
solbar
sopf
spades
spadesuit
spar
sqcap
sqcaps
sqcup
sqcups
sqsub
sqsube
sqsubset
sqsubseteq
sqsup
sqsupe
sqsupset
sqsupseteq
square
squarf
squf
srarr
sscr
ssetmn
ssmile
sstarf
star
starf
straightepsilon
straightphi
strns
subE
subdot
sube
subedot
submult
subnE
subne
subplus
subrarr
subset
subseteq
subseteqq
subsetneq
subsetneqq
subsim
subsub
subsup
succ
succapprox
succcurlyeq
succeq
succnapprox
succneqq
succnsim
succsim
sung
sup1
sup2
sup3
supE
supdot
supdsub
supe
supedot
suphsol
suphsub
suplarr
supmult
supnE
supne
supplus
supset
supseteq
supseteqq
supsetneq
supsetneqq
supsim
supsub
supsup
swArr
swarhk
swarr
swarrow
swnwar
szlig
target
tbrk
tcaron
tcedil
tdot
telrec
there4
therefore
theta
thetasym
thetav
thickapprox
thicksim
thinsp
thkap
thksim
thorn
tilde
times
timesb
timesbar
timesd
tint
toea
topbot
topcir
topf
topfork
tosa
tprime
trade
triangle
triangledown
triangleleft
trianglelefteq
triangleq
triangleright
trianglerighteq
tridot
trie
triminus
triplus
trisb
tritime
trpezium
tscr
tscy
tshcy
tstrok
twixt
twoheadleftarrow
twoheadrightarrow
uArr
uHar
uacute
uarr
ubrcy
ubreve
ucirc
udarr
udblac
udhar
ufisht
ugrave
uharl
uharr
uhblk
ulcorn
ulcorner
ulcrop
ultri
umacr
uogon
uopf
uparrow
updownarrow
upharpoonleft
upharpoonright
uplus
upsi
upsih
upsilon
upuparrows
urcorn
urcorner
urcrop
uring
urtri
uscr
utdot
utilde
utri
utrif
uuarr
uuml
uwangle
vArr
vBar
vBarv
vDash
vangrt
varepsilon
varkappa
varnothing
varphi
varpi
varpropto
varr
varrho
varsigma
varsubsetneq
varsubsetneqq
varsupsetneq
varsupsetneqq
vartheta
vartriangleleft
vartriangleright
vdash
veebar
veeeq
vellip
verbar
vert
vltri
vnsub
vnsup
vopf
vprop
vrtri
vscr
vsubnE
vsubne
vsupnE
vsupne
vzigzag
wcirc
wedbar
wedge
wedgeq
weierp
wopf
wreath
wscr
xcap
xcirc
xcup
xdtri
xhArr
xharr
xlArr
xlarr
xmap
xnis
xodot
xopf
xoplus
xotime
xrArr
xrarr
xscr
xsqcup
xuplus
xutri
xvee
xwedge
yacute
yacy
ycirc
yicy
yopf
yscr
yucy
yuml
zacute
zcaron
zdot
zeetrf
zeta
zhcy
zigrarr
zopf
zscr
zwnj
</ol>
</section>
</h0
<blockquote
</blockquote>
<ol start="%d"
</ul>
</ol>
</li>
<pre
><code>
 lang="
" data-meta="
"><code>
><code class="language-
</code></pre>
<!-- raw HTML omitted -->
</p>
<br />
<code>
</code>
<strong>
</strong>
<em>
</em>
<a href="
" title="
</a>
<img src="
" alt="
" />
<section class="footnotes" data-footnotes>
<ol>
<li id="fn-
<sup class="footnote-ref"><a href="#fn-
" id="fnref-
" data-footnote-ref>
</a></sup>
html.c
 data-sourcepos="%d:%d-%d:%d"
<a href="#fnref-
" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="
" aria-label="Back to reference 
</a>
 <a href="#fnref-
<sup class="footnote-ref">
</sup></a>
cmark_chunk_ltrim
peek_char_n
inlines.c
!(subj->pos + n < subj->input.len && subj->input.data[subj->pos + n] == 0)
remove_delimiter
delim == subj->last_delim
cmark_iter_next
iterator.c
\textasciitilde{}
\^{}
\textbackslash{}
\textbar{}
\textless{}
\textgreater{}
\textquotedbl{}
\textquotesingle{}
\ldots{}
\begin{quote}
\end{quote}
\begin{
enumerate
itemize
\setcounter{enum
\end{
\item 
\section
\subsection
\subsubsection
\paragraph
\subparagraph
\begin{verbatim}
\end{verbatim}
\begin{center}\rule{0.5\linewidth}{\linethickness}\end{center}
\texttt{
\textbf{
\emph{
\url{
\href{
}\nolinkurl{
\protect\hyperlink{
\protect\includegraphics{
latex.c
\[oq]
\[cq]
\[lq]
\[rq]
\[em]
\[en]
.IP 
\[bu] 2
"%d." 4
\f[C]
\f[]
  *  *  *  *  *
.PD 0
\f[C]
\f[]
\f[B]
\f[I]
[IMAGE: 
man.c
normalize_map_label
map.c
result
flag initialization error in cmark_register_node_flag
too many flags in cmark_register_node_flag
none
prev
last_child
Invalid '%s' in node type %s at %d:%d
plaintext.c
cmark_reference_create
references.c
cmark_reference_create_attributes
cmark_syntax_extension_add_node
syntax_extension.c
cmark_utf8proc_encode_char
utf8.c
uc >= 0
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document SYSTEM "CommonMark.dtd">
 sourcepos="%d:%d-%d:%d"
 xmlns="http://commonmark.org/xml/1.0"
 xml:space="preserve">
 type="ordered"
 start="%d"
 delim="paren"
 delim="period"
 type="bullet"
 tight="%s"
true
 level="%d"
 info="
 on_enter="
 on_exit="
 destination="
 title="
autolink
http://
https://
ftp://
*_~(
www.
.+-_
xmpp:
postprocess_text
autolink.c
data[start + offset + max_rewind] == '@'
!text->as.literal.alloc
\sout{
.ST "
<del>
</del>
table.c
 --- |
 :-- |
 :-: |
 --: |
commonmark_render
\begin{table}
\begin{tabular}{
\end{tabular}
\end{table}
latex_render
 align="left"
 align="center"
 align="right"
 colspan_filler
 rowspan_filler
 colspan rowspan
 colspan
 rowspan
tab(@);
man_render
<table
</tbody>
</table>
<thead>
<tbody>
</tr>
</thead>
center
right
</th>
</td>
html_render
 style="text-align: 
 align="
 colspan="
 rowspan="
tagfilter
title
textarea
style
iframe
noembed
noframes
script
plaintext
- [x] 
- [ ] 
<input type="checkbox" checked="" disabled="" /> 
<input type="checkbox" disabled="" /> 
 completed="true"
 completed="false"
__consuming
__owned
__setter_access
__shared
_alignment
_backDeploy
_borrow
_borrowing
_BridgeObject
_cdecl
_Class
_compilerInitialized
_const
_consuming
_documentation
_dynamicReplacement
_effects
_expose
_forward
_implements
_linear
_local
_modify
_move
_mutating
_NativeClass
_NativeRefCountedObject
_noMetadata
_nonSendable
_objcImplementation
_objcRuntimeName
_opaqueReturnTypeOf
_optimize
_originallyDefinedIn
_PackageDescription
_private
_projectedValueProperty
_read
_RefCountedObject
_semantics
_specialize
_spi
_spi_available
_swift_native_objc_runtime_base
_Trivial
_TrivialAtMost
_TrivialStride
_typeEraser
_unavailableFromAsync
_underlyingVersion
_UnknownLayout
_version
accesses
actor
addressWithNativeOwner
addressWithOwner
assignment
associatedtype
associativity
async
attached
autoclosure
availability
available
await
backDeployed
before
block
borrowing
break
canImport
case
catch
class
compiler
consume
copy
consuming
continue
convenience
convention
cType
default
defer
deinit
dependsOn
deprecated
derivative
didSet
differentiable
distributed
dynamic
each
else
enum
escaping
exclusivity
exported
extension
fallthrough
false
file
fileprivate
final
discard
forward
func
freestanding
guard
higherThan
import
indirect
init
initializes
inline
inout
internal
introduced
isolated
kind
lazy
left
line
linear
lowerThan
macro
message
module
mutableAddressWithNativeOwner
mutableAddressWithOwner
mutating
noasync
noDerivative
noescape
nonisolated
nonmutating
objc
obsoleted
open
operator
optional
override
package
postfix
precedencegroup
preconcurrency
private
Protocol
protocol
public
reasync
renamed
repeat
required
_resultDependsOn
_resultDependsOnSelf
rethrows
retroactive
return
reverse
safe
scoped
self
sending
Self
Sendable
some
sourceFile
spiModule
static
struct
subscript
super
swift
switch
then
throw
throws
transferring
transpose
Type
typealias
unavailable
unchecked
unowned
unsafe
unsafeAddress
unsafeMutableAddress
visibility
weak
where
while
willSet
witness_method
yield
RawSyntaxData.Layout
RawSyntaxData.ParsedToken
RawSyntaxData.MaterializedToken
Syntax.Info.Root
Syntax.Info.NonRoot
SwiftSyntax/BumpPtrAllocator.swift
Unable to allocate memory!
_TtC11SwiftSyntax16BumpPtrAllocator
initialSlabSize
slabs
current
customSizeSlabs
_totalBytesAllocated
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SyntaxText.swift
If count is not zero, base address must be exist
<#expression#>
<#pattern#>
<#statement#>
<#type#>
<#syntax#>
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/Raw/RawSyntaxLayoutView.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/Raw/RawSyntax.swift
If kind is keyword, the text must be a known token kind
 descendantCount=
.materializedToken(
 numLeadingTrivia=
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SourceLocation.swift
_TtC11SwiftSyntax23SourceLocationConverter
fileName
source
lines
endOfFile
sourceLocationDirectives
SourceLocationConverter must be passed the root of the syntax tree
line comment created that contained a new-line character
The string literal '
' contains string interpolation, which is not allowed
' is not a decimal integer
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/Syntax.swift
_TtCV11SwiftSyntax6Syntax4Info
info
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SyntaxArena.swift
SourceBuffer should only be set once.
_TtC11SwiftSyntax11SyntaxArena
allocator
childRefs
_TtC11SwiftSyntax18ParsingSyntaxArena
sourceBuffer
parseTriviaFunction
SwiftSyntax.ParsingSyntaxArena
init(slabSize:)
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SyntaxChildren.swift
presentIndex(before:) must not be called if there is no present index before the given one
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/SyntaxCollection.swift
inserting node at invalid index 
replacing node at invalid index 
Can't remove from an empty collection
SwiftSyntax/SyntaxProtocol.swift
Children of syntax node do not cover all positions in it
 trailingTrivia=
AnyKeyPath & Sendable
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/TokenDiagnostic.swift
SwiftSyntax/TokenSyntax.swift
TokenSyntax must have token as its raw
TokenSyntax cannot be cast to 
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesTUVWXYZ.swift
unexpectedAfterRightParen
unexpectedBetweenElementsAndRightParen
unexpectedBetweenLeftParenAndElements
unexpectedBeforeLeftParen
unexpectedAfterComma
unexpectedBetweenExpressionAndComma
unexpectedBeforeExpression
unexpectedAfterYieldedExpressions
yieldedExpressions
unexpectedBetweenYieldKeywordAndYieldedExpressions
unexpectedBeforeYieldKeyword
unexpectedAfterWildcard
unexpectedBeforeWildcard
unexpectedAfterBody
unexpectedBetweenConditionsAndBody
unexpectedBetweenWhileKeywordAndConditions
unexpectedBeforeWhileKeyword
unexpectedAfterCondition
unexpectedBetweenWhereKeywordAndCondition
unexpectedBeforeWhereKeyword
unexpectedAfterComponents
unexpectedBetweenMajorAndComponents
unexpectedBeforeMajor
unexpectedAfterNumber
unexpectedBetweenPeriodAndNumber
unexpectedBeforePeriod
unexpectedAfterBindings
unexpectedBetweenBindingSpecifierAndBindings
bindingSpecifier
unexpectedBetweenModifiersAndBindingSpecifier
unexpectedBetweenAttributesAndModifiers
unexpectedBeforeAttributes
unexpectedAfterPattern
unexpectedBetweenBindingSpecifierAndPattern
unexpectedBeforeBindingSpecifier
unexpectedAfterColon
unexpectedBetweenThenExpressionAndColon
unexpectedBetweenQuestionMarkAndThenExpression
unexpectedBeforeQuestionMark
unexpectedAfterIsKeyword
unexpectedBeforeIsKeyword
unexpectedAfterQuestionOrExclamationMark
questionOrExclamationMark
unexpectedBetweenAsKeywordAndQuestionOrExclamationMark
unexpectedBeforeAsKeyword
unexpectedAfterFilename
unexpectedBetweenColonAndFilename
unexpectedBetweenSourceFileLabelAndColon
unexpectedBeforeSourceFileLabel
unexpectedAfterMessage
unexpectedBetweenColonAndMessage
unexpectedBetweenMessageLabelAndColon
unexpectedBeforeMessageLabel
unexpectedAfterValue
unexpectedBetweenEqualAndValue
unexpectedBeforeEqual
unexpectedAfterType
unexpectedBeforeType
unexpectedAfterThrowsClause
unexpectedBetweenAsyncSpecifierAndThrowsClause
unexpectedBeforeAsyncSpecifier
unexpectedBetweenColonAndType
unexpectedBeforeColon
unexpectedAfterGenericWhereClause
genericWhereClause
unexpectedBetweenInitializerAndGenericWhereClause
unexpectedBetweenGenericParameterClauseAndInitializer
genericParameterClause
unexpectedBetweenNameAndGenericParameterClause
unexpectedBetweenTypealiasKeywordAndName
typealiasKeyword
unexpectedBetweenModifiersAndTypealiasKeyword
unexpectedAfterTrailingComma
unexpectedBetweenEllipsisAndTrailingComma
unexpectedBetweenTypeAndEllipsis
unexpectedBetweenSecondNameAndColon
unexpectedBetweenFirstNameAndSecondName
unexpectedBetweenInoutKeywordAndFirstName
unexpectedBeforeInoutKeyword
unexpectedBetweenPatternAndTrailingComma
unexpectedBetweenColonAndPattern
unexpectedBetweenLabelAndColon
unexpectedBeforeLabel
unexpectedAfterExpression
unexpectedBetweenQuestionOrExclamationMarkAndExpression
unexpectedBetweenTryKeywordAndQuestionOrExclamationMark
unexpectedBeforeTryKeyword
unexpectedBetweenTypeAndRightParen
unexpectedBetweenLeftParenAndType
unexpectedBetweenThrowsSpecifierAndLeftParen
unexpectedBeforeThrowsSpecifier
unexpectedBetweenThrowKeywordAndExpression
unexpectedBeforeThrowKeyword
unexpectedBetweenThenKeywordAndExpression
unexpectedBeforeThenKeyword
unexpectedAfterElseExpression
unexpectedBetweenColonAndElseExpression
unexpectedBetweenConditionAndQuestionMark
unexpectedBeforeCondition
unexpectedAfterRightBrace
unexpectedBetweenCasesAndRightBrace
unexpectedBetweenLeftBraceAndCases
unexpectedBetweenSubjectAndLeftBrace
unexpectedBetweenSwitchKeywordAndSubject
unexpectedBeforeSwitchKeyword
unexpectedBetweenDefaultKeywordAndColon
unexpectedBeforeDefaultKeyword
unexpectedAfterStatements
unexpectedBetweenLabelAndStatements
unexpectedBetweenAttributeAndLabel
unexpectedBeforeAttribute
unexpectedBetweenCaseItemsAndColon
unexpectedBetweenCaseKeywordAndCaseItems
unexpectedBeforeCaseKeyword
unexpectedBetweenWhereClauseAndTrailingComma
unexpectedBetweenPatternAndWhereClause
unexpectedBeforePattern
unexpectedBetweenWithoutTildeAndType
unexpectedBeforeWithoutTilde
unexpectedAfterSuperKeyword
unexpectedBeforeSuperKeyword
unexpectedAfterAccessorBlock
unexpectedBetweenGenericWhereClauseAndAccessorBlock
unexpectedBetweenReturnClauseAndGenericWhereClause
unexpectedBetweenParameterClauseAndReturnClause
unexpectedBetweenGenericParameterClauseAndParameterClause
unexpectedBetweenSubscriptKeywordAndGenericParameterClause
subscriptKeyword
unexpectedBetweenModifiersAndSubscriptKeyword
unexpectedAfterAdditionalTrailingClosures
additionalTrailingClosures
unexpectedBetweenTrailingClosureAndAdditionalTrailingClosures
unexpectedBetweenRightSquareAndTrailingClosure
unexpectedBetweenArgumentsAndRightSquare
unexpectedBetweenLeftSquareAndArguments
unexpectedBetweenCalledExpressionAndLeftSquare
calledExpression
unexpectedBeforeCalledExpression
unexpectedAfterMemberBlock
unexpectedBetweenGenericWhereClauseAndMemberBlock
unexpectedBetweenInheritanceClauseAndGenericWhereClause
inheritanceClause
unexpectedBetweenGenericParameterClauseAndInheritanceClause
unexpectedBetweenStructKeywordAndName
unexpectedBetweenModifiersAndStructKeyword
unexpectedAfterContent
unexpectedBeforeContent
unexpectedAfterClosingPounds
unexpectedBetweenClosingQuoteAndClosingPounds
unexpectedBetweenSegmentsAndClosingQuote
unexpectedBetweenOpeningQuoteAndSegments
unexpectedBetweenOpeningPoundsAndOpeningQuote
unexpectedBeforeOpeningPounds
unexpectedBetweenDeclNameAndTrailingComma
unexpectedBetweenColonAndDeclName
unexpectedBetweenTargetLabelAndColon
unexpectedBeforeTargetLabel
unexpectedAfterSemicolon
unexpectedBetweenAvailabilityArgumentsAndSemicolon
availabilityArguments
unexpectedBetweenColonAndAvailabilityArguments
unexpectedBetweenAvailabilityLabelAndColon
availabilityLabel
unexpectedBeforeAvailabilityLabel
unexpectedAfterEndOfFileToken
unexpectedBetweenStatementsAndEndOfFileToken
unexpectedBetweenShebangAndStatements
unexpectedBeforeShebang
unexpectedAfterConstraint
unexpectedBetweenSomeOrAnySpecifierAndConstraint
someOrAnySpecifier
unexpectedBeforeSomeOrAnySpecifier
unexpectedAfterSpecifier
unexpectedBeforeSpecifier
unexpectedAfterClosingQuote
unexpectedBeforeOpeningQuote
unexpectedAfterElements
unexpectedBeforeElements
unexpectedAfterRightType
unexpectedBetweenEqualAndRightType
unexpectedBetweenLeftTypeAndEqual
unexpectedBeforeLeftType
unexpectedBetweenReturnKeywordAndExpression
unexpectedBeforeReturnKeyword
unexpectedBetweenArrowAndType
unexpectedBeforeArrow
unexpectedBetweenWhileKeywordAndCondition
unexpectedBetweenBodyAndWhileKeyword
unexpectedBetweenRepeatKeywordAndBody
unexpectedBeforeRepeatKeyword
unexpectedBetweenClosingSlashAndClosingPounds
unexpectedBetweenRegexAndClosingSlash
unexpectedBetweenOpeningSlashAndRegex
unexpectedBetweenOpeningPoundsAndOpeningSlash
unexpectedBetweenPrimaryAssociatedTypeClauseAndInheritanceClause
primaryAssociatedTypeClause
unexpectedBetweenNameAndPrimaryAssociatedTypeClause
unexpectedBetweenProtocolKeywordAndName
unexpectedBetweenModifiersAndProtocolKeyword
unexpectedBetweenNameAndTrailingComma
unexpectedBeforeName
unexpectedAfterRightAngle
unexpectedBetweenPrimaryAssociatedTypesAndRightAngle
primaryAssociatedTypes
unexpectedBetweenLeftAngleAndPrimaryAssociatedTypes
unexpectedBeforeLeftAngle
unexpectedBetweenOperatorAndExpression
unexpectedBeforeOperator
unexpectedAfterPrecedenceGroups
precedenceGroups
unexpectedBetweenColonAndPrecedenceGroups
unexpectedBetweenHigherThanOrLowerThanLabelAndColon
higherThanOrLowerThanLabel
unexpectedBeforeHigherThanOrLowerThanLabel
unexpectedBetweenGroupAttributesAndRightBrace
unexpectedBetweenLeftBraceAndGroupAttributes
unexpectedBetweenNameAndLeftBrace
unexpectedBetweenPrecedencegroupKeywordAndName
precedencegroupKeyword
unexpectedBetweenModifiersAndPrecedencegroupKeyword
unexpectedBetweenColonAndValue
unexpectedBetweenAssociativityLabelAndColon
associativityLabel
unexpectedBeforeAssociativityLabel
unexpectedBetweenAssignmentLabelAndColon
unexpectedBeforeAssignmentLabel
unexpectedBetweenArgumentsAndRightParen
unexpectedBetweenLeftParenAndArguments
unexpectedBetweenPoundSourceLocationAndLeftParen
poundSourceLocation
unexpectedBeforePoundSourceLocation
unexpectedAfterLineNumber
unexpectedBetweenLineColonAndLineNumber
unexpectedBetweenLineLabelAndLineColon
unexpectedBetweenCommaAndLineLabel
unexpectedBetweenFileNameAndComma
unexpectedBetweenFileColonAndFileName
unexpectedBetweenFileLabelAndFileColon
unexpectedBeforeFileLabel
unexpectedAfterOperator
unexpectedBetweenExpressionAndOperator
unexpectedAfterConfig
unexpectedBetweenBaseAndConfig
unexpectedBeforeBase
unexpectedAfterVersion
unexpectedBetweenPlatformAndVersion
unexpectedBeforePlatform
unexpectedBetweenPlatformVersionAndTrailingComma
unexpectedBeforePlatformVersion
unexpectedBetweenAccessorBlockAndTrailingComma
unexpectedBetweenInitializerAndAccessorBlock
unexpectedBetweenTypeAnnotationAndInitializer
unexpectedBetweenPatternAndTypeAnnotation
unexpectedAfterRepetitionPattern
repetitionPattern
unexpectedBetweenRepeatKeywordAndRepetitionPattern
unexpectedAfterPack
unexpectedBetweenEachKeywordAndPack
unexpectedBeforeEachKeyword
unexpectedAfterPlatforms
unexpectedBetweenCommaAndPlatforms
unexpectedBetweenModuleNameAndComma
unexpectedBetweenColonAndModuleName
unexpectedBetweenModuleLabelAndColon
unexpectedBeforeModuleLabel
unexpectedAfterQuestionMark
unexpectedBetweenWrappedTypeAndQuestionMark
unexpectedBeforeWrappedType
unexpectedBetweenExpressionAndQuestionMark
unexpectedAfterInitializer
unexpectedAfterDesignatedTypes
unexpectedBetweenPrecedenceGroupAndDesignatedTypes
unexpectedBetweenColonAndPrecedenceGroup
unexpectedAfterOperatorPrecedenceAndTypes
operatorPrecedenceAndTypes
unexpectedBetweenNameAndOperatorPrecedenceAndTypes
unexpectedBetweenOperatorKeywordAndName
unexpectedBetweenFixitySpecifierAndOperatorKeyword
unexpectedBeforeFixitySpecifier
unexpectedAfterOrdinal
unexpectedBetweenCommaAndOrdinal
unexpectedBetweenMangledNameAndComma
unexpectedBeforeMangledName
unexpectedBetweenNameAndColon
unexpectedAfterNilKeyword
unexpectedBeforeNilKeyword
unexpectedBetweenGenericParameterClauseAndType
unexpectedBeforeGenericParameterClause
unexpectedAfterClosure
unexpectedBetweenColonAndClosure
unexpectedAfterPlaceholder
unexpectedBeforePlaceholder
unexpectedBetweenModifiersAndPlaceholder
unexpectedAfterMetatypeSpecifier
metatypeSpecifier
unexpectedBetweenPeriodAndMetatypeSpecifier
unexpectedBetweenBaseTypeAndPeriod
unexpectedBeforeBaseType
unexpectedAfterGenericArgumentClause
genericArgumentClause
unexpectedBetweenNameAndGenericArgumentClause
unexpectedBetweenPeriodAndName
unexpectedBetweenMembersAndRightBrace
unexpectedBetweenLeftBraceAndMembers
unexpectedBeforeLeftBrace
unexpectedBetweenDeclAndSemicolon
unexpectedBeforeDecl
unexpectedAfterDeclName
unexpectedBetweenPeriodAndDeclName
unexpectedBetweenBaseAndPeriod
unexpectedBetweenCaseKeywordAndPattern
unexpectedBetweenRightParenAndTrailingClosure
unexpectedBetweenGenericArgumentClauseAndLeftParen
unexpectedBetweenMacroNameAndGenericArgumentClause
unexpectedBetweenPoundAndMacroName
unexpectedBeforePound
unexpectedBetweenModifiersAndPound
unexpectedBetweenDefinitionAndGenericWhereClause
unexpectedBetweenSignatureAndDefinition
unexpectedBetweenGenericParameterClauseAndSignature
unexpectedBetweenMacroKeywordAndName
unexpectedBetweenModifiersAndMacroKeyword
unexpectedBetweenScopedKeywordAndArguments
unexpectedBetweenLeftParenAndScopedKeyword
unexpectedBetweenDependsOnKeywordAndLeftParen
dependsOnKeyword
unexpectedBeforeDependsOnKeyword
unexpectedBetweenParameterAndTrailingComma
unexpectedBeforeParameter
unexpectedBetweenAlignmentAndRightParen
unexpectedBetweenCommaAndAlignment
unexpectedBetweenSizeAndComma
unexpectedBetweenLeftParenAndSize
unexpectedBetweenLayoutSpecifierAndLeftParen
unexpectedBetweenColonAndLayoutSpecifier
unexpectedBetweenTypeAndColon
unexpectedAfterStatement
unexpectedBetweenColonAndStatement
unexpectedBetweenValueAndTrailingComma
unexpectedBetweenExpressionAndTrailingComma
unexpectedBetweenColonAndExpression
unexpectedAfterRightSquare
unexpectedBeforeLeftSquare
unexpectedBetweenDeclNameAndGenericArgumentClause
unexpectedBeforeDeclName
unexpectedBeforeQuestionOrExclamationMark
unexpectedBetweenRootAndComponents
unexpectedBetweenBackslashAndRoot
unexpectedBeforeBackslash
unexpectedAfterComponent
unexpectedBetweenPeriodAndComponent
unexpectedBetweenIsKeywordAndType
unexpectedBetweenExpressionAndIsKeyword
unexpectedAfterLiteral
unexpectedBeforeLiteral
unexpectedBetweenGenericWhereClauseAndBody
unexpectedBetweenSignatureAndGenericWhereClause
unexpectedBetweenOptionalMarkAndGenericParameterClause
unexpectedBetweenInitKeywordAndOptionalMark
unexpectedBetweenModifiersAndInitKeyword
unexpectedBetweenTypeAndTrailingComma
unexpectedAfterInheritedTypes
unexpectedBetweenColonAndInheritedTypes
unexpectedAfterRightOperand
unexpectedBetweenOperatorAndRightOperand
unexpectedBetweenLeftOperandAndOperator
unexpectedBeforeLeftOperand
unexpectedBetweenAmpersandAndExpression
unexpectedBeforeAmpersand
unexpectedAfterTrailingPeriod
unexpectedBetweenNameAndTrailingPeriod
unexpectedAfterPath
unexpectedBetweenImportKindSpecifierAndPath
importKindSpecifier
unexpectedBetweenImportKeywordAndImportKindSpecifier
unexpectedBetweenModifiersAndImportKeyword
unexpectedAfterExclamationMark
unexpectedBetweenWrappedTypeAndExclamationMark
unexpectedBetweenCommaAndDeclName
unexpectedBetweenTypeAndComma
unexpectedAfterElseBody
unexpectedBetweenElseKeywordAndElseBody
unexpectedBetweenBodyAndElseKeyword
unexpectedBetweenIfKeywordAndConditions
unexpectedBeforeIfKeyword
unexpectedAfterPoundEndif
unexpectedBetweenClausesAndPoundEndif
unexpectedBeforeClauses
unexpectedBetweenConditionAndElements
unexpectedBetweenPoundKeywordAndCondition
unexpectedBeforePoundKeyword
unexpectedAfterIdentifier
unexpectedBeforeIdentifier
unexpectedBetweenElseKeywordAndBody
unexpectedBetweenConditionsAndElseKeyword
unexpectedBetweenGuardKeywordAndConditions
unexpectedBeforeGuardKeyword
unexpectedAfterRequirements
unexpectedBetweenWhereKeywordAndRequirements
unexpectedBetweenExpressionAndGenericArgumentClause
unexpectedBetweenRequirementAndTrailingComma
unexpectedBeforeRequirement
unexpectedBetweenInheritedTypeAndTrailingComma
unexpectedBetweenColonAndInheritedType
unexpectedBetweenEachKeywordAndName
unexpectedBetweenAttributesAndEachKeyword
unexpectedBetweenGenericWhereClauseAndRightAngle
unexpectedBetweenParametersAndGenericWhereClause
unexpectedBetweenLeftAngleAndParameters
unexpectedBetweenArgumentAndTrailingComma
unexpectedBeforeArgument
unexpectedBetweenArgumentsAndRightAngle
unexpectedBetweenLeftAngleAndArguments
unexpectedAfterReturnClause
unexpectedBetweenEffectSpecifiersAndReturnClause
effectSpecifiers
unexpectedBetweenRightParenAndEffectSpecifiers
unexpectedBetweenParametersAndRightParen
unexpectedBetweenLeftParenAndParameters
unexpectedBetweenParameterClauseAndEffectSpecifiers
unexpectedBeforeParameterClause
unexpectedBetweenDefaultValueAndTrailingComma
unexpectedBetweenEllipsisAndDefaultValue
unexpectedBetweenModifiersAndFirstName
unexpectedBetweenFuncKeywordAndName
unexpectedBetweenModifiersAndFuncKeyword
unexpectedBetweenCalledExpressionAndLeftParen
unexpectedBetweenExpressionAndExclamationMark
unexpectedBetweenWhereClauseAndBody
unexpectedBetweenSequenceAndWhereClause
unexpectedBetweenInKeywordAndSequence
unexpectedBetweenTypeAnnotationAndInKeyword
unexpectedBetweenAwaitKeywordAndCaseKeyword
unexpectedBetweenTryKeywordAndAwaitKeyword
unexpectedBetweenForKeywordAndTryKeyword
unexpectedBeforeForKeyword
unexpectedAfterFallthroughKeyword
fallthroughKeyword
unexpectedBeforeFallthroughKeyword
unexpectedBetweenExtendedTypeAndInheritanceClause
unexpectedBetweenExtensionKeywordAndExtendedType
extensionKeyword
unexpectedBetweenModifiersAndExtensionKeyword
unexpectedBetweenExpressionsAndRightParen
unexpectedBetweenLeftParenAndExpressions
unexpectedBetweenPoundsAndLeftParen
unexpectedBetweenBackslashAndPounds
unexpectedAfterCxxName
unexpectedBetweenCommaAndCxxName
unexpectedBetweenLanguageAndComma
unexpectedBeforeLanguage
unexpectedBetweenEnumKeywordAndName
unexpectedBetweenModifiersAndEnumKeyword
unexpectedBetweenTypeAndDefaultValue
unexpectedBeforeModifiers
unexpectedBetweenRawValueAndTrailingComma
unexpectedBetweenParameterClauseAndRawValue
unexpectedBetweenNameAndParameterClause
unexpectedBetweenCaseKeywordAndElements
unexpectedBetweenModifiersAndCaseKeyword
unexpectedBetweenForLabelAndColon
unexpectedBeforeForLabel
unexpectedAfterCatchClauses
unexpectedBetweenBodyAndCatchClauses
unexpectedBetweenThrowsClauseAndBody
unexpectedBetweenDoKeywordAndThrowsClause
unexpectedBeforeDoKeyword
unexpectedBetweenDoKeywordAndBody
unexpectedBetweenDiscardKeywordAndExpression
unexpectedBeforeDiscardKeyword
unexpectedBetweenArgumentsCommaAndGenericWhereClause
unexpectedBetweenArgumentsAndArgumentsComma
unexpectedBetweenKindSpecifierCommaAndArguments
kindSpecifierComma
unexpectedBetweenKindSpecifierAndKindSpecifierComma
unexpectedBeforeKindSpecifier
unexpectedAfterArguments
unexpectedBetweenColonAndArguments
unexpectedBetweenWrtLabelAndColon
unexpectedBeforeWrtLabel
unexpectedBetweenValueAndRightSquare
unexpectedBetweenKeyAndColon
unexpectedBetweenLeftSquareAndKey
unexpectedBetweenContentAndRightSquare
unexpectedBetweenLeftSquareAndContent
unexpectedBeforeKey
unexpectedAfterName
unexpectedBetweenLeadingCommaAndName
unexpectedBeforeLeadingComma
unexpectedBetweenCommaAndArguments
unexpectedBetweenAccessorSpecifierAndComma
accessorSpecifier
unexpectedBetweenPeriodAndAccessorSpecifier
unexpectedBetweenOriginalDeclNameAndPeriod
originalDeclName
unexpectedBetweenColonAndOriginalDeclName
unexpectedBetweenOfLabelAndColon
unexpectedBeforeOfLabel
unexpectedAfterAsyncSpecifier
unexpectedBetweenEffectSpecifiersAndBody
unexpectedBetweenDeinitKeywordAndEffectSpecifiers
unexpectedBetweenModifiersAndDeinitKeyword
unexpectedBetweenDeferKeywordAndBody
unexpectedBeforeDeferKeyword
unexpectedAfterArgumentNames
unexpectedBetweenBaseNameAndArgumentNames
unexpectedBeforeBaseName
unexpectedAfterDetail
unexpectedBetweenNameAndDetail
unexpectedBetweenDetailAndRightParen
unexpectedBetweenLeftParenAndDetail
unexpectedBetweenCopyKeywordAndExpression
unexpectedBeforeCopyKeyword
unexpectedAfterProtocolName
unexpectedBetweenColonAndProtocolName
unexpectedBetweenWitnessMethodLabelAndColon
witnessMethodLabel
unexpectedBeforeWitnessMethodLabel
unexpectedAfterCTypeString
unexpectedBetweenColonAndCTypeString
unexpectedBetweenCTypeLabelAndColon
unexpectedBetweenCommaAndCTypeLabel
unexpectedBetweenConventionLabelAndComma
unexpectedBeforeConventionLabel
unexpectedAfterLabel
unexpectedBetweenContinueKeywordAndLabel
unexpectedBeforeContinueKeyword
unexpectedBetweenConsumeKeywordAndExpression
unexpectedBeforeConsumeKeyword
unexpectedBetweenColonAndRightType
unexpectedBetweenLeftTypeAndColon
unexpectedBetweenConditionAndTrailingComma
unexpectedAfterAmpersand
unexpectedBetweenTypeAndAmpersand
unexpectedBetweenStatementsAndRightBrace
unexpectedBetweenLeftBraceAndStatements
unexpectedBetweenItemAndSemicolon
unexpectedBeforeItem
unexpectedAfterInKeyword
unexpectedBetweenReturnClauseAndInKeyword
unexpectedBetweenCaptureAndParameterClause
unexpectedBetweenAttributesAndCapture
unexpectedBetweenSignatureAndStatements
unexpectedBetweenLeftBraceAndSignature
unexpectedBetweenEqualAndExpression
unexpectedBetweenNameAndEqual
unexpectedBetweenSpecifierAndName
unexpectedBetweenSpecifierAndLeftParen
unexpectedBetweenItemsAndRightSquare
unexpectedBetweenLeftSquareAndItems
unexpectedAfterClassKeyword
unexpectedBeforeClassKeyword
unexpectedBetweenClassKeywordAndName
unexpectedBetweenModifiersAndClassKeyword
unexpectedBetweenCatchItemsAndBody
unexpectedBetweenCatchKeywordAndCatchItems
unexpectedBeforeCatchKeyword
unexpectedBetweenColonAndVersion
unexpectedBetweenCommaAndLabel
unexpectedBeforeComma
unexpectedBetweenVersionInfoAndRightParen
unexpectedBetweenImportPathAndVersionInfo
unexpectedBetweenLeftParenAndImportPath
unexpectedBetweenCanImportKeywordAndLeftParen
canImportKeyword
unexpectedBeforeCanImportKeyword
unexpectedBetweenBreakKeywordAndLabel
unexpectedBeforeBreakKeyword
unexpectedBetweenBorrowKeywordAndExpression
unexpectedBeforeBorrowKeyword
unexpectedBetweenColonAndPlatforms
unexpectedBetweenBeforeLabelAndColon
unexpectedBeforeBeforeLabel
unexpectedBetweenAwaitKeywordAndExpression
unexpectedBeforeAwaitKeyword
unexpectedBetweenAvailabilityArgumentsAndRightParen
unexpectedBetweenLeftParenAndAvailabilityArguments
unexpectedBetweenAvailabilityKeywordAndLeftParen
availabilityKeyword
unexpectedBeforeAvailabilityKeyword
unexpectedAfterBaseType
unexpectedBetweenAttributesAndBaseType
unexpectedBetweenSpecifiersAndAttributes
unexpectedBeforeSpecifiers
unexpectedBetweenAttributeNameAndLeftParen
unexpectedBetweenAtSignAndAttributeName
unexpectedBeforeAtSign
unexpectedBetweenInheritanceClauseAndInitializer
unexpectedBetweenNameAndInheritanceClause
unexpectedBetweenAssociatedtypeKeywordAndName
associatedtypeKeyword
unexpectedBetweenModifiersAndAssociatedtypeKeyword
unexpectedAfterEqual
unexpectedBetweenQuestionOrExclamationMarkAndType
unexpectedBetweenExpressionAndAsKeyword
unexpectedAfterArrow
unexpectedBetweenEffectSpecifiersAndArrow
unexpectedBeforeEffectSpecifiers
unexpectedBetweenElementAndRightSquare
unexpectedBetweenLeftSquareAndElement
unexpectedBetweenElementsAndRightSquare
unexpectedBetweenLeftSquareAndElements
unexpectedBetweenActorKeywordAndName
unexpectedBetweenModifiersAndActorKeyword
unexpectedBetweenNameAndRightParen
unexpectedBetweenLeftParenAndName
unexpectedBetweenParametersAndEffectSpecifiers
unexpectedBetweenAccessorSpecifierAndParameters
unexpectedBetweenModifierAndAccessorSpecifier
unexpectedBetweenAttributesAndModifier
unexpectedBetweenAccessorsAndRightBrace
unexpectedBetweenLeftBraceAndAccessors
_TtC11SwiftSyntax16SyntaxAnyVisitor
SwiftSyntax/SyntaxBaseNodes.swift
 cannot be cast to 
_TtC11SwiftSyntax14SyntaxRewriter
viewMode
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/SyntaxRewriter.swift
_TtC11SwiftSyntax13SyntaxVisitor
recyclableNodeInfos
recyclableNodeInfosUsageBitmap
#unavailable
#sourceLocation
#endif
#elseif
#else
#available
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/TokenKind.swift
docBlockComment(
carriageReturnLineFeeds(
carriageReturns(
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/Raw/RawSyntaxNodeProtocol.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesAB.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesD.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesC.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesGHI.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesJKLMN.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesEF.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesOP.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntax/generated/raw/RawSyntaxNodesQRS.swift
Swift/arm64e-apple-macos.private.swiftinterface
UnsafeMutablePointer.initialize overlapping range
UnsafeMutablePointer.initialize with negative count
org.swift.swift-syntax
MemberBlockItemListSyntax
Unexpectedly found nil while unwrapping an Optional value
UnsafeMutableRawPointer.initializeMemory overlapping range
Insufficient space allocated to copy string contents
invalid Collection: less than 'count' elements in collection
UnsafeMutableBufferPointer with negative count
CodeBlockItemListSyntax
AttributeListSyntax
AccessorDeclListSyntax
VersionTupleSyntax
SourceFileSyntax
MemberBlockSyntax
GenericParameterClauseSyntax
FunctionParameterSyntax
EnumCaseParameterSyntax
CodeBlockItemSyntax
ClosureParameterSyntax
CatchClauseSyntax
AccessorDeclSyntax
AccessorBlockSyntax
SwitchCaseSyntax
SwiftSyntaxBuilder.Indenter
_TtC18SwiftSyntaxBuilder8Indenter
indentation
offset element 
Parsing the code snippet was expected to produce a 
 but produced a 
key value 
unexpected trivia '
Range requires lowerBound <= upperBound
Must take zero or more splits
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntaxBuilder/SyntaxNodeWithBody.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftSyntaxBuilder/ValidatingSyntaxNodes.swift
SwiftSyntaxBuilder
UnexpectedTrivia
SwiftBasicFormat.BasicFormat
_TtC16SwiftBasicFormat11BasicFormat
indentationWidth
indentationStack
anchorPoints
previousToken
stringLiteralNestingLevel
_TtC16SwiftBasicFormatP33_0AB3BA44B076685D284D1CADB6E5BB9419IndentationInferrer
previousTokenTrailingTrivia
spaceIndentedLines
tabIndentedLines
linesProcessed
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/TokenSpec.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/TokenConsumer.swift
metadata
<#declaration#>
AnyObject
elif
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Expressions.swift
elements must have an even number of elements
Couldn't be a trailing closure
SwiftParser/Expressions.swift
Postfix #if should only have one element
SwiftParser/IncrementalParseTransition.swift
ConcurrentEdits created by translateSequentialEditsToConcurrentEdits do not satisfy ConcurrentEdits requirements
A single edit doesn't satisfy the ConcurrentEdits requirements?
_TtC11SwiftParser26IncrementalParseTransition
previousIncrementalParseResult
edits
reusedNodeCallback
Edits passed to ConcurrentEdits(concurrent:) does not satisfy the requirements posed by ConcurrentEdits
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/IncrementalParseTransition.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Lexer/Cursor.swift
Caller must handle newlines in non-multiline
sourceLocation
elseif
endif
Use Result.keyword instead
Unexpected start
not a hex literal
not at a hex float exponent?!
Unexpected start of escaped identifier
unexpected operator start
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Lexer/LexemeSequence.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Lexer/RegexLiteralLexer.swift
Should have lexed this?
lexing before the operator?
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Lookahead.swift
If tokenKind has a defaultText, the prefix needs to match it
not checking a brace?
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Names.swift
_TtC11SwiftParser21LookaheadTrackerOwner
lookaheadTracker
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Parser.swift
To create a TokenSpec for a keyword use the initializer that takes a keyword
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Statements.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/StringLiteralRepresentedLiteralValue.swift
appendUnescapedLiteralValue relies on properly parsed literals
_TtC11SwiftParserP33_78149DB072C20084E7D780D86E26C3AF41StringLiteralExpressionIndentationChecker
expectedIndentation
arena
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/StringLiterals.swift
String segment produced by the lexer should not have unexpected text or trivia because we would drop it during post-processing
The lexer should only add trailing trivia to a string segment if the newline is escaped by a backslash
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/TriviaParser.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/Specifiers.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParser/ParseSourceFile.swift
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftDiagnostics/Diagnostic.swift
at least one diagnostic must have severity == .error
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftDiagnostics/FixIt.swift
A Fix-It must have at least one change associated with it
expanded code originates here
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftDiagnostics/DiagnosticsFormatter.swift
editor placeholder in source file
'=' must have consistent whitespace on both sides
hexadecimal floating point literal must end with an exponent
expected '}' in \u{...} escape sequence
expected a digit in floating point exponent
expected hexadecimal code in \u{...} escape sequence
expected hexadecimal digit (0-9, A-F) in integer literal
invalid character in source file
invalid escape sequence in literal
an identifier cannot begin with this character
\u{...} escape sequence expects between 1 and 8 hex digits
invalid UTF-8 found in source file
the lexer discovered an error in this token but was not able to represent its offset due to overflow; please split the token
source control conflict marker in source file
unexpected end of block comment
unicode curly quote found; use '"' instead
bare slash regex literal may not start with space
bare slash regex literal may not end with space
multi-line regex closing delimiter must appear on new line
unprintable ASCII character found in source file
unterminated '/*' comment
non-breaking space (U+00A0) used instead of regular space
nul character embedded in middle of file
_TtC22SwiftParserDiagnostics22PresentMakingFormatter
SwiftParserDiagnostics.PresentMakingFormatter
init(indentationWidth:initialIndentation:viewMode:)
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParserDiagnostics/DiagnosticExtensions.swift
extraneous whitespace before '
' is not permitted
extraneous whitespace after '
' is not a valid first character in floating point exponent
' is not a valid digit in floating point exponent
' is not a valid hexadecimal digit (0-9, A-F) in integer literal
' is not a valid digit in integer literal
' is not a valid octal digit (0-7) in integer literal
' is not a valid binary digit (0 or 1) in integer literal
; this is an error in Swift 6
remove whitespace
removeExtraneousWhitespace
insert whitespace
insertWhitespace
replace curly quotes with '"'
replaceCurlyQuoteByNormalQuote
replace non-breaking space with ' '
replaceNonBreakingSpaceBySpace
to match this opening '
_TtC22SwiftParserDiagnostics16NoNewlinesFormat
_TtC22SwiftParserDiagnosticsP33_D814B2AFEC72B63D6ADAFD28B2DCE30C15HasTokenChecker
hasToken
if this name is unavoidable, use backticks to escape it
multi-line string literal closing delimiter must begin on a new line
multiLineStringLiteralMustHaveClosingDelimiterOnNewLine
multi-line string literal content must begin on a new line
multiLineStringLiteralMustBeginOnNewLine
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParserDiagnostics/MissingTokenError.swift
Raw string delimiters should only occur in string interpolation and at the end of a string or regex literal
expected additional '#' characters in closing delimiter
tooFewClosingPoundDelimiters
insert additional closing '#' delimiters
insertExtraClosingPounds
remove extraneous delimiters
removeExtraneousDelimiters
too many '#' characters in closing delimiter
tooManyClosingPoundDelimiters
too many '#' characters to start string interpolation
tooManyRawStringDelimitersToStartInterpolation
_TtC22SwiftParserDiagnostics53MultiLineStringLiteralIndentationDiagnosticsGenerator
closeQuote
finishedDiagnostics
inProgressDiagnostic
SwiftParserDiagnostics.MultiLineStringLiteralIndentationDiagnosticsGenerator
should match indentation here
shouldMatchIndentationOfClosingQuote
change indentation of this line to match closing delimiter
changeIndentationToMatchClosingDelimiter
join the identifiers together
join the identifiers together with camel-case
joinIdentifiersWithCamelCase
unexpected ';' separator
unexpectedSemicolon
parsing has exceeded the maximum nesting level
maximumNestingLevelOverflow
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParserDiagnostics/ParseDiagnosticsGenerator.swift
unexpected ']' in type; did you mean to write an array type?
extraRightBracket
insert attribute argument
insertAttributeArguments
version comparison not needed
versionComparisonNotNeeded
editorPlaceholderInSourceFile
'case' can only appear inside a 'switch' statement or 'enum' declaration
caseOutsideOfSwitchOrEnum
'default' label can only appear inside a 'switch' statement
defaultOutsideOfSwitch
standalone ';' statements are not allowed
standaloneSemicolonStatement
consecutive statements on a line must be separated by newline or ';'
consecutiveStatementsOnSameLine
expected ',' to separate the requirements of this 'where' clause
expectedCommaInWhereClause
deinitializers cannot throw
deinitCannotThrow
expected Sequence expression for for-each loop
expectedSequenceExpressionInForEachLoop
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/dependencies/swift-syntax/Sources/SwiftParserDiagnostics/MissingNodesError.swift
C-style for statement has been removed in Swift 3
ellipsis operator cannot be used with a type parameter pack
typeParameterPackEllipsis
generic signature cannot be declared in enum 'case'
genericParamCantBeUsedInEnumCaseDecl
extra tokens following conditional compilation directive
extraTokensFollowingConditionalCompilationDirective
unexpected 'if' keyword following '#else' conditional compilation directive; did you mean '#elseif'?
unexpectedPoundElseSpaceIf
expected '{' or 'if' after 'else'
expectedLeftBraceOrIfAfterElse
expected '=' instead of '==' to assign default value for parameter
expectedAssignmentInsteadOfComparisonOperator
initializers cannot have a name
initializerCannotHaveName
consecutive declarations on a line must be separated by newline or ';'
consecutiveDeclarationsOnSameLine
operator should not be declared with body
operatorShouldBeDeclaredWithoutBody
remove operator body
removeOperatorBody
operator must be declared as 'prefix', 'postfix', or 'infix'
missingFixityInOperatorDeclaration
extra tokens following the #sourceLocation directive
extraTokensAtTheEndOfSourceLocationDirective
expected 'true' or 'false' after 'assignment'
invalidFlagAfterPrecedenceGroupAssignment
Expected 'none', 'left', or 'right' after 'associativity'
invalidPrecedenceGroupAssociativity
expected ':' or '==' to indicate a conformance or same-type requirement
missingConformanceRequirement
argument cannot be an extended escaping string literal
forbiddenExtendedEscapingString
argument cannot be an interpolated string literal
forbiddenInterpolatedString
escaped newline at the last line of a multi-line string literal is not allowed
escapedNewlineAtLastLineOfMultiLineStringLiteralNotAllowed
Single-quoted string literal found, use '"'
singleQuoteStringLiteral
string literals in Swift are not preceded by an '@' sign
stringLiteralAtSign
subscripts cannot have a name
subscriptsCannotHaveNames
all statements inside a switch must be covered by a 'case' or 'default' label
allStatementsInSwitchMustBeCoveredByCase
'default' cannot be used with a 'where' guard expression
defaultCannotBeUsedWithWhere
expected expression after 'try'
expectedExpressionAfterTry
expected ':' to begin inheritance clause
expectedColonClass
expected ':' after '? ...' in ternary expression
missingColonInTernaryExpr
expected ':' and expression after '? ...' in ternary expression
missingColonAndExprInTernaryExpr
SwiftParserDiagnostics.ParseDiagnosticsGenerator
_TtC22SwiftParserDiagnostics25ParseDiagnosticsGenerator
diagnostics
handledNodes
suppressRemainingDiagnostics
'try' must be placed on the initial value expression
tryOnInitialValueExpression
expected async specifier; did you mean 'async'?
expected throwing specifier; did you mean 'throws'?
misspelledThrows
'try' must be placed on the thrown expression
tryMustBePlacedOnThrownExpr
'try' must be placed on the produced expression
tryMustBePlacedOnThenExpr
'try' must be placed on the returned expression
tryMustBePlacedOnReturnedExpr
unexpected initializer in pattern; did you mean to use '='?
initializerInPattern
'class' constraint can only appear on protocol declarations
classConstraintCanOnlyBeUsedInProtocol
expected ',' joining parts of a multi-clause condition
joinConditionsUsingComma
expected ',' joining platforms in availability condition
joinPlatformsUsingComma
associated types cannot be variadic
associatedTypeCannotUsePack
StaticParserError.
 cannot be used as an expression, did you mean to use '
 cannot be used in an expression, only as a condition of 'if' or 'guard'
cannot parse version component 
deinitializers cannot have 
 conflicts with 
 has already been specified
 must precede '->'
 is considered an identifier and must not appear within an operator name
' is not a valid floating point literal; it must be written '0.
' is not a valid identifier
' cannot be used as an identifier here
 can only start with a letter or underscore, not a number
unexpected tab in indentation
 lines in multi-line string literal
unexpected space in indentation
insufficient indentation
 of line in multi-line string literal
expected argument for '@
 to be surrounded by '"'
missing condition in statement
missing condition in 
expected expression in statement
expected expression in 
 cannot be used in an expression; did you mean 
 before a parameter name is not allowed
 is not allowed in operator names
trailing components of version 
'try' cannot be used with '
use of unknown directive 
unknown parameter '
; valid parameters are 
StaticParserNote.
StaticParserFixIt.
 in front of type
remove redundant 
InsertTokenFixIt
MatchingOpeningTokenNote
MissingNodesError
found an unexpected second identifier; is there an accidental break?
found an unexpected second identifier in 
; is there an accidental break?
_TtC22SwiftParserDiagnostics18PresentNodeChecker
hasPresentToken
_TtC22SwiftParserDiagnostics12MissingMaker
SwiftParserDiagnostics.MissingMaker
generic where clause
generic parameter clause
trailing closures
trailing closure
called expression
inheritance clause
declaration name
primary associated type clause
precedence group
macro definition
parameter reference
constrained type
function signature
parameter pack specifier
associated values
'yield' statement
wildcard pattern
'while' statement
value binding pattern
ternary operator
@_private argument
@_unavailableFromAsync argument
effect specifiers
typealias declaration
'try' expression
'throw' statement
'then' statement
ternay expression
'switch' statement
suppressed type conformance
attribute argument
availability entry
argument to '@_specialize
simple string literal
same type requirement
'return' statement
'repeat' statement
'relation' property of precedencegroup
'associativity' property of precedencegroup
'assignment' property of precedencegroup
'#sourceLocation' directive
'#sourceLocation' arguments
postfix expression
version restriction
variadic expansion
@_originallyDefinedIn arguments
optional chaining
optional binding
operator declaration
opaque return type arguments
Objective-C selector piece
Objective-C selector
named opaque return type
pattern matching
lifetime specifier
layout requirement
labeled statement
key path subscript component
key path property component
key path optional component
key path component
inout expression
implicitly unwrapped optional type
@_implements arguemnts
conditional compilation block
conditional compilation clause
'guard' statement
generic parameter
generic argument
generic argument clause
parameter clause
floating literal
'fallthrough' statement
@_expose arguments
@_effects arguments
editor placeholder
@_dynamicReplacement argument
@_documentation argument
@_documentation arguments
'discard' statement
'@differentiable' arguments
'@differentiable' argument
differentiability arguments
differentiability argument
differentiability parameters
dictionary element
attribute arguments
'defer' statement
'copy' expression
@convention(...) arguments for witness methods
@convention(...) arguments
'continue' statement
'consume' expression
conformance requirement
type composition
closure signature
closure parameter
closure capture specifier
closure capture clause
'canImport' expression
'break' statement
'_borrow' expression
'@backDeployed' arguments
'await' expression
availability argument
availability condition
'@availability' arguments
associatedtype declaration
accessor specifiers
extended delimiter
raw string delimiter
postfix operator
dollar identifier
infix
prefix
LogicalDisjunctionPrecedence
LogicalConjunctionPrecedence
AssignmentPrecedence
FunctionArrowPrecedence
TernaryPrecedence
ComparisonPrecedence
NilCoalescingPrecedence
CastingPrecedence
RangeFormationPrecedence
AdditionPrecedence
MultiplicationPrecedence
BitwiseShiftPrecedence
adjacent operators are in unordered precedence groups '
adjacent operators are in non-associative precedence group '
unknown infix operator '
redefinition of 
unknown precedence group '
redefinition of precedence group '
SwiftOperators/OperatorTable+Defaults.swift
DefaultPrecedence
SwiftOperators/OperatorTable+Folding.swift
Unknown binary operator
_TtCV14SwiftOperators13OperatorTableP33_5A1BC159D67DB48002ADF8010282189714SequenceFolder
firstFatalError
errorHandler
SwiftOperators.SequenceFolder
error handler did not throw again after 
_TtCFV14SwiftOperators13OperatorTable13addSourceFileFzTV11SwiftSyntax16SourceFileSyntax12errorHandlerFzOS_13OperatorErrorT__T_L_23OperatorAndGroupVisitor
opPrecedence
errors
SwiftOperators.OperatorAndGroupVisitor
AllPublicDeclarationsHaveDocumentation
AlwaysUseLiteralForEmptyCollectionInit
AlwaysUseLowerCamelCase
AmbiguousTrailingClosureOverload
BeginDocumentationCommentWithOneLineSummary
DoNotUseSemicolons
DontRepeatTypeInStaticProperties
FileScopedDeclarationPrivacy
FullyIndirectEnum
GroupNumericLiterals
IdentifiersMustBeASCII
NeverForceUnwrap
NeverUseForceTry
NeverUseImplicitlyUnwrappedOptionals
NoAccessLevelOnExtensionDeclaration
NoAssignmentInExpressions
NoCasesWithOnlyFallthrough
NoEmptyTrailingClosureParentheses
NoLabelsInCasePatterns
NoLeadingUnderscores
NoParensAroundConditions
NoPlaygroundLiterals
NoVoidReturnOnFunctionSignature
OmitExplicitReturns
OneVariableDeclarationPerLine
OnlyOneTrailingClosureArgument
ReplaceForEachWithForLoop
ReturnVoidInsteadOfEmptyTuple
TypeNamesShouldBeCapitalized
UseExplicitNilCheckInConditions
UseLetInEveryBoundCaseVariable
UseShorthandTypeNames
UseSingleLinePropertyGetter
UseSynthesizedInitializer
UseTripleSlashForDocumentationComments
UseWhereClausesInForLoops
ValidateDocumentationComments
XCTAssertNoThrow
maximumBlankLines
respectsExistingLineBreaks
lineBreakBeforeControlFlowKeywords
lineBreakBeforeEachArgument
lineBreakBeforeEachGenericRequirement
prioritizeKeepingFunctionOutputTogether
indentConditionalCompilationBlocks
lineBreakAroundMultilineExpressionChainComponents
fileScopedDeclarationPrivacy
indentSwitchCaseLabels
spacesAroundRangeFormationOperators
noAssignmentInExpressions
multiElementCollectionTrailingCommas
allowedFunctions
This version of the formatter does not support configuration version 
One of "tabs" or "spaces" must be specified
Only one of "tabs" or "spaces" may be specified
_TtC11SwiftFormat14SwiftFormatter
configuration
_TtC11SwiftFormat11SwiftLinter
findingConsumer
debugOptions
_TtC11SwiftFormat7Context
findingEmitter
fileURL
importsXCTest
sourceLocationConverter
ruleMask
ruleNameCache
_TtC11SwiftFormat14FindingEmitter
consumer
_TtC11SwiftFormatP33_9DCABA9718CACA9DAAA8F2BE0366749620ImportsXCTestVisitor
SwiftFormat.ImportsXCTestVisitor
_TtC11SwiftFormat12LintPipeline
context
ruleCache
shouldSkipChildren
SwiftFormat.LintPipeline
_TtC11SwiftFormat8RuleMask
allRulesIgnoredRanges
ruleMap
_TtC11SwiftFormatP33_394CCCA886A18C25F04A35788218087327RuleStatusCollectionVisitor
ignorePattern
ignoreRegex
ignoreFilePattern
ignoreFileRegex
SwiftFormat.RuleStatusCollectionVisitor
init(viewMode:)
^\s*\/\/\s*swift-format-ignore((:\s+(([A-z0-9]+[,\s]*)+))?$|\s+$)
^\s*\/\/\s*swift-format-ignore-file$
SwiftFormat/RuleMask.swift
SwiftFormat.SyntaxFormatRule
_TtC11SwiftFormat16SyntaxFormatRule
SwiftFormat.SyntaxLintRule
_TtC11SwiftFormat14SyntaxLintRule
SwiftFormat/PrettyPrint.swift
At least one .break(.open) was not matched by a .break(.close)
_TtC11SwiftFormat13PrettyPrinter
maxLineLength
tokens
outputBuffer
spaceRemaining
lengths
lastBreak
forceBreakStack
printTokenStream
whitespaceOnly
activeOpenBreaks
activeBreakingContexts
lastEndedBreakingContext
lineNumber
currentLineIsContinuation
continuationStack
commaDelimitedRegionStack
consecutiveNewlineCount
pendingSpaces
isAtStartOfLine
activeBreakSuppressionCount
allowSuppressedDiscretionaryBreaks
debugIndent
[END BREAKING CONTEXT Idx: 
[START BREAKING CONTEXT Idx: 
[COMMA DELIMITED END Idx: 
[COMMA DELIMITED START Idx: 
[PRINTER CONTROL Kind: 
[VERBATIM Length: 
[COMMENT DocBlock Length: 
[COMMENT Block Length: 
[COMMENT DocLine Length: 
[COMMENT Line Length: 
[OPEN Inconsistent Length: 
[OPEN Consistent Length: 
Found trailing comma end with no corresponding start.
remove trailing comma from the last element in single line collection literal
add trailing comma to the last element in multiline collection literal
move end-of-line comment that exceeds the line length
Unmatched closing break
Encountered unmatched contextualBreakingEnd token.
EndOfLineComment
_TtC11SwiftFormatP33_0BA2403CD207964798477A9BC8BD25E818TokenStreamCreator
beforeMap
afterMap
config
operatorTable
maxlinelength
lastBreakIndex
canMergeNewlinesIntoLastBreak
pendingMultilineStringBreakKinds
ignoredTokens
preVisitedExprs
rootExprs
closingDelimiterTokens
forcedBreakingClosures
openings
_TtC11SwiftFormat21CommentMovingRewriter
swift-format-ignore
swift-format-ignore-file
SwiftFormat.TokenStreamCreator
SwiftFormat/TokenStreamCreator.swift
Found non-break token at lastBreakIndex. TokenStreamCreator is invalid.
ExtensionDeclSyntax.extendedType must have at least one token
SpacingCharacter
TrailingWhitespace
_TtC11SwiftFormat16WhitespaceLinter
userText
formattedText
isLineTooLong
replace leading whitespace with 
remove all leading whitespace
line is too long
remove trailing whitespace
remove line break
use spaces for spacing
_TtC11SwiftFormat38AllPublicDeclarationsHaveDocumentation
add a documentation comment for '
_TtC11SwiftFormat38AlwaysUseLiteralForEmptyCollectionInit
function parameter
_TtC11SwiftFormat23AlwaysUseLowerCamelCase
testCaseFuncs
' using lowerCamelCase
_TtC11SwiftFormat32AmbiguousTrailingClosureOverload
' so it is no longer ambiguous when called with a trailing closure
ambiguous overload '
_TtC11SwiftFormat43BeginDocumentationCommentWithOneLineSummary
add a blank comment line after this sentence: "
terminate this sentence with a period: "
_TtC11SwiftFormat18DoNotUseSemicolons
remove ';' and move the next statement to a new line
_TtC11SwiftFormat32DontRepeatTypeInStaticProperties
remove the suffix '
' from the name of the variable '
_TtC11SwiftFormat28FileScopedDeclarationPrivacy
replace 'private' with 'fileprivate' on file-scoped declarations
replace 'fileprivate' with 'private' on file-scoped declarations
' itself as indirect when all cases are indirect
_TtC11SwiftFormat17FullyIndirectEnum
remove 'indirect' here
_TtC11SwiftFormat20GroupNumericLiterals
 digits in this 
 literal using a '_' separator
_TtC11SwiftFormat22IdentifiersMustBeASCII
remove non-ASCII characters from '
do not force cast to '
do not force unwrap '
_TtC11SwiftFormat16NeverForceUnwrap
do not use force try
_TtC11SwiftFormat16NeverUseForceTry
_TtC11SwiftFormat36NeverUseImplicitlyUnwrappedOptionals
remove this redundant 'internal' access modifier from this extension
' access modifier to precede each member inside this extension
' access modifier and declare each member inside this extension as 'fileprivate'
_TtC11SwiftFormat35NoAccessLevelOnExtensionDeclaration
' access modifier to this declaration
move this assignment expression into its own statement
_TtC11SwiftFormat25NoAssignmentInExpressions
replace this block comment with line comments
_TtC11SwiftFormat15NoBlockComments
_TtC11SwiftFormat26NoCasesWithOnlyFallthrough
combine this fallthrough-only 'case' and the following 'case' into a single 'case'
/AppleInternal/Library/BuildRoots/7e2bf0d3-4064-11ef-a538-e2437461156c/Library/Caches/com.apple.xbs/Sources/SourceKitLSP/swift-format/Sources/SwiftFormat/Rules/NoCasesWithOnlyFallthrough.swift
Must have at least one case to merge
remove the empty parentheses following '
_TtC11SwiftFormat33NoEmptyTrailingClosureParentheses
remove the label '
' from this 'case' pattern
_TtC11SwiftFormat22NoLabelsInCasePatterns
_TtC11SwiftFormat20NoLeadingUnderscores
remove the leading '_' from the name '
_TtC11SwiftFormat24NoParensAroundConditions
remove the parentheses around this expression
_TtC11SwiftFormat20NoPlaygroundLiterals
replace '#colorLiteral' with a call to an initializer on 'NSColor' or 'UIColor'
replace '#fileLiteral' with a call to a method such as 'Bundle.url(forResource:withExtension:)'
replace '#imageLiteral' with a call to an initializer on 'NSImage' or 'UIImage'
remove the explicit return type '
' from this function
_TtC11SwiftFormat31NoVoidReturnOnFunctionSignature
'return' can be omitted because body consists of a single expression
_TtC11SwiftFormat19OmitExplicitReturns
' to its own 'case' declaration
_TtC11SwiftFormat14OneCasePerLine
split this variable declaration to introduce only one variable per '
_TtC11SwiftFormat29OneVariableDeclarationPerLine
revise this function call to avoid using both closure arguments and a trailing closure
_TtC11SwiftFormat30OnlyOneTrailingClosureArgument
_TtC11SwiftFormat14OrderedImports
_TtC11SwiftFormatP33_494C8B4EB407CC7E4003E083162582164Line
leadingTrivia
trailingTrivia
syntaxNode
sort import statements lexicographically
remove this duplicate import
place regular imports before declaration imports
 imports before 
place imports at the top of the file
(Line in _494C8B4EB407CC7E4003E08316258216)
replace use of '.forEach { ... }' with for-in loop
_TtC11SwiftFormat25ReplaceForEachWithForLoop
replace '()' with 'Void'
_TtC11SwiftFormat29ReturnVoidInsteadOfEmptyTuple
_TtC11SwiftFormat28TypeNamesShouldBeCapitalized
' using UpperCamelCase; for example, '
replace this 'if/else' block with a 'guard' statement containing the early exit
_TtC11SwiftFormat13UseEarlyExits
compare this value using `!= nil` instead of binding and discarding it
_TtC11SwiftFormat31UseExplicitNilCheckInConditions
move this 'let' keyword inside the 'case' pattern, before each of the bound variables
_TtC11SwiftFormat30UseLetInEveryBoundCaseVariable
use shorthand syntax for this '
_TtC11SwiftFormat21UseShorthandTypeNames
remove 'get {...}' around the accessor and move its body directly into the computed property
_TtC11SwiftFormat27UseSingleLinePropertyGetter
remove this explicit initializer, which is identical to the compiler-synthesized initializer
_TtC11SwiftFormat25UseSynthesizedInitializer
_TtC11SwiftFormat38UseTripleSlashForDocumentationComments
replace documentation block comments with documentation line comments
_TtC11SwiftFormat25UseWhereClausesInForLoops
replace this 'guard' statement with a 'where' clause
replace this 'if' statement with a 'where' clause
_TtC11SwiftFormat29ValidateDocumentationComments
change the parameters of the documentation of '
' to match its parameters
replace the singular inline 'Parameter' section with a plural 'Parameters:' section that has the parameters nested inside it
replace the plural 'Parameters:' section with a singular inline 'Parameter' section
add a 'Returns:' section to document the return value of '
remove the 'Returns:' section of '
'; it does not return a value
add a 'Throws:' section to document the errors thrown by '
remove the 'Throws:' sections of '
'; it does not throw any errors
    opts="$opts 
    if [[ $COMP_CWORD == "
" ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        return
    fi
    case ${COMP_WORDS[
    return
    ;;
    COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
cur="${COMP_WORDS[COMP_CWORD]}"
prev="${COMP_WORDS[COMP_CWORD-1]}"
COMPREPLY=()
COMPREPLY=( $(compgen -W "$("${COMP_WORDS[0]}" 
 "${COMP_WORDS[@]}")" -- "$cur") )
COMPREPLY=( $(compgen -W "
COMPREPLY=( $(compgen -d -- "$cur") )
COMPREPLY=( $(compgen -f -- "$cur") )
$("${COMP_WORDS[0]}" ---completion 
 "${COMP_WORDS[@]}")
ArgumentParser/CompletionsGenerator.swift
Invalid CompletionShell: 
-r -f -a '(command 
 -- --custom (commandline -opc)[1..-1])'
-r -f -a '(__fish_complete_directories)'
-r -f -a '(for i in 
    set -l currentCommands (
 (commandline -opc))
    set -l expectedCommands (string split "
" $argv[1])
    set -l subcommands (string split "
" $argv[2])
    if [ (count $currentCommands) -ge (count $expectedCommands) ]
        for i in (seq (count $expectedCommands))
            if [ $currentCommands[$i] != $expectedCommands[$i] ]
                return 1
            end
        end
        if [ (count $currentCommands) -eq (count $expectedCommands) ]
            return 0
        end
        if [ (count $subcommands) -gt 1 ]
            for i in (seq (count $subcommands))
                if [ $currentCommands[(math (count $expectedCommands) + 1)] = $subcommands[$i] ]
                    return 1
                end
            end
        end
        return 0
    end
    return 1
# A function which filters options which starts with "-" from $argv.
function 
    set -l results
    for i in (seq (count $argv))
        switch (echo $argv[$i] | string sub -l 1)
            case '-'
            case '*'
                echo $argv[$i]
        end
    end
local context state state_descr line
_commandname=$words[1]
typeset -A opt_args
_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
'(-): :->command'
case $state in
    (command)
        local subcommands
        subcommands=(
        )
        _describe "subcommand" subcommands
        ;;
    (arg)
        case ${words[1]} in
        esac
        ;;
esac
() {
    integer ret=1
    local -a args
    args+=(
    )
    _arguments -w -s -S $args[@] && ret=0
    return ret
{_custom_completion $_
{local -a list; list=(${(f)"$(
)"}); _describe '''' list}
Show help information.
Show the version.
ArgumentParser/Argument.swift
--------------------------------------------------------------------
Can't read a value from a parsable
argument definition.
This error indicates that a property declared with an `@Argument`,
`@Option`, `@Flag`, or `@OptionGroup` property wrapper was neither
initialized to a value nor decoded from command-line arguments.
To get a valid value, either call one of the static parsing methods
(`parse`, `parseAsRoot`, or `main`) or define an initializer that
initializes _every_ property of your parsable type.
--------------------------------------------------------------------
Argument(*definition*)
--experimental-dump-help
ArgumentParser/Flag.swift
Flag(*definition*)
ArgumentParser/NameSpecification.swift
' has not characters to form short option name.
ArgumentParser/Option.swift
Option(*definition*)
ArgumentParser/OptionGroup.swift
OptionGroup(*definition*)
Tree<ParsableCommand.Type>
_TtC14ArgumentParser15ArgumentDecoder
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
ArgumentParser/ArgumentDecoder.swift
experimental-dump-help
ArgumentParser/CommandParser.swift
Unexpected error: 
The ParsableCommand "
" can't have itself as its own subcommand.
generateCompletionScript
ArgumentParser/Parsed.swift
Trying to get the argument set from a resolved/parsed property.
Show subcommand help information.
 <subcommand>' for detailed help.
ArgumentParser/HelpGenerator.swift
' for more information.
Unspecified version
ArgumentParser/UsageGenerator.swift
preferredName cannot be nil for named arguments
Missing required subcommand.
Invalid option: -
Invalid option: 
' does not take any value, but '
' was specified.
Internal error. Invalid state while parsing command-line arguments.
Internal error. Parsing command-line arguments hit unimplemented code path.
Can't generate completion scripts for '
Please use --generate-completion-script=<shell> with one of:
    
Can't autodetect a supported shell.
Please use --generate-completion-script=<shell> with one of:
    
Unknown option '
'. Did you mean '
Missing value for '
 unexpected arguments: '
Unexpected argument '
Value to be set with 
 had already been set with 
Missing one of: '
Missing expected argument '
No value set for non-argument var 
. Replace with a static variable, or let constant.
' is invalid for '
' is invalid for '<
. Please provide one of the following:
. Please provide one of 
SHELL
element
children
long
short
longWithSingleDash
positional
option
flag
serializationVersion
defaultSubcommand
attributesOfItemAtPath:error:
closeFile
currentDirectoryPath
defaultManager
destinationOfSymbolicLinkAtPath:error:
environment
fileDescriptor
fileExistsAtPath:isDirectory:
fileHandleForReadingFromURL:error:
fileHandleWithStandardError
fileHandleWithStandardInput
fileHandleWithStandardOutput
firstMatchInString:options:range:
initWithPattern:options:error:
initWithTagSchemes:
isReadableFileAtPath:
nextObject
numberOfRanges
processInfo
rangeAtIndex:
readDataToEndOfFile
setString:
writeData:
Parsing a `%s` node from string interpolation produced the following parsing errors.
Set a breakpoint in `SyntaxParseable.logStringInterpolationParsingError()` to debug the failure.
To explicitly support parsing of invalid source code, import SwiftParser and invoke the parser as follows
  var parser = Parser(source)
  %s.parse(from: &parser)
%{private}s
Note
Important
Experiment
Warning
Attention
Author
Authors
Complexity
Copyright
Date
Invariant
MutatingVariant
Postcondition
Precondition
Remark
Requires
Since
ToDo
Version
Throws
SeeAlso
RawSyntaxData
RawSyntax?
Syntax
Syntax.Info
 !"#$%&
 !"#$%
&<<=
&>>=
NoBlockComments
OneCasePerLine
OrderedImports
UseEarlyExits
green
blue
alpha
resourceName
resourceName
help
version
bash
fish
