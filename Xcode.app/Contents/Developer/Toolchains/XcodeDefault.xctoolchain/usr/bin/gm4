@(#)PROGRAM:gm4  PROJECT:gm4-19
Success
No match
Invalid regular expression
Invalid collation character
Invalid character class name
Trailing backslash
Invalid back reference
Unmatched [ or [^
Unmatched ( or \(
Unmatched \{
Invalid content of \{\}
Invalid range end
Memory exhausted
Invalid preceding regular expression
Premature end of regular expression
Regular expression too big
Unmatched ) or \)
%s: 
%s:%d: 
Unknown system error
: %s
%s: option `%s' is ambiguous
%s: option `--%s' doesn't allow an argument
%s: option `%c%s' doesn't allow an argument
%s: option `%s' requires an argument
%s: unrecognized option `--%s'
%s: unrecognized option `%c%s'
%s: illegal option -- %c
%s: invalid option -- %c
%s: option requires an argument -- %c
%s: option `-W %s' is ambiguous
%s: option `-W %s' doesn't allow an argument
POSIXLY_CORRECT
memory exhausted
(NULL)
UTF-8
UTF8
alnum
space
parse_bracket_exp
regcomp.c
upper
lower
alpha
cntrl
digit
print
blank
graph
punct
xdigit
link_nfa_nodes
node->next == NULL
REG_VALID_INDEX (left)
REG_VALID_INDEX (right)
!IS_EPSILON_NODE (node->token.type)
re_search_stub
regexec.c
pmatch[0].rm_so == start
re_copy_regs
regs_allocated == REGS_FIXED
regs->num_regs >= nregs
check_matching
err == REG_ESPACE
pop_fail_stack
REG_VALID_INDEX (num)
mbuiter_multi_next
mbuiter.h
mbsinit (&iter->state)
*iter->cur.ptr == '\0'
iter->cur.wc == 0
unable to display error message
builtin `%s' requested by frozen file is not supported
__file__
__line__
__program__
builtin
changecom
changequote
debugmode
debugfile
decr
define
defn
divert
divnum
dumpdef
errprint
esyscmd
eval
format
ifdef
ifelse
include
incr
index
indir
m4exit
m4wrap
maketemp
patsubst
popdef
pushdef
regexp
shift
sinclude
substr
syscmd
sysval
traceoff
traceon
translit
undefine
undivert
placeholder
Warning: too few arguments to builtin `%s'
Warning: excess arguments to builtin `%s' ignored
undefined builtin `%s'
Debugmode: bad debug flags: `%s'
cannot set error file: `%s'
empty string treated as 0 in builtin `%s'
non-numeric argument to builtin `%s'
leading whitespace ignored in builtin `%s'
numeric overflow detected in builtin `%s'
INTERNAL ERROR: bad token data type in define_macro ()
INTERNAL ERROR: bad symbol type in m4_defn ()
undefined macro `%s'
%s%s%s
INTERNAL ERROR: builtin not found in builtin table
<%s>
INTERNAL ERROR: bad token data type in m4_dumpdef ()
cannot open pipe to command `%s'
radix in builtin `%s' out of range (radix = %d)
negative width to builtin `%s'
0123456789abcdefghijklmnopqrstuvwxyz
cannot open `%s'
exit status out of range: `%d'
write error
cannot create tempfile `%s'
bad regular expression `%s': %s
error matching regular expression `%s'
Warning: \0 will disappear, use \& instead in replacements
Warning: sub-expression %d not present
Warning: trailing \ ignored in replacement
bad regular expression: `%s': %s
cannot undivert `%s'
unix
__unix__
__gnu__
Warning: cannot protect debug file across forks
m4debug:
%s ...
%l%S%r
INTERNAL ERROR: builtin not found in builtin table! (trace_pre ())
<%s>
INTERNAL ERROR: bad token data type (trace_pre ())
 -> ???
%s%s
(...)
 -> %l%S%r
error writing to debug stream
m4trace:
 -%d- 
id %d: 
bad expression in eval (missing right parenthesis): %s
bad expression in eval: %s
bad expression in eval (bad input): %s
bad expression in eval (excess input): %s
divide by zero in eval: %s
modulo by zero in eval: %s
INTERNAL ERROR: bad error code in evaluate ()
INTERNAL ERROR: bad comparison operator in cmp_term ()
INTERNAL ERROR: bad shift operator in shift_term ()
INTERNAL ERROR: bad operator in mult_term ()
# This is a frozen state file generated by %s
GNU M4 1.4.6
Q%d,%d
C%d,%d
T%d,%d
INTERNAL ERROR: builtin not found in builtin table!
F%d,%d
INTERNAL ERROR: bad token data type in freeze_one_symbol ()
# End of frozen state file
unable to create frozen state
cannot open %s
frozen file version %d greater than max supported of 1
ill-formed frozen file, version directive expected
ill-formed frozen file
premature end of frozen file
unable to read frozen state
expecting line feed in frozen file
expecting character `%c' in frozen file
input read from %s
INTERNAL ERROR: recursive push_string!
Warning: end of file treated as newline
ERROR: end of file in comment
ERROR: end of file in string
INTERNAL ERROR: input stack botch in next_char ()
input reverted to %s, line %d
input exhausted
read error
error reading file
INTERNAL ERROR: input stack botch in pop_input ()
INTERNAL ERROR: input stack botch in peek_input ()
INTERNAL ERROR: bad call to init_macro_token ()
B:D:EF:GH:I:L:N:PQR:S:T:U:d::el:o:st:
bad debug flags: `%s'
Copyright (C) 2006 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Rene' Seindal.
INTERNAL ERROR: bad code in deferred arguments
stdin
ERROR: stack overflow.  (Infinite define recursion?)
arglength
debug
diversions
error-output
fatal-warnings
freeze-state
hashsize
interactive
nesting-limit
prefix-builtins
quiet
reload-state
silent
synclines
traditional
word-regexp
help
version
trace
Try `%s --help' for more information.
Usage: %s [OPTION]... [FILE]...
Process macros in FILEs.  If no FILE or if FILE is `-', standard input
is read.
Mandatory or optional arguments to long options are mandatory or optional
for short options too.
Operation modes:
      --help                   display this help and exit
      --version                output version information and exit
  -E, --fatal-warnings         stop execution after first warning
  -e, --interactive            unbuffer output, ignore interrupts
  -P, --prefix-builtins        force a `m4_' prefix to all builtins
  -Q, --quiet, --silent        suppress some warnings for builtins
Preprocessor features:
  -D, --define=NAME[=VALUE]    define NAME has having VALUE, or empty
  -I, --include=DIRECTORY      append DIRECTORY to include path
  -s, --synclines              generate `#line NUM "FILE"' lines
  -U, --undefine=NAME          undefine NAME
Limits control:
  -G, --traditional            suppress all GNU extensions
  -H, --hashsize=PRIME         set symbol lookup hash table size [509]
  -L, --nesting-limit=NUMBER   change artificial nesting limit [1024]
Frozen state files:
  -F, --freeze-state=FILE      produce a frozen state on FILE at end
  -R, --reload-state=FILE      reload a frozen state from FILE at start
Debugging:
  -d, --debug[=FLAGS]          set debug level (no FLAGS implies `aeq')
  -l, --arglength=NUM          restrict macro tracing size
  -o, --error-output=FILE      redirect debug and trace output
  -t, --trace=NAME             trace NAME when it will be defined
FLAGS is any of:
  a   show actual arguments
  c   show before collect, after collect and after call
  e   show expansion
  f   say current input file name
  i   show changes in input files
  l   say current input line number
  p   show results of path searches
  q   quote values as necessary, with a or e flag
  t   trace for all macro calls, not only traceon'ed
  x   add a unique macro call id, useful with c flag
  V   shorthand for all of the above flags
If defined, the environment variable `M4PATH' is a colon-separated list
of directories included after any specified by `-I'.
Exit status is 0 for success, 1 for failure, 63 for frozen file version
mismatch, or whatever value was passed to the m4exit macro.
Report bugs to <%s>.
bug-m4@gnu.org
INTERNAL ERROR: bad symbol type in call_macro ()
INTERNAL ERROR: bad token type in expand_token ()
ERROR: recursion limit of %d exceeded, use -L<N> to change it
ERROR: end of file in argument list
INTERNAL ERROR: bad token type in expand_argument ()
#line %d
ERROR: reading inserted file
cannot stat diversion
D%d,%d
D%d,%d
D%d,0
ERROR: cannot create temporary file for diversion
Warning: cannot protect diversion across forks
ERROR: cannot flush diversion to temporary file
ERROR: copying inserted file
M4PATH
Warning: cannot protect input file across forks
path search for `%s' found `%s'
getrlimit
sigaltstack
sigaction
VMEM limit exceeded?
Memory bounds violation detected (SIGSEGV).  Either a stack overflow
occurred, or there is a bug in 
.  Check for possible infinite recursion.
INTERNAL ERROR: invalid mode to symbol_lookup ()
@(#)PROGRAM:gm4  PROJECT:gm4-19
3@
osvx
|kqs
}}}?}}}CIM
X```
69@999
999^
Success
No match
Invalid regular expression
Invalid collation character
Invalid character class name
Trailing backslash
Invalid back reference
Unmatched [ or [^
Unmatched ( or \(
Unmatched \{
Invalid content of \{\}
Invalid range end
Memory exhausted
Invalid preceding regular expression
Premature end of regular expression
Regular expression too big
Unmatched ) or \)
kpuz
CCCC
oooqsoz|~ko
oooooooooooo
),0!3
%s: 
%s:%d: 
Unknown system error
: %s
%s: option `%s' is ambiguous
%s: option `--%s' doesn't allow an argument
%s: option `%c%s' doesn't allow an argument
%s: option `%s' requires an argument
%s: unrecognized option `--%s'
%s: unrecognized option `%c%s'
%s: illegal option -- %c
%s: invalid option -- %c
%s: option requires an argument -- %c
%s: option `-W %s' is ambiguous
%s: option `-W %s' doesn't allow an argument
POSIXLY_CORRECT
memory exhausted
(NULL)
UTF-8
UTF8
alnum
space
parse_bracket_exp
regcomp.c
upper
lower
alpha
cntrl
digit
print
blank
graph
punct
xdigit
link_nfa_nodes
node->next == NULL
REG_VALID_INDEX (left)
REG_VALID_INDEX (right)
!IS_EPSILON_NODE (node->token.type)
re_search_stub
regexec.c
pmatch[0].rm_so == start
re_copy_regs
regs_allocated == REGS_FIXED
regs->num_regs >= nregs
check_matching
err == REG_ESPACE
pop_fail_stack
REG_VALID_INDEX (num)
mbuiter_multi_next
mbuiter.h
mbsinit (&iter->state)
*iter->cur.ptr == '\0'
iter->cur.wc == 0
unable to display error message
builtin `%s' requested by frozen file is not supported
__file__
__line__
__program__
builtin
changecom
changequote
debugmode
debugfile
decr
define
defn
divert
divnum
dumpdef
errprint
esyscmd
eval
format
ifdef
ifelse
include
incr
index
indir
m4exit
m4wrap
maketemp
patsubst
popdef
pushdef
regexp
shift
sinclude
substr
syscmd
sysval
traceoff
traceon
translit
undefine
undivert
placeholder
Warning: too few arguments to builtin `%s'
Warning: excess arguments to builtin `%s' ignored
undefined builtin `%s'
Debugmode: bad debug flags: `%s'
cannot set error file: `%s'
empty string treated as 0 in builtin `%s'
non-numeric argument to builtin `%s'
leading whitespace ignored in builtin `%s'
numeric overflow detected in builtin `%s'
INTERNAL ERROR: bad token data type in define_macro ()
INTERNAL ERROR: bad symbol type in m4_defn ()
undefined macro `%s'
%s%s%s
INTERNAL ERROR: builtin not found in builtin table
<%s>
INTERNAL ERROR: bad token data type in m4_dumpdef ()
cannot open pipe to command `%s'
radix in builtin `%s' out of range (radix = %d)
negative width to builtin `%s'
0123456789abcdefghijklmnopqrstuvwxyz
cannot open `%s'
exit status out of range: `%d'
write error
cannot create tempfile `%s'
bad regular expression `%s': %s
error matching regular expression `%s'
Warning: \0 will disappear, use \& instead in replacements
Warning: sub-expression %d not present
Warning: trailing \ ignored in replacement
bad regular expression: `%s': %s
cannot undivert `%s'
unix
__unix__
__gnu__
Warning: cannot protect debug file across forks
m4debug:
%s ...
%l%S%r
INTERNAL ERROR: builtin not found in builtin table! (trace_pre ())
<%s>
INTERNAL ERROR: bad token data type (trace_pre ())
 -> ???
%s%s
(...)
 -> %l%S%r
error writing to debug stream
m4trace:
 -%d- 
id %d: 
bad expression in eval (missing right parenthesis): %s
bad expression in eval: %s
bad expression in eval (bad input): %s
bad expression in eval (excess input): %s
divide by zero in eval: %s
modulo by zero in eval: %s
INTERNAL ERROR: bad error code in evaluate ()
INTERNAL ERROR: bad comparison operator in cmp_term ()
INTERNAL ERROR: bad shift operator in shift_term ()
INTERNAL ERROR: bad operator in mult_term ()
# This is a frozen state file generated by %s
GNU M4 1.4.6
Q%d,%d
C%d,%d
T%d,%d
INTERNAL ERROR: builtin not found in builtin table!
F%d,%d
INTERNAL ERROR: bad token data type in freeze_one_symbol ()
# End of frozen state file
unable to create frozen state
cannot open %s
frozen file version %d greater than max supported of 1
ill-formed frozen file, version directive expected
ill-formed frozen file
premature end of frozen file
unable to read frozen state
expecting line feed in frozen file
expecting character `%c' in frozen file
input read from %s
INTERNAL ERROR: recursive push_string!
Warning: end of file treated as newline
ERROR: end of file in comment
ERROR: end of file in string
INTERNAL ERROR: input stack botch in next_char ()
input reverted to %s, line %d
input exhausted
read error
error reading file
INTERNAL ERROR: input stack botch in pop_input ()
INTERNAL ERROR: input stack botch in peek_input ()
INTERNAL ERROR: bad call to init_macro_token ()
B:D:EF:GH:I:L:N:PQR:S:T:U:d::el:o:st:
bad debug flags: `%s'
Copyright (C) 2006 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Rene' Seindal.
INTERNAL ERROR: bad code in deferred arguments
stdin
ERROR: stack overflow.  (Infinite define recursion?)
arglength
debug
diversions
error-output
fatal-warnings
freeze-state
hashsize
interactive
nesting-limit
prefix-builtins
quiet
reload-state
silent
synclines
traditional
word-regexp
help
version
trace
Try `%s --help' for more information.
Usage: %s [OPTION]... [FILE]...
Process macros in FILEs.  If no FILE or if FILE is `-', standard input
is read.
Mandatory or optional arguments to long options are mandatory or optional
for short options too.
Operation modes:
      --help                   display this help and exit
      --version                output version information and exit
  -E, --fatal-warnings         stop execution after first warning
  -e, --interactive            unbuffer output, ignore interrupts
  -P, --prefix-builtins        force a `m4_' prefix to all builtins
  -Q, --quiet, --silent        suppress some warnings for builtins
Preprocessor features:
  -D, --define=NAME[=VALUE]    define NAME has having VALUE, or empty
  -I, --include=DIRECTORY      append DIRECTORY to include path
  -s, --synclines              generate `#line NUM "FILE"' lines
  -U, --undefine=NAME          undefine NAME
Limits control:
  -G, --traditional            suppress all GNU extensions
  -H, --hashsize=PRIME         set symbol lookup hash table size [509]
  -L, --nesting-limit=NUMBER   change artificial nesting limit [1024]
Frozen state files:
  -F, --freeze-state=FILE      produce a frozen state on FILE at end
  -R, --reload-state=FILE      reload a frozen state from FILE at start
Debugging:
  -d, --debug[=FLAGS]          set debug level (no FLAGS implies `aeq')
  -l, --arglength=NUM          restrict macro tracing size
  -o, --error-output=FILE      redirect debug and trace output
  -t, --trace=NAME             trace NAME when it will be defined
FLAGS is any of:
  a   show actual arguments
  c   show before collect, after collect and after call
  e   show expansion
  f   say current input file name
  i   show changes in input files
  l   say current input line number
  p   show results of path searches
  q   quote values as necessary, with a or e flag
  t   trace for all macro calls, not only traceon'ed
  x   add a unique macro call id, useful with c flag
  V   shorthand for all of the above flags
If defined, the environment variable `M4PATH' is a colon-separated list
of directories included after any specified by `-I'.
Exit status is 0 for success, 1 for failure, 63 for frozen file version
mismatch, or whatever value was passed to the m4exit macro.
Report bugs to <%s>.
bug-m4@gnu.org
INTERNAL ERROR: bad symbol type in call_macro ()
INTERNAL ERROR: bad token type in expand_token ()
ERROR: recursion limit of %d exceeded, use -L<N> to change it
ERROR: end of file in argument list
INTERNAL ERROR: bad token type in expand_argument ()
#line %d
ERROR: reading inserted file
cannot stat diversion
D%d,%d
D%d,%d
D%d,0
ERROR: cannot create temporary file for diversion
Warning: cannot protect diversion across forks
ERROR: cannot flush diversion to temporary file
ERROR: copying inserted file
M4PATH
Warning: cannot protect input file across forks
path search for `%s' found `%s'
getrlimit
sigaltstack
sigaction
VMEM limit exceeded?
Memory bounds violation detected (SIGSEGV).  Either a stack overflow
occurred, or there is a bug in 
.  Check for possible infinite recursion.
INTERNAL ERROR: invalid mode to symbol_lookup ()
