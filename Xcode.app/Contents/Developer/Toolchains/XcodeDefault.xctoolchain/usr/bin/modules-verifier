@(#)PROGRAM:modules-verifier  PROJECT:ModularizationTools-74
modules_verifier
ModulesVerifier
CodingKeys
TerminationReason
NNSTaskTerminationReason
URLResourceKey
NNSURLResourceKey
Foundation
ClangCompiler
ClangCompilerError
ClangDiagnosticsParser
ClangDiagnosticsParserError
ClangDiagnosticsProcessor
Compiler
CompilerController
CompilerInput
CompilerFile
Diagnostic
FixIt
DiagnosticLevel
DiagnosticFormatter
DiagnosticIdentifier
DiagnosticIdentifierEnum
AnyDiagnosticIdentifier
DiagnosticsAmender
DiagnosticsAmendLevel
DiagnosticsAmendModuleIncludes
DiagnosticsFilter
DiagnosticsParser
DiagnosticsProcessor
FileController
FileWarningOption
FileDiagnosticsFormatter
FilenameMapData
CodingKeys
FilenameMap
FileVerifier
Framework
Header
Standard
Language
ModuleMap
ModuleMapKind
ModuleMapFileVerifier
ClangCompilerController
ClangCompilerInput
ClangWarningOption
ClangMessageMatch
ClangDiagnosticFormatter
ClangDiagnosticsFilter
ResultsAggregator
Result
SDKError
ShellError
ShellResult
Target
TargetSet
TargetWarningOption
VerifierController
ArgumentParser
CompletionShell
Argument
ArgumentArrayParsingStrategy
ArgumentHelp
ArgumentVisibility
Representation
CompletionKind
Kind
ValidationError
ExitCode
CleanExit
Representation
Flag
FlagInversion
FlagExclusivity
Representation
NameSpecification
Element
Representation
Option
SingleValueParsingStrategy
ArrayParsingStrategy
OptionGroup
AsyncParsableCommand
AsyncMainProtocol
Command
CommandConfiguration
EnumerableFlag
ExpressibleByArgument
ParsableArguments
ArgumentSetProvider
_WrappedParsableCommand
CodingKeys
 @l]
ParsableArgumentsValidator
ParsableArgumentsValidatorError
ParsableCommand
ArgumentDecoder
ParsedArgumentsContainer
ArrayWrapperProtocol
DecodedArguments
SingleValueDecoder
UnkeyedContainer
ArrayWrapper
SingleValueContainer
Error
ArgumentDefinitionContainer
Contained Initial
ArgumentDefinitionContainerExpressibleByArgument
ArgumentDefinition
ParsingStrategy
Bare
Update
Help
Kind
Options
ArgumentSet
CommandError
AutodetectedGenerateCompletions
GenerateCompletions
HelpRequested
CodingKeys
InputKey
InputOrigin
Element
Name
ParsedWrapper
Value
DecodableParsedWrapper
Parsed
ParsedValues
Element
ParserError
InternalParseError
InputIndex
ParsedArgument
Value
Element
Index
SplitArguments
SubIndex
HelpCommand
CodingKeys
Element
HelpGenerator
Section
DiscussionSection
Header
MessageInfo
StandardError
Platform
Tree
InitializationError
ArgumentParserToolInfo
ToolInfoHeader
ToolInfoV0
CommandInfoV0
ArgumentInfoV0
NameInfoV0
KindV0
CodingKeys
setEnvironment:
T@"NSString",R
Td,R
allObjects
availableData
close
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dataWithJSONObject:options:error:
defaultManager
environment
fileExistsAtPath:
fileHandleForReading
init
initWithData:encoding:
initWithPattern:options:error:
initWithURL:
launchAndReturnError:
matchesInString:options:range:
number
open
processInfo
propertyListWithData:options:format:error:
propertyListWithStream:options:format:error:
rangeAtIndex:
removeItemAtURL:error:
setArguments:
setExecutableURL:
setStandardError:
setStandardOutput:
string
stringByDeletingPathExtension
stringWithUTF8String:
temporaryDirectory
terminationReason
terminationStatus
waitUntilExit
Version
@16@0:8
d16@0:8
missing-module-map
module-map-declares-no-module
module-has-no-headers
multiple-module-maps
duplicate-target-architecture
no-matching-target-architecture-for-target-variant-architecture
no-matching-standard-for-language
explicit framework module
framework module
ignored
note
remark
warning
error
fatal error
none
/usr/local/include/
case-sensitive
contents
version
public
private
ansi
gnu89
gnu99
gnu11
gnu17
c++98
gnu++98
c++11
gnu++11
c++14
gnu++14
c++17
gnu++17
c++20
gnu++20
c++23
gnu++23
c++26
gnu++26
objective-c
objective-c++
An SDK must be provided via `--sdk` or the SDKROOT environment variable (set by `xcrun`)
intermediatesDirectory:
file verification of
Compile task count:
Tests framework clang modules in a clean environment.
The framework to be tested.
Path to the SDK. If not provided, the SDKROOT environment variable (set by `xcrun`) will be used.
Path to clang, defaults to the one specified by the SDK.
Target to pass to clang, e.g. x86_64-apple-macos13.0, arm64-apple-ios16.0, arm64-apple-ios16.0-macabi, etc. Can be specified multiple times.
Target variant to pass to clang, e.g. x86_64-apple-ios16.0-macabi. Can be specified multiple times.
JSON file to map file paths in diagnostics, e.g. from paths in $(BUILT_PRODUCTS_DIR) to $(SRCROOT). Exact format is internal to Xcode and subject to change.
Directory for intermediate testing files, logs, etc.
Emit extra diagnostics, such as ones produced by dependencies.
Experimental - has known compatibility issues with Objective-C frameworks in clang 14.0.x. Runs an additional test using local submodule visibility (a stricter mode with include-what-you-use semantics).
Additional arguments to pass to clang.
Language standard/dialect to test, can be specified multiple times. Values are 
Language to test, can be specified multiple times. Values are 
diagnosticFilenameMap
intermediatesDirectory
enableLocalSubmoduleVisibility
additionalClangArguments
-fdiagnostics-absolute-paths
-fdiagnostics-show-note-include-stack
-Wno-deprecated-declarations
-diagnostic-log-file
no-error=module-import-in-extern-c
undef-prefix=TARGET_OS
incomplete-framework-module-declaration
framework-include-private-from-public
atimport-in-framework-header
quoted-include-in-framework-header
incomplete-umbrella
non-modular-include-in-framework-module
non-modular-include-in-module
uncaught signal: 
_TtC16modules_verifier22ClangDiagnosticsParser
clangDiagnostics
file
Unexpected Format: (
Missing Diagnostics: 
Initialization Failed: 
_TtC16modules_verifier25ClangDiagnosticsProcessor
filters
amenders
knownDiags
unknownDiags
discardedDiags
exitCode
note: (discarded fatal error) 
note: (discarded error) 
note: (discarded warning) 
note: (ignored) 
fatal error: could not build module
<module-includes>
_TtC16modules_verifier14FileController
framework
verifiers
taskName
frameworkName
formatter
results
verifyPublic
verifyPrivate
Public ModuleMap: 
  Public Headers: 
  Private ModuleMap: 
  Private Headers: 
  Additonal ModuleMaps: 
  Additional Module Files: 
Modules/module.modulemap
Modules/module.private.modulemap
module_private.map
exclude\s+header\s+"(.*?)(?<!\\)"
modules_verifier/ModuleMap.swift
private(?:\s+textual)?\s+header\s+"(.*?)(?<!\\)"
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
module map is missing; there are 
 headers but no module map
 module exists but no 
module map does not declare a module
Test/Test.framework
-Wsystem-headers
-fmodules-cache-path=
-fmodules-local-submodule-visibility
module.modulemap
framework module Test {
    umbrella header "Test.h"
    
    export *
    module * { export * }
module-import-in-extern-c
missing submodule
/[\w.]+\.xctoolchain/usr/lib/clang/[\d.]+/include/
.sdk/usr/include/c++/
_TtC16modules_verifier17ResultsAggregator
includeDiscardedDiagnostics
resultQueue
frameworks
knownDiagnostics
unknownDiagnostics
discardedDiagnostics
exitCodeValue
ResultAggregator.results
VerifyModule.XXXXXXXX
v8@?0
SupportedTargets
LLVMTargetTripleVendor
LLVMTargetTripleSys
DefaultDeploymentTarget
LLVMTargetTripleEnvironment
LLVM_TARGET_TRIPLE_OS_VERSION_YES
LLVM_TARGET_TRIPLE_SUFFIX
HEADER_SEARCH_PATHS
SYSTEM_HEADER_SEARCH_PATHS
FRAMEWORK_SEARCH_PATHS
SYSTEM_FRAMEWORK_SEARCH_PATHS
CustomProperties
DefaultProperties
MACOS_UNZIPPERED_TWIN_PREFIX_PATH
IOS_UNZIPPERED_TWIN_PREFIX_PATH
$(SYSTEM_LIBRARY_DIR)
$(LOCAL_LIBRARY_DIR)
$(APPLE_INTERNAL_LIBRARY_DIR)
/AppleInternal/Library
$(MACOS_UNZIPPERED_TWIN_PREFIX_PATH)
$(IOS_UNZIPPERED_TWIN_PREFIX_PATH)
$(SYSTEM_PREFIX)
modules_verifier/SDK.swift
/usr/bin/xcrun --sdk 
Falling back to /usr/bin/clang
 is valid for language 
No matching target for target variant - 
Duplicate target architectures found - 
    opts="$opts 
    if [[ $COMP_CWORD == "
" ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        return
    fi
    case ${COMP_WORDS[
    return
    ;;
    COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
cur="${COMP_WORDS[COMP_CWORD]}"
prev="${COMP_WORDS[COMP_CWORD-1]}"
COMPREPLY=()
COMPREPLY=( $(compgen -W "$("${COMP_WORDS[0]}" 
 "${COMP_WORDS[@]}")" -- "$cur") )
COMPREPLY=( $(compgen -W "
if declare -F _filedir >/dev/null; then
  _filedir -d
else
  COMPREPLY=( $(compgen -d -- "$cur") )
if declare -F _filedir >/dev/null; then
  _filedir -d
else
  COMPREPLY=(
    
$(compgen -f -X '!*.
    $(compgen -d -- "$cur")
if declare -F _filedir >/dev/null; then
  _filedir
else
  COMPREPLY=( $(compgen -f -- "$cur") )
$("${COMP_WORDS[0]}" ---completion 
 "${COMP_WORDS[@]}")
ArgumentParser/CompletionsGenerator.swift
Invalid CompletionShell: 
-r -f -a '(command 
 -- --custom (commandline -opc)[1..-1])'
-r -f -a '(__fish_complete_directories)'
-r -f -a '(for i in 
    set -l currentCommands (
 (commandline -opc))
    set -l expectedCommands (string split "
" $argv[1])
    set -l subcommands (string split "
" $argv[2])
    if [ (count $currentCommands) -ge (count $expectedCommands) ]
        for i in (seq (count $expectedCommands))
            if [ $currentCommands[$i] != $expectedCommands[$i] ]
                return 1
            end
        end
        if [ (count $currentCommands) -eq (count $expectedCommands) ]
            return 0
        end
        if [ (count $subcommands) -gt 1 ]
            for i in (seq (count $subcommands))
                if [ $currentCommands[(math (count $expectedCommands) + 1)] = $subcommands[$i] ]
                    return 1
                end
            end
        end
        return 0
    end
    return 1
# A function which filters options which starts with "-" from $argv.
function 
    set -l results
    for i in (seq (count $argv))
        switch (echo $argv[$i] | string sub -l 1)
            case '-'
            case '*'
                echo $argv[$i]
        end
    end
local context state state_descr line
_commandname=$words[1]
typeset -A opt_args
_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
'(-): :->command'
case $state in
    (command)
        local subcommands
        subcommands=(
        )
        _describe "subcommand" subcommands
        ;;
    (arg)
        case ${words[1]} in
        esac
        ;;
esac
() {
    integer ret=1
    local -a args
    args+=(
    )
    _arguments -w -s -S $args[@] && ret=0
    return ret
{_custom_completion $_
{local -a list; list=(${(f)"$(
)"}); _describe '''' list}
Show help information.
Show the version.
ArgumentParser/Argument.swift
--------------------------------------------------------------------
Can't read a value from a parsable
argument definition.
This error indicates that a property declared with an `@Argument`,
`@Option`, `@Flag`, or `@OptionGroup` property wrapper was neither
initialized to a value nor decoded from command-line arguments.
To get a valid value, either call one of the static parsing methods
(`parse`, `parseAsRoot`, or `main`) or define an initializer that
initializes _every_ property of your parsable type.
--------------------------------------------------------------------
Argument(*definition*)
--experimental-dump-help
ArgumentParser/Flag.swift
Flag(*definition*)
offset element 
ArgumentParser/NameSpecification.swift
' has not characters to form short option name.
ArgumentParser/Option.swift
Option(*definition*)
ArgumentParser/OptionGroup.swift
OptionGroup(*definition*)
Fatal error
Tree<ParsableCommand.Type>
_TtC14ArgumentParser15ArgumentDecoder
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
ArgumentParser/ArgumentDecoder.swift
experimental-dump-help
ArgumentParser/CommandParser.swift
Unexpected error: 
The ParsableCommand "
" can't have itself as its own subcommand.
generateCompletionScript
ArgumentParser/Parsed.swift
Trying to get the argument set from a resolved/parsed property.
Show subcommand help information.
 <subcommand>' for detailed help.
ArgumentParser/HelpGenerator.swift
' for more information.
Unspecified version
ArgumentParser/UsageGenerator.swift
preferredName cannot be nil for named arguments
Missing required subcommand.
Invalid option: -
Invalid option: 
' does not take any value, but '
' was specified.
Internal error. Invalid state while parsing command-line arguments.
Internal error. Parsing command-line arguments hit unimplemented code path.
Can't generate completion scripts for '
Please use --generate-completion-script=<shell> with one of:
    
Can't autodetect a supported shell.
Please use --generate-completion-script=<shell> with one of:
    
Unknown option '
'. Did you mean '
Missing value for '
 unexpected arguments: '
Unexpected argument '
Value to be set with 
 had already been set with 
Missing one of: '
Missing expected argument '
No value set for non-argument var 
. Replace with a static variable, or let constant.
' is invalid for '
' is invalid for '<
. Please provide one of the following:
. Please provide one of 
COLUMNS
LINES
SHELL
element
parent
children
long
short
longWithSingleDash
positional
option
flag
serializationVersion
defaultSubcommand
ySaySSGG
ySay
ySay
ySbG
ySaySSGG
yypG
ySSG
ySnySiGG
ySsG
ySSypG
SS_ypt
_Say
SaySSGG
_SaySSGt
ySSSay
_Shy
_Shy
yS2SG
ySSSDy
ShySSGGG
ShySSGG
_ShySSGt
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
17terminationStatus_t
SSSg
ypSg
SaySDySSypGG
SDySSypG
_p5error_t
SS4path_Si8fragmentt
SS4path_SS11descriptiont
$s16modules_verifier8CompilerP
$s16modules_verifier18CompilerControllerP
$s16modules_verifier13CompilerInputP
$s16modules_verifier19DiagnosticFormatterP
3key_Say
G5valuetSg
SaySSG
$s16modules_verifier20DiagnosticIdentifierP
$s16modules_verifier24DiagnosticIdentifierEnumP
$s16modules_verifier18DiagnosticsAmenderP
$s16modules_verifier17DiagnosticsFilterP
$s16modules_verifier17DiagnosticsParserP
$s16modules_verifier20DiagnosticsProcessorP
$ss12CaseIterableP
SDyS2SG
$s16modules_verifier12FileVerifierP
ySSG
SaySSGSg
So17OS_dispatch_queueC
SDySS
ShySSG
SDySSSDy
ShySSGGG
3key_ShySSG5valuet
3key_ShySSG5valuetG
SaySSGG
3key_SaySSG5valuetSg
SS3key_yp5valuet
SaySsG
SS11description_t
So6NSPipeC
z_Xx
_SS11descriptiont
$s16modules_verifier18VerifierControllerP
SaySSG
SaySsG
SaySJG
ySJG
$sSY
$ss12CaseIterableP
_pXpG
ySSG
SSSg
ySSG
_pIeghgrzo_
qd__
qd__Sg
SSqd__
_pIeghgrzo_
Sayqd__G
$s14ArgumentParser13ParsedWrapperP
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SaySSG10extensions_t
SaySSGAAYbc
_pXpSg
SbSg
Sayqd__GSg
ypSg
$ss25ExpressibleByArrayLiteralP
SS_Sb14withSingleDasht
SJ_Sb14allowingJoinedt
_pSg
$s14ArgumentParser20AsyncParsableCommandP
$s14ArgumentParser17AsyncMainProtocolP
7Command
_pXpG
$s14ArgumentParser14EnumerableFlagP
8RawValueSYQz
$s14ArgumentParser013ExpressibleByA0P
yypG
$s14ArgumentParser17ParsableArgumentsP
$s14ArgumentParser0A11SetProviderP
SSSg5label_yp5valuet
_pSg
SgSSyp
_pIegggggrzo_
$s14ArgumentParser26ParsableArgumentsValidator33_D8B6916CE93C2FC7F7BEDE789FAE65F8LLP
$s14ArgumentParser31ParsableArgumentsValidatorErrorP
$s14ArgumentParser15ParsableCommandP
_SitG
_Sit
_pXpG
ySsG
_SStG
_SSt
ySi_
_pXmTSg
$s14ArgumentParser20ArrayWrapperProtocolP
_pXp
$ss30KeyedDecodingContainerProtocolP
SayypG
yypG
_pXpGG
ySnySiGG
ySaySSGG
ySiG
_pXp_AA_pXpt
SayxG
$s14ArgumentParser0A19DefinitionContainerP
$s14ArgumentParser0a32DefinitionContainerExpressibleByA0P
9Contained
ztKc
SS9Contained
_pIeggrzo_
SgSS9Contained
_pIegggggrzo_
7Initial
QzSg
ztKc
SgSS
ztKc
$ss10SetAlgebraP
$ss9OptionSetP
$sST
SnySiG
$sSl
$sSK
$sSk
yyXlG
_SStSg
_pSg
ySSG
ySbG
SgS2S
_pIegggggrzo_
$s14ArgumentParser22DecodableParsedWrapperP
5Value
_pXpGADG
ySSSay
10visibility_t
SSSg5shell_t
_SStG
8previous_AA9duplicateSaySSG13originalInputt
6forKey_t
SgSS
6forKey
_pSg13originalErrort
SS19valueRepresentation_
6forKeyt
Si_Sit
_SSt
Sb8inserted_
17memberAfterInsertt
ySaySSGG
ySaySSGSSG
SaySSGSg
_ypt
ySaySSGG
ySay
GSSG
SS4text_t
SS7message_SS5usageSS4helpt
SS7message_
8exitCodet
yxGSgXw
yxGG
_pXpGACG
_pXpGACSgIegnr_
_pXp
SaySSGSg
SaySSG
$sSY
SSSg
_framework
_sdk
_clang
_target
_targetVariant
_language
_standard
_diagnosticFilenameMap
_intermediatesDirectory
_verbose
_enableLocalSubmoduleVisibility
_additionalClangArguments
_rawValue
framework
clang
target
targetVariant
language
standard
diagnosticFilenameMap
intermediatesDirectory
verbose
enableLocalSubmoduleVisibility
additionalClangArguments
RawValue
_ObjectiveCType
uncaughtSignal
language
target
targetVariant
standard
clangDiagnostics
file
initialization
missingDiags
unexpectedFormat
filters
amenders
knownDiags
unknownDiags
discardedDiags
exitCode
path
content
warningOption
column
fileName
level
line
message
fixIts
notes
ignored
note
remark
warning
error
fatal
none
path
startLine
startColumn
endLine
endColumn
textToInsert
RawValue
identifier
framework
framework
verifiers
taskName
frameworkName
formatter
results
verifyPublic
verifyPrivate
missingModuleMap
moduleMapDeclaresNoModule
moduleHasNoHeaders
multipleModuleMaps
AllCases
RawValue
filenameMap
caseSensitive
contents
version
filenameMap
RawValue
directory
inSDK
framework
name
headersDirectory
privateHeadersDirectory
headers
privateHeaders
publicModuleMap
privateModuleMap
additionalModuleMaps
additionalModuleFiles
publicUmbrellaHeader
privateUmbrellaHeader
publicHeaderNames
privateHeaderNames
file
unresolvedFile
framework
subFolder
header
cPlusPlus
objectiveC
objectiveCPlusPlus
ansi
gnu89
gnu99
gnu11
gnu17
cPlusPlus98
gnuPlusPlus98
cPlusPlus11
gnuPlusPlus11
cPlusPlus14
gnuPlusPlus14
cPlusPlus17
gnuPlusPlus17
cPlusPlus20
gnuPlusPlus20
cPlusPlus23
gnuPlusPlus23
cPlusPlus26
gnuPlusPlus26
RawValue
AllCases
kind
framework
modules
modulesHaveContents
excludedHeaderNames
privateHeaderNames
publicModule
privateModule
RawValue
framework
compiler
input
parser
processor
formatter
results
taskName
frameworkName
framework
sourceRoot
usePrivateHeaders
language
enableLocalSubmoduleVisibility
additionalArguments
RawValue
nonModular
nonModularFramework
incompleteUmbrella
quotedInclude
atImport
privateFromPublic
incompleteModule
undefPrefixTargetOS
moduleImportInExternC
errorLimit
moduleBuild
neverUse
fileNotFound
AllCases
filenameMap
frameworkName
frameworkDirectory
moduleTestDirectory
framework
moduleDirectoryPath
testHeaderPath
includeDiscardedDiagnostics
intermediatesDirectory
resultQueue
results
frameworks
knownDiagnostics
unknownDiagnostics
discardedDiagnostics
exitCodeValue
compilerAction
diagnostics
directory
clang
settings
toolchain
stdOutData
stdErrData
terminationStatus
terminationReason
cmdline
language
standard
target
targetVariant
value
architecture
duplicateTargetArchitecture
noMatchingTargetArchitectureForTargetVariantArchitecture
noMatchingStandardForLanguage
AllCases
RawValue
RawValue
AllCases
rawValue
Value
_parsedValue
base
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
abstract
discussion
valueName
visibility
base
default
hidden
private
kind
list
file
shellCommand
custom
default
directory
RawValue
message
rawValue
base
helpRequest
dumpRequest
Value
_parsedValue
base
prefixedNo
prefixedEnableDisable
exclusive
chooseFirst
chooseLast
ArrayLiteralElement
elements
base
customLong
customShort
long
short
Value
_parsedValue
base
Value
_parsedValue
_visibility
_dummy
title
commandName
_superCommandName
abstract
usage
discussion
version
shouldDisplay
subcommands
defaultSubcommand
helpNames
_options
options
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
underlying
parsedElement
type
value
wrongKeyType
topLevelHasNoUnkeyedContainer
topLevelHasNoSingleValueContainer
singleValueDecoderHasNoContainer
base
currentIndex
array
Contained
Initial
default
scanningForValue
unconditional
upToNextOption
allRemainingInput
postTerminator
allUnrecognized
kind
help
completion
parsingStrategy
update
initial
options
defaultValue
keys
allValueStrings
isComposite
abstract
discussion
valueName
visibility
parentTitle
nullary
unary
named
positional
rawValue
ArrayLiteralElement
Element
RawValue
Element
Iterator
Index
SubSequence
Indices
content
namePositions
commandStack
parserError
visibility
_generateCompletionScript
generateCompletionScript
name
path
_elements
ArrayLiteralElement
argumentIndex
defaultValue
long
short
longWithSingleDash
value
definition
value
inputOrigin
shouldClearArrayIfParsed
elements
originalInput
capturedUnrecognizedArguments
helpRequested
completionScriptRequested
completionScriptCustomResponse
unsupportedShell
unknownOption
invalidOption
nonAlphanumericShortOption
missingValueForOption
unexpectedValueForOption
unexpectedExtraValues
duplicateExclusiveValues
noValue
unableToParseValue
userValidationError
noArguments
versionRequested
dumpHelpRequested
notImplemented
invalidState
missingSubcommand
wrongType
subcommandLevelMismatch
subcommandLevelMissing
subcommandLevelDuplicated
subcommandNameMismatch
expectedCommandButNoneFound
_elements
firstUnused
originalInput
inputIndex
subIndex
value
index
option
terminator
name
nameWithValue
rawValue
RawValue
complete
_subcommands
_help
commandStack
visibility
subcommands
help
header
elements
discussion
isSubcommands
commandStack
abstract
usage
sections
discussionSections
label
title
positionalArguments
subcommands
options
content
help
validation
other
element
parent
children
recursiveSubcommand
RawValue
serializationVersion
command
superCommands
commandName
abstract
discussion
defaultSubcommand
subcommands
arguments
kind
shouldDisplay
sectionTitle
isOptional
isRepeating
names
preferredName
valueName
defaultValue
allValues
name
long
short
longWithSingleDash
positional
option
flag
explicit module
module
export *
/usr/include/
/usr/lib/
help
version
bash
fish
@(#)PROGRAM:modules-verifier  PROJECT:ModularizationTools-74
#*06<
modules_verifier
ModulesVerifier
CodingKeys
TerminationReason
NNSTaskTerminationReason
URLResourceKey
NNSURLResourceKey
Foundation
ClangCompiler
ClangCompilerError
Complete File
ClangDiagnosticsParser
ClangDiagnosticsParserError
KPU]
ClangDiagnosticsProcessor
Compiler
CompilerController
CompilerInput
CompilerFile
Diagnostic
FixIt
DiagnosticLevel
DiagnosticFormatter
DiagnosticIdentifier
DiagnosticIdentifierEnum
AnyDiagnosticIdentifier
DiagnosticsAmender
DiagnosticsAmendLevel
DiagnosticsAmendModuleIncludes
DiagnosticsFilter
DiagnosticsParser
DiagnosticsProcessor
FileController
FileWarningOption
FileDiagnosticsFormatter
FilenameMapData
CodingKeys
FilenameMap
FileVerifier
Framework
Header
!&+16<AGLRWn]ch
Standard
Language
ModuleMap
ModuleMapKind
ModuleMapFileVerifier
ClangCompilerController
ClangCompilerInput
ClangWarningOption
ClangMessageMatch
ClangDiagnosticFormatter
pJNZgRkVb
ClangDiagnosticsFilter
ResultsAggregator
Result
SDKError
ShellError
ShellResult
!&+16<AGLRW]bhm
Target
TargetSet
<Targets
TargetWarningOption
VerifierController
@help
ArgumentParser
CompletionShell
Argument
ArgumentArrayParsingStrategy
ArgumentHelp
ArgumentVisibility
Representation
CompletionKind
Kind
ValidationError
ExitCode
CleanExit
Representation
Flag
FlagInversion
FlagExclusivity
Representation
NameSpecification
Element
Representation
Option
SingleValueParsingStrategy
ArrayParsingStrategy
OptionGroup
AsyncParsableCommand
AsyncMainProtocol
Command
CommandConfiguration
EnumerableFlag
ExpressibleByArgument
ParsableArguments
ArgumentSetProvider
_WrappedParsableCommand
CodingKeys
ParsableArgumentsValidator
ParsableArgumentsValidatorError
ParsableCommand
ArgumentDecoder
ParsedArgumentsContainer
ArrayWrapperProtocol
DecodedArguments
SingleValueDecoder
UnkeyedContainer
ArrayWrapper
SingleValueContainer
Error
ArgumentDefinitionContainer
Contained Initial
ArgumentDefinitionContainerExpressibleByArgument
ArgumentDefinition
ParsingStrategy
Bare
Update
Help
Kind
Options
ArgumentSet
CommandError
AutodetectedGenerateCompletions
GenerateCompletions
HelpRequested
CodingKeys
InputKey
InputOrigin
Element
Name
ParsedWrapper
Value
DecodableParsedWrapper
Parsed
ParsedValues
Element
ParserError
InternalParseError
InputIndex
ParsedArgument
Value
Element
Index
SplitArguments
SubIndex
HelpCommand
CodingKeys
Element
HelpGenerator
Section
DiscussionSection
Header
MessageInfo
StandardError
Platform
Tree
InitializationError
 %.5=EK
ArgumentParserToolInfo
ToolInfoHeader
ToolInfoV0
CommandInfoV0
ArgumentInfoV0
NameInfoV0
KindV0
CodingKeys
Version
setEnvironment:
T@"NSString",R
Td,R
allObjects
availableData
close
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dataWithJSONObject:options:error:
defaultManager
environment
fileExistsAtPath:
fileHandleForReading
init
initWithData:encoding:
initWithPattern:options:error:
initWithURL:
launchAndReturnError:
matchesInString:options:range:
number
open
processInfo
propertyListWithData:options:format:error:
propertyListWithStream:options:format:error:
rangeAtIndex:
removeItemAtURL:error:
setArguments:
setExecutableURL:
setStandardError:
setStandardOutput:
string
stringByDeletingPathExtension
stringWithUTF8String:
temporaryDirectory
terminationReason
terminationStatus
waitUntilExit
@16@0:8
d16@0:8
missing-module-map
module-map-declares-no-module
module-has-no-headers
multiple-module-maps
duplicate-target-architecture
no-matching-target-architecture-for-target-variant-architecture
no-matching-standard-for-language
explicit framework module
framework module
ignored
note
remark
warning
error
fatal error
none
/usr/local/include/
case-sensitive
contents
version
public
private
ansi
gnu89
gnu99
gnu11
gnu17
c++98
gnu++98
c++11
gnu++11
c++14
gnu++14
c++17
gnu++17
c++20
gnu++20
c++23
gnu++23
c++26
gnu++26
objective-c
objective-c++
An SDK must be provided via `--sdk` or the SDKROOT environment variable (set by `xcrun`)
intermediatesDirectory:
file verification of
Compile task count:
Tests framework clang modules in a clean environment.
The framework to be tested.
Path to the SDK. If not provided, the SDKROOT environment variable (set by `xcrun`) will be used.
Path to clang, defaults to the one specified by the SDK.
Target to pass to clang, e.g. x86_64-apple-macos13.0, arm64-apple-ios16.0, arm64-apple-ios16.0-macabi, etc. Can be specified multiple times.
Target variant to pass to clang, e.g. x86_64-apple-ios16.0-macabi. Can be specified multiple times.
JSON file to map file paths in diagnostics, e.g. from paths in $(BUILT_PRODUCTS_DIR) to $(SRCROOT). Exact format is internal to Xcode and subject to change.
Directory for intermediate testing files, logs, etc.
Emit extra diagnostics, such as ones produced by dependencies.
Experimental - has known compatibility issues with Objective-C frameworks in clang 14.0.x. Runs an additional test using local submodule visibility (a stricter mode with include-what-you-use semantics).
Additional arguments to pass to clang.
Language standard/dialect to test, can be specified multiple times. Values are 
Language to test, can be specified multiple times. Values are 
diagnosticFilenameMap
intermediatesDirectory
enableLocalSubmoduleVisibility
additionalClangArguments
-fdiagnostics-absolute-paths
-fdiagnostics-show-note-include-stack
-Wno-deprecated-declarations
-diagnostic-log-file
no-error=module-import-in-extern-c
undef-prefix=TARGET_OS
incomplete-framework-module-declaration
framework-include-private-from-public
atimport-in-framework-header
quoted-include-in-framework-header
incomplete-umbrella
non-modular-include-in-framework-module
non-modular-include-in-module
uncaught signal: 
_TtC16modules_verifier22ClangDiagnosticsParser
clangDiagnostics
file
Unexpected Format: (
Missing Diagnostics: 
Initialization Failed: 
_TtC16modules_verifier25ClangDiagnosticsProcessor
filters
amenders
knownDiags
unknownDiags
discardedDiags
exitCode
note: (discarded fatal error) 
note: (discarded error) 
note: (discarded warning) 
note: (ignored) 
fatal error: could not build module
<module-includes>
_TtC16modules_verifier14FileController
framework
verifiers
taskName
frameworkName
formatter
results
verifyPublic
verifyPrivate
Public ModuleMap: 
  Public Headers: 
  Private ModuleMap: 
  Private Headers: 
  Additonal ModuleMaps: 
  Additional Module Files: 
Modules/module.modulemap
Modules/module.private.modulemap
module_private.map
exclude\s+header\s+"(.*?)(?<!\\)"
modules_verifier/ModuleMap.swift
private(?:\s+textual)?\s+header\s+"(.*?)(?<!\\)"
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
module map is missing; there are 
 headers but no module map
 module exists but no 
module map does not declare a module
Test/Test.framework
-Wsystem-headers
-fmodules-cache-path=
-fmodules-local-submodule-visibility
module.modulemap
framework module Test {
    umbrella header "Test.h"
    
    export *
    module * { export * }
module-import-in-extern-c
missing submodule
/[\w.]+\.xctoolchain/usr/lib/clang/[\d.]+/include/
.sdk/usr/include/c++/
_TtC16modules_verifier17ResultsAggregator
includeDiscardedDiagnostics
resultQueue
frameworks
knownDiagnostics
unknownDiagnostics
discardedDiagnostics
exitCodeValue
ResultAggregator.results
VerifyModule.XXXXXXXX
v8@?0
SupportedTargets
LLVMTargetTripleVendor
LLVMTargetTripleSys
DefaultDeploymentTarget
LLVMTargetTripleEnvironment
LLVM_TARGET_TRIPLE_OS_VERSION_YES
LLVM_TARGET_TRIPLE_SUFFIX
HEADER_SEARCH_PATHS
SYSTEM_HEADER_SEARCH_PATHS
FRAMEWORK_SEARCH_PATHS
SYSTEM_FRAMEWORK_SEARCH_PATHS
CustomProperties
DefaultProperties
MACOS_UNZIPPERED_TWIN_PREFIX_PATH
IOS_UNZIPPERED_TWIN_PREFIX_PATH
$(SYSTEM_LIBRARY_DIR)
$(LOCAL_LIBRARY_DIR)
$(APPLE_INTERNAL_LIBRARY_DIR)
/AppleInternal/Library
$(MACOS_UNZIPPERED_TWIN_PREFIX_PATH)
$(IOS_UNZIPPERED_TWIN_PREFIX_PATH)
$(SYSTEM_PREFIX)
modules_verifier/SDK.swift
/usr/bin/xcrun --sdk 
Falling back to /usr/bin/clang
 is valid for language 
No matching target for target variant - 
Duplicate target architectures found - 
    opts="$opts 
    if [[ $COMP_CWORD == "
" ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        return
    fi
    case ${COMP_WORDS[
    return
    ;;
    COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
cur="${COMP_WORDS[COMP_CWORD]}"
prev="${COMP_WORDS[COMP_CWORD-1]}"
COMPREPLY=()
COMPREPLY=( $(compgen -W "$("${COMP_WORDS[0]}" 
 "${COMP_WORDS[@]}")" -- "$cur") )
COMPREPLY=( $(compgen -W "
if declare -F _filedir >/dev/null; then
  _filedir -d
else
  COMPREPLY=( $(compgen -d -- "$cur") )
if declare -F _filedir >/dev/null; then
  _filedir -d
else
  COMPREPLY=(
    
$(compgen -f -X '!*.
    $(compgen -d -- "$cur")
if declare -F _filedir >/dev/null; then
  _filedir
else
  COMPREPLY=( $(compgen -f -- "$cur") )
$("${COMP_WORDS[0]}" ---completion 
 "${COMP_WORDS[@]}")
ArgumentParser/CompletionsGenerator.swift
Invalid CompletionShell: 
-r -f -a '(command 
 -- --custom (commandline -opc)[1..-1])'
-r -f -a '(__fish_complete_directories)'
-r -f -a '(for i in 
    set -l currentCommands (
 (commandline -opc))
    set -l expectedCommands (string split "
" $argv[1])
    set -l subcommands (string split "
" $argv[2])
    if [ (count $currentCommands) -ge (count $expectedCommands) ]
        for i in (seq (count $expectedCommands))
            if [ $currentCommands[$i] != $expectedCommands[$i] ]
                return 1
            end
        end
        if [ (count $currentCommands) -eq (count $expectedCommands) ]
            return 0
        end
        if [ (count $subcommands) -gt 1 ]
            for i in (seq (count $subcommands))
                if [ $currentCommands[(math (count $expectedCommands) + 1)] = $subcommands[$i] ]
                    return 1
                end
            end
        end
        return 0
    end
    return 1
# A function which filters options which starts with "-" from $argv.
function 
    set -l results
    for i in (seq (count $argv))
        switch (echo $argv[$i] | string sub -l 1)
            case '-'
            case '*'
                echo $argv[$i]
        end
    end
local context state state_descr line
_commandname=$words[1]
typeset -A opt_args
_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
'(-): :->command'
case $state in
    (command)
        local subcommands
        subcommands=(
        )
        _describe "subcommand" subcommands
        ;;
    (arg)
        case ${words[1]} in
        esac
        ;;
esac
() {
    integer ret=1
    local -a args
    args+=(
    )
    _arguments -w -s -S $args[@] && ret=0
    return ret
{_custom_completion $_
{local -a list; list=(${(f)"$(
)"}); _describe '''' list}
Show help information.
Show the version.
ArgumentParser/Argument.swift
--------------------------------------------------------------------
Can't read a value from a parsable
argument definition.
This error indicates that a property declared with an `@Argument`,
`@Option`, `@Flag`, or `@OptionGroup` property wrapper was neither
initialized to a value nor decoded from command-line arguments.
To get a valid value, either call one of the static parsing methods
(`parse`, `parseAsRoot`, or `main`) or define an initializer that
initializes _every_ property of your parsable type.
--------------------------------------------------------------------
Argument(*definition*)
--experimental-dump-help
ArgumentParser/Flag.swift
Flag(*definition*)
offset element 
ArgumentParser/NameSpecification.swift
' has not characters to form short option name.
ArgumentParser/Option.swift
Option(*definition*)
ArgumentParser/OptionGroup.swift
OptionGroup(*definition*)
Fatal error
Tree<ParsableCommand.Type>
_TtC14ArgumentParser15ArgumentDecoder
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
ArgumentParser/ArgumentDecoder.swift
experimental-dump-help
ArgumentParser/CommandParser.swift
Unexpected error: 
The ParsableCommand "
" can't have itself as its own subcommand.
generateCompletionScript
ArgumentParser/Parsed.swift
Trying to get the argument set from a resolved/parsed property.
Show subcommand help information.
 <subcommand>' for detailed help.
ArgumentParser/HelpGenerator.swift
' for more information.
Unspecified version
ArgumentParser/UsageGenerator.swift
preferredName cannot be nil for named arguments
Missing required subcommand.
Invalid option: -
Invalid option: 
' does not take any value, but '
' was specified.
Internal error. Invalid state while parsing command-line arguments.
Internal error. Parsing command-line arguments hit unimplemented code path.
Can't generate completion scripts for '
Please use --generate-completion-script=<shell> with one of:
    
Can't autodetect a supported shell.
Please use --generate-completion-script=<shell> with one of:
    
Unknown option '
'. Did you mean '
Missing value for '
 unexpected arguments: '
Unexpected argument '
Value to be set with 
 had already been set with 
Missing one of: '
Missing expected argument '
No value set for non-argument var 
. Replace with a static variable, or let constant.
' is invalid for '
' is invalid for '<
. Please provide one of the following:
. Please provide one of 
COLUMNS
LINES
SHELL
element
parent
children
long
short
longWithSingleDash
positional
option
flag
serializationVersion
defaultSubcommand
ySaySSGG
ySay
ySay
ySbG
ySaySSGG
yypG
ySSG
ySnySiGG
ySsG
ySSypG
SS_ypt
_Say
SaySSGG
_SaySSGt
ySSSay
_Shy
_Shy
yS2SG
ySSSDy
ShySSGGG
ShySSGG
_ShySSGt
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
17terminationStatus_t
SSSg
ypSg
SaySDySSypGG
SDySSypG
_p5error_t
SS4path_Si8fragmentt
SS4path_SS11descriptiont
$s16modules_verifier8CompilerP
$s16modules_verifier18CompilerControllerP
$s16modules_verifier13CompilerInputP
$s16modules_verifier19DiagnosticFormatterP
3key_Say
G5valuetSg
SaySSG
$s16modules_verifier20DiagnosticIdentifierP
$s16modules_verifier24DiagnosticIdentifierEnumP
$s16modules_verifier18DiagnosticsAmenderP
$s16modules_verifier17DiagnosticsFilterP
$s16modules_verifier17DiagnosticsParserP
$s16modules_verifier20DiagnosticsProcessorP
$ss12CaseIterableP
SDyS2SG
$s16modules_verifier12FileVerifierP
ySSG
SaySSGSg
So17OS_dispatch_queueC
SDySS
ShySSG
SDySSSDy
ShySSGGG
3key_ShySSG5valuet
3key_ShySSG5valuetG
SaySSGG
3key_SaySSG5valuetSg
SS3key_yp5valuet
SaySsG
SS11description_t
So6NSPipeC
z_Xx
_SS11descriptiont
$s16modules_verifier18VerifierControllerP
SaySSG
SaySsG
SaySJG
ySJG
$sSY
$ss12CaseIterableP
_pXpG
ySSG
SSSg
ySSG
_pIeghgrzo_
qd__
qd__Sg
SSqd__
_pIeghgrzo_
Sayqd__G
$s14ArgumentParser13ParsedWrapperP
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SaySSG10extensions_t
SaySSGAAYbc
_pXpSg
SbSg
Sayqd__GSg
ypSg
$ss25ExpressibleByArrayLiteralP
SS_Sb14withSingleDasht
SJ_Sb14allowingJoinedt
_pSg
$s14ArgumentParser20AsyncParsableCommandP
$s14ArgumentParser17AsyncMainProtocolP
7Command
_pXpG
$s14ArgumentParser14EnumerableFlagP
8RawValueSYQz
$s14ArgumentParser013ExpressibleByA0P
yypG
$s14ArgumentParser17ParsableArgumentsP
$s14ArgumentParser0A11SetProviderP
SSSg5label_yp5valuet
_pSg
SgSSyp
_pIegggggrzo_
$s14ArgumentParser26ParsableArgumentsValidator33_D8B6916CE93C2FC7F7BEDE789FAE65F8LLP
$s14ArgumentParser31ParsableArgumentsValidatorErrorP
$s14ArgumentParser15ParsableCommandP
_SitG
_Sit
_pXpG
ySsG
_SStG
_SSt
ySi_
_pXmTSg
$s14ArgumentParser20ArrayWrapperProtocolP
_pXp
$ss30KeyedDecodingContainerProtocolP
SayypG
yypG
_pXpGG
ySnySiGG
ySaySSGG
ySiG
_pXp_AA_pXpt
SayxG
$s14ArgumentParser0A19DefinitionContainerP
$s14ArgumentParser0a32DefinitionContainerExpressibleByA0P
9Contained
ztKc
SS9Contained
_pIeggrzo_
SgSS9Contained
_pIegggggrzo_
7Initial
QzSg
ztKc
SgSS
ztKc
$ss10SetAlgebraP
$ss9OptionSetP
$sST
SnySiG
$sSl
$sSK
$sSk
yyXlG
_SStSg
_pSg
ySSG
ySbG
SgS2S
_pIegggggrzo_
$s14ArgumentParser22DecodableParsedWrapperP
5Value
_pXpGADG
ySSSay
10visibility_t
SSSg5shell_t
_SStG
8previous_AA9duplicateSaySSG13originalInputt
6forKey_t
SgSS
6forKey
_pSg13originalErrort
SS19valueRepresentation_
6forKeyt
Si_Sit
_SSt
Sb8inserted_
17memberAfterInsertt
ySaySSGG
ySaySSGSSG
SaySSGSg
_ypt
ySaySSGG
ySay
GSSG
SS4text_t
SS7message_SS5usageSS4helpt
SS7message_
8exitCodet
yxGSgXw
yxGG
_pXpGACG
_pXpGACSgIegnr_
_pXp
SaySSGSg
SaySSG
$sSY
SSSg
_framework
_sdk
_clang
_target
_targetVariant
_language
_standard
_diagnosticFilenameMap
_intermediatesDirectory
_verbose
_enableLocalSubmoduleVisibility
_additionalClangArguments
_rawValue
framework
clang
target
targetVariant
language
standard
diagnosticFilenameMap
intermediatesDirectory
verbose
enableLocalSubmoduleVisibility
additionalClangArguments
RawValue
_ObjectiveCType
uncaughtSignal
language
target
targetVariant
standard
clangDiagnostics
file
initialization
missingDiags
unexpectedFormat
filters
amenders
knownDiags
unknownDiags
discardedDiags
exitCode
path
content
warningOption
column
fileName
level
line
message
fixIts
notes
ignored
note
remark
warning
error
fatal
none
path
startLine
startColumn
endLine
endColumn
textToInsert
RawValue
identifier
framework
framework
verifiers
taskName
frameworkName
formatter
results
verifyPublic
verifyPrivate
missingModuleMap
moduleMapDeclaresNoModule
moduleHasNoHeaders
multipleModuleMaps
AllCases
RawValue
filenameMap
caseSensitive
contents
version
filenameMap
RawValue
directory
inSDK
framework
name
headersDirectory
privateHeadersDirectory
headers
privateHeaders
publicModuleMap
privateModuleMap
additionalModuleMaps
additionalModuleFiles
publicUmbrellaHeader
privateUmbrellaHeader
publicHeaderNames
privateHeaderNames
file
unresolvedFile
framework
subFolder
header
cPlusPlus
objectiveC
objectiveCPlusPlus
ansi
gnu89
gnu99
gnu11
gnu17
cPlusPlus98
gnuPlusPlus98
cPlusPlus11
gnuPlusPlus11
cPlusPlus14
gnuPlusPlus14
cPlusPlus17
gnuPlusPlus17
cPlusPlus20
gnuPlusPlus20
cPlusPlus23
gnuPlusPlus23
cPlusPlus26
gnuPlusPlus26
RawValue
AllCases
kind
framework
modules
modulesHaveContents
excludedHeaderNames
privateHeaderNames
publicModule
privateModule
RawValue
framework
compiler
input
parser
processor
formatter
results
taskName
frameworkName
framework
sourceRoot
usePrivateHeaders
language
enableLocalSubmoduleVisibility
additionalArguments
RawValue
nonModular
nonModularFramework
incompleteUmbrella
quotedInclude
atImport
privateFromPublic
incompleteModule
undefPrefixTargetOS
moduleImportInExternC
errorLimit
moduleBuild
neverUse
fileNotFound
AllCases
filenameMap
frameworkName
frameworkDirectory
moduleTestDirectory
framework
moduleDirectoryPath
testHeaderPath
includeDiscardedDiagnostics
intermediatesDirectory
resultQueue
results
frameworks
knownDiagnostics
unknownDiagnostics
discardedDiagnostics
exitCodeValue
compilerAction
diagnostics
directory
clang
settings
toolchain
stdOutData
stdErrData
terminationStatus
terminationReason
cmdline
language
standard
target
targetVariant
value
architecture
duplicateTargetArchitecture
noMatchingTargetArchitectureForTargetVariantArchitecture
noMatchingStandardForLanguage
AllCases
RawValue
RawValue
AllCases
rawValue
Value
_parsedValue
base
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
abstract
discussion
valueName
visibility
base
default
hidden
private
kind
list
file
shellCommand
custom
default
directory
RawValue
message
rawValue
base
helpRequest
dumpRequest
Value
_parsedValue
base
prefixedNo
prefixedEnableDisable
exclusive
chooseFirst
chooseLast
ArrayLiteralElement
elements
base
customLong
customShort
long
short
Value
_parsedValue
base
Value
_parsedValue
_visibility
_dummy
title
commandName
_superCommandName
abstract
usage
discussion
version
shouldDisplay
subcommands
defaultSubcommand
helpNames
_options
options
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
underlying
parsedElement
type
value
wrongKeyType
topLevelHasNoUnkeyedContainer
topLevelHasNoSingleValueContainer
singleValueDecoderHasNoContainer
base
currentIndex
array
Contained
Initial
default
scanningForValue
unconditional
upToNextOption
allRemainingInput
postTerminator
allUnrecognized
kind
help
completion
parsingStrategy
update
initial
options
defaultValue
keys
allValueStrings
isComposite
abstract
discussion
valueName
visibility
parentTitle
nullary
unary
named
positional
rawValue
ArrayLiteralElement
Element
RawValue
Element
Iterator
Index
SubSequence
Indices
content
namePositions
commandStack
parserError
visibility
_generateCompletionScript
generateCompletionScript
name
path
_elements
ArrayLiteralElement
argumentIndex
defaultValue
long
short
longWithSingleDash
value
definition
value
inputOrigin
shouldClearArrayIfParsed
elements
originalInput
capturedUnrecognizedArguments
helpRequested
completionScriptRequested
completionScriptCustomResponse
unsupportedShell
unknownOption
invalidOption
nonAlphanumericShortOption
missingValueForOption
unexpectedValueForOption
unexpectedExtraValues
duplicateExclusiveValues
noValue
unableToParseValue
userValidationError
noArguments
versionRequested
dumpHelpRequested
notImplemented
invalidState
missingSubcommand
wrongType
subcommandLevelMismatch
subcommandLevelMissing
subcommandLevelDuplicated
subcommandNameMismatch
expectedCommandButNoneFound
_elements
firstUnused
originalInput
inputIndex
subIndex
value
index
option
terminator
name
nameWithValue
rawValue
RawValue
complete
_subcommands
_help
commandStack
visibility
subcommands
help
header
elements
discussion
isSubcommands
commandStack
abstract
usage
sections
discussionSections
label
title
positionalArguments
subcommands
options
content
help
validation
other
element
parent
children
recursiveSubcommand
RawValue
serializationVersion
command
superCommands
commandName
abstract
discussion
defaultSubcommand
subcommands
arguments
kind
shouldDisplay
sectionTitle
isOptional
isRepeating
names
preferredName
valueName
defaultValue
allValues
name
long
short
longWithSingleDash
positional
option
flag
explicit module
module
export *
/usr/include/
/usr/lib/
help
version
bash
fish
